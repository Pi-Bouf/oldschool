; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TAICommand.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTAICommand@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTAICommand@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTAICommand@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAPAUtagTAICONDITION@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEAAPAUtagTAICONDITION@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEABQAUtagTAICONDITION@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTAICommand@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z	; CTAICommand::GetDelay
PUBLIC	?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z	; CTAICommand::CanRun
PUBLIC	?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z	; CTAICommand::ExecAI
PUBLIC	?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z ; CTAICommand::CheckCondition
PUBLIC	??0CTAICommand@@QAE@XZ				; CTAICommand::CTAICommand
PUBLIC	??_7CTAICommand@@6B@				; CTAICommand::`vftable'
PUBLIC	??_GCTAICommand@@UAEPAXI@Z			; CTAICommand::`scalar deleting destructor'
EXTRN	??_ECTAICommand@@UAEPAXI@Z:NEAR			; CTAICommand::`vector deleting destructor'
;	COMDAT ??_7CTAICommand@@6B@
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicommand.cpp
CONST	SEGMENT
??_7CTAICommand@@6B@ DD FLAT:?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z ; CTAICommand::`vftable'
	DD	FLAT:?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
	DD	FLAT:??_ECTAICommand@@UAEPAXI@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CTAICommand@@QAE@XZ
_TEXT	SEGMENT
??0CTAICommand@@QAE@XZ PROC NEAR			; CTAICommand::CTAICommand, COMDAT
; _this$ = ecx

; 5    : {

  00000	8b c1		 mov	 eax, ecx

; 6    : 	m_pCOMMAND = NULL;

  00002	33 c9		 xor	 ecx, ecx
  00004	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTAICommand@@6B@
  0000a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 7    : 	m_dwDelay = 0;

  0000d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 8    : 	m_bLoop = FALSE;

  00010	88 48 0c	 mov	 BYTE PTR [eax+12], cl

; 9    : }

  00013	c3		 ret	 0
??0CTAICommand@@QAE@XZ ENDP				; CTAICommand::CTAICommand
_TEXT	ENDS
PUBLIC	??1CTAICommand@@UAE@XZ				; CTAICommand::~CTAICommand
; Function compile flags: /Ogty
;	COMDAT ??1CTAICommand@@UAE@XZ
_TEXT	SEGMENT
??1CTAICommand@@UAE@XZ PROC NEAR			; CTAICommand::~CTAICommand, COMDAT
; _this$ = ecx

; 12   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTAICommand@@6B@

; 13   : }

  00006	c3		 ret	 0
??1CTAICommand@@UAE@XZ ENDP				; CTAICommand::~CTAICommand
_TEXT	ENDS
PUBLIC	?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z ; CTAICommand::CreateCMD
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CTAICmdBeginAtk@@QAE@XZ:NEAR			; CTAICmdBeginAtk::CTAICmdBeginAtk
EXTRN	??0CTAICmdSetHost@@QAE@XZ:NEAR			; CTAICmdSetHost::CTAICmdSetHost
EXTRN	??0CTAICmdChkHost@@QAE@XZ:NEAR			; CTAICmdChkHost::CTAICmdChkHost
EXTRN	??0CTAICmdChgHost@@QAE@XZ:NEAR			; CTAICmdChgHost::CTAICmdChgHost
EXTRN	??0CTAICmdChgMode@@QAE@XZ:NEAR			; CTAICmdChgMode::CTAICmdChgMode
EXTRN	??0CTAICmdGetaway@@QAE@XZ:NEAR			; CTAICmdGetaway::CTAICmdGetaway
EXTRN	??0CTAICmdAttack@@QAE@XZ:NEAR			; CTAICmdAttack::CTAICmdAttack
EXTRN	??0CTAICmdFollow@@QAE@XZ:NEAR			; CTAICmdFollow::CTAICmdFollow
EXTRN	??0CTAICmdRefill@@QAE@XZ:NEAR			; CTAICmdRefill::CTAICmdRefill
EXTRN	??0CTAICmdLeave@@QAE@XZ:NEAR			; CTAICmdLeave::CTAICmdLeave
EXTRN	??0CTAICmdRegen@@QAE@XZ:NEAR			; CTAICmdRegen::CTAICmdRegen
EXTRN	??0CTAICmdRoam@@QAE@XZ:NEAR			; CTAICmdRoam::CTAICmdRoam
EXTRN	??0CTAICmdRemove@@QAE@XZ:NEAR			; CTAICmdRemove::CTAICmdRemove
EXTRN	??0CTAICmdGohome@@QAE@XZ:NEAR			; CTAICmdGohome::CTAICmdGohome
EXTRN	??0CTAICmdLottery@@QAE@XZ:NEAR			; CTAICmdLottery::CTAICmdLottery
;	COMDAT xdata$x
xdata$x	SEGMENT
$T152914 DD	0ffffffffH
	DD	FLAT:$L152886
	DD	0ffffffffH
	DD	FLAT:$L152887
	DD	0ffffffffH
	DD	FLAT:$L152888
	DD	0ffffffffH
	DD	FLAT:$L152889
	DD	0ffffffffH
	DD	FLAT:$L152890
	DD	0ffffffffH
	DD	FLAT:$L152891
	DD	0ffffffffH
	DD	FLAT:$L152892
	DD	0ffffffffH
	DD	FLAT:$L152893
	DD	0ffffffffH
	DD	FLAT:$L152894
	DD	0ffffffffH
	DD	FLAT:$L152895
	DD	0ffffffffH
	DD	FLAT:$L152896
	DD	0ffffffffH
	DD	FLAT:$L152897
	DD	0ffffffffH
	DD	FLAT:$L152898
	DD	0ffffffffH
	DD	FLAT:$L152899
	DD	0ffffffffH
	DD	FLAT:$L152900
$T152908 DD	019930520H
	DD	0fH
	DD	FLAT:$T152914
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T152879 = 8						; size = 4
$T152875 = 8						; size = 4
$T152871 = 8						; size = 4
$T152867 = 8						; size = 4
$T152863 = 8						; size = 4
$T152859 = 8						; size = 4
$T152855 = 8						; size = 4
$T152851 = 8						; size = 4
$T152847 = 8						; size = 4
$T152843 = 8						; size = 4
$T152839 = 8						; size = 4
$T152835 = 8						; size = 4
$T152831 = 8						; size = 4
$T152827 = 8						; size = 4
$T152823 = 8						; size = 4
_pCMD$ = 8						; size = 4
?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z PROC NEAR ; CTAICommand::CreateCMD, COMDAT

; 16   : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	56		 push	 esi

; 17   : 	CTAICommand *pResult = NULL;
; 18   : 
; 19   : 	switch(pCMD->m_bType)

  00016	8b 74 24 14	 mov	 esi, DWORD PTR _pCMD$[esp+12]
  0001a	0f b6 46 14	 movzx	 eax, BYTE PTR [esi+20]
  0001e	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00021	0f 87 68 02 00
	00		 ja	 $L152318
  00027	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L152913[eax*4]
$L152243:

; 20   : 	{
; 21   : 	case AC_BEGINATK	: pResult = new CTAICmdBeginAtk(); break;

  0002e	6a 10		 push	 16			; 00000010H
  00030	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00035	83 c4 04	 add	 esp, 4
  00038	89 44 24 14	 mov	 DWORD PTR $T152823[esp+12], eax
  0003c	85 c0		 test	 eax, eax
  0003e	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 0
  00046	0f 84 6b 02 00
	00		 je	 $L152884
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ??0CTAICmdBeginAtk@@QAE@XZ ; CTAICmdBeginAtk::CTAICmdBeginAtk
  00053	e9 61 02 00 00	 jmp	 $L152240
$L152248:

; 22   : 	case AC_GETAWAY		: pResult = new CTAICmdGetaway(); break;

  00058	6a 10		 push	 16			; 00000010H
  0005a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005f	83 c4 04	 add	 esp, 4
  00062	89 44 24 14	 mov	 DWORD PTR $T152827[esp+12], eax
  00066	85 c0		 test	 eax, eax
  00068	c7 44 24 0c 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 1
  00070	0f 84 41 02 00
	00		 je	 $L152884
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??0CTAICmdGetaway@@QAE@XZ ; CTAICmdGetaway::CTAICmdGetaway
  0007d	e9 37 02 00 00	 jmp	 $L152240
$L152253:

; 23   : 	case AC_SETHOST		: pResult = new CTAICmdSetHost(); break;

  00082	6a 10		 push	 16			; 00000010H
  00084	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00089	83 c4 04	 add	 esp, 4
  0008c	89 44 24 14	 mov	 DWORD PTR $T152831[esp+12], eax
  00090	85 c0		 test	 eax, eax
  00092	c7 44 24 0c 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 2
  0009a	0f 84 17 02 00
	00		 je	 $L152884
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??0CTAICmdSetHost@@QAE@XZ ; CTAICmdSetHost::CTAICmdSetHost
  000a7	e9 0d 02 00 00	 jmp	 $L152240
$L152258:

; 24   : 	case AC_CHKHOST		: pResult = new CTAICmdChkHost(); break;

  000ac	6a 10		 push	 16			; 00000010H
  000ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 44 24 14	 mov	 DWORD PTR $T152835[esp+12], eax
  000ba	85 c0		 test	 eax, eax
  000bc	c7 44 24 0c 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 3
  000c4	0f 84 ed 01 00
	00		 je	 $L152884
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??0CTAICmdChkHost@@QAE@XZ ; CTAICmdChkHost::CTAICmdChkHost
  000d1	e9 e3 01 00 00	 jmp	 $L152240
$L152263:

; 25   : 	case AC_CHGHOST		: pResult = new CTAICmdChgHost(); break;

  000d6	6a 10		 push	 16			; 00000010H
  000d8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000dd	83 c4 04	 add	 esp, 4
  000e0	89 44 24 14	 mov	 DWORD PTR $T152839[esp+12], eax
  000e4	85 c0		 test	 eax, eax
  000e6	c7 44 24 0c 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 4
  000ee	0f 84 c3 01 00
	00		 je	 $L152884
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ??0CTAICmdChgHost@@QAE@XZ ; CTAICmdChgHost::CTAICmdChgHost
  000fb	e9 b9 01 00 00	 jmp	 $L152240
$L152268:

; 26   : 	case AC_CHGMODE		: pResult = new CTAICmdChgMode(); break;

  00100	6a 10		 push	 16			; 00000010H
  00102	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00107	83 c4 04	 add	 esp, 4
  0010a	89 44 24 14	 mov	 DWORD PTR $T152843[esp+12], eax
  0010e	85 c0		 test	 eax, eax
  00110	c7 44 24 0c 05
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 5
  00118	0f 84 99 01 00
	00		 je	 $L152884
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??0CTAICmdChgMode@@QAE@XZ ; CTAICmdChgMode::CTAICmdChgMode
  00125	e9 8f 01 00 00	 jmp	 $L152240
$L152273:

; 27   : 	case AC_ATTACK		: pResult = new CTAICmdAttack(); break;

  0012a	6a 10		 push	 16			; 00000010H
  0012c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00131	83 c4 04	 add	 esp, 4
  00134	89 44 24 14	 mov	 DWORD PTR $T152847[esp+12], eax
  00138	85 c0		 test	 eax, eax
  0013a	c7 44 24 0c 06
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 6
  00142	0f 84 6f 01 00
	00		 je	 $L152884
  00148	8b c8		 mov	 ecx, eax
  0014a	e8 00 00 00 00	 call	 ??0CTAICmdAttack@@QAE@XZ ; CTAICmdAttack::CTAICmdAttack
  0014f	e9 65 01 00 00	 jmp	 $L152240
$L152278:

; 28   : 	case AC_FOLLOW		: pResult = new CTAICmdFollow(); break;

  00154	6a 10		 push	 16			; 00000010H
  00156	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0015b	83 c4 04	 add	 esp, 4
  0015e	89 44 24 14	 mov	 DWORD PTR $T152851[esp+12], eax
  00162	85 c0		 test	 eax, eax
  00164	c7 44 24 0c 07
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 7
  0016c	0f 84 45 01 00
	00		 je	 $L152884
  00172	8b c8		 mov	 ecx, eax
  00174	e8 00 00 00 00	 call	 ??0CTAICmdFollow@@QAE@XZ ; CTAICmdFollow::CTAICmdFollow
  00179	e9 3b 01 00 00	 jmp	 $L152240
$L152283:

; 29   : 	case AC_REFILL		: pResult = new CTAICmdRefill(); break;

  0017e	6a 10		 push	 16			; 00000010H
  00180	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00185	83 c4 04	 add	 esp, 4
  00188	89 44 24 14	 mov	 DWORD PTR $T152855[esp+12], eax
  0018c	85 c0		 test	 eax, eax
  0018e	c7 44 24 0c 08
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 8
  00196	0f 84 1b 01 00
	00		 je	 $L152884
  0019c	8b c8		 mov	 ecx, eax
  0019e	e8 00 00 00 00	 call	 ??0CTAICmdRefill@@QAE@XZ ; CTAICmdRefill::CTAICmdRefill
  001a3	e9 11 01 00 00	 jmp	 $L152240
$L152288:

; 30   : 	case AC_LEAVE		: pResult = new CTAICmdLeave(); break;

  001a8	6a 10		 push	 16			; 00000010H
  001aa	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001af	83 c4 04	 add	 esp, 4
  001b2	89 44 24 14	 mov	 DWORD PTR $T152859[esp+12], eax
  001b6	85 c0		 test	 eax, eax
  001b8	c7 44 24 0c 09
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 9
  001c0	0f 84 f1 00 00
	00		 je	 $L152884
  001c6	8b c8		 mov	 ecx, eax
  001c8	e8 00 00 00 00	 call	 ??0CTAICmdLeave@@QAE@XZ	; CTAICmdLeave::CTAICmdLeave
  001cd	e9 e7 00 00 00	 jmp	 $L152240
$L152293:

; 31   : 	case AC_REGEN		: pResult = new CTAICmdRegen(); break;

  001d2	6a 10		 push	 16			; 00000010H
  001d4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001d9	83 c4 04	 add	 esp, 4
  001dc	89 44 24 14	 mov	 DWORD PTR $T152863[esp+12], eax
  001e0	85 c0		 test	 eax, eax
  001e2	c7 44 24 0c 0a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 10 ; 0000000aH
  001ea	0f 84 c7 00 00
	00		 je	 $L152884
  001f0	8b c8		 mov	 ecx, eax
  001f2	e8 00 00 00 00	 call	 ??0CTAICmdRegen@@QAE@XZ	; CTAICmdRegen::CTAICmdRegen
  001f7	e9 bd 00 00 00	 jmp	 $L152240
$L152298:

; 32   : 	case AC_ROAM		: pResult = new CTAICmdRoam(); break;

  001fc	6a 10		 push	 16			; 00000010H
  001fe	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00203	83 c4 04	 add	 esp, 4
  00206	89 44 24 14	 mov	 DWORD PTR $T152867[esp+12], eax
  0020a	85 c0		 test	 eax, eax
  0020c	c7 44 24 0c 0b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 11 ; 0000000bH
  00214	0f 84 9d 00 00
	00		 je	 $L152884
  0021a	8b c8		 mov	 ecx, eax
  0021c	e8 00 00 00 00	 call	 ??0CTAICmdRoam@@QAE@XZ	; CTAICmdRoam::CTAICmdRoam
  00221	e9 93 00 00 00	 jmp	 $L152240
$L152303:

; 33   : 	case AC_REMOVE		: pResult = new CTAICmdRemove(); break;

  00226	6a 10		 push	 16			; 00000010H
  00228	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0022d	83 c4 04	 add	 esp, 4
  00230	89 44 24 14	 mov	 DWORD PTR $T152871[esp+12], eax
  00234	85 c0		 test	 eax, eax
  00236	c7 44 24 0c 0c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 12 ; 0000000cH
  0023e	74 77		 je	 SHORT $L152884
  00240	8b c8		 mov	 ecx, eax
  00242	e8 00 00 00 00	 call	 ??0CTAICmdRemove@@QAE@XZ ; CTAICmdRemove::CTAICmdRemove
  00247	eb 70		 jmp	 SHORT $L152240
$L152308:

; 34   : 	case AC_GOHOME		: pResult = new CTAICmdGohome(); break;

  00249	6a 10		 push	 16			; 00000010H
  0024b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00250	83 c4 04	 add	 esp, 4
  00253	89 44 24 14	 mov	 DWORD PTR $T152875[esp+12], eax
  00257	85 c0		 test	 eax, eax
  00259	c7 44 24 0c 0d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 13 ; 0000000dH
  00261	74 54		 je	 SHORT $L152884
  00263	8b c8		 mov	 ecx, eax
  00265	e8 00 00 00 00	 call	 ??0CTAICmdGohome@@QAE@XZ ; CTAICmdGohome::CTAICmdGohome
  0026a	eb 4d		 jmp	 SHORT $L152240
$L152313:

; 35   : 	case AC_LOTTERY		: pResult = new CTAICmdLottery(); break;

  0026c	6a 10		 push	 16			; 00000010H
  0026e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00273	83 c4 04	 add	 esp, 4
  00276	89 44 24 14	 mov	 DWORD PTR $T152879[esp+12], eax
  0027a	85 c0		 test	 eax, eax
  0027c	c7 44 24 0c 0e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 14 ; 0000000eH
  00284	74 31		 je	 SHORT $L152884
  00286	8b c8		 mov	 ecx, eax
  00288	e8 00 00 00 00	 call	 ??0CTAICmdLottery@@QAE@XZ ; CTAICmdLottery::CTAICmdLottery
  0028d	eb 2a		 jmp	 SHORT $L152240
$L152318:

; 36   : 	default				: pResult = new CTAICommand(); break;

  0028f	6a 10		 push	 16			; 00000010H
  00291	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00296	83 c4 04	 add	 esp, 4
  00299	85 c0		 test	 eax, eax
  0029b	74 1a		 je	 SHORT $L152884
  0029d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTAICommand@@6B@
  002a3	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  002aa	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  002b1	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  002b5	eb 02		 jmp	 SHORT $L152240
$L152884:
  002b7	33 c0		 xor	 eax, eax
$L152240:

; 37   : 	}
; 38   : 
; 39   : 	if(pResult)

  002b9	85 c0		 test	 eax, eax
  002bb	74 03		 je	 SHORT $L152323

; 40   : 		pResult->m_pCOMMAND = pCMD;

  002bd	89 70 04	 mov	 DWORD PTR [eax+4], esi
$L152323:

; 41   : 
; 42   : 	return pResult;
; 43   : }

  002c0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  002c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002cb	5e		 pop	 esi
  002cc	83 c4 0c	 add	 esp, 12			; 0000000cH
  002cf	c3		 ret	 0
$L152913:
  002d0	00 00 00 00	 DD	 $L152293
  002d4	00 00 00 00	 DD	 $L152288
  002d8	00 00 00 00	 DD	 $L152253
  002dc	00 00 00 00	 DD	 $L152258
  002e0	00 00 00 00	 DD	 $L152263
  002e4	00 00 00 00	 DD	 $L152268
  002e8	00 00 00 00	 DD	 $L152243
  002ec	00 00 00 00	 DD	 $L152273
  002f0	00 00 00 00	 DD	 $L152278
  002f4	00 00 00 00	 DD	 $L152248
  002f8	00 00 00 00	 DD	 $L152283
  002fc	00 00 00 00	 DD	 $L152298
  00300	00 00 00 00	 DD	 $L152303
  00304	00 00 00 00	 DD	 $L152308
  00308	00 00 00 00	 DD	 $L152313
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L152886:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T152823[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L152887:
  0000b	8b 45 04	 mov	 eax, DWORD PTR $T152827[ebp-4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L152888:
  00016	8b 45 04	 mov	 eax, DWORD PTR $T152831[ebp-4]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L152889:
  00021	8b 45 04	 mov	 eax, DWORD PTR $T152835[ebp-4]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
$L152890:
  0002c	8b 45 04	 mov	 eax, DWORD PTR $T152839[ebp-4]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00035	59		 pop	 ecx
  00036	c3		 ret	 0
$L152891:
  00037	8b 45 04	 mov	 eax, DWORD PTR $T152843[ebp-4]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	59		 pop	 ecx
  00041	c3		 ret	 0
$L152892:
  00042	8b 45 04	 mov	 eax, DWORD PTR $T152847[ebp-4]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004b	59		 pop	 ecx
  0004c	c3		 ret	 0
$L152893:
  0004d	8b 45 04	 mov	 eax, DWORD PTR $T152851[ebp-4]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00056	59		 pop	 ecx
  00057	c3		 ret	 0
$L152894:
  00058	8b 45 04	 mov	 eax, DWORD PTR $T152855[ebp-4]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00061	59		 pop	 ecx
  00062	c3		 ret	 0
$L152895:
  00063	8b 45 04	 mov	 eax, DWORD PTR $T152859[ebp-4]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
  0006d	c3		 ret	 0
$L152896:
  0006e	8b 45 04	 mov	 eax, DWORD PTR $T152863[ebp-4]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	59		 pop	 ecx
  00078	c3		 ret	 0
$L152897:
  00079	8b 45 04	 mov	 eax, DWORD PTR $T152867[ebp-4]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
  00083	c3		 ret	 0
$L152898:
  00084	8b 45 04	 mov	 eax, DWORD PTR $T152871[ebp-4]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	59		 pop	 ecx
  0008e	c3		 ret	 0
$L152899:
  0008f	8b 45 04	 mov	 eax, DWORD PTR $T152875[ebp-4]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L152900:
  0009a	8b 45 04	 mov	 eax, DWORD PTR $T152879[ebp-4]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a3	59		 pop	 ecx
  000a4	c3		 ret	 0
__ehhandler$?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z:
  000a5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T152908
  000aa	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateCMD@CTAICommand@@SAPAV1@PAUtagTAICOMMAND@@@Z ENDP ; CTAICommand::CreateCMD
; Function compile flags: /Ogty
;	COMDAT ?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z PROC NEAR ; CTAICommand::GetDelay, COMDAT
; _this$ = ecx

; 47   : 	return m_dwDelay;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 48   : }

  00003	c2 10 00	 ret	 16			; 00000010H
?GetDelay@CTAICommand@@UAEKPAVCTMonster@@KKE@Z ENDP	; CTAICommand::GetDelay
_TEXT	ENDS
EXTRN	_rand:NEAR
; Function compile flags: /Ogty
;	COMDAT ?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pCON$ = 8						; size = 4
_pMON$ = 12						; size = 4
_dwEventHost$ = 16					; size = 4
_dwRHId$ = 20						; size = 4
_bRHType$ = 24						; size = 1
?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z PROC NEAR ; CTAICommand::CheckCondition, COMDAT
; _this$ = ecx

; 55   : {

  00000	56		 push	 esi

; 56   : 	switch(pCON->m_bType)

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pCON$[esp]
  00005	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  00009	83 e8 00	 sub	 eax, 0
  0000c	74 1d		 je	 SHORT $L152343
  0000e	48		 dec	 eax
  0000f	74 07		 je	 SHORT $L152344
  00011	48		 dec	 eax

; 60   : 	case AN_CHGHOST : pMON->m_dwTargetID == dwRHId && pMON->m_bTargetType == bRHType ? FALSE : TRUE;
; 61   : 	}
; 62   : 
; 63   : 	return TRUE;

  00012	b0 01		 mov	 al, 1
  00014	5e		 pop	 esi

; 64   : }

  00015	c2 14 00	 ret	 20			; 00000014H
$L152344:

; 59   : 	case AN_MODE	: return pMON->m_bMode == pCON->m_dwID ? TRUE : FALSE;

  00018	8b 44 24 0c	 mov	 eax, DWORD PTR _pMON$[esp]
  0001c	0f b6 40 76	 movzx	 eax, BYTE PTR [eax+118]
  00020	2b 06		 sub	 eax, DWORD PTR [esi]
  00022	f7 d8		 neg	 eax
  00024	1b c0		 sbb	 eax, eax
  00026	40		 inc	 eax
  00027	5e		 pop	 esi

; 64   : }

  00028	c2 14 00	 ret	 20			; 00000014H
$L152343:

; 57   : 	{
; 58   : 	case AN_PROB	: return DWORD(rand() % 100) < pCON->m_dwID ? TRUE : FALSE;

  0002b	e8 00 00 00 00	 call	 _rand
  00030	99		 cdq
  00031	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00036	f7 f9		 idiv	 ecx
  00038	8b 06		 mov	 eax, DWORD PTR [esi]
  0003a	5e		 pop	 esi
  0003b	3b d0		 cmp	 edx, eax
  0003d	1b c0		 sbb	 eax, eax
  0003f	f7 d8		 neg	 eax

; 64   : }

  00041	c2 14 00	 ret	 20			; 00000014H
?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z ENDP ; CTAICommand::CheckCondition
_TEXT	ENDS
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
; Function compile flags: /Ogty
;	COMDAT ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z PROC NEAR	; CTAICommand::ExecAI, COMDAT
; _this$ = ecx

; 76   : {

  00000	53		 push	 ebx

; 77   : 	pMON->OnEvent( AT_AICOMPLETE, m_pCOMMAND->m_dwID, dwEventHost, dwRHId, bRHType);

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR _dwRHId$[esp]
  00005	55		 push	 ebp
  00006	8b 6c 24 10	 mov	 ebp, DWORD PTR _dwEventHost$[esp+4]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7c 24 20	 mov	 edi, DWORD PTR _bRHType$[esp+12]
  00010	57		 push	 edi
  00011	8b f1		 mov	 esi, ecx
  00013	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00016	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00019	53		 push	 ebx
  0001a	55		 push	 ebp
  0001b	51		 push	 ecx
  0001c	8b 4c 24 24	 mov	 ecx, DWORD PTR _pMON$[esp+28]
  00020	6a 00		 push	 0
  00022	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent

; 78   : 	return m_bLoop && GetDelay( pMON, dwEventHost, dwRHId, bRHType) ? TRUE : FALSE;

  00027	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  0002a	84 c0		 test	 al, al
  0002c	74 1e		 je	 SHORT $L152929
  0002e	8b 44 24 14	 mov	 eax, DWORD PTR _pMON$[esp+12]
  00032	8b 16		 mov	 edx, DWORD PTR [esi]
  00034	57		 push	 edi
  00035	53		 push	 ebx
  00036	55		 push	 ebp
  00037	50		 push	 eax
  00038	8b ce		 mov	 ecx, esi
  0003a	ff 12		 call	 DWORD PTR [edx]
  0003c	85 c0		 test	 eax, eax
  0003e	74 0c		 je	 SHORT $L152929
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5d		 pop	 ebp
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	5b		 pop	 ebx

; 79   : }

  00049	c2 10 00	 ret	 16			; 00000010H
$L152929:
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp

; 78   : 	return m_bLoop && GetDelay( pMON, dwEventHost, dwRHId, bRHType) ? TRUE : FALSE;

  0004f	33 c0		 xor	 eax, eax
  00051	5b		 pop	 ebx

; 79   : }

  00052	c2 10 00	 ret	 16			; 00000010H
?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICommand::ExecAI
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEIXZ ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L152934
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L152934:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::size
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEABQAUtagTAICONDITION@@XZ ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEABQAUtagTAICONDITION@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEABQAUtagTAICONDITION@@XZ PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEABQAUtagTAICONDITION@@XZ ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCTAICommand@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTAICommand@@UAEPAXI@Z PROC NEAR			; CTAICommand::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	f6 44 24 04 01	 test	 BYTE PTR ___flags$[esp-4], 1
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTAICommand@@6B@
  0000e	74 09		 je	 SHORT $L152951
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4
$L152951:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_GCTAICommand@@UAEPAXI@Z ENDP				; CTAICommand::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEAAPAUtagTAICONDITION@@XZ ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEAAPAUtagTAICONDITION@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEAAPAUtagTAICONDITION@@XZ PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QBEAAPAUtagTAICONDITION@@XZ ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE@PAPAUtagTAICONDITION@@@Z ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::begin
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAPAUtagTAICONDITION@@I@Z ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAPAUtagTAICONDITION@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAPAUtagTAICONDITION@@I@Z PROC NEAR ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@QAEAAPAUtagTAICONDITION@@I@Z ENDP ; std::vector<tagTAICONDITION *,std::allocator<tagTAICONDITION *> >::operator[]
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicommand.cpp
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z PROC NEAR	; CTAICommand::CanRun, COMDAT
; _this$ = ecx

; 67   : {

  00000	53		 push	 ebx

; 68   : 	for( int i=0; i<INT(m_pCOMMAND->m_vCONDITION.size()); i++)

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR _dwRHId$[esp]
  00005	55		 push	 ebp
  00006	8b 6c 24 10	 mov	 ebp, DWORD PTR _dwEventHost$[esp+4]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f1		 mov	 esi, ecx
  0000e	33 ff		 xor	 edi, edi
$L152354:
  00010	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00013	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00016	85 d2		 test	 edx, edx
  00018	75 04		 jne	 SHORT $L153028
  0001a	33 c9		 xor	 ecx, ecx
  0001c	eb 08		 jmp	 SHORT $L153029
$L153028:
  0001e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00021	2b ca		 sub	 ecx, edx
  00023	c1 f9 02	 sar	 ecx, 2
$L153029:
  00026	3b f9		 cmp	 edi, ecx
  00028	7d 2c		 jge	 SHORT $L152356

; 69   : 		if(!CheckCondition( m_pCOMMAND->m_vCONDITION[i], pMON, dwEventHost, dwRHId, bRHType))

  0002a	8b 4c 24 20	 mov	 ecx, DWORD PTR _bRHType$[esp+12]
  0002e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00031	8b 16		 mov	 edx, DWORD PTR [esi]
  00033	51		 push	 ecx
  00034	8b 4c 24 18	 mov	 ecx, DWORD PTR _pMON$[esp+16]
  00038	53		 push	 ebx
  00039	55		 push	 ebp
  0003a	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  0003d	8b 00		 mov	 eax, DWORD PTR [eax]
  0003f	51		 push	 ecx
  00040	50		 push	 eax
  00041	8b ce		 mov	 ecx, esi
  00043	ff 52 0c	 call	 DWORD PTR [edx+12]
  00046	84 c0		 test	 al, al
  00048	74 03		 je	 SHORT $L153089

; 68   : 	for( int i=0; i<INT(m_pCOMMAND->m_vCONDITION.size()); i++)

  0004a	47		 inc	 edi
  0004b	eb c3		 jmp	 SHORT $L152354
$L153089:
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5d		 pop	 ebp

; 70   : 			return FALSE;

  00050	32 c0		 xor	 al, al
  00052	5b		 pop	 ebx

; 73   : }

  00053	c2 10 00	 ret	 16			; 00000010H
$L152356:
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5d		 pop	 ebp

; 71   : 
; 72   : 	return TRUE;

  00059	b0 01		 mov	 al, 1
  0005b	5b		 pop	 ebx

; 73   : }

  0005c	c2 10 00	 ret	 16			; 00000010H
?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICommand::CanRun
_TEXT	ENDS
END
