; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TCell.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTCell@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTCell@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTCell@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsMainCell@CTCell@@QAEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEnable@CTCell@@QAEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddGate@CTCell@@QAEXPAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelPlayer@CTCell@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTRecallMon@@@std@@QAE@ABKABQAVCTRecallMon@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTSelfObj@@@std@@QAE@ABKABQAVCTSelfObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTCell@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?IsMainCell@CTCell@@QAEEE@Z			; CTCell::IsMainCell
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
;	COMDAT ?IsMainCell@CTCell@@QAEEE@Z
_TEXT	SEGMENT
_bChannel$ = 8						; size = 1
?IsMainCell@CTCell@@QAEEE@Z PROC NEAR			; CTCell::IsMainCell, COMDAT
; _this$ = ecx

; 41   : 	return bChannel == MAX_CHANNEL || (m_vEnable[bChannel] && !m_vExtCell[bChannel]) ? TRUE : FALSE;

  00000	8a 44 24 04	 mov	 al, BYTE PTR _bChannel$[esp-4]
  00004	3c 1e		 cmp	 al, 30			; 0000001eH
  00006	74 1e		 je	 SHORT $L156937
  00008	0f b6 c0	 movzx	 eax, al
  0000b	03 c1		 add	 eax, ecx
  0000d	8a 88 5a 01 00
	00		 mov	 cl, BYTE PTR [eax+346]
  00013	84 c9		 test	 cl, cl
  00015	74 0a		 je	 SHORT $L156936
  00017	8a 88 3c 01 00
	00		 mov	 cl, BYTE PTR [eax+316]
  0001d	84 c9		 test	 cl, cl
  0001f	74 05		 je	 SHORT $L156937
$L156936:
  00021	33 c0		 xor	 eax, eax

; 42   : }

  00023	c2 04 00	 ret	 4
$L156937:

; 41   : 	return bChannel == MAX_CHANNEL || (m_vEnable[bChannel] && !m_vExtCell[bChannel]) ? TRUE : FALSE;

  00026	b8 01 00 00 00	 mov	 eax, 1

; 42   : }

  0002b	c2 04 00	 ret	 4
?IsMainCell@CTCell@@QAEEE@Z ENDP			; CTCell::IsMainCell
_TEXT	ENDS
PUBLIC	?IsEnable@CTCell@@QAEEE@Z			; CTCell::IsEnable
; Function compile flags: /Ogty
;	COMDAT ?IsEnable@CTCell@@QAEEE@Z
_TEXT	SEGMENT
_bChannel$ = 8						; size = 1
?IsEnable@CTCell@@QAEEE@Z PROC NEAR			; CTCell::IsEnable, COMDAT
; _this$ = ecx

; 46   : 	return bChannel == MAX_CHANNEL || m_vEnable[bChannel] ? TRUE : FALSE;

  00000	8a 44 24 04	 mov	 al, BYTE PTR _bChannel$[esp-4]
  00004	3c 1e		 cmp	 al, 30			; 0000001eH
  00006	74 13		 je	 SHORT $L156944
  00008	0f b6 c0	 movzx	 eax, al
  0000b	8a 94 08 5a 01
	00 00		 mov	 dl, BYTE PTR [eax+ecx+346]
  00012	84 d2		 test	 dl, dl
  00014	75 05		 jne	 SHORT $L156944
  00016	33 c0		 xor	 eax, eax

; 47   : }

  00018	c2 04 00	 ret	 4
$L156944:

; 46   : 	return bChannel == MAX_CHANNEL || m_vEnable[bChannel] ? TRUE : FALSE;

  0001b	b8 01 00 00 00	 mov	 eax, 1

; 47   : }

  00020	c2 04 00	 ret	 4
?IsEnable@CTCell@@QAEEE@Z ENDP				; CTCell::IsEnable
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTRecallMon@@@std@@QAE@ABKABQAVCTRecallMon@@@Z ; std::pair<unsigned long const ,CTRecallMon *>::pair<unsigned long const ,CTRecallMon *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKPAVCTRecallMon@@@std@@QAE@ABKABQAVCTRecallMon@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTRecallMon@@@std@@QAE@ABKABQAVCTRecallMon@@@Z PROC NEAR ; std::pair<unsigned long const ,CTRecallMon *>::pair<unsigned long const ,CTRecallMon *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTRecallMon@@@std@@QAE@ABKABQAVCTRecallMon@@@Z ENDP ; std::pair<unsigned long const ,CTRecallMon *>::pair<unsigned long const ,CTRecallMon *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z PROC NEAR ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z ENDP ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z PROC NEAR ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z ENDP ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z PROC NEAR ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z ENDP ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z PROC NEAR ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z ENDP ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTSelfObj@@@std@@QAE@ABKABQAVCTSelfObj@@@Z ; std::pair<unsigned long const ,CTSelfObj *>::pair<unsigned long const ,CTSelfObj *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCTSelfObj@@@std@@QAE@ABKABQAVCTSelfObj@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTSelfObj@@@std@@QAE@ABKABQAVCTSelfObj@@@Z PROC NEAR ; std::pair<unsigned long const ,CTSelfObj *>::pair<unsigned long const ,CTSelfObj *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTSelfObj@@@std@@QAE@ABKABQAVCTSelfObj@@@Z ENDP ; std::pair<unsigned long const ,CTSelfObj *>::pair<unsigned long const ,CTSelfObj *>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L154344
  0000e	8b ff		 npad	 2
$L154343:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L154343
$L154344:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154348
  0000d	8d 49 00	 npad	 3
$L154347:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154347
$L154348:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154356

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154356:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L154357

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L154357:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L154359

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L154359:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L154459
  0000e	8b ff		 npad	 2
$L154458:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L154458
$L154459:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154463
  0000d	8d 49 00	 npad	 3
$L154462:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154462
$L154463:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154471

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154471:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L154472

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L154472:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L154474

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L154474:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L154574
  0000e	8b ff		 npad	 2
$L154573:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L154573
$L154574:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154578
  0000d	8d 49 00	 npad	 3
$L154577:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154577
$L154578:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154586

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154586:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L154587

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L154587:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L154589

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L154589:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L154689
  0000e	8b ff		 npad	 2
$L154688:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L154688
$L154689:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154693
  0000d	8d 49 00	 npad	 3
$L154692:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154692
$L154693:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154701

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154701:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L154702

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L154702:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L154704

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L154704:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::allocator<std::pair<unsigned long const ,CTPlayer *> >
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::allocator<std::pair<unsigned long const ,CTRecallMon *> >
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::allocator<std::pair<unsigned long const ,CTSelfObj *> >
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTRecallMon *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTSelfObj *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155648

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155648:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L157909

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L157894
$L157893:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L157893
$L157894:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L157909:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L157912
  0003d	8d 49 00	 npad	 3
$L155654:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155655

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155654
$L155655:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L157912

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L157912:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155662

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L157960

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L157948
  0001d	8d 49 00	 npad	 3
$L157947:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L157947
$L157948:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L157960:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155666
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155665:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155666

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155665
$L155666:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155662:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155669

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155669:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L158018

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L158003
$L158002:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L158002
$L158003:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L158018:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L158021
  0003d	8d 49 00	 npad	 3
$L155675:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155676

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155675
$L155676:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L158021

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L158021:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155683

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L158069

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L158057
  0001d	8d 49 00	 npad	 3
$L158056:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L158056
$L158057:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L158069:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155687
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155686:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155687

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155686
$L155687:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155683:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155690

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155690:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L158127

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L158105
$L158104:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L158104
$L158105:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L158127:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L158130
  0003d	8d 49 00	 npad	 3
$L155696:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155697

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155696
$L155697:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L158130

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L158130:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155704

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L158178

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L158159
  0001d	8d 49 00	 npad	 3
$L158158:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L158158
$L158159:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L158178:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155708
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155707:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155708

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155707
$L155708:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155704:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155711

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155711:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L158236

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L158221
$L158220:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L158220
$L158221:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L158236:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L158239
  0003d	8d 49 00	 npad	 3
$L155717:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155718

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155717
$L155718:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L158239

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L158239:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155725

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L158287

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L158275
  0001d	8d 49 00	 npad	 3
$L158274:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L158274
$L158275:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L158287:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155729
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155728:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155729

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155728
$L155729:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155725:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L155863
  0000e	8b ff		 npad	 2
$L155862:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L155862
$L155863:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L155867
  0000d	8d 49 00	 npad	 3
$L155866:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L155866
$L155867:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L155884
  0000e	8b ff		 npad	 2
$L155883:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L155883
$L155884:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L155888
  0000d	8d 49 00	 npad	 3
$L155887:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L155887
$L155888:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *><std::pair<unsigned long const ,CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *><std::pair<unsigned long const ,CTPlayer *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *><std::pair<unsigned long const ,CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *><std::pair<unsigned long const ,CTRecallMon *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *><std::pair<unsigned long const ,CTRecallMon *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *><std::pair<unsigned long const ,CTRecallMon *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *><std::pair<unsigned long const ,CTSelfObj *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *><std::pair<unsigned long const ,CTSelfObj *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *><std::pair<unsigned long const ,CTSelfObj *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node><std::pair<unsigned long const ,CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node><std::pair<unsigned long const ,CTPlayer *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTPlayer@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node><std::pair<unsigned long const ,CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node><std::pair<unsigned long const ,CTRecallMon *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node><std::pair<unsigned long const ,CTRecallMon *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTRecallMon@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node><std::pair<unsigned long const ,CTRecallMon *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node><std::pair<unsigned long const ,CTSelfObj *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node><std::pair<unsigned long const ,CTSelfObj *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTSelfObj@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node><std::pair<unsigned long const ,CTSelfObj *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L158489:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L158489
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L158503
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L158503:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L158511
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L158511:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L158524
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L158525
$L158524:
  00011	8b d0		 mov	 edx, eax
$L158525:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L150517
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L158532
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L158532:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L150517
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L150517:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154336

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154336:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L154337

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L154337:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L154339

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L154339:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154451

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154451:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L154452

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L154452:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L154454

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L154454:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154566

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154566:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L154567

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L154567:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L154569

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L154569:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L154681

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L154681:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L154682

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L154682:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L154684

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L154684:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155005
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155004:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155006

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155007
$L155006:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155007:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155004
  00029	5b		 pop	 ebx
$L155005:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155053
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155052:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155054

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155055
$L155054:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155055:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155052
  00029	5b		 pop	 ebx
$L155053:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155101
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155100:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155102

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155103
$L155102:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155103:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155100
  00029	5b		 pop	 ebx
$L155101:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155149
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155148:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155150

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155151
$L155150:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155151:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155148
  00029	5b		 pop	 ebx
$L155149:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155201
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155200:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155202

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155203
$L155202:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155203:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155200
  00029	5b		 pop	 ebx
$L155201:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L155207

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L155207:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L155208

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L155208:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L155210

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L155210:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L155215

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L155215:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L155216

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L155216:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L155218

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L155218:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L155277
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L155276:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L155278

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L155279
$L155278:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L155279:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L155276
  00029	5b		 pop	 ebx
$L155277:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L155283

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L155283:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L155284

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L155284:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L155286

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L155286:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L155291

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L155291:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L155292

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L155292:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L155294

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L155294:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155732

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155732:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L159795

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L159780
$L159779:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L159779
$L159780:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L159795:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L159798
  0003d	8d 49 00	 npad	 3
$L155738:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155739

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155738
$L155739:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L159798

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L159798:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155746

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L159846

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L159834
  0001d	8d 49 00	 npad	 3
$L159833:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L159833
$L159834:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L159846:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155750
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155749:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155750

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155749
$L155750:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155746:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L155753

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L155753:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L159904

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L159889
$L159888:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L159888
$L159889:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L159904:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L159907
  0003d	8d 49 00	 npad	 3
$L155759:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L155760

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L155759
$L155760:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L159907

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L159907:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L155767

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L159955

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L159943
  0001d	8d 49 00	 npad	 3
$L159942:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L159942
$L159943:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L159955:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L155771
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L155770:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L155771

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L155770
$L155771:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L155767:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160017
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160017:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160026
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160026:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160035
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160035:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160044
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160044:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160053
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160053:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L160062
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L160062:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L160082
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L160082:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160442
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160410:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160412
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160413
$L160412:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160413:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160410
  00029	5b		 pop	 ebx
$L160442:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154302
$L154300:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154300
$L154302:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160532
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160500:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160502
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160503
$L160502:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160503:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160500
  00029	5b		 pop	 ebx
$L160532:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154418
$L154416:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154416
$L154418:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160622
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160590:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160592
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160593
$L160592:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160593:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160590
  00029	5b		 pop	 ebx
$L160622:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154533
$L154531:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154531
$L154533:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160712
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160680:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160682
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160683
$L160682:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160683:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160680
  00029	5b		 pop	 ebx
$L160712:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154648
$L154646:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154646
$L154648:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160802
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160770:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160772
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160773
$L160772:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160773:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160770
  00029	5b		 pop	 ebx
$L160802:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154759
$L154757:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154757
$L154759:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L160892
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L160879:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L160881
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L160882
$L160881:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L160882:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L160879
  00029	5b		 pop	 ebx
$L160892:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L154838
$L154836:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L154836
$L154838:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
EXTRN	__CxxThrowException@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L160963
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L160963:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L160996
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L160996:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L161026
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L161026:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L161056
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L161056:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L161086
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L161086:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L161116
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L161116:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161309
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161309:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161326
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161326:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161343
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161343:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161360
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161360:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161378
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161378:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L161395
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L161395:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L161406

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L161406

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L161403
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L161403:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L161406:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L149765

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L149765:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L149766

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L149766:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L161472

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L161438
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L161439
$L161438:
  00036	8b d3		 mov	 edx, ebx
$L161439:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L161445
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L161446
$L161445:
  00041	8b cb		 mov	 ecx, ebx
$L161446:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L161469

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L161469:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L161472:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161677 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T161679 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L161479
$T161680 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L161477
$T161678 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T161679
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T161680
$T161671 DD	019930520H
	DD	04H
	DD	FLAT:$T161677
	DD	02H
	DD	FLAT:$T161678
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L150507

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L150509
$L150507:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L150509
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L150509

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L150509:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L150511
$L161477:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L161672
  00092	c3		 ret	 0
$L161672:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L150511:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L161596

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L161593
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L161594
$L161593:
  000ae	83 c6 04	 add	 esi, 4
$L161594:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L161596:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L161638
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L161638:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L161667
  000f2	8b c2		 mov	 eax, edx
$L161667:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L161479:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L161577
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L161577:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L161682:
$L161676:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161671
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T161726 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L161807
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L161806:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L161808
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L161809
$L161808:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L161809:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L161806
$L161807:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L161725
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L161725
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L161725:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T161726[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T161726[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T161926 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L162021
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L162020:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L162022
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L162023
$L162022:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L162023:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L162020
$L162021:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L161925
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L161925
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L161925:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T161926[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T161926[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T162126 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L162221
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L162220:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L162222
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L162223
$L162222:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L162223:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L162220
$L162221:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L162125
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L162125
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L162125:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T162126[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T162126[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T162326 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L162403
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L162402:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L162404
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L162405
$L162404:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L162405:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L162402
$L162403:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L162325
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L162325
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L162325:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T162326[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T162326[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T162526 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L162603
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L162602:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L162604
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L162605
$L162604:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L162605:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L162602
$L162603:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L162525
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L162525
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L162525:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T162526[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T162526[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T162726 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L162803
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L162802:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L162804
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L162805
$L162804:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L162805:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L162802
$L162803:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L162725
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L162725
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L162725:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T162726[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T162726[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163266
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163266:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163293
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163293:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163320
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163320:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163380
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163380:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163407
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163407:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163435
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163435:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163495
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163495:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163522
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163522:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163549
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163549:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163609
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163609:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163636
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163636:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163663
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163663:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163723
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163723:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163750
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163750:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163777
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163777:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L163837
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L163837:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L163862
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163862:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L163889
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L163889:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L163949
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L163949:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L149774

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L149774:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L149775

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L149775:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L149777
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L149777
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L163969
  00047	8b de		 mov	 ebx, esi
$L163969:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L164024
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L164022
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L164022:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L164024:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L149777:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L164060

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L164056
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L164056:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L164060:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z ; CTCell::EnterMonster
EXTRN	?SendCS_ADDMON_ACK@CTPlayer@@QAEXPAVCTMonster@@EK@Z:NEAR ; CTPlayer::SendCS_ADDMON_ACK
EXTRN	?SendCS_ADDRECALLMON_ACK@CTPlayer@@QAEXPAVCTRecallMon@@EK@Z:NEAR ; CTPlayer::SendCS_ADDRECALLMON_ACK
EXTRN	?SendCS_ADDSELFOBJ_ACK@CTPlayer@@QAEXPAVCTSelfObj@@EK@Z:NEAR ; CTPlayer::SendCS_ADDSELFOBJ_ACK
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
;	COMDAT ?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_itCHAR$ = 8						; size = 4
_pMON$ = 8						; size = 4
_pCELL$ = 12						; size = 4
_bNewMember$ = 16					; size = 1
_dwTick$ = 20						; size = 4
?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z PROC NEAR ; CTCell::EnterMonster, COMDAT
; _this$ = ecx

; 106  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp

; 107  : 	MAPPLAYER::iterator itCHAR;
; 108  : 
; 109  : 	switch(pMON->m_bType)

  00003	8b 6c 24 10	 mov	 ebp, DWORD PTR _pMON$[esp+8]
  00007	8a 45 77	 mov	 al, BYTE PTR [ebp+119]
  0000a	3c 07		 cmp	 al, 7
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	89 4c 24 10	 mov	 DWORD PTR _this$[esp+20], ecx
  00012	0f 84 d6 00 00
	00		 je	 $L152905

; 123  : 
; 124  : 		break;
; 125  : 
; 126  : 	default			:
; 127  : 		for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00018	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  0001b	3c 0b		 cmp	 al, 11			; 0000000bH
  0001d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001f	89 44 24 18	 mov	 DWORD PTR _itCHAR$[esp+16], eax
  00023	74 68		 je	 SHORT $L152916
  00025	3b c1		 cmp	 eax, ecx
  00027	0f 84 29 01 00
	00		 je	 $L152913
  0002d	8b 74 24 24	 mov	 esi, DWORD PTR _dwTick$[esp+16]
  00031	8b 7c 24 1c	 mov	 edi, DWORD PTR _pCELL$[esp+16]
  00035	8b 5c 24 20	 mov	 ebx, DWORD PTR _bNewMember$[esp+16]
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L164344:

; 128  : 			if(pCELL->IsMainCell((*itCHAR).second->m_bChannel))

  00040	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00043	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  00049	3c 1e		 cmp	 al, 30			; 0000001eH
  0004b	74 1a		 je	 SHORT $L164391
  0004d	0f b6 c0	 movzx	 eax, al
  00050	8a 94 38 5a 01
	00 00		 mov	 dl, BYTE PTR [eax+edi+346]
  00057	03 c7		 add	 eax, edi
  00059	84 d2		 test	 dl, dl
  0005b	74 12		 je	 SHORT $L152930
  0005d	8a 90 3c 01 00
	00		 mov	 dl, BYTE PTR [eax+316]
  00063	84 d2		 test	 dl, dl
  00065	75 08		 jne	 SHORT $L152930
$L164391:

; 129  : 				(*itCHAR).second->SendCS_ADDMON_ACK( pMON, bNewMember, dwTick);

  00067	56		 push	 esi
  00068	53		 push	 ebx
  00069	55		 push	 ebp
  0006a	e8 00 00 00 00	 call	 ?SendCS_ADDMON_ACK@CTPlayer@@QAEXPAVCTMonster@@EK@Z ; CTPlayer::SendCS_ADDMON_ACK
$L152930:
  0006f	8d 4c 24 18	 lea	 ecx, DWORD PTR _itCHAR$[esp+16]
  00073	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00078	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  0007c	8b 44 24 18	 mov	 eax, DWORD PTR _itCHAR$[esp+16]
  00080	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  00083	75 bb		 jne	 SHORT $L164344
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5d		 pop	 ebp
  00088	5b		 pop	 ebx

; 130  : 
; 131  : 		break;
; 132  : 	}
; 133  : }

  00089	59		 pop	 ecx
  0008a	c2 10 00	 ret	 16			; 00000010H
$L152916:

; 116  : 
; 117  : 		break;
; 118  : 
; 119  : 	case OT_SELF	:
; 120  : 		for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  0008d	3b c1		 cmp	 eax, ecx
  0008f	0f 84 c1 00 00
	00		 je	 $L152913
  00095	8b 74 24 24	 mov	 esi, DWORD PTR _dwTick$[esp+16]
  00099	8b 7c 24 1c	 mov	 edi, DWORD PTR _pCELL$[esp+16]
  0009d	8b 5c 24 20	 mov	 ebx, DWORD PTR _bNewMember$[esp+16]
$L164235:

; 121  : 			if(pCELL->IsMainCell((*itCHAR).second->m_bChannel))

  000a1	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000a4	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  000aa	3c 1e		 cmp	 al, 30			; 0000001eH
  000ac	74 1a		 je	 SHORT $L164282
  000ae	0f b6 d0	 movzx	 edx, al
  000b1	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  000b4	8a 90 5a 01 00
	00		 mov	 dl, BYTE PTR [eax+346]
  000ba	84 d2		 test	 dl, dl
  000bc	74 12		 je	 SHORT $L152921
  000be	8a 90 3c 01 00
	00		 mov	 dl, BYTE PTR [eax+316]
  000c4	84 d2		 test	 dl, dl
  000c6	75 08		 jne	 SHORT $L152921
$L164282:

; 122  : 				(*itCHAR).second->SendCS_ADDSELFOBJ_ACK( (CTSelfObj *) pMON, bNewMember, dwTick);

  000c8	56		 push	 esi
  000c9	53		 push	 ebx
  000ca	55		 push	 ebp
  000cb	e8 00 00 00 00	 call	 ?SendCS_ADDSELFOBJ_ACK@CTPlayer@@QAEXPAVCTSelfObj@@EK@Z ; CTPlayer::SendCS_ADDSELFOBJ_ACK
$L152921:
  000d0	8d 4c 24 18	 lea	 ecx, DWORD PTR _itCHAR$[esp+16]
  000d4	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  000d9	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  000dd	8b 44 24 18	 mov	 eax, DWORD PTR _itCHAR$[esp+16]
  000e1	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  000e4	75 bb		 jne	 SHORT $L164235
  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5d		 pop	 ebp
  000e9	5b		 pop	 ebx

; 130  : 
; 131  : 		break;
; 132  : 	}
; 133  : }

  000ea	59		 pop	 ecx
  000eb	c2 10 00	 ret	 16			; 00000010H
$L152905:

; 110  : 	{
; 111  : 	case OT_RECALL	:
; 112  : 		if(((CTRecallMon *) pMON)->m_bMain)

  000ee	8a 85 7e 01 00
	00		 mov	 al, BYTE PTR [ebp+382]
  000f4	84 c0		 test	 al, al
  000f6	74 5e		 je	 SHORT $L152913

; 113  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  000f8	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  000fb	8b 01		 mov	 eax, DWORD PTR [ecx]
  000fd	3b c1		 cmp	 eax, ecx
  000ff	89 44 24 18	 mov	 DWORD PTR _itCHAR$[esp+16], eax
  00103	74 51		 je	 SHORT $L152913
  00105	8b 74 24 24	 mov	 esi, DWORD PTR _dwTick$[esp+16]
  00109	8b 7c 24 1c	 mov	 edi, DWORD PTR _pCELL$[esp+16]
  0010d	8b 5c 24 20	 mov	 ebx, DWORD PTR _bNewMember$[esp+16]
$L164126:

; 114  : 				if(pCELL->IsMainCell((*itCHAR).second->m_bChannel))

  00111	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00114	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  0011a	3c 1e		 cmp	 al, 30			; 0000001eH
  0011c	74 1a		 je	 SHORT $L164173
  0011e	0f b6 d0	 movzx	 edx, al
  00121	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  00124	8a 90 5a 01 00
	00		 mov	 dl, BYTE PTR [eax+346]
  0012a	84 d2		 test	 dl, dl
  0012c	74 12		 je	 SHORT $L152912
  0012e	8a 90 3c 01 00
	00		 mov	 dl, BYTE PTR [eax+316]
  00134	84 d2		 test	 dl, dl
  00136	75 08		 jne	 SHORT $L152912
$L164173:

; 115  : 					(*itCHAR).second->SendCS_ADDRECALLMON_ACK( (CTRecallMon *) pMON, bNewMember, dwTick);

  00138	56		 push	 esi
  00139	53		 push	 ebx
  0013a	55		 push	 ebp
  0013b	e8 00 00 00 00	 call	 ?SendCS_ADDRECALLMON_ACK@CTPlayer@@QAEXPAVCTRecallMon@@EK@Z ; CTPlayer::SendCS_ADDRECALLMON_ACK
$L152912:
  00140	8d 4c 24 18	 lea	 ecx, DWORD PTR _itCHAR$[esp+16]
  00144	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00149	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  0014d	8b 44 24 18	 mov	 eax, DWORD PTR _itCHAR$[esp+16]
  00151	3b 41 2c	 cmp	 eax, DWORD PTR [ecx+44]
  00154	75 bb		 jne	 SHORT $L164126
$L152913:
  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5d		 pop	 ebp
  00159	5b		 pop	 ebx

; 130  : 
; 131  : 		break;
; 132  : 	}
; 133  : }

  0015a	59		 pop	 ecx
  0015b	c2 10 00	 ret	 16			; 00000010H
?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z ENDP	; CTCell::EnterMonster
_TEXT	ENDS
PUBLIC	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z	; CTCell::LeaveChannel
EXTRN	?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z:NEAR	; CTPlayer::SendCS_LEAVE_ACK
EXTRN	?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z:NEAR ; CTPlayer::SendCS_DELRECALLMON_ACK
; Function compile flags: /Ogty
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z
_TEXT	SEGMENT
_itCHAR$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
_bChannel$ = 12						; size = 1
_bExitMap$ = 16						; size = 1
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z PROC NEAR	; CTCell::LeaveChannel, COMDAT
; _this$ = ecx

; 226  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	8b d9		 mov	 ebx, ecx

; 227  : 	MAPTRECALLMON::iterator itREC;
; 228  : 	MAPPLAYER::iterator itCHAR;
; 229  : 
; 230  : 	for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00004	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	3b c1		 cmp	 eax, ecx
  0000b	55		 push	 ebp
  0000c	8b 6c 24 10	 mov	 ebp, DWORD PTR _pPlayer$[esp+8]
  00010	56		 push	 esi
  00011	89 44 24 0c	 mov	 DWORD PTR _itCHAR$[esp+16], eax
  00015	74 52		 je	 SHORT $L153313
  00017	57		 push	 edi
  00018	8b 7c 24 20	 mov	 edi, DWORD PTR _bExitMap$[esp+16]
  0001c	8d 64 24 00	 npad	 4
$L164482:

; 231  : 	{
; 232  : 		CTPlayer *pChar = (*itCHAR).second;

  00020	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 233  : 
; 234  : 		if( pChar->m_bChannel != pPlayer->m_bChannel && pChar->m_bChannel == bChannel )

  00023	8a 86 74 01 01
	00		 mov	 al, BYTE PTR [esi+65908]
  00029	3a 85 74 01 01
	00		 cmp	 al, BYTE PTR [ebp+65908]
  0002f	74 25		 je	 SHORT $L153312
  00031	3a 44 24 1c	 cmp	 al, BYTE PTR _bChannel$[esp+16]
  00035	75 1f		 jne	 SHORT $L153312

; 235  : 		{
; 236  : 			pChar->SendCS_LEAVE_ACK( pPlayer->m_dwID, bExitMap);

  00037	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  0003d	57		 push	 edi
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK

; 237  : 			pPlayer->SendCS_LEAVE_ACK( pChar->m_dwID, FALSE);

  00046	8b 8e 44 01 01
	00		 mov	 ecx, DWORD PTR [esi+65860]
  0004c	6a 00		 push	 0
  0004e	51		 push	 ecx
  0004f	8b cd		 mov	 ecx, ebp
  00051	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK
$L153312:
  00056	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+20]
  0005a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+20]
  00063	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  00066	75 b8		 jne	 SHORT $L164482
  00068	5f		 pop	 edi
$L153313:

; 238  : 		}
; 239  : 	}
; 240  : 
; 241  : 	for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

  00069	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0006c	8b 30		 mov	 esi, DWORD PTR [eax]
  0006e	3b f0		 cmp	 esi, eax
  00070	0f 84 8a 00 00
	00		 je	 $L153321
  00076	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L164708:

; 242  : 		if( (*itREC).second->m_bMain &&
; 243  : 			(*itREC).second->m_bChannel != pPlayer->m_bChannel &&
; 244  : 			(*itREC).second->m_bChannel == bChannel )

  00080	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00083	8a 88 7e 01 00
	00		 mov	 cl, BYTE PTR [eax+382]
  00089	84 c9		 test	 cl, cl
  0008b	74 28		 je	 SHORT $L153320
  0008d	8a 40 74	 mov	 al, BYTE PTR [eax+116]
  00090	3a 85 74 01 01
	00		 cmp	 al, BYTE PTR [ebp+65908]
  00096	74 1d		 je	 SHORT $L153320
  00098	3a 44 24 18	 cmp	 al, BYTE PTR _bChannel$[esp+12]
  0009c	75 17		 jne	 SHORT $L153320

; 245  : 			pPlayer->SendCS_DELRECALLMON_ACK( (*itREC).second->m_dwHostID, (*itREC).second->m_dwID, FALSE);

  0009e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000a1	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  000a4	8b 80 f8 00 00
	00		 mov	 eax, DWORD PTR [eax+248]
  000aa	6a 00		 push	 0
  000ac	52		 push	 edx
  000ad	50		 push	 eax
  000ae	8b cd		 mov	 ecx, ebp
  000b0	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
$L153320:
  000b5	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000b8	84 c0		 test	 al, al
  000ba	75 3f		 jne	 SHORT $L164719
  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000c2	84 c9		 test	 cl, cl
  000c4	75 18		 jne	 SHORT $L164850
  000c6	8b f0		 mov	 esi, eax
  000c8	8b 06		 mov	 eax, DWORD PTR [esi]
  000ca	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000cd	84 c9		 test	 cl, cl
  000cf	75 2a		 jne	 SHORT $L164719

; 238  : 		}
; 239  : 	}
; 240  : 
; 241  : 	for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

$L164740:
  000d1	8b f0		 mov	 esi, eax
  000d3	8b 06		 mov	 eax, DWORD PTR [esi]
  000d5	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000d8	84 c9		 test	 cl, cl
  000da	74 f5		 je	 SHORT $L164740
  000dc	eb 1d		 jmp	 SHORT $L164719
$L164850:
  000de	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000e4	84 c9		 test	 cl, cl
  000e6	75 11		 jne	 SHORT $L164722
$L164721:
  000e8	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000eb	75 0c		 jne	 SHORT $L164722
  000ed	8b f0		 mov	 esi, eax
  000ef	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000f2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000f5	84 c9		 test	 cl, cl
  000f7	74 ef		 je	 SHORT $L164721
$L164722:
  000f9	8b f0		 mov	 esi, eax
$L164719:
  000fb	3b 73 08	 cmp	 esi, DWORD PTR [ebx+8]
  000fe	75 80		 jne	 SHORT $L164708
$L153321:
  00100	5e		 pop	 esi
  00101	5d		 pop	 ebp
  00102	5b		 pop	 ebx

; 246  : }

  00103	59		 pop	 ecx
  00104	c2 0c 00	 ret	 12			; 0000000cH
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z ENDP	; CTCell::LeaveChannel
_TEXT	ENDS
PUBLIC	?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z	; CTCell::LeaveChannel
EXTRN	?LeaveAggro@CTMonster@@QAEEKKE@Z:NEAR		; CTMonster::LeaveAggro
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
EXTRN	?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z:NEAR	; CTPlayer::SendCS_DELMON_ACK
EXTRN	?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z:NEAR	; CTPlayer::SendCS_DELSELFOBJ_ACK
; Function compile flags: /Ogty
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z
_TEXT	SEGMENT
_itCHAR$ = 8						; size = 4
_pMON$ = 8						; size = 4
_itMON$ = 12						; size = 4
_bChannel$ = 12						; size = 1
_bExitMap$ = 16						; size = 1
?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z PROC NEAR	; CTCell::LeaveChannel, COMDAT
; _this$ = ecx

; 375  : {

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 376  : 	MAPTMONSTER::iterator itMON;
; 377  : 	MAPPLAYER::iterator itCHAR;
; 378  : 
; 379  : 	switch(pMON->m_bType)

  00003	8b 74 24 10	 mov	 esi, DWORD PTR _pMON$[esp+8]
  00007	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  0000a	3c 07		 cmp	 al, 7
  0000c	8b e9		 mov	 ebp, ecx

; 408  : 			}
; 409  : 		}
; 410  : 
; 411  : 		break;
; 412  : 
; 413  : 	default			:
; 414  : 		for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  0000e	8b 4d 2c	 mov	 ecx, DWORD PTR [ebp+44]
  00011	57		 push	 edi
  00012	0f 84 e9 00 00
	00		 je	 $L153441
  00018	3c 0b		 cmp	 al, 11			; 0000000bH
  0001a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001c	89 44 24 14	 mov	 DWORD PTR _itCHAR$[esp+12], eax
  00020	74 45		 je	 SHORT $L153455
  00022	3b c1		 cmp	 eax, ecx
  00024	0f 84 b2 01 00
	00		 je	 $L153454
  0002a	8a 5c 24 18	 mov	 bl, BYTE PTR _bChannel$[esp+12]
  0002e	8b 7c 24 1c	 mov	 edi, DWORD PTR _bExitMap$[esp+12]
$L165528:

; 415  : 			if( (*itCHAR).second->m_bChannel != pMON->m_bChannel &&
; 416  : 				(*itCHAR).second->m_bChannel == bChannel )

  00032	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00035	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  0003b	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0003e	74 0e		 je	 SHORT $L153474
  00040	3a c3		 cmp	 al, bl
  00042	75 0a		 jne	 SHORT $L153474

; 417  : 				(*itCHAR).second->SendCS_DELMON_ACK( pMON->m_dwID, bExitMap);

  00044	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00047	57		 push	 edi
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK
$L153474:
  0004e	8d 4c 24 14	 lea	 ecx, DWORD PTR _itCHAR$[esp+12]
  00052	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00057	8b 44 24 14	 mov	 eax, DWORD PTR _itCHAR$[esp+12]
  0005b	3b 45 2c	 cmp	 eax, DWORD PTR [ebp+44]
  0005e	75 d2		 jne	 SHORT $L165528
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5d		 pop	 ebp
  00063	5b		 pop	 ebx

; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : }

  00064	c2 0c 00	 ret	 12			; 0000000cH
$L153455:

; 392  : 			}
; 393  : 		}
; 394  : 
; 395  : 		break;
; 396  : 
; 397  : 	case OT_SELF	:
; 398  : 		{
; 399  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00067	3b c1		 cmp	 eax, ecx
  00069	74 36		 je	 SHORT $L153461
  0006b	8a 5c 24 18	 mov	 bl, BYTE PTR _bChannel$[esp+12]
  0006f	8b 7c 24 1c	 mov	 edi, DWORD PTR _bExitMap$[esp+12]
$L165320:

; 400  : 				if( (*itCHAR).second->m_bChannel != pMON->m_bChannel &&
; 401  : 					(*itCHAR).second->m_bChannel == bChannel )

  00073	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00076	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  0007c	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0007f	74 0e		 je	 SHORT $L153460
  00081	3a c3		 cmp	 al, bl
  00083	75 0a		 jne	 SHORT $L153460

; 402  : 					(*itCHAR).second->SendCS_DELSELFOBJ_ACK( pMON->m_dwID, bExitMap);

  00085	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00088	57		 push	 edi
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
$L153460:
  0008f	8d 4c 24 14	 lea	 ecx, DWORD PTR _itCHAR$[esp+12]
  00093	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00098	8b 44 24 14	 mov	 eax, DWORD PTR _itCHAR$[esp+12]
  0009c	3b 45 2c	 cmp	 eax, DWORD PTR [ebp+44]
  0009f	75 d2		 jne	 SHORT $L165320
$L153461:

; 403  : 
; 404  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  000a1	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  000a4	8b 38		 mov	 edi, DWORD PTR [eax]
  000a6	3b f8		 cmp	 edi, eax
  000a8	89 7c 24 18	 mov	 DWORD PTR _itMON$[esp+12], edi
  000ac	0f 84 2a 01 00
	00		 je	 $L153454
$L165434:

; 405  : 			{
; 406  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  000b2	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000b5	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  000bb	33 c0		 xor	 eax, eax
  000bd	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  000c0	50		 push	 eax
  000c1	51		 push	 ecx
  000c2	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 407  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  000cb	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000ce	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  000d4	33 c0		 xor	 eax, eax
  000d6	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  000d9	50		 push	 eax
  000da	51		 push	 ecx
  000db	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000de	52		 push	 edx
  000df	6a 00		 push	 0
  000e1	6a 08		 push	 8
  000e3	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  000e8	8d 4c 24 18	 lea	 ecx, DWORD PTR _itMON$[esp+12]
  000ec	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  000f1	8b 7c 24 18	 mov	 edi, DWORD PTR _itMON$[esp+12]
  000f5	3b 7d 20	 cmp	 edi, DWORD PTR [ebp+32]
  000f8	75 b8		 jne	 SHORT $L165434
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5d		 pop	 ebp
  000fd	5b		 pop	 ebx

; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : }

  000fe	c2 0c 00	 ret	 12			; 0000000cH
$L153441:

; 380  : 	{
; 381  : 	case OT_RECALL	:
; 382  : 		{
; 383  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00101	8b 01		 mov	 eax, DWORD PTR [ecx]
  00103	3b c1		 cmp	 eax, ecx
  00105	89 44 24 14	 mov	 DWORD PTR _itCHAR$[esp+12], eax
  00109	74 3d		 je	 SHORT $L153447
  0010b	8a 5c 24 18	 mov	 bl, BYTE PTR _bChannel$[esp+12]
  0010f	8b 7c 24 1c	 mov	 edi, DWORD PTR _bExitMap$[esp+12]
$L164932:

; 384  : 				if( (*itCHAR).second->m_bChannel != pMON->m_bChannel &&
; 385  : 					(*itCHAR).second->m_bChannel == bChannel )

  00113	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00116	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  0011c	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0011f	74 15		 je	 SHORT $L153446
  00121	3a c3		 cmp	 al, bl
  00123	75 11		 jne	 SHORT $L153446

; 386  : 					(*itCHAR).second->SendCS_DELRECALLMON_ACK( pMON->m_dwHostID, pMON->m_dwID, bExitMap);

  00125	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00128	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  0012e	57		 push	 edi
  0012f	50		 push	 eax
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
$L153446:
  00136	8d 4c 24 14	 lea	 ecx, DWORD PTR _itCHAR$[esp+12]
  0013a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  0013f	8b 44 24 14	 mov	 eax, DWORD PTR _itCHAR$[esp+12]
  00143	3b 45 2c	 cmp	 eax, DWORD PTR [ebp+44]
  00146	75 cb		 jne	 SHORT $L164932
$L153447:

; 387  : 
; 388  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  00148	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  0014b	8b 38		 mov	 edi, DWORD PTR [eax]
  0014d	3b f8		 cmp	 edi, eax
  0014f	0f 84 87 00 00
	00		 je	 $L153454
$L165221:

; 389  : 			{
; 390  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  00155	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00158	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  0015e	33 c0		 xor	 eax, eax
  00160	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  00163	50		 push	 eax
  00164	51		 push	 ecx
  00165	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00168	52		 push	 edx
  00169	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 391  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  0016e	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00171	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  00177	33 c0		 xor	 eax, eax
  00179	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  0017c	50		 push	 eax
  0017d	51		 push	 ecx
  0017e	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00181	52		 push	 edx
  00182	6a 00		 push	 0
  00184	6a 08		 push	 8
  00186	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  0018b	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0018e	84 c0		 test	 al, al
  00190	75 41		 jne	 SHORT $L165190
  00192	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00195	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00198	84 c9		 test	 cl, cl
  0019a	75 18		 jne	 SHORT $L165610
  0019c	8b f8		 mov	 edi, eax
  0019e	8b 07		 mov	 eax, DWORD PTR [edi]
  001a0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001a3	84 c9		 test	 cl, cl
  001a5	75 2c		 jne	 SHORT $L165190

; 387  : 
; 388  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

$L165204:
  001a7	8b f8		 mov	 edi, eax
  001a9	8b 07		 mov	 eax, DWORD PTR [edi]
  001ab	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001ae	84 c9		 test	 cl, cl
  001b0	74 f5		 je	 SHORT $L165204
  001b2	eb 1f		 jmp	 SHORT $L165190
$L165610:
  001b4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001b7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001ba	84 c9		 test	 cl, cl
  001bc	75 13		 jne	 SHORT $L165193
  001be	8b ff		 npad	 2
$L165192:
  001c0	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  001c3	75 0c		 jne	 SHORT $L165193
  001c5	8b f8		 mov	 edi, eax
  001c7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ca	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001cd	84 c9		 test	 cl, cl
  001cf	74 ef		 je	 SHORT $L165192
$L165193:
  001d1	8b f8		 mov	 edi, eax
$L165190:
  001d3	3b 7d 20	 cmp	 edi, DWORD PTR [ebp+32]
  001d6	0f 85 79 ff ff
	ff		 jne	 $L165221
$L153454:
  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi
  001de	5d		 pop	 ebp
  001df	5b		 pop	 ebx

; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : }

  001e0	c2 0c 00	 ret	 12			; 0000000cH
?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z ENDP	; CTCell::LeaveChannel
_TEXT	ENDS
PUBLIC	?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z	; CTCell::LeaveChannel
; Function compile flags: /Ogty
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT
_itCHAR$ = 8						; size = 4
_pMON$ = 8						; size = 4
_bExitMap$ = 12						; size = 1
_itMON$ = 12						; size = 4
?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z PROC NEAR	; CTCell::LeaveChannel, COMDAT
; _this$ = ecx

; 425  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 426  : 	MAPTMONSTER::iterator itMON;
; 427  : 	MAPPLAYER::iterator itCHAR;
; 428  : 
; 429  : 	switch(pMON->m_bType)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR _pMON$[esp+4]
  00006	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  00009	3c 07		 cmp	 al, 7
  0000b	8b d9		 mov	 ebx, ecx

; 456  : 			}
; 457  : 		}
; 458  : 
; 459  : 		break;
; 460  : 
; 461  : 	default			:
; 462  : 		for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  0000d	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00010	57		 push	 edi
  00011	0f 84 e7 00 00
	00		 je	 $L153488
  00017	3c 0b		 cmp	 al, 11			; 0000000bH
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	89 44 24 10	 mov	 DWORD PTR _itCHAR$[esp+8], eax
  0001f	74 3f		 je	 SHORT $L153502
  00021	3b c1		 cmp	 eax, ecx
  00023	0f 84 b3 01 00
	00		 je	 $L153501
  00029	8b 7c 24 14	 mov	 edi, DWORD PTR _bExitMap$[esp+8]
  0002d	8d 49 00	 npad	 3
$L166266:

; 463  : 			if( (*itCHAR).second->m_bChannel != pMON->m_bChannel )

  00030	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00033	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  00039	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0003c	74 0a		 je	 SHORT $L153521

; 464  : 				(*itCHAR).second->SendCS_DELMON_ACK( pMON->m_dwID, bExitMap);

  0003e	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00041	57		 push	 edi
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK
$L153521:
  00048	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  0004c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00051	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  00055	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  00058	75 d6		 jne	 SHORT $L166266
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx

; 465  : 
; 466  : 		break;
; 467  : 	}
; 468  : }

  0005d	c2 08 00	 ret	 8
$L153502:

; 441  : 			}
; 442  : 		}
; 443  : 
; 444  : 		break;
; 445  : 
; 446  : 	case OT_SELF	:
; 447  : 		{
; 448  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00060	3b c1		 cmp	 eax, ecx
  00062	74 36		 je	 SHORT $L153508
  00064	8b 7c 24 14	 mov	 edi, DWORD PTR _bExitMap$[esp+8]
  00068	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L166068:

; 449  : 				if( (*itCHAR).second->m_bChannel != pMON->m_bChannel )

  00070	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00073	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  00079	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0007c	74 0a		 je	 SHORT $L153507

; 450  : 					(*itCHAR).second->SendCS_DELSELFOBJ_ACK( pMON->m_dwID, bExitMap);

  0007e	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00081	57		 push	 edi
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
$L153507:
  00088	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  0008c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00091	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  00095	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  00098	75 d6		 jne	 SHORT $L166068
$L153508:

; 451  : 
; 452  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  0009a	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0009d	8b 38		 mov	 edi, DWORD PTR [eax]
  0009f	3b f8		 cmp	 edi, eax
  000a1	89 7c 24 14	 mov	 DWORD PTR _itMON$[esp+8], edi
  000a5	0f 84 31 01 00
	00		 je	 $L153501
  000ab	eb 03 8d 49 00	 npad	 5
$L166167:

; 453  : 			{
; 454  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  000b0	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000b3	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  000b9	33 c0		 xor	 eax, eax
  000bb	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  000be	50		 push	 eax
  000bf	51		 push	 ecx
  000c0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 455  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  000c9	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000cc	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  000d2	33 c0		 xor	 eax, eax
  000d4	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  000d7	50		 push	 eax
  000d8	51		 push	 ecx
  000d9	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000dc	52		 push	 edx
  000dd	6a 00		 push	 0
  000df	6a 08		 push	 8
  000e1	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  000e6	8d 4c 24 14	 lea	 ecx, DWORD PTR _itMON$[esp+8]
  000ea	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  000ef	8b 7c 24 14	 mov	 edi, DWORD PTR _itMON$[esp+8]
  000f3	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  000f6	75 b8		 jne	 SHORT $L166167
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx

; 465  : 
; 466  : 		break;
; 467  : 	}
; 468  : }

  000fb	c2 08 00	 ret	 8
$L153488:

; 430  : 	{
; 431  : 	case OT_RECALL	:
; 432  : 		{
; 433  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  000fe	8b 01		 mov	 eax, DWORD PTR [ecx]
  00100	3b c1		 cmp	 eax, ecx
  00102	89 44 24 10	 mov	 DWORD PTR _itCHAR$[esp+8], eax
  00106	74 39		 je	 SHORT $L153494
  00108	8b 7c 24 14	 mov	 edi, DWORD PTR _bExitMap$[esp+8]
  0010c	8d 64 24 00	 npad	 4
$L165690:

; 434  : 				if( (*itCHAR).second->m_bChannel != pMON->m_bChannel )

  00110	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00113	8a 81 74 01 01
	00		 mov	 al, BYTE PTR [ecx+65908]
  00119	3a 46 74	 cmp	 al, BYTE PTR [esi+116]
  0011c	74 11		 je	 SHORT $L153493

; 435  : 					(*itCHAR).second->SendCS_DELRECALLMON_ACK( pMON->m_dwHostID, pMON->m_dwID, bExitMap);

  0011e	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00121	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00127	57		 push	 edi
  00128	52		 push	 edx
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
$L153493:
  0012f	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  00133	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00138	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  0013c	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  0013f	75 cf		 jne	 SHORT $L165690
$L153494:

; 436  : 
; 437  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  00141	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  00144	8b 38		 mov	 edi, DWORD PTR [eax]
  00146	3b f8		 cmp	 edi, eax
  00148	0f 84 8e 00 00
	00		 je	 $L153501
  0014e	8b ff		 npad	 2
$L165968:

; 438  : 			{
; 439  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  00150	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00153	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00159	33 c9		 xor	 ecx, ecx
  0015b	8a 4e 77	 mov	 cl, BYTE PTR [esi+119]
  0015e	51		 push	 ecx
  0015f	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00162	52		 push	 edx
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 440  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  00169	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  0016c	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00172	33 c9		 xor	 ecx, ecx
  00174	8a 4e 77	 mov	 cl, BYTE PTR [esi+119]
  00177	51		 push	 ecx
  00178	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0017b	52		 push	 edx
  0017c	50		 push	 eax
  0017d	6a 00		 push	 0
  0017f	6a 08		 push	 8
  00181	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  00186	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00189	84 c0		 test	 al, al
  0018b	75 46		 jne	 SHORT $L165945
  0018d	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00190	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00193	84 c9		 test	 cl, cl
  00195	75 18		 jne	 SHORT $L166328
  00197	8b f8		 mov	 edi, eax
  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0019e	84 c9		 test	 cl, cl
  001a0	75 31		 jne	 SHORT $L165945

; 436  : 
; 437  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

$L165959:
  001a2	8b f8		 mov	 edi, eax
  001a4	8b 07		 mov	 eax, DWORD PTR [edi]
  001a6	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001a9	84 c9		 test	 cl, cl
  001ab	74 f5		 je	 SHORT $L165959
  001ad	eb 24		 jmp	 SHORT $L165945
$L166328:
  001af	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001b2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001b5	84 c9		 test	 cl, cl
  001b7	75 18		 jne	 SHORT $L165948
  001b9	8d a4 24 00 00
	00 00		 npad	 7
$L165947:
  001c0	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  001c3	75 0c		 jne	 SHORT $L165948
  001c5	8b f8		 mov	 edi, eax
  001c7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ca	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001cd	84 c9		 test	 cl, cl
  001cf	74 ef		 je	 SHORT $L165947
$L165948:
  001d1	8b f8		 mov	 edi, eax
$L165945:
  001d3	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  001d6	0f 85 74 ff ff
	ff		 jne	 $L165968
$L153501:
  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi
  001de	5b		 pop	 ebx

; 465  : 
; 466  : 		break;
; 467  : 	}
; 468  : }

  001df	c2 08 00	 ret	 8
?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z ENDP	; CTCell::LeaveChannel
_TEXT	ENDS
PUBLIC	?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z	; CTCell::LeaveMonster
; Function compile flags: /Ogty
;	COMDAT ?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT
_itCHAR$ = 8						; size = 4
_pMON$ = 8						; size = 4
_bExitMap$ = 12						; size = 1
_itMON$ = 12						; size = 4
?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z PROC NEAR	; CTCell::LeaveMonster, COMDAT
; _this$ = ecx

; 471  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 472  : 	MAPTMONSTER::iterator itMON;
; 473  : 	MAPPLAYER::iterator itCHAR;
; 474  : 
; 475  : 	switch(pMON->m_bType)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR _pMON$[esp+4]
  00006	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  00009	3c 07		 cmp	 al, 7
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	0f 84 ca 00 00
	00		 je	 $L153535

; 501  : 			}
; 502  : 		}
; 503  : 
; 504  : 		break;
; 505  : 
; 506  : 	default			:
; 507  : 		for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00014	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  00017	3c 0b		 cmp	 al, 11			; 0000000bH
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	89 44 24 10	 mov	 DWORD PTR _itCHAR$[esp+8], eax
  0001f	74 34		 je	 SHORT $L153550
  00021	3b c1		 cmp	 eax, ecx
  00023	0f 84 52 01 00
	00		 je	 $L153549
  00029	8b 5c 24 14	 mov	 ebx, DWORD PTR _bExitMap$[esp+8]
  0002d	8d 49 00	 npad	 3
$L166774:

; 508  : 			(*itCHAR).second->SendCS_DELMON_ACK( pMON->m_dwID, bExitMap);

  00030	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00033	53		 push	 ebx
  00034	51		 push	 ecx
  00035	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00038	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK
  0003d	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  00041	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00046	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  0004a	3b 47 2c	 cmp	 eax, DWORD PTR [edi+44]
  0004d	75 e1		 jne	 SHORT $L166774
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx

; 509  : 
; 510  : 		break;
; 511  : 	}
; 512  : }

  00052	c2 08 00	 ret	 8
$L153550:

; 487  : 			}
; 488  : 		}
; 489  : 
; 490  : 		break;
; 491  : 
; 492  : 	case OT_SELF	:
; 493  : 		{
; 494  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00055	3b c1		 cmp	 eax, ecx
  00057	74 26		 je	 SHORT $L153556
  00059	8b 5c 24 14	 mov	 ebx, DWORD PTR _bExitMap$[esp+8]
  0005d	8d 49 00	 npad	 3
$L166591:

; 495  : 				(*itCHAR).second->SendCS_DELSELFOBJ_ACK( pMON->m_dwID, bExitMap);

  00060	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  00063	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00066	53		 push	 ebx
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
  0006d	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  00071	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  00076	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  0007a	3b 47 2c	 cmp	 eax, DWORD PTR [edi+44]
  0007d	75 e1		 jne	 SHORT $L166591
$L153556:

; 496  : 
; 497  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  0007f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00082	8b 18		 mov	 ebx, DWORD PTR [eax]
  00084	3b d8		 cmp	 ebx, eax
  00086	89 5c 24 14	 mov	 DWORD PTR _itMON$[esp+8], ebx
  0008a	0f 84 eb 00 00
	00		 je	 $L153549
$L166675:

; 498  : 			{
; 499  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  00090	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00093	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  00099	33 c0		 xor	 eax, eax
  0009b	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  0009e	50		 push	 eax
  0009f	51		 push	 ecx
  000a0	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 500  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  000a9	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000ac	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  000b2	33 c0		 xor	 eax, eax
  000b4	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  000b7	50		 push	 eax
  000b8	51		 push	 ecx
  000b9	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000bc	52		 push	 edx
  000bd	6a 00		 push	 0
  000bf	6a 08		 push	 8
  000c1	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  000c6	8d 4c 24 14	 lea	 ecx, DWORD PTR _itMON$[esp+8]
  000ca	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  000cf	8b 5c 24 14	 mov	 ebx, DWORD PTR _itMON$[esp+8]
  000d3	3b 5f 20	 cmp	 ebx, DWORD PTR [edi+32]
  000d6	75 b8		 jne	 SHORT $L166675
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx

; 509  : 
; 510  : 		break;
; 511  : 	}
; 512  : }

  000db	c2 08 00	 ret	 8
$L153535:

; 476  : 	{
; 477  : 	case OT_RECALL	:
; 478  : 		if(((CTRecallMon *) pMON)->m_bMain)

  000de	8a 86 7e 01 00
	00		 mov	 al, BYTE PTR [esi+382]
  000e4	84 c0		 test	 al, al
  000e6	0f 84 8f 00 00
	00		 je	 $L153549

; 479  : 		{
; 480  : 			for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  000ec	8b 4f 2c	 mov	 ecx, DWORD PTR [edi+44]
  000ef	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f1	3b c1		 cmp	 eax, ecx
  000f3	89 44 24 10	 mov	 DWORD PTR _itCHAR$[esp+8], eax
  000f7	74 2d		 je	 SHORT $L153543
  000f9	8b 5c 24 14	 mov	 ebx, DWORD PTR _bExitMap$[esp+8]
  000fd	8d 49 00	 npad	 3
$L166413:

; 481  : 				(*itCHAR).second->SendCS_DELRECALLMON_ACK( pMON->m_dwHostID, pMON->m_dwID, bExitMap);

  00100	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00103	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  00109	53		 push	 ebx
  0010a	51		 push	 ecx
  0010b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0010e	52		 push	 edx
  0010f	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
  00114	8d 4c 24 10	 lea	 ecx, DWORD PTR _itCHAR$[esp+8]
  00118	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  0011d	8b 44 24 10	 mov	 eax, DWORD PTR _itCHAR$[esp+8]
  00121	3b 47 2c	 cmp	 eax, DWORD PTR [edi+44]
  00124	75 da		 jne	 SHORT $L166413
$L153543:

; 482  : 
; 483  : 			for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  00126	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00129	8b 18		 mov	 ebx, DWORD PTR [eax]
  0012b	3b d8		 cmp	 ebx, eax
  0012d	89 5c 24 14	 mov	 DWORD PTR _itMON$[esp+8], ebx
  00131	74 48		 je	 SHORT $L153549
$L166493:

; 484  : 			{
; 485  : 				(*itMON).second->LeaveAggro( pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  00133	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00136	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  0013c	33 c0		 xor	 eax, eax
  0013e	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  00141	50		 push	 eax
  00142	51		 push	 ecx
  00143	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00146	52		 push	 edx
  00147	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 486  : 				(*itMON).second->OnEvent( AT_LEAVE, 0, pMON->m_dwHostID, pMON->m_dwID, pMON->m_bType);

  0014c	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  0014f	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  00155	33 c0		 xor	 eax, eax
  00157	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  0015a	50		 push	 eax
  0015b	51		 push	 ecx
  0015c	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0015f	52		 push	 edx
  00160	6a 00		 push	 0
  00162	6a 08		 push	 8
  00164	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  00169	8d 4c 24 14	 lea	 ecx, DWORD PTR _itMON$[esp+8]
  0016d	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  00172	8b 5c 24 14	 mov	 ebx, DWORD PTR _itMON$[esp+8]
  00176	3b 5f 20	 cmp	 ebx, DWORD PTR [edi+32]
  00179	75 b8		 jne	 SHORT $L166493
$L153549:
  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi
  0017d	5b		 pop	 ebx

; 509  : 
; 510  : 		break;
; 511  : 	}
; 512  : }

  0017e	c2 08 00	 ret	 8
?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z ENDP	; CTCell::LeaveMonster
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L167099
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L167099:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L167131
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L167131:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167139
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167139:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L148837

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L148837:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L148839

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L148839:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L148840

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L148840:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L167261
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L167261:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L167262
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L167336:
  0006b	76 6d		 jbe	 SHORT $L167335

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L167300
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L167301

; 599  : 		else if (_Grow(_Num))

$L167262:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L167336
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L167292
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L167292:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L167300:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L167301:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L167308
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L167309
$L167308:
  000b7	8b f8		 mov	 edi, eax
$L167309:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L167332
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L167332:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L167335:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L167358
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L167359
$L167358:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L167359:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L149761
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L167362
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L167363
$L167362:
  00029	8b c8		 mov	 ecx, eax
$L167363:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L149761

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L167375
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L167375:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L149761:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L167473
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L167473:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L167474
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L167554:
  00077	76 68		 jbe	 SHORT $L167551

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L167526
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L167527

; 611  : 
; 612  : 		if (_Grow(_Num))

$L167474:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L167554
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L167517
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L167517:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L167526:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L167527:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L167549
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L167549:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L167551:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z	; CTCell::EnterPlayer
EXTRN	?SendCS_GATEADD_ACK@CTPlayer@@QAEXKE@Z:NEAR	; CTPlayer::SendCS_GATEADD_ACK
EXTRN	?SendCS_SWITCHADD_ACK@CTPlayer@@QAEXKE@Z:NEAR	; CTPlayer::SendCS_SWITCHADD_ACK
EXTRN	?SendCS_ENTER_ACK@CTPlayer@@QAEXPAV1@EK@Z:NEAR	; CTPlayer::SendCS_ENTER_ACK
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
;	COMDAT ?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_itREC$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
_pCELL$ = 12						; size = 4
_bNewMember$ = 16					; size = 1
_dwTick$ = 20						; size = 4
?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z PROC NEAR ; CTCell::EnterPlayer, COMDAT
; _this$ = ecx

; 53   : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx

; 54   : 	MAPTRECALLMON::iterator itREC;
; 55   : 	MAPTSELFOBJ::iterator itSELF;
; 56   : 
; 57   : 	MAPTMONSTER::iterator itMON;
; 58   : 	MAPPLAYER::iterator itCHAR;
; 59   : 
; 60   : 	MAPTSWITCH::iterator itSW;
; 61   : 	MAPTGATE::iterator itGT;
; 62   : 
; 63   : 	for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

  00004	8b 5c 24 1c	 mov	 ebx, DWORD PTR _dwTick$[esp+8]
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	3b c1		 cmp	 eax, ecx
  00013	57		 push	 edi
  00014	8b 7c 24 1c	 mov	 edi, DWORD PTR _pPlayer$[esp+20]
  00018	89 74 24 10	 mov	 DWORD PTR _this$[esp+24], esi
  0001c	89 44 24 14	 mov	 DWORD PTR _itREC$[esp+24], eax
  00020	74 51		 je	 SHORT $L152746
$L167662:

; 64   : 		if( (*itREC).second->m_bMain && (IsMainCell(pPlayer->m_bChannel) ||
; 65   : 			pPlayer->m_bChannel == (*itREC).second->m_bChannel) )

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00025	8a 88 7e 01 00
	00		 mov	 cl, BYTE PTR [eax+382]
  0002b	84 c9		 test	 cl, cl
  0002d	74 32		 je	 SHORT $L152745
  0002f	8a 8f 74 01 01
	00		 mov	 cl, BYTE PTR [edi+65908]
  00035	80 f9 1e	 cmp	 cl, 30			; 0000001eH
  00038	74 1c		 je	 SHORT $L152766
  0003a	0f b6 d1	 movzx	 edx, cl
  0003d	03 d6		 add	 edx, esi
  0003f	80 ba 5a 01 00
	00 00		 cmp	 BYTE PTR [edx+346], 0
  00046	74 09		 je	 SHORT $L169150
  00048	80 ba 3c 01 00
	00 00		 cmp	 BYTE PTR [edx+316], 0
  0004f	74 05		 je	 SHORT $L152766
$L169150:
  00051	3a 48 74	 cmp	 cl, BYTE PTR [eax+116]
  00054	75 0b		 jne	 SHORT $L152745
$L152766:

; 66   : 			pPlayer->SendCS_ADDRECALLMON_ACK( (*itREC).second, FALSE, dwTick);

  00056	53		 push	 ebx
  00057	6a 00		 push	 0
  00059	50		 push	 eax
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SendCS_ADDRECALLMON_ACK@CTPlayer@@QAEXPAVCTRecallMon@@EK@Z ; CTPlayer::SendCS_ADDRECALLMON_ACK
$L152745:
  00061	8d 4c 24 14	 lea	 ecx, DWORD PTR _itREC$[esp+24]
  00065	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
  0006a	8b 44 24 14	 mov	 eax, DWORD PTR _itREC$[esp+24]
  0006e	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00071	75 af		 jne	 SHORT $L167662
$L152746:

; 67   : 
; 68   : 	for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00073	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00076	8b 30		 mov	 esi, DWORD PTR [eax]
  00078	3b f0		 cmp	 esi, eax
  0007a	0f 84 01 01 00
	00		 je	 $L152772
  00080	8b 5c 24 20	 mov	 ebx, DWORD PTR _pCELL$[esp+20]
  00084	8b 6c 24 24	 mov	 ebp, DWORD PTR _bNewMember$[esp+20]
  00088	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L167928:

; 69   : 	{
; 70   : 		CTPlayer *pChar = (*itCHAR).second;

  00090	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]

; 71   : 
; 72   : 		if( pPlayer != pChar )

  00093	8b 44 24 1c	 mov	 eax, DWORD PTR _pPlayer$[esp+20]
  00097	3b c7		 cmp	 eax, edi
  00099	0f 84 8f 00 00
	00		 je	 $L152771

; 73   : 		{
; 74   : 			if( pChar->m_bMain && (IsMainCell(pPlayer->m_bChannel) ||
; 75   : 				pChar->m_bChannel == pPlayer->m_bChannel) )

  0009f	8a 8f a8 04 01
	00		 mov	 cl, BYTE PTR [edi+66728]
  000a5	84 c9		 test	 cl, cl
  000a7	74 40		 je	 SHORT $L169155
  000a9	8a 80 74 01 01
	00		 mov	 al, BYTE PTR [eax+65908]
  000af	3c 1e		 cmp	 al, 30			; 0000001eH
  000b1	74 25		 je	 SHORT $L152794
  000b3	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  000b7	0f b6 c8	 movzx	 ecx, al
  000ba	03 ca		 add	 ecx, edx
  000bc	8a 91 5a 01 00
	00		 mov	 dl, BYTE PTR [ecx+346]
  000c2	84 d2		 test	 dl, dl
  000c4	74 0a		 je	 SHORT $L169151
  000c6	8a 91 3c 01 00
	00		 mov	 dl, BYTE PTR [ecx+316]
  000cc	84 d2		 test	 dl, dl
  000ce	74 08		 je	 SHORT $L152794
$L169151:
  000d0	38 87 74 01 01
	00		 cmp	 BYTE PTR [edi+65908], al
  000d6	75 11		 jne	 SHORT $L169155
$L152794:

; 76   : 				pPlayer->SendCS_ENTER_ACK( pChar, FALSE, dwTick);

  000d8	8b 44 24 28	 mov	 eax, DWORD PTR _dwTick$[esp+20]
  000dc	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pPlayer$[esp+20]
  000e0	50		 push	 eax
  000e1	6a 00		 push	 0
  000e3	57		 push	 edi
  000e4	e8 00 00 00 00	 call	 ?SendCS_ENTER_ACK@CTPlayer@@QAEXPAV1@EK@Z ; CTPlayer::SendCS_ENTER_ACK
$L169155:

; 77   : 
; 78   : 			if( pPlayer->m_bMain && pCELL->IsMainCell(pChar->m_bChannel) )

  000e9	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pPlayer$[esp+20]
  000ed	8a 81 a8 04 01
	00		 mov	 al, BYTE PTR [ecx+66728]
  000f3	84 c0		 test	 al, al
  000f5	74 37		 je	 SHORT $L152771
  000f7	8a 87 74 01 01
	00		 mov	 al, BYTE PTR [edi+65908]
  000fd	3c 1e		 cmp	 al, 30			; 0000001eH
  000ff	74 1b		 je	 SHORT $L168023
  00101	0f b6 d0	 movzx	 edx, al
  00104	8a 8c 1a 5a 01
	00 00		 mov	 cl, BYTE PTR [edx+ebx+346]
  0010b	84 c9		 test	 cl, cl
  0010d	8d 04 1a	 lea	 eax, DWORD PTR [edx+ebx]
  00110	74 1c		 je	 SHORT $L152771
  00112	8a 88 3c 01 00
	00		 mov	 cl, BYTE PTR [eax+316]
  00118	84 c9		 test	 cl, cl
  0011a	75 12		 jne	 SHORT $L152771
$L168023:

; 79   : 				pChar->SendCS_ENTER_ACK( pPlayer, bNewMember, dwTick);

  0011c	8b 44 24 28	 mov	 eax, DWORD PTR _dwTick$[esp+20]
  00120	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pPlayer$[esp+20]
  00124	50		 push	 eax
  00125	55		 push	 ebp
  00126	51		 push	 ecx
  00127	8b cf		 mov	 ecx, edi
  00129	e8 00 00 00 00	 call	 ?SendCS_ENTER_ACK@CTPlayer@@QAEXPAV1@EK@Z ; CTPlayer::SendCS_ENTER_ACK
$L152771:
  0012e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00131	84 c0		 test	 al, al
  00133	75 3f		 jne	 SHORT $L167939
  00135	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00138	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0013b	84 c0		 test	 al, al
  0013d	75 18		 jne	 SHORT $L169121
  0013f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00141	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00144	84 d2		 test	 dl, dl
  00146	75 0b		 jne	 SHORT $L167954

; 67   : 
; 68   : 	for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

$L167953:
  00148	8b c8		 mov	 ecx, eax
  0014a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0014c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0014f	84 d2		 test	 dl, dl
  00151	74 f5		 je	 SHORT $L167953
$L167954:
  00153	8b f1		 mov	 esi, ecx
  00155	eb 1d		 jmp	 SHORT $L167939
$L169121:
  00157	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0015a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0015d	84 c9		 test	 cl, cl
  0015f	75 11		 jne	 SHORT $L167942
$L167941:
  00161	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00164	75 0c		 jne	 SHORT $L167942
  00166	8b f0		 mov	 esi, eax
  00168	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0016b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0016e	84 c9		 test	 cl, cl
  00170	74 ef		 je	 SHORT $L167941
$L167942:
  00172	8b f0		 mov	 esi, eax
$L167939:
  00174	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  00178	3b 72 2c	 cmp	 esi, DWORD PTR [edx+44]
  0017b	0f 85 0f ff ff
	ff		 jne	 $L167928
$L152772:

; 80   : 		}
; 81   : 	}
; 82   : 
; 83   : 	if(IsMainCell(pPlayer->m_bChannel))

  00181	8b 44 24 1c	 mov	 eax, DWORD PTR _pPlayer$[esp+20]
  00185	8a 80 74 01 01
	00		 mov	 al, BYTE PTR [eax+65908]
  0018b	3c 1e		 cmp	 al, 30			; 0000001eH
  0018d	74 26		 je	 SHORT $L169156
  0018f	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  00193	0f b6 c8	 movzx	 ecx, al
  00196	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00199	8a 88 5a 01 00
	00		 mov	 cl, BYTE PTR [eax+346]
  0019f	84 c9		 test	 cl, cl
  001a1	0f 84 e8 01 00
	00		 je	 $L152874
  001a7	8a 88 3c 01 00
	00		 mov	 cl, BYTE PTR [eax+316]
  001ad	84 c9		 test	 cl, cl
  001af	0f 85 da 01 00
	00		 jne	 $L152874
$L169156:

; 84   : 	{
; 85   : 		for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  001b5	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+24]
  001b9	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  001bc	8b 30		 mov	 esi, DWORD PTR [eax]
  001be	3b f0		 cmp	 esi, eax
  001c0	74 7d		 je	 SHORT $L169154
  001c2	8b 6c 24 10	 mov	 ebp, DWORD PTR _this$[esp+24]
  001c6	8b 7c 24 1c	 mov	 edi, DWORD PTR _pPlayer$[esp+20]
  001ca	8b 5c 24 28	 mov	 ebx, DWORD PTR _dwTick$[esp+20]
  001ce	8b ff		 npad	 2
$L168255:

; 86   : 		{
; 87   : 			pPlayer->SendCS_ADDMON_ACK( (*itMON).second, FALSE, dwTick);

  001d0	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  001d3	53		 push	 ebx
  001d4	6a 00		 push	 0
  001d6	51		 push	 ecx
  001d7	8b cf		 mov	 ecx, edi
  001d9	e8 00 00 00 00	 call	 ?SendCS_ADDMON_ACK@CTPlayer@@QAEXPAVCTMonster@@EK@Z ; CTPlayer::SendCS_ADDMON_ACK

; 88   : 			(*itMON).second->OnEvent( AT_ENTER, 0, pPlayer->m_dwID, pPlayer->m_dwID, OT_PC);

  001de	8b 87 44 01 01
	00		 mov	 eax, DWORD PTR [edi+65860]
  001e4	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  001e7	6a 01		 push	 1
  001e9	50		 push	 eax
  001ea	50		 push	 eax
  001eb	6a 00		 push	 0
  001ed	6a 07		 push	 7
  001ef	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  001f4	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  001f7	84 c0		 test	 al, al
  001f9	75 3f		 jne	 SHORT $L168224
  001fb	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001fe	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00201	84 c9		 test	 cl, cl
  00203	75 18		 jne	 SHORT $L169124
  00205	8b f0		 mov	 esi, eax
  00207	8b 06		 mov	 eax, DWORD PTR [esi]
  00209	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0020c	84 c9		 test	 cl, cl
  0020e	75 2a		 jne	 SHORT $L168224

; 84   : 	{
; 85   : 		for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

$L168238:
  00210	8b f0		 mov	 esi, eax
  00212	8b 06		 mov	 eax, DWORD PTR [esi]
  00214	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00217	84 c9		 test	 cl, cl
  00219	74 f5		 je	 SHORT $L168238
  0021b	eb 1d		 jmp	 SHORT $L168224
$L169124:
  0021d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00220	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00223	84 c9		 test	 cl, cl
  00225	75 11		 jne	 SHORT $L168227
$L168226:
  00227	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0022a	75 0c		 jne	 SHORT $L168227
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00231	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00234	84 c9		 test	 cl, cl
  00236	74 ef		 je	 SHORT $L168226
$L168227:
  00238	8b f0		 mov	 esi, eax
$L168224:
  0023a	3b 75 20	 cmp	 esi, DWORD PTR [ebp+32]
  0023d	75 91		 jne	 SHORT $L168255
$L169154:

; 89   : 		}
; 90   : 
; 91   : 		for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

  0023f	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  00243	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00246	8b 30		 mov	 esi, DWORD PTR [eax]
  00248	3b f0		 cmp	 esi, eax
  0024a	74 64		 je	 SHORT $L152826
  0024c	8b 7c 24 1c	 mov	 edi, DWORD PTR _pPlayer$[esp+20]
  00250	8b da		 mov	 ebx, edx
$L168529:

; 92   : 			pPlayer->SendCS_SWITCHADD_ACK( (*itSW).second->m_dwSwitchID, (*itSW).second->m_bOpened);

  00252	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00255	8b 10		 mov	 edx, DWORD PTR [eax]
  00257	33 c9		 xor	 ecx, ecx
  00259	8a 48 1c	 mov	 cl, BYTE PTR [eax+28]
  0025c	51		 push	 ecx
  0025d	52		 push	 edx
  0025e	8b cf		 mov	 ecx, edi
  00260	e8 00 00 00 00	 call	 ?SendCS_SWITCHADD_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_SWITCHADD_ACK
  00265	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00268	84 c0		 test	 al, al
  0026a	75 3f		 jne	 SHORT $L168499
  0026c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0026f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00272	84 c9		 test	 cl, cl
  00274	75 18		 jne	 SHORT $L169127
  00276	8b f0		 mov	 esi, eax
  00278	8b 06		 mov	 eax, DWORD PTR [esi]
  0027a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0027d	84 c9		 test	 cl, cl
  0027f	75 2a		 jne	 SHORT $L168499

; 89   : 		}
; 90   : 
; 91   : 		for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

$L168513:
  00281	8b f0		 mov	 esi, eax
  00283	8b 06		 mov	 eax, DWORD PTR [esi]
  00285	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00288	84 c9		 test	 cl, cl
  0028a	74 f5		 je	 SHORT $L168513
  0028c	eb 1d		 jmp	 SHORT $L168499
$L169127:
  0028e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00291	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00294	84 c9		 test	 cl, cl
  00296	75 11		 jne	 SHORT $L168502
$L168501:
  00298	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0029b	75 0c		 jne	 SHORT $L168502
  0029d	8b f0		 mov	 esi, eax
  0029f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  002a2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  002a5	84 c9		 test	 cl, cl
  002a7	74 ef		 je	 SHORT $L168501
$L168502:
  002a9	8b f0		 mov	 esi, eax
$L168499:
  002ab	3b 73 38	 cmp	 esi, DWORD PTR [ebx+56]
  002ae	75 a2		 jne	 SHORT $L168529
$L152826:

; 93   : 
; 94   : 		for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

  002b0	8b 6c 24 10	 mov	 ebp, DWORD PTR _this$[esp+24]
  002b4	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  002b7	8b 30		 mov	 esi, DWORD PTR [eax]
  002b9	3b f0		 cmp	 esi, eax
  002bb	8b 5c 24 1c	 mov	 ebx, DWORD PTR _pPlayer$[esp+20]
  002bf	74 5e		 je	 SHORT $L152850
$L168765:

; 95   : 			pPlayer->SendCS_GATEADD_ACK( (*itGT).second->m_dwGateID, (*itGT).second->m_bOpened);

  002c1	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  002c4	8b 10		 mov	 edx, DWORD PTR [eax]
  002c6	33 c9		 xor	 ecx, ecx
  002c8	8a 48 24	 mov	 cl, BYTE PTR [eax+36]
  002cb	51		 push	 ecx
  002cc	52		 push	 edx
  002cd	8b cb		 mov	 ecx, ebx
  002cf	e8 00 00 00 00	 call	 ?SendCS_GATEADD_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_GATEADD_ACK
  002d4	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  002d7	84 c0		 test	 al, al
  002d9	75 3f		 jne	 SHORT $L168775
  002db	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  002de	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  002e1	84 c9		 test	 cl, cl
  002e3	75 18		 jne	 SHORT $L169130
  002e5	8b f0		 mov	 esi, eax
  002e7	8b 06		 mov	 eax, DWORD PTR [esi]
  002e9	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  002ec	84 c9		 test	 cl, cl
  002ee	75 2a		 jne	 SHORT $L168775

; 93   : 
; 94   : 		for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

$L168790:
  002f0	8b f0		 mov	 esi, eax
  002f2	8b 06		 mov	 eax, DWORD PTR [esi]
  002f4	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  002f7	84 c9		 test	 cl, cl
  002f9	74 f5		 je	 SHORT $L168790
  002fb	eb 1d		 jmp	 SHORT $L168775
$L169130:
  002fd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00300	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00303	84 c9		 test	 cl, cl
  00305	75 11		 jne	 SHORT $L168778
$L168777:
  00307	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0030a	75 0c		 jne	 SHORT $L168778
  0030c	8b f0		 mov	 esi, eax
  0030e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00311	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00314	84 c9		 test	 cl, cl
  00316	74 ef		 je	 SHORT $L168777
$L168778:
  00318	8b f0		 mov	 esi, eax
$L168775:
  0031a	3b 75 44	 cmp	 esi, DWORD PTR [ebp+68]
  0031d	75 a2		 jne	 SHORT $L168765
$L152850:

; 96   : 
; 97   : 		for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

  0031f	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  00322	8b 30		 mov	 esi, DWORD PTR [eax]
  00324	3b f0		 cmp	 esi, eax
  00326	74 67		 je	 SHORT $L152874
  00328	8b 7c 24 28	 mov	 edi, DWORD PTR _dwTick$[esp+20]
  0032c	8d 64 24 00	 npad	 4
$L169076:

; 98   : 			pPlayer->SendCS_ADDSELFOBJ_ACK( (*itSELF).second, FALSE, dwTick);

  00330	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00333	57		 push	 edi
  00334	6a 00		 push	 0
  00336	50		 push	 eax
  00337	8b cb		 mov	 ecx, ebx
  00339	e8 00 00 00 00	 call	 ?SendCS_ADDSELFOBJ_ACK@CTPlayer@@QAEXPAVCTSelfObj@@EK@Z ; CTPlayer::SendCS_ADDSELFOBJ_ACK
  0033e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00341	84 c0		 test	 al, al
  00343	75 45		 jne	 SHORT $L169052
  00345	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00348	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0034b	84 c9		 test	 cl, cl
  0034d	75 1e		 jne	 SHORT $L169133
  0034f	8b f0		 mov	 esi, eax
  00351	8b 06		 mov	 eax, DWORD PTR [esi]
  00353	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00356	84 c9		 test	 cl, cl
  00358	75 30		 jne	 SHORT $L169052
  0035a	8d 9b 00 00 00
	00		 npad	 6

; 96   : 
; 97   : 		for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

$L169073:
  00360	8b f0		 mov	 esi, eax
  00362	8b 06		 mov	 eax, DWORD PTR [esi]
  00364	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00367	84 c9		 test	 cl, cl
  00369	74 f5		 je	 SHORT $L169073
  0036b	eb 1d		 jmp	 SHORT $L169052
$L169133:
  0036d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00370	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00373	84 c9		 test	 cl, cl
  00375	75 11		 jne	 SHORT $L169055
$L169054:
  00377	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0037a	75 0c		 jne	 SHORT $L169055
  0037c	8b f0		 mov	 esi, eax
  0037e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00381	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00384	84 c9		 test	 cl, cl
  00386	74 ef		 je	 SHORT $L169054
$L169055:
  00388	8b f0		 mov	 esi, eax
$L169052:
  0038a	3b 75 14	 cmp	 esi, DWORD PTR [ebp+20]
  0038d	75 a1		 jne	 SHORT $L169076
$L152874:
  0038f	5f		 pop	 edi
  00390	5e		 pop	 esi
  00391	5d		 pop	 ebp
  00392	5b		 pop	 ebx

; 99   : 	}
; 100  : }

  00393	83 c4 08	 add	 esp, 8
  00396	c2 10 00	 ret	 16			; 00000010H
?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z ENDP	; CTCell::EnterPlayer
_TEXT	ENDS
PUBLIC	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z	; CTCell::LeaveChannel
EXTRN	?SendCS_GATEDEL_ACK@CTPlayer@@QAEXK@Z:NEAR	; CTPlayer::SendCS_GATEDEL_ACK
EXTRN	?SendCS_SWITCHDEL_ACK@CTPlayer@@QAEXK@Z:NEAR	; CTPlayer::SendCS_SWITCHDEL_ACK
; Function compile flags: /Ogty
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
_itMON$ = 8						; size = 4
_pPlayer$ = 8						; size = 4
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z PROC NEAR	; CTCell::LeaveChannel, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	57		 push	 edi

; 179  : 	MAPTSELFOBJ::iterator itSELF;
; 180  : 	MAPTMONSTER::iterator itMON;
; 181  : 
; 182  : 	MAPTSWITCH::iterator itSW;
; 183  : 	MAPTGATE::iterator itGT;
; 184  : 
; 185  : 	MAPTGODTOWER::iterator itGTW;
; 186  : 	MAPTGODBALL::iterator  itGB;
; 187  : 
; 188  : 	if(IsMainCell(pPlayer->m_bChannel))

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _pPlayer$[esp+4]
  00006	8a 87 74 01 01
	00		 mov	 al, BYTE PTR [edi+65908]
  0000c	3c 1e		 cmp	 al, 30			; 0000001eH
  0000e	8b e9		 mov	 ebp, ecx
  00010	0f 84 b2 01 00
	00		 je	 $L153299
  00016	0f b6 c0	 movzx	 eax, al
  00019	8a 8c 28 5a 01
	00 00		 mov	 cl, BYTE PTR [eax+ebp+346]
  00020	03 c5		 add	 eax, ebp
  00022	53		 push	 ebx
  00023	33 db		 xor	 ebx, ebx
  00025	3a cb		 cmp	 cl, bl
  00027	74 0c		 je	 SHORT $L170172
  00029	38 98 3c 01 00
	00		 cmp	 BYTE PTR [eax+316], bl
  0002f	0f 84 92 01 00
	00		 je	 $L170173
$L170172:

; 189  : 		return;
; 190  : 
; 191  : 	for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  00035	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  00038	56		 push	 esi
  00039	8b 30		 mov	 esi, DWORD PTR [eax]
  0003b	3b f0		 cmp	 esi, eax
  0003d	89 74 24 14	 mov	 DWORD PTR _itMON$[esp+12], esi
  00041	74 75		 je	 SHORT $L153280
  00043	eb 0b 8d a4 24
	00 00 00 00 8d
	64 24 00	 npad	 13
$L169274:

; 192  : 	{
; 193  : 		if( (*itMON).second->m_dwInvenLock == pPlayer->m_dwID )

  00050	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00053	8b 91 04 01 00
	00		 mov	 edx, DWORD PTR [ecx+260]
  00059	3b 97 44 01 01
	00		 cmp	 edx, DWORD PTR [edi+65860]
  0005f	75 0f		 jne	 SHORT $L153281

; 194  : 		{
; 195  : 			pPlayer->m_dwLockedMonID = 0;

  00061	89 9f 14 04 01
	00		 mov	 DWORD PTR [edi+66580], ebx

; 196  : 			(*itMON).second->m_dwInvenLock = 0;

  00067	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0006a	89 98 04 01 00
	00		 mov	 DWORD PTR [eax+260], ebx
$L153281:

; 197  : 		}
; 198  : 
; 199  : 		pPlayer->SendCS_DELMON_ACK( (*itMON).second->m_dwID, FALSE);

  00070	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00073	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00076	53		 push	 ebx
  00077	52		 push	 edx
  00078	8b cf		 mov	 ecx, edi
  0007a	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK

; 200  : 
; 201  : 		(*itMON).second->LeaveAggro(
; 202  : 			pPlayer->m_dwID,
; 203  : 			pPlayer->m_dwID,
; 204  : 			OT_PC);

  0007f	8b 87 44 01 01
	00		 mov	 eax, DWORD PTR [edi+65860]
  00085	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00088	6a 01		 push	 1
  0008a	50		 push	 eax
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 205  : 
; 206  : 		(*itMON).second->OnEvent(
; 207  : 			AT_LEAVE, 0,
; 208  : 			pPlayer->m_dwID,
; 209  : 			pPlayer->m_dwID,
; 210  : 			OT_PC);

  00091	8b 87 44 01 01
	00		 mov	 eax, DWORD PTR [edi+65860]
  00097	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0009a	6a 01		 push	 1
  0009c	50		 push	 eax
  0009d	50		 push	 eax
  0009e	53		 push	 ebx
  0009f	6a 08		 push	 8
  000a1	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  000a6	8d 4c 24 14	 lea	 ecx, DWORD PTR _itMON$[esp+12]
  000aa	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  000af	8b 74 24 14	 mov	 esi, DWORD PTR _itMON$[esp+12]
  000b3	3b 75 20	 cmp	 esi, DWORD PTR [ebp+32]
  000b6	75 98		 jne	 SHORT $L169274
$L153280:

; 211  : 	}
; 212  : 
; 213  : 	for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

  000b8	8b 45 38	 mov	 eax, DWORD PTR [ebp+56]
  000bb	8b 30		 mov	 esi, DWORD PTR [eax]
  000bd	3b f0		 cmp	 esi, eax
  000bf	74 4c		 je	 SHORT $L153287
$L169593:

; 214  : 		pPlayer->SendCS_SWITCHDEL_ACK( (*itSW).second->m_dwSwitchID);

  000c1	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	51		 push	 ecx
  000c7	8b cf		 mov	 ecx, edi
  000c9	e8 00 00 00 00	 call	 ?SendCS_SWITCHDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_SWITCHDEL_ACK
  000ce	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  000d1	75 35		 jne	 SHORT $L169563
  000d3	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d6	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000d9	75 14		 jne	 SHORT $L170155
  000db	8b f0		 mov	 esi, eax
  000dd	8b 06		 mov	 eax, DWORD PTR [esi]
  000df	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000e2	75 24		 jne	 SHORT $L169563

; 211  : 	}
; 212  : 
; 213  : 	for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

$L169577:
  000e4	8b f0		 mov	 esi, eax
  000e6	8b 06		 mov	 eax, DWORD PTR [esi]
  000e8	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000eb	74 f7		 je	 SHORT $L169577
  000ed	eb 19		 jmp	 SHORT $L169563
$L170155:
  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000f5	75 0f		 jne	 SHORT $L169566
$L169565:
  000f7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000fa	75 0a		 jne	 SHORT $L169566
  000fc	8b f0		 mov	 esi, eax
  000fe	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00101	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00104	74 f1		 je	 SHORT $L169565
$L169566:
  00106	8b f0		 mov	 esi, eax
$L169563:
  00108	3b 75 38	 cmp	 esi, DWORD PTR [ebp+56]
  0010b	75 b4		 jne	 SHORT $L169593
$L153287:

; 215  : 
; 216  : 	for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

  0010d	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  00110	8b 30		 mov	 esi, DWORD PTR [eax]
  00112	3b f0		 cmp	 esi, eax
  00114	74 53		 je	 SHORT $L153293
$L169814:

; 217  : 		pPlayer->SendCS_GATEDEL_ACK( (*itGT).second->m_dwGateID);

  00116	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00119	8b 02		 mov	 eax, DWORD PTR [edx]
  0011b	50		 push	 eax
  0011c	8b cf		 mov	 ecx, edi
  0011e	e8 00 00 00 00	 call	 ?SendCS_GATEDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_GATEDEL_ACK
  00123	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00126	75 3c		 jne	 SHORT $L169825
  00128	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0012b	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0012e	75 1b		 jne	 SHORT $L170158
  00130	8b f0		 mov	 esi, eax
  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00137	75 2b		 jne	 SHORT $L169825
  00139	8d a4 24 00 00
	00 00		 npad	 7

; 215  : 
; 216  : 	for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

$L169839:
  00140	8b f0		 mov	 esi, eax
  00142	8b 06		 mov	 eax, DWORD PTR [esi]
  00144	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00147	74 f7		 je	 SHORT $L169839
  00149	eb 19		 jmp	 SHORT $L169825
$L170158:
  0014b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0014e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00151	75 0f		 jne	 SHORT $L169828
$L169827:
  00153	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00156	75 0a		 jne	 SHORT $L169828
  00158	8b f0		 mov	 esi, eax
  0015a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0015d	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00160	74 f1		 je	 SHORT $L169827
$L169828:
  00162	8b f0		 mov	 esi, eax
$L169825:
  00164	3b 75 44	 cmp	 esi, DWORD PTR [ebp+68]
  00167	75 ad		 jne	 SHORT $L169814
$L153293:

; 218  : 
; 219  : 	for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

  00169	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0016c	8b 30		 mov	 esi, DWORD PTR [eax]
  0016e	3b f0		 cmp	 esi, eax
  00170	74 54		 je	 SHORT $L170174
$L170110:

; 220  : 		pPlayer->SendCS_DELSELFOBJ_ACK( (*itSELF).second->m_dwID, FALSE);

  00172	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00175	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00178	53		 push	 ebx
  00179	52		 push	 edx
  0017a	8b cf		 mov	 ecx, edi
  0017c	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
  00181	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00184	75 3b		 jne	 SHORT $L170096
  00186	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00189	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0018c	75 14		 jne	 SHORT $L170161
  0018e	8b f0		 mov	 esi, eax
  00190	8b 06		 mov	 eax, DWORD PTR [esi]
  00192	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00195	75 2a		 jne	 SHORT $L170096

; 218  : 
; 219  : 	for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

$L170075:
  00197	8b f0		 mov	 esi, eax
  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0019e	74 f7		 je	 SHORT $L170075
  001a0	eb 1f		 jmp	 SHORT $L170096
$L170161:
  001a2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001a5	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001a8	75 15		 jne	 SHORT $L170099
  001aa	8d 9b 00 00 00
	00		 npad	 6
$L170098:
  001b0	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001b3	75 0a		 jne	 SHORT $L170099
  001b5	8b f0		 mov	 esi, eax
  001b7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ba	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001bd	74 f1		 je	 SHORT $L170098
$L170099:
  001bf	8b f0		 mov	 esi, eax
$L170096:
  001c1	3b 75 14	 cmp	 esi, DWORD PTR [ebp+20]
  001c4	75 ac		 jne	 SHORT $L170110
$L170174:
  001c6	5e		 pop	 esi
$L170173:
  001c7	5b		 pop	 ebx
$L153299:
  001c8	5f		 pop	 edi
  001c9	5d		 pop	 ebp

; 221  : }

  001ca	c2 04 00	 ret	 4
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z ENDP		; CTCell::LeaveChannel
_TEXT	ENDS
PUBLIC	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z	; CTCell::LeaveChannel
; Function compile flags: /Ogty
;	COMDAT ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_itCHAR$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
_bExitMap$ = 12						; size = 1
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z PROC NEAR	; CTCell::LeaveChannel, COMDAT
; _this$ = ecx

; 250  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	8b d1		 mov	 edx, ecx

; 251  : 	MAPTRECALLMON::iterator itREC;
; 252  : 	MAPTSELFOBJ::iterator itSELF;
; 253  : 
; 254  : 	MAPTMONSTER::iterator itMON;
; 255  : 	MAPPLAYER::iterator itCHAR;
; 256  : 
; 257  : 	MAPTSWITCH::iterator itSW;
; 258  : 	MAPTGATE::iterator itGT;
; 259  : 
; 260  : 	for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00005	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00008	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000a	53		 push	 ebx
  0000b	55		 push	 ebp
  0000c	8b 6c 24 14	 mov	 ebp, DWORD PTR _pPlayer$[esp+12]
  00010	33 db		 xor	 ebx, ebx
  00012	3b c1		 cmp	 eax, ecx
  00014	56		 push	 esi
  00015	89 54 24 0c	 mov	 DWORD PTR _this$[esp+20], edx
  00019	89 44 24 10	 mov	 DWORD PTR _itCHAR$[esp+20], eax
  0001d	74 7d		 je	 SHORT $L153339
  0001f	57		 push	 edi
  00020	8b 7c 24 20	 mov	 edi, DWORD PTR _bExitMap$[esp+20]
  00024	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$L170287:

; 261  : 	{
; 262  : 		CTPlayer *pChar = (*itCHAR).second;

  00030	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 263  : 
; 264  : 		if( pPlayer->m_bChannel != pChar->m_bChannel )

  00033	8a 85 74 01 01
	00		 mov	 al, BYTE PTR [ebp+65908]
  00039	3a 86 74 01 01
	00		 cmp	 al, BYTE PTR [esi+65908]
  0003f	74 44		 je	 SHORT $L153338

; 265  : 		{
; 266  : 			pChar->SendCS_LEAVE_ACK( pPlayer->m_dwID, bExitMap);

  00041	8b 8d 44 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65860]
  00047	57		 push	 edi
  00048	51		 push	 ecx
  00049	8b ce		 mov	 ecx, esi
  0004b	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK

; 267  : 
; 268  : 			if(!IsMainCell(pPlayer->m_bChannel))

  00050	8a 85 74 01 01
	00		 mov	 al, BYTE PTR [ebp+65908]
  00056	3c 1e		 cmp	 al, 30			; 0000001eH
  00058	74 2b		 je	 SHORT $L153338
  0005a	0f b6 d0	 movzx	 edx, al
  0005d	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+24]
  00061	8a 8c 10 5a 01
	00 00		 mov	 cl, BYTE PTR [eax+edx+346]
  00068	03 c2		 add	 eax, edx
  0006a	3a cb		 cmp	 cl, bl
  0006c	74 08		 je	 SHORT $L171780
  0006e	38 98 3c 01 00
	00		 cmp	 BYTE PTR [eax+316], bl
  00074	74 0f		 je	 SHORT $L153338
$L171780:

; 269  : 				pPlayer->SendCS_LEAVE_ACK( pChar->m_dwID, FALSE);

  00076	8b 8e 44 01 01
	00		 mov	 ecx, DWORD PTR [esi+65860]
  0007c	53		 push	 ebx
  0007d	51		 push	 ecx
  0007e	8b cd		 mov	 ecx, ebp
  00080	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK
$L153338:
  00085	8d 4c 24 14	 lea	 ecx, DWORD PTR _itCHAR$[esp+24]
  00089	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  0008e	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  00092	8b 44 24 14	 mov	 eax, DWORD PTR _itCHAR$[esp+24]
  00096	3b 42 2c	 cmp	 eax, DWORD PTR [edx+44]
  00099	75 95		 jne	 SHORT $L170287
  0009b	5f		 pop	 edi
$L153339:

; 270  : 		}
; 271  : 	}
; 272  : 
; 273  : 	if(!IsMainCell(pPlayer->m_bChannel))

  0009c	8a 85 74 01 01
	00		 mov	 al, BYTE PTR [ebp+65908]
  000a2	3c 1e		 cmp	 al, 30			; 0000001eH
  000a4	0f 84 78 02 00
	00		 je	 $L153375
  000aa	0f b6 c0	 movzx	 eax, al
  000ad	8a 8c 10 5a 01
	00 00		 mov	 cl, BYTE PTR [eax+edx+346]
  000b4	03 c2		 add	 eax, edx
  000b6	3a cb		 cmp	 cl, bl
  000b8	74 0c		 je	 SHORT $L171781
  000ba	38 98 3c 01 00
	00		 cmp	 BYTE PTR [eax+316], bl
  000c0	0f 84 5c 02 00
	00		 je	 $L153375
$L171781:

; 274  : 	{
; 275  : 		for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  000c6	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000c9	8b 30		 mov	 esi, DWORD PTR [eax]
  000cb	3b f0		 cmp	 esi, eax
  000cd	0f 84 b0 00 00
	00		 je	 $L153349
  000d3	eb 0b 8d a4 24
	00 00 00 00 8d
	64 24 00	 npad	 13
$L170566:

; 276  : 		{
; 277  : 			if( (*itMON).second->m_dwInvenLock == pPlayer->m_dwID )

  000e0	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000e3	8b 91 04 01 00
	00		 mov	 edx, DWORD PTR [ecx+260]
  000e9	3b 95 44 01 01
	00		 cmp	 edx, DWORD PTR [ebp+65860]
  000ef	75 0f		 jne	 SHORT $L153350

; 278  : 			{
; 279  : 				pPlayer->m_dwLockedMonID = 0;

  000f1	89 9d 14 04 01
	00		 mov	 DWORD PTR [ebp+66580], ebx

; 280  : 				(*itMON).second->m_dwInvenLock = 0;

  000f7	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000fa	89 98 04 01 00
	00		 mov	 DWORD PTR [eax+260], ebx
$L153350:

; 281  : 			}
; 282  : 
; 283  : 			pPlayer->SendCS_DELMON_ACK( (*itMON).second->m_dwID, FALSE);

  00100	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00103	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00106	53		 push	 ebx
  00107	52		 push	 edx
  00108	8b cd		 mov	 ecx, ebp
  0010a	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK

; 284  : 
; 285  : 			(*itMON).second->LeaveAggro(
; 286  : 				pPlayer->m_dwID,
; 287  : 				pPlayer->m_dwID,
; 288  : 				OT_PC);

  0010f	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  00115	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00118	6a 01		 push	 1
  0011a	50		 push	 eax
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 289  : 
; 290  : 			(*itMON).second->OnEvent(
; 291  : 				AT_LEAVE, 0,
; 292  : 				pPlayer->m_dwID,
; 293  : 				pPlayer->m_dwID,
; 294  : 				OT_PC);

  00121	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  00127	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0012a	6a 01		 push	 1
  0012c	50		 push	 eax
  0012d	50		 push	 eax
  0012e	53		 push	 ebx
  0012f	6a 08		 push	 8
  00131	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  00136	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00139	75 39		 jne	 SHORT $L170536
  0013b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0013e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00141	75 18		 jne	 SHORT $L171751
  00143	8b f0		 mov	 esi, eax
  00145	8b 06		 mov	 eax, DWORD PTR [esi]
  00147	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0014a	75 28		 jne	 SHORT $L170536
  0014c	8d 64 24 00	 npad	 4

; 274  : 	{
; 275  : 		for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

$L170550:
  00150	8b f0		 mov	 esi, eax
  00152	8b 06		 mov	 eax, DWORD PTR [esi]
  00154	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00157	74 f7		 je	 SHORT $L170550
  00159	eb 19		 jmp	 SHORT $L170536
$L171751:
  0015b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0015e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00161	75 0f		 jne	 SHORT $L170539
$L170538:
  00163	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00166	75 0a		 jne	 SHORT $L170539
  00168	8b f0		 mov	 esi, eax
  0016a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0016d	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00170	74 f1		 je	 SHORT $L170538
$L170539:
  00172	8b f0		 mov	 esi, eax
$L170536:
  00174	8b 44 24 0c	 mov	 eax, DWORD PTR _this$[esp+20]
  00178	3b 70 20	 cmp	 esi, DWORD PTR [eax+32]
  0017b	0f 85 5f ff ff
	ff		 jne	 $L170566
  00181	8b d0		 mov	 edx, eax
$L153349:

; 295  : 		}
; 296  : 
; 297  : 		for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

  00183	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00186	8b 30		 mov	 esi, DWORD PTR [eax]
  00188	3b f0		 cmp	 esi, eax
  0018a	74 7a		 je	 SHORT $L153356
  0018c	8d 64 24 00	 npad	 4
$L170847:

; 298  : 			if( (*itREC).second->m_bMain && (*itREC).second->m_bChannel != pPlayer->m_bChannel )

  00190	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00193	38 98 7e 01 00
	00		 cmp	 BYTE PTR [eax+382], bl
  00199	74 25		 je	 SHORT $L153355
  0019b	8a 48 74	 mov	 cl, BYTE PTR [eax+116]
  0019e	3a 8d 74 01 01
	00		 cmp	 cl, BYTE PTR [ebp+65908]
  001a4	74 1a		 je	 SHORT $L153355

; 299  : 				pPlayer->SendCS_DELRECALLMON_ACK( (*itREC).second->m_dwHostID, (*itREC).second->m_dwID, FALSE);

  001a6	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001a9	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  001ac	8b 80 f8 00 00
	00		 mov	 eax, DWORD PTR [eax+248]
  001b2	53		 push	 ebx
  001b3	52		 push	 edx
  001b4	50		 push	 eax
  001b5	8b cd		 mov	 ecx, ebp
  001b7	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
  001bc	8b 54 24 0c	 mov	 edx, DWORD PTR _this$[esp+20]
$L153355:
  001c0	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  001c3	75 3c		 jne	 SHORT $L170858
  001c5	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001c8	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001cb	75 14		 jne	 SHORT $L171754
  001cd	8b f0		 mov	 esi, eax
  001cf	8b 06		 mov	 eax, DWORD PTR [esi]
  001d1	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001d4	75 2b		 jne	 SHORT $L170858

; 295  : 		}
; 296  : 
; 297  : 		for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

$L170879:
  001d6	8b f0		 mov	 esi, eax
  001d8	8b 06		 mov	 eax, DWORD PTR [esi]
  001da	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001dd	74 f7		 je	 SHORT $L170879
  001df	eb 20		 jmp	 SHORT $L170858
$L171754:
  001e1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001e4	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001e7	75 16		 jne	 SHORT $L170861
  001e9	8d a4 24 00 00
	00 00		 npad	 7
$L170860:
  001f0	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001f3	75 0a		 jne	 SHORT $L170861
  001f5	8b f0		 mov	 esi, eax
  001f7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001fa	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001fd	74 f1		 je	 SHORT $L170860
$L170861:
  001ff	8b f0		 mov	 esi, eax
$L170858:
  00201	3b 72 08	 cmp	 esi, DWORD PTR [edx+8]
  00204	75 8a		 jne	 SHORT $L170847
$L153356:

; 300  : 
; 301  : 		for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

  00206	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00209	8b 30		 mov	 esi, DWORD PTR [eax]
  0020b	3b f0		 cmp	 esi, eax
  0020d	74 53		 je	 SHORT $L153363
  0020f	90		 npad	 1
$L171188:

; 302  : 			pPlayer->SendCS_SWITCHDEL_ACK( (*itSW).second->m_dwSwitchID);

  00210	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00213	8b 11		 mov	 edx, DWORD PTR [ecx]
  00215	52		 push	 edx
  00216	8b cd		 mov	 ecx, ebp
  00218	e8 00 00 00 00	 call	 ?SendCS_SWITCHDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_SWITCHDEL_ACK
  0021d	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00220	75 35		 jne	 SHORT $L171177
  00222	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00225	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00228	75 14		 jne	 SHORT $L171757
  0022a	8b f0		 mov	 esi, eax
  0022c	8b 06		 mov	 eax, DWORD PTR [esi]
  0022e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00231	75 24		 jne	 SHORT $L171177

; 300  : 
; 301  : 		for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

$L171165:
  00233	8b f0		 mov	 esi, eax
  00235	8b 06		 mov	 eax, DWORD PTR [esi]
  00237	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0023a	74 f7		 je	 SHORT $L171165
  0023c	eb 19		 jmp	 SHORT $L171177
$L171757:
  0023e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00241	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00244	75 0f		 jne	 SHORT $L171180
$L171179:
  00246	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00249	75 0a		 jne	 SHORT $L171180
  0024b	8b f0		 mov	 esi, eax
  0024d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00250	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00253	74 f1		 je	 SHORT $L171179
$L171180:
  00255	8b f0		 mov	 esi, eax
$L171177:
  00257	8b 44 24 0c	 mov	 eax, DWORD PTR _this$[esp+20]
  0025b	3b 70 38	 cmp	 esi, DWORD PTR [eax+56]
  0025e	75 b0		 jne	 SHORT $L171188
  00260	8b d0		 mov	 edx, eax
$L153363:

; 303  : 
; 304  : 		for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

  00262	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00265	8b 30		 mov	 esi, DWORD PTR [eax]
  00267	3b f0		 cmp	 esi, eax
  00269	74 57		 je	 SHORT $L153369
  0026b	eb 03 8d 49 00	 npad	 5
$L171448:

; 305  : 			pPlayer->SendCS_GATEDEL_ACK( (*itGT).second->m_dwGateID);

  00270	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00273	8b 11		 mov	 edx, DWORD PTR [ecx]
  00275	52		 push	 edx
  00276	8b cd		 mov	 ecx, ebp
  00278	e8 00 00 00 00	 call	 ?SendCS_GATEDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_GATEDEL_ACK
  0027d	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00280	75 35		 jne	 SHORT $L171418
  00282	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00285	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00288	75 14		 jne	 SHORT $L171760
  0028a	8b f0		 mov	 esi, eax
  0028c	8b 06		 mov	 eax, DWORD PTR [esi]
  0028e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00291	75 24		 jne	 SHORT $L171418

; 303  : 
; 304  : 		for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

$L171432:
  00293	8b f0		 mov	 esi, eax
  00295	8b 06		 mov	 eax, DWORD PTR [esi]
  00297	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0029a	74 f7		 je	 SHORT $L171432
  0029c	eb 19		 jmp	 SHORT $L171418
$L171760:
  0029e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002a1	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002a4	75 0f		 jne	 SHORT $L171421
$L171420:
  002a6	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  002a9	75 0a		 jne	 SHORT $L171421
  002ab	8b f0		 mov	 esi, eax
  002ad	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  002b0	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002b3	74 f1		 je	 SHORT $L171420
$L171421:
  002b5	8b f0		 mov	 esi, eax
$L171418:
  002b7	8b 44 24 0c	 mov	 eax, DWORD PTR _this$[esp+20]
  002bb	3b 70 44	 cmp	 esi, DWORD PTR [eax+68]
  002be	75 b0		 jne	 SHORT $L171448
  002c0	8b d0		 mov	 edx, eax
$L153369:

; 306  : 
; 307  : 		for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

  002c2	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002c5	8b 30		 mov	 esi, DWORD PTR [eax]
  002c7	3b f0		 cmp	 esi, eax
  002c9	74 57		 je	 SHORT $L153375
  002cb	eb 03 8d 49 00	 npad	 5
$L171670:

; 308  : 			pPlayer->SendCS_DELSELFOBJ_ACK( (*itSELF).second->m_dwID, FALSE);

  002d0	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  002d3	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  002d6	53		 push	 ebx
  002d7	52		 push	 edx
  002d8	8b cd		 mov	 ecx, ebp
  002da	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
  002df	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  002e2	75 35		 jne	 SHORT $L171679
  002e4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  002e7	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002ea	75 14		 jne	 SHORT $L171763
  002ec	8b f0		 mov	 esi, eax
  002ee	8b 06		 mov	 eax, DWORD PTR [esi]
  002f0	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002f3	75 24		 jne	 SHORT $L171679

; 306  : 
; 307  : 		for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

$L171700:
  002f5	8b f0		 mov	 esi, eax
  002f7	8b 06		 mov	 eax, DWORD PTR [esi]
  002f9	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002fc	74 f7		 je	 SHORT $L171700
  002fe	eb 19		 jmp	 SHORT $L171679
$L171763:
  00300	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00303	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00306	75 0f		 jne	 SHORT $L171682
$L171681:
  00308	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0030b	75 0a		 jne	 SHORT $L171682
  0030d	8b f0		 mov	 esi, eax
  0030f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00312	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00315	74 f1		 je	 SHORT $L171681
$L171682:
  00317	8b f0		 mov	 esi, eax
$L171679:
  00319	8b 44 24 0c	 mov	 eax, DWORD PTR _this$[esp+20]
  0031d	3b 70 14	 cmp	 esi, DWORD PTR [eax+20]
  00320	75 ae		 jne	 SHORT $L171670
$L153375:
  00322	5e		 pop	 esi
  00323	5d		 pop	 ebp
  00324	5b		 pop	 ebx

; 309  : 	}
; 310  : }

  00325	83 c4 08	 add	 esp, 8
  00328	c2 08 00	 ret	 8
?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z ENDP		; CTCell::LeaveChannel
_TEXT	ENDS
PUBLIC	?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z	; CTCell::LeavePlayer
; Function compile flags: /Ogty
;	COMDAT ?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_itCHAR$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
_bExitMap$ = 12						; size = 1
?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z PROC NEAR	; CTCell::LeavePlayer, COMDAT
; _this$ = ecx

; 313  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	8b d1		 mov	 edx, ecx

; 314  : 	MAPTRECALLMON::iterator itREC;
; 315  : 	MAPTSELFOBJ::iterator itSELF;
; 316  : 
; 317  : 	MAPTMONSTER::iterator itMON;
; 318  : 	MAPPLAYER::iterator itCHAR;
; 319  : 
; 320  : 	MAPTSWITCH::iterator itSW;
; 321  : 	MAPTGATE::iterator itGT;
; 322  : 
; 323  : 	for( itCHAR = m_mapPLAYER.begin(); itCHAR != m_mapPLAYER.end(); itCHAR++)

  00006	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	55		 push	 ebp
  0000c	8b 6c 24 14	 mov	 ebp, DWORD PTR _pPlayer$[esp+12]
  00010	56		 push	 esi
  00011	33 db		 xor	 ebx, ebx
  00013	3b c1		 cmp	 eax, ecx
  00015	57		 push	 edi
  00016	89 54 24 10	 mov	 DWORD PTR _this$[esp+24], edx
  0001a	89 44 24 14	 mov	 DWORD PTR _itCHAR$[esp+24], eax
  0001e	74 4b		 je	 SHORT $L153392
  00020	8b 7c 24 20	 mov	 edi, DWORD PTR _bExitMap$[esp+20]
$L171889:

; 324  : 	{
; 325  : 		CTPlayer *pChar = (*itCHAR).second;

  00024	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 326  : 
; 327  : 		if(pChar->m_bMain)

  00027	38 9e a8 04 01
	00		 cmp	 BYTE PTR [esi+66728], bl
  0002d	74 0f		 je	 SHORT $L153394

; 328  : 			pPlayer->SendCS_LEAVE_ACK( pChar->m_dwID, FALSE);

  0002f	8b 86 44 01 01
	00		 mov	 eax, DWORD PTR [esi+65860]
  00035	53		 push	 ebx
  00036	50		 push	 eax
  00037	8b cd		 mov	 ecx, ebp
  00039	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK
$L153394:

; 329  : 
; 330  : 		if(pPlayer->m_bMain)

  0003e	38 9d a8 04 01
	00		 cmp	 BYTE PTR [ebp+66728], bl
  00044	74 0f		 je	 SHORT $L153391

; 331  : 			pChar->SendCS_LEAVE_ACK( pPlayer->m_dwID, bExitMap);

  00046	8b 8d 44 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65860]
  0004c	57		 push	 edi
  0004d	51		 push	 ecx
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?SendCS_LEAVE_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_LEAVE_ACK
$L153391:
  00055	8d 4c 24 14	 lea	 ecx, DWORD PTR _itCHAR$[esp+24]
  00059	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  0005e	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR _itCHAR$[esp+24]
  00066	3b 42 2c	 cmp	 eax, DWORD PTR [edx+44]
  00069	75 b9		 jne	 SHORT $L171889
$L153392:

; 332  : 	}
; 333  : 
; 334  : 	for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

  0006b	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0006e	8b 30		 mov	 esi, DWORD PTR [eax]
  00070	3b f0		 cmp	 esi, eax
  00072	0f 84 9d 00 00
	00		 je	 $L153401
  00078	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L172152:

; 335  : 	{
; 336  : 		CTMonster * pMon = (*itMON).second;

  00080	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]

; 337  : 
; 338  : 		if( pMon->m_dwInvenLock == pPlayer->m_dwID )

  00083	8b 87 04 01 00
	00		 mov	 eax, DWORD PTR [edi+260]
  00089	3b 85 44 01 01
	00		 cmp	 eax, DWORD PTR [ebp+65860]
  0008f	75 0c		 jne	 SHORT $L153403

; 339  : 		{
; 340  : 			pPlayer->m_dwLockedMonID = 0;

  00091	89 9d 14 04 01
	00		 mov	 DWORD PTR [ebp+66580], ebx

; 341  : 			pMon->m_dwInvenLock = 0;

  00097	89 9f 04 01 00
	00		 mov	 DWORD PTR [edi+260], ebx
$L153403:

; 342  : 		}
; 343  : 
; 344  : 		pPlayer->SendCS_DELMON_ACK( pMon->m_dwID, FALSE);

  0009d	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  000a0	53		 push	 ebx
  000a1	51		 push	 ecx
  000a2	8b cd		 mov	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 ?SendCS_DELMON_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELMON_ACK

; 345  : 
; 346  : 		pMon->LeaveAggro(
; 347  : 			pPlayer->m_dwID,
; 348  : 			pPlayer->m_dwID,
; 349  : 			OT_PC);

  000a9	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  000af	6a 01		 push	 1
  000b1	50		 push	 eax
  000b2	50		 push	 eax
  000b3	8b cf		 mov	 ecx, edi
  000b5	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro

; 350  : 
; 351  : 		pMon->OnEvent(
; 352  : 			AT_LEAVE, 0,
; 353  : 			pPlayer->m_dwID,
; 354  : 			pPlayer->m_dwID,
; 355  : 			OT_PC);

  000ba	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  000c0	6a 01		 push	 1
  000c2	50		 push	 eax
  000c3	50		 push	 eax
  000c4	53		 push	 ebx
  000c5	6a 08		 push	 8
  000c7	8b cf		 mov	 ecx, edi
  000c9	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  000ce	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  000d1	75 35		 jne	 SHORT $L172132
  000d3	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d6	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000d9	75 14		 jne	 SHORT $L173263
  000db	8b f0		 mov	 esi, eax
  000dd	8b 06		 mov	 eax, DWORD PTR [esi]
  000df	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000e2	75 24		 jne	 SHORT $L172132

; 332  : 	}
; 333  : 
; 334  : 	for( itMON = m_mapMONSTER.begin(); itMON != m_mapMONSTER.end(); itMON++)

$L172146:
  000e4	8b f0		 mov	 esi, eax
  000e6	8b 06		 mov	 eax, DWORD PTR [esi]
  000e8	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000eb	74 f7		 je	 SHORT $L172146
  000ed	eb 19		 jmp	 SHORT $L172132
$L173263:
  000ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f2	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000f5	75 0f		 jne	 SHORT $L172135
$L172134:
  000f7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000fa	75 0a		 jne	 SHORT $L172135
  000fc	8b f0		 mov	 esi, eax
  000fe	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00101	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00104	74 f1		 je	 SHORT $L172134
$L172135:
  00106	8b f0		 mov	 esi, eax
$L172132:
  00108	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  0010c	3b 72 20	 cmp	 esi, DWORD PTR [edx+32]
  0010f	0f 85 6b ff ff
	ff		 jne	 $L172152
$L153401:

; 356  : 	}
; 357  : 
; 358  : 	for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

  00115	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00118	8b 30		 mov	 esi, DWORD PTR [eax]
  0011a	3b f0		 cmp	 esi, eax
  0011c	74 68		 je	 SHORT $L153409
  0011e	8b ff		 npad	 2
$L172412:

; 359  : 		if((*itREC).second->m_bMain)

  00120	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00123	38 98 7e 01 00
	00		 cmp	 BYTE PTR [eax+382], bl
  00129	74 17		 je	 SHORT $L153408

; 360  : 			pPlayer->SendCS_DELRECALLMON_ACK( (*itREC).second->m_dwHostID, (*itREC).second->m_dwID, FALSE);

  0012b	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0012e	8b 90 f8 00 00
	00		 mov	 edx, DWORD PTR [eax+248]
  00134	53		 push	 ebx
  00135	51		 push	 ecx
  00136	52		 push	 edx
  00137	8b cd		 mov	 ecx, ebp
  00139	e8 00 00 00 00	 call	 ?SendCS_DELRECALLMON_ACK@CTPlayer@@QAEXKKE@Z ; CTPlayer::SendCS_DELRECALLMON_ACK
  0013e	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
$L153408:
  00142	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00145	75 3a		 jne	 SHORT $L172382
  00147	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0014a	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0014d	75 14		 jne	 SHORT $L173266
  0014f	8b f0		 mov	 esi, eax
  00151	8b 06		 mov	 eax, DWORD PTR [esi]
  00153	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00156	75 29		 jne	 SHORT $L172382

; 356  : 	}
; 357  : 
; 358  : 	for( itREC = m_mapRECALLMON.begin(); itREC != m_mapRECALLMON.end(); itREC++)

$L172403:
  00158	8b f0		 mov	 esi, eax
  0015a	8b 06		 mov	 eax, DWORD PTR [esi]
  0015c	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0015f	74 f7		 je	 SHORT $L172403
  00161	eb 1e		 jmp	 SHORT $L172382
$L173266:
  00163	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00166	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00169	75 14		 jne	 SHORT $L172385
  0016b	eb 03 8d 49 00	 npad	 5
$L172384:
  00170	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00173	75 0a		 jne	 SHORT $L172385
  00175	8b f0		 mov	 esi, eax
  00177	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0017a	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0017d	74 f1		 je	 SHORT $L172384
$L172385:
  0017f	8b f0		 mov	 esi, eax
$L172382:
  00181	3b 72 08	 cmp	 esi, DWORD PTR [edx+8]
  00184	75 9a		 jne	 SHORT $L172412
$L153409:

; 361  : 
; 362  : 	for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

  00186	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00189	8b 30		 mov	 esi, DWORD PTR [eax]
  0018b	3b f0		 cmp	 esi, eax
  0018d	74 51		 je	 SHORT $L153416
  0018f	90		 npad	 1
$L172694:

; 363  : 		pPlayer->SendCS_SWITCHDEL_ACK( (*itSW).second->m_dwSwitchID);

  00190	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00193	8b 08		 mov	 ecx, DWORD PTR [eax]
  00195	51		 push	 ecx
  00196	8b cd		 mov	 ecx, ebp
  00198	e8 00 00 00 00	 call	 ?SendCS_SWITCHDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_SWITCHDEL_ACK
  0019d	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  001a0	75 35		 jne	 SHORT $L172671
  001a2	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001a5	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001a8	75 14		 jne	 SHORT $L173269
  001aa	8b f0		 mov	 esi, eax
  001ac	8b 06		 mov	 eax, DWORD PTR [esi]
  001ae	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001b1	75 24		 jne	 SHORT $L172671

; 361  : 
; 362  : 	for( itSW = m_mapSWITCH.begin(); itSW != m_mapSWITCH.end(); itSW++)

$L172685:
  001b3	8b f0		 mov	 esi, eax
  001b5	8b 06		 mov	 eax, DWORD PTR [esi]
  001b7	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001ba	74 f7		 je	 SHORT $L172685
  001bc	eb 19		 jmp	 SHORT $L172671
$L173269:
  001be	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001c1	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001c4	75 0f		 jne	 SHORT $L172674
$L172673:
  001c6	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001c9	75 0a		 jne	 SHORT $L172674
  001cb	8b f0		 mov	 esi, eax
  001cd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001d0	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001d3	74 f1		 je	 SHORT $L172673
$L172674:
  001d5	8b f0		 mov	 esi, eax
$L172671:
  001d7	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  001db	3b 72 38	 cmp	 esi, DWORD PTR [edx+56]
  001de	75 b0		 jne	 SHORT $L172694
$L153416:

; 364  : 
; 365  : 	for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

  001e0	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  001e3	8b 30		 mov	 esi, DWORD PTR [eax]
  001e5	3b f0		 cmp	 esi, eax
  001e7	74 57		 je	 SHORT $L153422
  001e9	8d a4 24 00 00
	00 00		 npad	 7
$L172922:

; 366  : 		pPlayer->SendCS_GATEDEL_ACK( (*itGT).second->m_dwGateID);

  001f0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f5	51		 push	 ecx
  001f6	8b cd		 mov	 ecx, ebp
  001f8	e8 00 00 00 00	 call	 ?SendCS_GATEDEL_ACK@CTPlayer@@QAEXK@Z ; CTPlayer::SendCS_GATEDEL_ACK
  001fd	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00200	75 35		 jne	 SHORT $L172933
  00202	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00205	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00208	75 14		 jne	 SHORT $L173272
  0020a	8b f0		 mov	 esi, eax
  0020c	8b 06		 mov	 eax, DWORD PTR [esi]
  0020e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00211	75 24		 jne	 SHORT $L172933

; 364  : 
; 365  : 	for( itGT = m_mapGATE.begin(); itGT != m_mapGATE.end(); itGT++)

$L172947:
  00213	8b f0		 mov	 esi, eax
  00215	8b 06		 mov	 eax, DWORD PTR [esi]
  00217	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0021a	74 f7		 je	 SHORT $L172947
  0021c	eb 19		 jmp	 SHORT $L172933
$L173272:
  0021e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00221	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00224	75 0f		 jne	 SHORT $L172936
$L172935:
  00226	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00229	75 0a		 jne	 SHORT $L172936
  0022b	8b f0		 mov	 esi, eax
  0022d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00230	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00233	74 f1		 je	 SHORT $L172935
$L172936:
  00235	8b f0		 mov	 esi, eax
$L172933:
  00237	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  0023b	3b 72 44	 cmp	 esi, DWORD PTR [edx+68]
  0023e	75 b0		 jne	 SHORT $L172922
$L153422:

; 367  : 
; 368  : 	for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

  00240	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00243	8b 30		 mov	 esi, DWORD PTR [eax]
  00245	3b f0		 cmp	 esi, eax
  00247	74 59		 je	 SHORT $L153428
  00249	8d a4 24 00 00
	00 00		 npad	 7
$L173218:

; 369  : 		pPlayer->SendCS_DELSELFOBJ_ACK( (*itSELF).second->m_dwID, FALSE);

  00250	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00253	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00256	53		 push	 ebx
  00257	51		 push	 ecx
  00258	8b cd		 mov	 ecx, ebp
  0025a	e8 00 00 00 00	 call	 ?SendCS_DELSELFOBJ_ACK@CTPlayer@@QAEXKE@Z ; CTPlayer::SendCS_DELSELFOBJ_ACK
  0025f	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00262	75 35		 jne	 SHORT $L173201
  00264	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00267	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0026a	75 14		 jne	 SHORT $L173275
  0026c	8b f0		 mov	 esi, eax
  0026e	8b 06		 mov	 eax, DWORD PTR [esi]
  00270	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00273	75 24		 jne	 SHORT $L173201

; 367  : 
; 368  : 	for( itSELF = m_mapSELFOBJ.begin(); itSELF != m_mapSELFOBJ.end(); itSELF++)

$L173182:
  00275	8b f0		 mov	 esi, eax
  00277	8b 06		 mov	 eax, DWORD PTR [esi]
  00279	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0027c	74 f7		 je	 SHORT $L173182
  0027e	eb 19		 jmp	 SHORT $L173201
$L173275:
  00280	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00283	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00286	75 0f		 jne	 SHORT $L173204
$L173203:
  00288	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0028b	75 0a		 jne	 SHORT $L173204
  0028d	8b f0		 mov	 esi, eax
  0028f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00292	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00295	74 f1		 je	 SHORT $L173203
$L173204:
  00297	8b f0		 mov	 esi, eax
$L173201:
  00299	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+24]
  0029d	3b 72 14	 cmp	 esi, DWORD PTR [edx+20]
  002a0	75 ae		 jne	 SHORT $L173218
$L153428:
  002a2	5f		 pop	 edi
  002a3	5e		 pop	 esi
  002a4	5d		 pop	 ebp
  002a5	5b		 pop	 ebx

; 370  : }

  002a6	83 c4 08	 add	 esp, 8
  002a9	c2 08 00	 ret	 8
?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z ENDP		; CTCell::LeavePlayer
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L174066:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L174066
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L174141:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L174141
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174244 DD	0ffffffffH
	DD	FLAT:$L174145
$T174242 DD	019930520H
	DD	01H
	DD	FLAT:$T174244
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174145:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174242
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174254
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174254:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L174342
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L174342:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174368
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174368:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L174456
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L174456:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T174969 DD	0ffffffffH
	DD	FLAT:$L174484
$T174961 DD	019930520H
	DD	01H
	DD	FLAT:$T174969
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T174479 = -80						; size = 28
$T174478 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L153657

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T174479[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T174479[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T174479[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T174479[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T174479[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T174478[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T174478[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T174478[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L174970:
$L153657:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L153665

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L174964
$L153665:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L153667

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L174964
$L153667:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L153669
$L174964:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L153670

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153670:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L153671

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L153674
$L153671:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L153673

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L153674
$L153673:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L153674:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L153675

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L174480
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L174481
$L174480:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L174481:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L153675:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L174797

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L174482
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L174797
$L174482:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L174797
$L153669:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L153678

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L153679
$L153678:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L153680

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153680:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L153679:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L153681

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L153684
$L153681:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L153683

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L153684
$L153683:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L153684:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L174797:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L153685

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L153688
  0018e	8b ff		 npad	 2
$L153686:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L153688

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L153689

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L153690

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153690:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L174967

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L153693
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L174968
$L153693:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L153695

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153695:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L153688
$L153689:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L153697

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L153697:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L174967

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L153700
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L153700
$L174968:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L174967:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L153686

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L153688
$L153700:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L153702

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L153702:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
$L153688:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L153685:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L153703

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L153703:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L174966:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174484:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T174479[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174961
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
$T175075 DD	0ffffffffH
	DD	FLAT:$L174976
$T175073 DD	019930520H
	DD	01H
	DD	FLAT:$T175075
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174976:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175073
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T175576 DD	0ffffffffH
	DD	FLAT:$L175091
$T175568 DD	019930520H
	DD	01H
	DD	FLAT:$T175576
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T175086 = -80						; size = 28
$T175085 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L153766

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T175086[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T175086[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T175086[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T175086[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T175086[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T175085[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T175085[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T175085[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L175577:
$L153766:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L153774

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L175571
$L153774:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L153776

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L175571
$L153776:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L153778
$L175571:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L153779

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153779:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L153780

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L153783
$L153780:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L153782

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L153783
$L153782:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L153783:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L153784

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L175087
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L175088
$L175087:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L175088:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L153784:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L175405

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L175089
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L175405
$L175089:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L175405
$L153778:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L153787

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L153788
$L153787:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L153789

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153789:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L153788:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L153790

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L153793
$L153790:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L153792

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L153793
$L153792:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L153793:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L175405:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L153794

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L153797
  0018e	8b ff		 npad	 2
$L153795:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L153797

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L153798

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L153799

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153799:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L175574

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L153802
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L175575
$L153802:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L153804

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153804:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L153797
$L153798:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L153806

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L153806:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L175574

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L153809
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L153809
$L175575:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L175574:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L153795

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L153797
$L153809:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L153811

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L153811:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate
$L153797:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L153794:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L153812

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L153812:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L175573:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175091:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T175086[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175568
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T176074 DD	0ffffffffH
	DD	FLAT:$L175589
$T176066 DD	019930520H
	DD	01H
	DD	FLAT:$T176074
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T175584 = -80						; size = 28
$T175583 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L153875

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T175584[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T175584[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T175584[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T175584[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T175584[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T175583[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T175583[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T175583[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L176075:
$L153875:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L153883

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L176069
$L153883:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L153885

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L176069
$L153885:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L153887
$L176069:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L153888

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153888:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L153889

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L153892
$L153889:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L153891

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L153892
$L153891:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L153892:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L153893

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L175585
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L175586
$L175585:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L175586:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L153893:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L175902

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L175587
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L175902
$L175587:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L175902
$L153887:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L153896

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L153897
$L153896:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L153898

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153898:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L153897:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L153899

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L153902
$L153899:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L153901

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L153902
$L153901:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L153902:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L175902:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L153903

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L153906
  0018e	8b ff		 npad	 2
$L153904:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L153906

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L153907

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L153908

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153908:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L176072

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L153911
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L176073
$L153911:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L153913

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L153913:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L153906
$L153907:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L153915

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L153915:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L176072

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L153918
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L153918
$L176073:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L176072:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L153904

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L153906
$L153918:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L153920

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L153920:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate
$L153906:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L153903:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L153921

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L153921:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L176071:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175589:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T175584[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176066
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T176572 DD	0ffffffffH
	DD	FLAT:$L176087
$T176564 DD	019930520H
	DD	01H
	DD	FLAT:$T176572
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T176082 = -80						; size = 28
$T176081 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L153984

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T176082[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T176082[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T176082[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T176082[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T176082[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T176081[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T176081[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T176081[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L176573:
$L153984:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L153992

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L176567
$L153992:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L153994

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L176567
$L153994:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L153996
$L176567:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L153997

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L153997:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L153998

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L154001
$L153998:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L154000

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L154001
$L154000:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L154001:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L154002

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L176083
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L176084
$L176083:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L176084:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L154002:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L176401

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L176085
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L176401
$L176085:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L176401
$L153996:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L154005

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L154006
$L154005:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L154007

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L154007:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L154006:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L154008

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L154011
$L154008:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L154010

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L154011
$L154010:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154011:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L176401:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L154012

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L154015
  0018e	8b ff		 npad	 2
$L154013:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L154015

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L154016

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L154017

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L154017:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L176570

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L154020
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L176571
$L154020:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L154022

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L154022:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L154015
$L154016:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L154024

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L154024:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L176570

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L154027
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L154027
$L176571:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L176570:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L154013

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L154015
$L154027:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L154029

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L154029:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
$L154015:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L154012:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L154030

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L154030:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L176569:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176087:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T176082[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176564
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T176950 DD	0ffffffffH
	DD	FLAT:$L176581
$T176945 DD	019930520H
	DD	01H
	DD	FLAT:$T176950
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
$T176580 = -80						; size = 28
$T176579 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154306

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T176580[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T176580[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T176580[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T176580[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T176580[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T176579[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T176579[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T176579[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L176951:
$L154306:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154312

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154317
$L154312:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154314

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154317

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154317
$L154314:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154317

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154317:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154321
  000e5	55		 push	 ebp
$L154320:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154322

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154323
$L176949:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154328
$L154323:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154325

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
$L154325:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154328
$L154322:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L176949

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154329

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
$L154329:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
$L154328:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154320
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154321:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L176948:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176581:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T176580[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176945
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T177332 DD	0ffffffffH
	DD	FLAT:$L176963
$T177327 DD	019930520H
	DD	01H
	DD	FLAT:$T177332
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT
$T176962 = -80						; size = 28
$T176961 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154422

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T176962[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T176962[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T176962[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T176962[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T176962[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T176961[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T176961[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T176961[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L177333:
$L154422:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTRecallMon@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154427

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154432
$L154427:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154429

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154432

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154432
$L154429:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154432

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154432:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154436
  000e5	55		 push	 ebp
$L154435:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154437

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154438
$L177331:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154443
$L154438:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154440

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate
$L154440:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154443
$L154437:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L177331

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154444

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Rrotate
$L154444:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lrotate
$L154443:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154435
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154436:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L177330:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176963:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T176962[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177327
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T177710 DD	0ffffffffH
	DD	FLAT:$L177341
$T177705 DD	019930520H
	DD	01H
	DD	FLAT:$T177710
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT
$T177340 = -80						; size = 28
$T177339 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154537

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T177340[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T177340[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T177340[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T177340[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T177340[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T177339[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T177339[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T177339[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L177711:
$L154537:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTSelfObj@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154542

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154547
$L154542:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154544

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154547

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154547
$L154544:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154547

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154547:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154551
  000e5	55		 push	 ebp
$L154550:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154552

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154553
$L177709:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154558
$L154553:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154555

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate
$L154555:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154558
$L154552:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L177709

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154559

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Rrotate
$L154559:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lrotate
$L154558:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154550
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154551:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L177708:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177341:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T177340[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177705
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T178088 DD	0ffffffffH
	DD	FLAT:$L177719
$T178083 DD	019930520H
	DD	01H
	DD	FLAT:$T178088
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
$T177718 = -80						; size = 28
$T177717 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154652

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T177718[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T177718[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T177718[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T177718[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T177718[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T177717[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T177717[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T177717[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L178089:
$L154652:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154657

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154662
$L154657:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154659

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154662

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154662
$L154659:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154662

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154662:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154666
  000e5	55		 push	 ebp
$L154665:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154667

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154668
$L178087:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154673
$L154668:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154670

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
$L154670:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154673
$L154667:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L178087

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154674

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
$L154674:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
$L154673:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154665
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154666:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L178086:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177719:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T177718[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178083
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T178466 DD	0ffffffffH
	DD	FLAT:$L178097
$T178461 DD	019930520H
	DD	01H
	DD	FLAT:$T178466
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
$T178096 = -80						; size = 28
$T178095 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154763

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T178096[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T178096[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T178096[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T178096[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T178096[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T178095[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T178095[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T178095[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L178467:
$L154763:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154768

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154773
$L154768:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154770

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154773

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154773
$L154770:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154773

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154773:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154777
  000e5	55		 push	 ebp
$L154776:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154778

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154779
$L178465:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154784
$L154779:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154781

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
$L154781:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154784
$L154778:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L178465

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154785

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
$L154785:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
$L154784:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154776
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154777:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L178464:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178097:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T178096[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178461
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T178844 DD	0ffffffffH
	DD	FLAT:$L178475
$T178839 DD	019930520H
	DD	01H
	DD	FLAT:$T178844
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
$T178474 = -80						; size = 28
$T178473 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L154842

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T178474[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T178474[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T178474[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T178474[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T178474[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T178473[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T178473[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T178473[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L178845:
$L154842:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L154847

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L154852
$L154847:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L154849

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L154852

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L154852
$L154849:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L154852

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L154852:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L154856
  000e5	55		 push	 ebp
$L154855:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L154857

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L154858
$L178843:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L154863
$L154858:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L154860

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
$L154860:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L154863
$L154857:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L178843

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L154864

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
$L154864:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
$L154863:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L154855
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L154856:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L178842:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178475:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T178474[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178839
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T178854 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L179186
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L179186

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L179186:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L154994
$L154993:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L179157
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L179188
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L179157
  0006e	8b ff		 npad	 2
$L179171:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L179171
  0007b	eb 1d		 jmp	 SHORT $L179157
$L179188:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L179160
$L179159:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L179160
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L179159
$L179160:
  00098	8b f0		 mov	 esi, eax
$L179157:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T178854[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L154993
$L154994:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T179198 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L179530
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L179530

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L179530:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L155042
$L155041:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L179497
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L179532
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L179497
  0006e	8b ff		 npad	 2
$L179518:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L179518
  0007b	eb 1d		 jmp	 SHORT $L179497
$L179532:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L179500
$L179499:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L179500
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L179499
$L179500:
  00098	8b f0		 mov	 esi, eax
$L179497:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T179198[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L155041
$L155042:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T179542 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L179874
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L179874

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L179874:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L155090
$L155089:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L179844
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L179876
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L179844
  0006e	8b ff		 npad	 2
$L179865:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L179865
  0007b	eb 1d		 jmp	 SHORT $L179844
$L179876:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L179847
$L179846:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L179847
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L179846
$L179847:
  00098	8b f0		 mov	 esi, eax
$L179844:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T179542[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L155089
$L155090:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T179886 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L180218
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L180218

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L180218:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L155138
$L155137:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L180189
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L180220
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L180189
  0006e	8b ff		 npad	 2
$L180203:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L180203
  0007b	eb 1d		 jmp	 SHORT $L180189
$L180220:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L180192
$L180191:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L180192
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L180191
$L180192:
  00098	8b f0		 mov	 esi, eax
$L180189:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T179886[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L155137
$L155138:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T180718 DD	0ffffffffH
	DD	FLAT:$L180233
$T180710 DD	019930520H
	DD	01H
	DD	FLAT:$T180718
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T180228 = -80						; size = 28
$T180227 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L155487

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T180228[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T180228[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T180228[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T180228[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T180228[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T180227[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T180227[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T180227[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L180719:
$L155487:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L155495

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L180713
$L155495:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L155497

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L180713
$L155497:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L155499
$L180713:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L155500

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L155500:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L155501

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L155504
$L155501:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L155503

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L155504
$L155503:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L155504:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L155505

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L180229
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L180230
$L180229:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L180230:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L155505:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L180547

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L180231
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L180547
$L180231:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L180547
$L155499:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L155508

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L155509
$L155508:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L155510

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L155510:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L155509:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L155511

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L155514
$L155511:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L155513

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L155514
$L155513:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L155514:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L180547:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L155515

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L155518
  0018e	8b ff		 npad	 2
$L155516:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L155518

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L155519

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L155520

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L155520:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L180716

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L155523
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L180717
$L155523:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L155525

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L155525:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L155518
$L155519:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L155527

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L155527:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L180716

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L155530
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L155530
$L180717:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L180716:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L155516

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L155518
$L155530:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L155532

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L155532:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
$L155518:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L155515:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L155533

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L155533:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L180715:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180233:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T180228[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180710
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T181216 DD	0ffffffffH
	DD	FLAT:$L180731
$T181208 DD	019930520H
	DD	01H
	DD	FLAT:$T181216
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T180726 = -80						; size = 28
$T180725 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L155568

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T180726[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T180726[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T180726[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T180726[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T180726[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T180725[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T180725[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T180725[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L181217:
$L155568:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L155576

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L181211
$L155576:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L155578

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L181211
$L155578:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L155580
$L181211:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L155581

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L155581:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L155582

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L155585
$L155582:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L155584

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L155585
$L155584:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L155585:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L155586

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L180727
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L180728
$L180727:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L180728:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L155586:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L181044

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L180729
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L181044
$L180729:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L181044
$L155580:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L155589

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L155590
$L155589:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L155591

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L155591:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L155590:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L155592

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L155595
$L155592:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L155594

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L155595
$L155594:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L155595:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L181044:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L155596

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L155599
  0018e	8b ff		 npad	 2
$L155597:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L155599

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L155600

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L155601

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L155601:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L181214

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L155604
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L181215
$L155604:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L155606

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L155606:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L155599
$L155600:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L155608

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L155608:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L181214

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L155611
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L155611
$L181215:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L181214:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L155597

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L155599
$L155611:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L155613

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L155613:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
$L155599:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L155596:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L155614

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L155614:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L181213:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180731:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T180726[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181208
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
PUBLIC	?DelPlayer@CTCell@@QAEXK@Z			; CTCell::DelPlayer
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
;	COMDAT ?DelPlayer@CTCell@@QAEXK@Z
_TEXT	SEGMENT
_finder$ = -4						; size = 4
$T181224 = 8						; size = 4
_dwID$ = 8						; size = 4
?DelPlayer@CTCell@@QAEXK@Z PROC NEAR			; CTCell::DelPlayer, COMDAT
; _this$ = ecx

; 515  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 516  : 	MAPPLAYER::iterator finder = m_mapPLAYER.find(dwID);

  00005	8d 44 24 10	 lea	 eax, DWORD PTR _dwID$[esp+8]
  00009	50		 push	 eax
  0000a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _finder$[esp+16]
  0000e	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  00011	51		 push	 ecx
  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find

; 517  : 
; 518  : 	if( finder != m_mapPLAYER.end() )

  00019	8b 44 24 08	 mov	 eax, DWORD PTR _finder$[esp+12]
  0001d	3b 46 2c	 cmp	 eax, DWORD PTR [esi+44]
  00020	74 0d		 je	 SHORT $L153577

; 519  : 		m_mapPLAYER.erase(finder);

  00022	50		 push	 eax
  00023	8d 54 24 14	 lea	 edx, DWORD PTR $T181224[esp+12]
  00027	52		 push	 edx
  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
$L153577:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 520  : }

  00031	59		 pop	 ecx
  00032	c2 04 00	 ret	 4
?DelPlayer@CTCell@@QAEXK@Z ENDP				; CTCell::DelPlayer
_TEXT	ENDS
PUBLIC	?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z	; CTCell::DelMonster
; Function compile flags: /Ogty
;	COMDAT ?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT
$T181257 = 8						; size = 4
_finder$153600 = 8					; size = 4
$T181255 = 8						; size = 4
_finder$153594 = 8					; size = 4
$T181253 = 8						; size = 4
_finder$153588 = 8					; size = 4
_pMON$ = 8						; size = 4
?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z PROC NEAR	; CTCell::DelMonster, COMDAT
; _this$ = ecx

; 524  : 	switch(pMON->m_bType)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pMON$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8a 48 77	 mov	 cl, BYTE PTR [eax+119]

; 542  : 		}
; 543  : 
; 544  : 		break;
; 545  : 
; 546  : 	default			:
; 547  : 		{
; 548  : 			MAPTMONSTER::iterator finder = m_mapMONSTER.find(pMON->m_dwID);

  0000a	83 c0 44	 add	 eax, 68			; 00000044H
  0000d	80 f9 07	 cmp	 cl, 7
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	74 59		 je	 SHORT $L153587

; 524  : 	switch(pMON->m_bType)

  00014	80 f9 0b	 cmp	 cl, 11			; 0000000bH
  00017	74 2a		 je	 SHORT $L153593

; 542  : 		}
; 543  : 
; 544  : 		break;
; 545  : 
; 546  : 	default			:
; 547  : 		{
; 548  : 			MAPTMONSTER::iterator finder = m_mapMONSTER.find(pMON->m_dwID);

  00019	8d 44 24 10	 lea	 eax, DWORD PTR _finder$153600[esp+8]
  0001d	8d 7e 1c	 lea	 edi, DWORD PTR [esi+28]
  00020	50		 push	 eax
  00021	8b cf		 mov	 ecx, edi
  00023	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find

; 549  : 
; 550  : 			if( finder != m_mapMONSTER.end() )

  00028	8b 44 24 0c	 mov	 eax, DWORD PTR _finder$153600[esp+4]
  0002c	3b 46 20	 cmp	 eax, DWORD PTR [esi+32]
  0002f	74 61		 je	 SHORT $L153591

; 551  : 				m_mapMONSTER.erase(finder);

  00031	50		 push	 eax
  00032	8d 4c 24 10	 lea	 ecx, DWORD PTR $T181257[esp+8]
  00036	51		 push	 ecx
  00037	8b cf		 mov	 ecx, edi
  00039	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi

; 552  : 		}
; 553  : 
; 554  : 		break;
; 555  : 	}
; 556  : }

  00040	c2 04 00	 ret	 4
$L153593:

; 532  : 		}
; 533  : 
; 534  : 		break;
; 535  : 
; 536  : 	case OT_SELF	:
; 537  : 		{
; 538  : 			MAPTSELFOBJ::iterator finder = m_mapSELFOBJ.find(pMON->m_dwID);

  00043	8d 54 24 10	 lea	 edx, DWORD PTR _finder$153594[esp+8]
  00047	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  0004a	52		 push	 edx
  0004b	8b cf		 mov	 ecx, edi
  0004d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::find

; 539  : 
; 540  : 			if( finder != m_mapSELFOBJ.end() )

  00052	8b 44 24 0c	 mov	 eax, DWORD PTR _finder$153594[esp+4]
  00056	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  00059	74 37		 je	 SHORT $L153591

; 541  : 				m_mapSELFOBJ.erase(finder);

  0005b	50		 push	 eax
  0005c	8d 44 24 10	 lea	 eax, DWORD PTR $T181255[esp+8]
  00060	50		 push	 eax
  00061	8b cf		 mov	 ecx, edi
  00063	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi

; 552  : 		}
; 553  : 
; 554  : 		break;
; 555  : 	}
; 556  : }

  0006a	c2 04 00	 ret	 4
$L153587:

; 525  : 	{
; 526  : 	case OT_RECALL	:
; 527  : 		{
; 528  : 			MAPTRECALLMON::iterator finder = m_mapRECALLMON.find(pMON->m_dwID);

  0006d	8d 4c 24 10	 lea	 ecx, DWORD PTR _finder$153588[esp+8]
  00071	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00074	51		 push	 ecx
  00075	8b cf		 mov	 ecx, edi
  00077	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::find

; 529  : 
; 530  : 			if( finder != m_mapRECALLMON.end() )

  0007c	8b 44 24 0c	 mov	 eax, DWORD PTR _finder$153588[esp+4]
  00080	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00083	74 0d		 je	 SHORT $L153591

; 531  : 				m_mapRECALLMON.erase(finder);

  00085	50		 push	 eax
  00086	8d 54 24 10	 lea	 edx, DWORD PTR $T181253[esp+8]
  0008a	52		 push	 edx
  0008b	8b cf		 mov	 ecx, edi
  0008d	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
$L153591:
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi

; 552  : 		}
; 553  : 
; 554  : 		break;
; 555  : 	}
; 556  : }

  00094	c2 04 00	 ret	 4
?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z ENDP		; CTCell::DelMonster
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T181341 = 12						; size = 4
$T181339 = 12						; size = 4
__Where$153637 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L153627
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L153626:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L181333
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L181334
$L181333:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L181334:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L153626
$L153627:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$153637[esp+12], edx
  00045	74 33		 je	 SHORT $L181433

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T181339[esp+12]
  00050	75 1f		 jne	 SHORT $L153642
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L153642:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$153637[esp+12]
$L181433:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L153647

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T181341[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L153647:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T181478 = 12						; size = 4
$T181476 = 12						; size = 4
__Where$153746 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L153736
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L153735:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L181470
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L181471
$L181470:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L181471:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L153735
$L153736:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$153746[esp+12], edx
  00045	74 33		 je	 SHORT $L181571

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T181476[esp+12]
  00050	75 1f		 jne	 SHORT $L153751
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L153751:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$153746[esp+12]
$L181571:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L153756

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T181478[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L153756:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T181615 = 12						; size = 4
$T181613 = 12						; size = 4
__Where$153855 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L153845
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L153844:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L181607
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L181608
$L181607:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L181608:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L153844
$L153845:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$153855[esp+12], edx
  00045	74 33		 je	 SHORT $L181708

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T181613[esp+12]
  00050	75 1f		 jne	 SHORT $L153860
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L153860:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$153855[esp+12]
$L181708:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L153865

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T181615[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L153865:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T181752 = 12						; size = 4
$T181750 = 12						; size = 4
__Where$153964 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L153954
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L153953:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L181744
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L181745
$L181744:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L181745:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L153953
$L153954:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$153964[esp+12], edx
  00045	74 33		 je	 SHORT $L181845

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T181750[esp+12]
  00050	75 1f		 jne	 SHORT $L153969
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L153969:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$153964[esp+12]
$L181845:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L153974

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T181752[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L153974:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T181889 = 12						; size = 4
$T181887 = 12						; size = 4
__Where$154073 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L154063
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L154062:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L181881
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L181882
$L181881:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L181882:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L154062
$L154063:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$154073[esp+12], edx
  00045	74 33		 je	 SHORT $L181982

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T181887[esp+12]
  00050	75 1f		 jne	 SHORT $L154078
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L154078:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$154073[esp+12]
$L181982:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L154083

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T181889[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L154083:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T182026 = 12						; size = 4
$T182024 = 12						; size = 4
__Where$154132 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L154122
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L154121:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L182018
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L182019
$L182018:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L182019:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L154121
$L154122:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$154132[esp+12], edx
  00045	74 33		 je	 SHORT $L182118

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T182024[esp+12]
  00050	75 1f		 jne	 SHORT $L154137
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L154137:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$154132[esp+12]
$L182118:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L154142

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T182026[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L154142:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T182157 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T182157[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T182222 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T182222[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T182287 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T182287[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T182352 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T182352[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T182418 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L182750
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L182750

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L182750:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L155190
$L155189:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L182718
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L182752
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L182718
  0006e	8b ff		 npad	 2
$L182732:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L182732
  0007b	eb 1d		 jmp	 SHORT $L182718
$L182752:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L182721
$L182720:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L182721
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L182720
$L182721:
  00098	8b f0		 mov	 esi, eax
$L182718:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T182418[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L155189
$L155190:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T182762 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L183094
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L183094

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L183094:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L155266
$L155265:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L183064
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L183096
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L183064
  0006e	8b ff		 npad	 2
$L183078:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L183078
  0007b	eb 1d		 jmp	 SHORT $L183064
$L183096:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L183067
$L183066:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L183067
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L183066
$L183067:
  00098	8b f0		 mov	 esi, eax
$L183064:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T182762[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L155265
$L155266:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z		; CTCell::AddSwitch
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
;	COMDAT ?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z
_TEXT	SEGMENT
$T183105 = -16						; size = 8
$T183106 = -8						; size = 8
$T183103 = 8						; size = 4
_pSwitch$ = 8						; size = 4
?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z PROC NEAR	; CTCell::AddSwitch, COMDAT
; _this$ = ecx

; 136  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx

; 137  : 	if( m_mapSWITCH.find(pSwitch->m_dwSwitchID) == m_mapSWITCH.end() )

  00004	8b 5c 24 18	 mov	 ebx, DWORD PTR _pSwitch$[esp+16]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	53		 push	 ebx
  0000d	8d 44 24 24	 lea	 eax, DWORD PTR $T183103[esp+28]
  00011	8d 7e 34	 lea	 edi, DWORD PTR [esi+52]
  00014	50		 push	 eax
  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	3b 4e 38	 cmp	 ecx, DWORD PTR [esi+56]
  00021	75 1b		 jne	 SHORT $L152939

; 138  : 		m_mapSWITCH.insert( MAPTSWITCH::value_type( pSwitch->m_dwSwitchID, pSwitch));

  00023	8b 13		 mov	 edx, DWORD PTR [ebx]
  00025	8d 44 24 0c	 lea	 eax, DWORD PTR $T183105[esp+28]
  00029	50		 push	 eax
  0002a	8d 4c 24 18	 lea	 ecx, DWORD PTR $T183106[esp+32]
  0002e	51		 push	 ecx
  0002f	8b cf		 mov	 ecx, edi
  00031	89 54 24 14	 mov	 DWORD PTR $T183105[esp+36], edx
  00035	89 5c 24 18	 mov	 DWORD PTR $T183105[esp+40], ebx
  00039	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
$L152939:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 139  : }

  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	c2 04 00	 ret	 4
?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z ENDP		; CTCell::AddSwitch
_TEXT	ENDS
PUBLIC	?AddGate@CTCell@@QAEXPAUtagGATE@@@Z		; CTCell::AddGate
; Function compile flags: /Ogty
;	COMDAT ?AddGate@CTCell@@QAEXPAUtagGATE@@@Z
_TEXT	SEGMENT
$T183136 = -16						; size = 8
$T183137 = -8						; size = 8
$T183134 = 8						; size = 4
_pGate$ = 8						; size = 4
?AddGate@CTCell@@QAEXPAUtagGATE@@@Z PROC NEAR		; CTCell::AddGate, COMDAT
; _this$ = ecx

; 142  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx

; 143  : 	if( m_mapGATE.find(pGate->m_dwGateID) == m_mapGATE.end() )

  00004	8b 5c 24 18	 mov	 ebx, DWORD PTR _pGate$[esp+16]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	53		 push	 ebx
  0000d	8d 44 24 24	 lea	 eax, DWORD PTR $T183134[esp+28]
  00011	8d 7e 40	 lea	 edi, DWORD PTR [esi+64]
  00014	50		 push	 eax
  00015	8b cf		 mov	 ecx, edi
  00017	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	3b 4e 44	 cmp	 ecx, DWORD PTR [esi+68]
  00021	75 1b		 jne	 SHORT $L152968

; 144  : 		m_mapGATE.insert( MAPTGATE::value_type( pGate->m_dwGateID, pGate));

  00023	8b 13		 mov	 edx, DWORD PTR [ebx]
  00025	8d 44 24 0c	 lea	 eax, DWORD PTR $T183136[esp+28]
  00029	50		 push	 eax
  0002a	8d 4c 24 18	 lea	 ecx, DWORD PTR $T183137[esp+32]
  0002e	51		 push	 ecx
  0002f	8b cf		 mov	 ecx, edi
  00031	89 54 24 14	 mov	 DWORD PTR $T183136[esp+36], edx
  00035	89 5c 24 18	 mov	 DWORD PTR $T183136[esp+40], ebx
  00039	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
$L152968:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 145  : }

  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	c2 04 00	 ret	 4
?AddGate@CTCell@@QAEXPAUtagGATE@@@Z ENDP		; CTCell::AddGate
_TEXT	ENDS
PUBLIC	?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z		; CTCell::AddPlayer
; Function compile flags: /Ogty
;	COMDAT ?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
$T183167 = -16						; size = 8
$T183168 = -8						; size = 8
$T183165 = 8						; size = 4
_pPlayer$ = 8						; size = 4
?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z PROC NEAR	; CTCell::AddPlayer, COMDAT
; _this$ = ecx

; 148  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp

; 149  : 	if( m_mapPLAYER.find(pPlayer->m_dwID) == m_mapPLAYER.end() )

  00005	8b 6c 24 1c	 mov	 ebp, DWORD PTR _pPlayer$[esp+20]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f1		 mov	 esi, ecx
  0000d	8d bd 44 01 01
	00		 lea	 edi, DWORD PTR [ebp+65860]
  00013	57		 push	 edi
  00014	8d 44 24 28	 lea	 eax, DWORD PTR $T183165[esp+32]
  00018	8d 5e 28	 lea	 ebx, DWORD PTR [esi+40]
  0001b	50		 push	 eax
  0001c	8b cb		 mov	 ecx, ebx
  0001e	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	3b 4e 2c	 cmp	 ecx, DWORD PTR [esi+44]
  00028	75 1b		 jne	 SHORT $L152997

; 150  : 		m_mapPLAYER.insert( MAPPLAYER::value_type( pPlayer->m_dwID, pPlayer));

  0002a	8b 17		 mov	 edx, DWORD PTR [edi]
  0002c	8d 44 24 10	 lea	 eax, DWORD PTR $T183167[esp+32]
  00030	50		 push	 eax
  00031	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T183168[esp+36]
  00035	51		 push	 ecx
  00036	8b cb		 mov	 ecx, ebx
  00038	89 54 24 18	 mov	 DWORD PTR $T183167[esp+40], edx
  0003c	89 6c 24 1c	 mov	 DWORD PTR $T183167[esp+44], ebp
  00040	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
$L152997:
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	5b		 pop	 ebx

; 151  : }

  00049	83 c4 10	 add	 esp, 16			; 00000010H
  0004c	c2 04 00	 ret	 4
?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z ENDP		; CTCell::AddPlayer
_TEXT	ENDS
PUBLIC	?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z	; CTCell::AddMonster
; Function compile flags: /Ogty
;	COMDAT ?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT
$T183201 = -24						; size = 4
$T183196 = -20						; size = 4
$T183208 = -16						; size = 8
$T183203 = -16						; size = 8
$T183198 = -16						; size = 8
$T183209 = -8						; size = 8
$T183205 = -8						; size = 8
$T183200 = -8						; size = 8
$T183206 = 8						; size = 4
_pMON$ = 8						; size = 4
?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z PROC NEAR	; CTCell::AddMonster, COMDAT
; _this$ = ecx

; 154  : {

  00000	83 ec 18	 sub	 esp, 24			; 00000018H
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 155  : 	switch(pMON->m_bType)

  00007	8b 7c 24 2c	 mov	 edi, DWORD PTR _pMON$[esp+36]
  0000b	8a 47 77	 mov	 al, BYTE PTR [edi+119]
  0000e	3c 07		 cmp	 al, 7

; 166  : 
; 167  : 		break;
; 168  : 
; 169  : 	default			:
; 170  : 		if( m_mapMONSTER.find(pMON->m_dwID) == m_mapMONSTER.end() )

  00010	8d 5f 44	 lea	 ebx, DWORD PTR [edi+68]
  00013	8b f1		 mov	 esi, ecx
  00015	53		 push	 ebx
  00016	74 7e		 je	 SHORT $L153028

; 155  : 	switch(pMON->m_bType)

  00018	3c 0b		 cmp	 al, 11			; 0000000bH
  0001a	74 3f		 je	 SHORT $L153056

; 166  : 
; 167  : 		break;
; 168  : 
; 169  : 	default			:
; 170  : 		if( m_mapMONSTER.find(pMON->m_dwID) == m_mapMONSTER.end() )

  0001c	8d 44 24 30	 lea	 eax, DWORD PTR $T183206[esp+40]
  00020	8d 6e 1c	 lea	 ebp, DWORD PTR [esi+28]
  00023	50		 push	 eax
  00024	8b cd		 mov	 ecx, ebp
  00026	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	3b 4e 20	 cmp	 ecx, DWORD PTR [esi+32]
  00030	0f 85 91 00 00
	00		 jne	 $L153031

; 171  : 			m_mapMONSTER.insert( MAPTMONSTER::value_type( pMON->m_dwID, pMON));

  00036	8b 13		 mov	 edx, DWORD PTR [ebx]
  00038	8d 44 24 18	 lea	 eax, DWORD PTR $T183208[esp+40]
  0003c	50		 push	 eax
  0003d	8d 4c 24 24	 lea	 ecx, DWORD PTR $T183209[esp+44]
  00041	51		 push	 ecx
  00042	8b cd		 mov	 ecx, ebp
  00044	89 54 24 20	 mov	 DWORD PTR $T183208[esp+48], edx
  00048	89 7c 24 24	 mov	 DWORD PTR $T183208[esp+52], edi
  0004c	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5d		 pop	 ebp
  00054	5b		 pop	 ebx

; 172  : 
; 173  : 		break;
; 174  : 	}
; 175  : }

  00055	83 c4 18	 add	 esp, 24			; 00000018H
  00058	c2 04 00	 ret	 4
$L153056:

; 160  : 
; 161  : 		break;
; 162  : 
; 163  : 	case OT_SELF	:
; 164  : 		if( m_mapSELFOBJ.find(pMON->m_dwID) == m_mapSELFOBJ.end() )

  0005b	8d 54 24 14	 lea	 edx, DWORD PTR $T183201[esp+44]
  0005f	8d 6e 10	 lea	 ebp, DWORD PTR [esi+16]
  00062	52		 push	 edx
  00063	8b cd		 mov	 ecx, ebp
  00065	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::find
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 46 14	 cmp	 eax, DWORD PTR [esi+20]
  0006f	75 56		 jne	 SHORT $L153031

; 165  : 			m_mapSELFOBJ.insert( MAPTSELFOBJ::value_type( pMON->m_dwID, (CTSelfObj *) pMON));

  00071	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00073	8d 54 24 18	 lea	 edx, DWORD PTR $T183203[esp+40]
  00077	52		 push	 edx
  00078	8d 44 24 24	 lea	 eax, DWORD PTR $T183205[esp+44]
  0007c	89 4c 24 1c	 mov	 DWORD PTR $T183203[esp+44], ecx
  00080	50		 push	 eax
  00081	8b cd		 mov	 ecx, ebp
  00083	89 7c 24 24	 mov	 DWORD PTR $T183203[esp+52], edi
  00087	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTSelfObj@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::insert
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5d		 pop	 ebp
  0008f	5b		 pop	 ebx

; 172  : 
; 173  : 		break;
; 174  : 	}
; 175  : }

  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	c2 04 00	 ret	 4
$L153028:

; 156  : 	{
; 157  : 	case OT_RECALL	:
; 158  : 		if( m_mapRECALLMON.find(pMON->m_dwID) == m_mapRECALLMON.end() )

  00096	8d 4c 24 18	 lea	 ecx, DWORD PTR $T183196[esp+44]
  0009a	8d 6e 04	 lea	 ebp, DWORD PTR [esi+4]
  0009d	51		 push	 ecx
  0009e	8b cd		 mov	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::find
  000a5	8b 10		 mov	 edx, DWORD PTR [eax]
  000a7	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  000aa	75 1b		 jne	 SHORT $L153031

; 159  : 			m_mapRECALLMON.insert( MAPTRECALLMON::value_type( pMON->m_dwID, (CTRecallMon *) pMON));

  000ac	8b 03		 mov	 eax, DWORD PTR [ebx]
  000ae	8d 4c 24 18	 lea	 ecx, DWORD PTR $T183198[esp+40]
  000b2	51		 push	 ecx
  000b3	8d 54 24 24	 lea	 edx, DWORD PTR $T183200[esp+44]
  000b7	52		 push	 edx
  000b8	8b cd		 mov	 ecx, ebp
  000ba	89 44 24 20	 mov	 DWORD PTR $T183198[esp+48], eax
  000be	89 7c 24 24	 mov	 DWORD PTR $T183198[esp+52], edi
  000c2	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTRecallMon@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::insert
$L153031:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5d		 pop	 ebp
  000ca	5b		 pop	 ebx

; 172  : 
; 173  : 		break;
; 174  : 	}
; 175  : }

  000cb	83 c4 18	 add	 esp, 24			; 00000018H
  000ce	c2 04 00	 ret	 4
?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z ENDP		; CTCell::AddMonster
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T183376 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183376[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T183446 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183446[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T183541 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183541[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T183637 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183637[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T183667 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183667[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T183732 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183732[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::~map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T183894 = -4						; size = 4
??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::~map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T183894[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::~map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::~map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T184022 = -4						; size = 4
??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::~map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T184022[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::~map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T184151 = -4						; size = 4
??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T184151[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::~map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T184279 = -4						; size = 4
??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::~map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T184279[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::~map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >::map<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >::map<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >::map<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T185034 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T185034[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T185129 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T185129[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T185257 = -4						; size = 4
??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T185257[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T185387 = -4						; size = 4
??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T185387[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
_TEXT	ENDS
PUBLIC	??1CTCell@@UAE@XZ				; CTCell::~CTCell
PUBLIC	??_7CTCell@@6B@					; CTCell::`vftable'
PUBLIC	??_GCTCell@@UAEPAXI@Z				; CTCell::`scalar deleting destructor'
EXTRN	??_ECTCell@@UAEPAXI@Z:NEAR			; CTCell::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T186700 DD	0ffffffffH
	DD	FLAT:$L185413
	DD	00H
	DD	FLAT:$L185414
	DD	01H
	DD	FLAT:$L185415
	DD	02H
	DD	FLAT:$L185416
	DD	03H
	DD	FLAT:$L185417
	DD	04H
	DD	FLAT:$L185418
$T186698 DD	019930520H
	DD	06H
	DD	FLAT:$T186700
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CTCell@@6B@
CONST	SEGMENT
??_7CTCell@@6B@ DD FLAT:??_ECTCell@@UAEPAXI@Z		; CTCell::`vftable'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
CONST	ENDS
;	COMDAT ??1CTCell@@UAE@XZ
_TEXT	SEGMENT
tv593 = -28						; size = 4
tv605 = -24						; size = 4
_this$ = -20						; size = 4
$T186669 = -16						; size = 4
$T186508 = -16						; size = 4
$T186351 = -16						; size = 4
$T186190 = -16						; size = 4
$T186030 = -16						; size = 4
$T185869 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTCell@@UAE@XZ PROC NEAR				; CTCell::~CTCell, COMDAT
; _this$ = ecx

; 28   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CTCell@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	8b d9		 mov	 ebx, ecx
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	89 5c 24 18	 mov	 DWORD PTR _this$[esp+44], ebx
  00022	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET FLAT:??_7CTCell@@6B@

; 29   : 	m_mapRECALLMON.clear();

  00028	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0002b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002e	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  00031	51		 push	 ecx
  00032	8b ce		 mov	 ecx, esi
  00034	c7 44 24 2c 05
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 5
  0003c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase
  00041	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00044	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00047	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004a	33 ed		 xor	 ebp, ebp
  0004c	89 6e 08	 mov	 DWORD PTR [esi+8], ebp
  0004f	89 00		 mov	 DWORD PTR [eax], eax
  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 30   : 	m_mapSELFOBJ.clear();

  00057	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0005a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005d	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
  00060	50		 push	 eax
  00061	8b cf		 mov	 ecx, edi
  00063	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase
  00068	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0006b	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0006e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00071	89 6f 08	 mov	 DWORD PTR [edi+8], ebp
  00074	89 00		 mov	 DWORD PTR [eax], eax
  00076	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00079	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 31   : 
; 32   : 	m_mapMONSTER.clear();

  0007c	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  0007f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00082	8d 6b 1c	 lea	 ebp, DWORD PTR [ebx+28]
  00085	52		 push	 edx
  00086	8b cd		 mov	 ecx, ebp
  00088	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  0008d	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00090	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00093	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00096	c7 45 08 00 00
	00 00		 mov	 DWORD PTR [ebp+8], 0
  0009d	89 00		 mov	 DWORD PTR [eax], eax
  0009f	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000a2	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 33   : 	m_mapPLAYER.clear();

  000a5	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	83 c3 28	 add	 ebx, 40			; 00000028H
  000ae	51		 push	 ecx
  000af	8b cb		 mov	 ecx, ebx
  000b1	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase
  000b6	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 34   : 
; 35   : 	m_mapSWITCH.clear();

  000b9	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+44]
  000bd	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c0	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000c3	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  000ca	89 00		 mov	 DWORD PTR [eax], eax
  000cc	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cf	83 c1 34	 add	 ecx, 52			; 00000034H
  000d2	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000db	50		 push	 eax
  000dc	89 4c 24 14	 mov	 DWORD PTR tv593[esp+48], ecx
  000e0	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  000e5	8b 44 24 10	 mov	 eax, DWORD PTR tv593[esp+44]
  000e9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ec	89 49 04	 mov	 DWORD PTR [ecx+4], ecx
  000ef	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f2	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  000f9	89 09		 mov	 DWORD PTR [ecx], ecx
  000fb	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 36   : 	m_mapGATE.clear();

  000fe	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+44]
  00102	83 c1 40	 add	 ecx, 64			; 00000040H
  00105	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00108	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0010b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0010e	50		 push	 eax
  0010f	89 4c 24 18	 mov	 DWORD PTR tv605[esp+48], ecx
  00113	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
  00118	8b 4c 24 14	 mov	 ecx, DWORD PTR tv605[esp+44]
  0011c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0011f	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00122	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00125	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0012c	89 00		 mov	 DWORD PTR [eax], eax
  0012e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00131	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 37   : }

  00134	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00137	8b 10		 mov	 edx, DWORD PTR [eax]
  00139	50		 push	 eax
  0013a	52		 push	 edx
  0013b	8d 54 24 24	 lea	 edx, DWORD PTR $T185869[esp+52]
  0013f	52		 push	 edx
  00140	c6 44 24 34 04	 mov	 BYTE PTR __$EHRec$[esp+64], 4
  00145	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  0014a	8b 44 24 14	 mov	 eax, DWORD PTR tv605[esp+44]
  0014e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00157	8b 44 24 18	 mov	 eax, DWORD PTR tv605[esp+48]
  0015b	33 c9		 xor	 ecx, ecx
  0015d	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00160	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00163	8b 4c 24 14	 mov	 ecx, DWORD PTR tv593[esp+48]
  00167	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0016a	8b 10		 mov	 edx, DWORD PTR [eax]
  0016c	83 c4 04	 add	 esp, 4
  0016f	50		 push	 eax
  00170	52		 push	 edx
  00171	8d 54 24 24	 lea	 edx, DWORD PTR $T186030[esp+52]
  00175	52		 push	 edx
  00176	c6 44 24 34 03	 mov	 BYTE PTR __$EHRec$[esp+64], 3
  0017b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  00180	8b 44 24 10	 mov	 eax, DWORD PTR tv593[esp+44]
  00184	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0018d	8b 44 24 14	 mov	 eax, DWORD PTR tv593[esp+48]
  00191	33 c9		 xor	 ecx, ecx
  00193	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00196	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00199	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0019c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019e	83 c4 04	 add	 esp, 4
  001a1	50		 push	 eax
  001a2	51		 push	 ecx
  001a3	8d 4c 24 24	 lea	 ecx, DWORD PTR $T186190[esp+52]
  001a7	51		 push	 ecx
  001a8	8b cb		 mov	 ecx, ebx
  001aa	c6 44 24 34 02	 mov	 BYTE PTR __$EHRec$[esp+64], 2
  001af	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::erase
  001b4	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001bd	33 c0		 xor	 eax, eax
  001bf	83 c4 04	 add	 esp, 4
  001c2	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  001c5	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  001c8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	8d 54 24 24	 lea	 edx, DWORD PTR $T186351[esp+52]
  001d3	52		 push	 edx
  001d4	8b cd		 mov	 ecx, ebp
  001d6	c6 44 24 34 01	 mov	 BYTE PTR __$EHRec$[esp+64], 1
  001db	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  001e0	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e9	83 c4 04	 add	 esp, 4
  001ec	33 db		 xor	 ebx, ebx
  001ee	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  001f1	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  001f4	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f9	50		 push	 eax
  001fa	51		 push	 ecx
  001fb	8d 44 24 24	 lea	 eax, DWORD PTR $T186508[esp+52]
  001ff	50		 push	 eax
  00200	8b cf		 mov	 ecx, edi
  00202	88 5c 24 34	 mov	 BYTE PTR __$EHRec$[esp+64], bl
  00206	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::erase
  0020b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0020e	50		 push	 eax
  0020f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00214	83 c4 04	 add	 esp, 4
  00217	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  0021a	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0021d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00220	8b 08		 mov	 ecx, DWORD PTR [eax]
  00222	50		 push	 eax
  00223	51		 push	 ecx
  00224	8d 4c 24 24	 lea	 ecx, DWORD PTR $T186669[esp+52]
  00228	51		 push	 ecx
  00229	8b ce		 mov	 ecx, esi
  0022b	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  00233	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::erase
  00238	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0023b	52		 push	 edx
  0023c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00241	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  00245	83 c4 04	 add	 esp, 4
  00248	5f		 pop	 edi
  00249	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0024c	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0024f	5e		 pop	 esi
  00250	5d		 pop	 ebp
  00251	5b		 pop	 ebx
  00252	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00259	83 c4 1c	 add	 esp, 28			; 0000001cH
  0025c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185413:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
$L185414:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
$L185415:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
$L185416:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
$L185417:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
$L185418:
  00037	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1CTCell@@UAE@XZ:
  00042	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186698
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CTCell@@UAE@XZ ENDP					; CTCell::~CTCell
PUBLIC	??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
_TEXT	ENDS
PUBLIC	??0CTCell@@QAE@XZ				; CTCell::CTCell
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T188899 DD	0ffffffffH
	DD	FLAT:$L187036
	DD	00H
	DD	FLAT:$L187037
	DD	01H
	DD	FLAT:$L187038
	DD	02H
	DD	FLAT:$L187039
	DD	03H
	DD	FLAT:$L187040
	DD	04H
	DD	FLAT:$L187041
$T188879 DD	019930520H
	DD	06H
	DD	FLAT:$T188899
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tcell.cpp
xdata$x	ENDS
;	COMDAT ??0CTCell@@QAE@XZ
_TEXT	SEGMENT
tv586 = -24						; size = 4
__Pnode$188377 = -24					; size = 4
$T188439 = -20						; size = 4
$T188344 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTCell@@QAE@XZ PROC NEAR				; CTCell::CTCell, COMDAT
; _this$ = ecx

; 5    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTCell@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	8b e9		 mov	 ebp, ecx
  0001c	56		 push	 esi
  0001d	8d 75 04	 lea	 esi, DWORD PTR [ebp+4]
  00020	57		 push	 edi
  00021	8b ce		 mov	 ecx, esi
  00023	89 6c 24 18	 mov	 DWORD PTR _this$[esp+40], ebp
  00027	c7 45 00 00 00
	00 00		 mov	 DWORD PTR [ebp], OFFSET FLAT:??_7CTCell@@6B@
  0002e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Buynode
  00033	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00036	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0003a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00040	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00043	89 00		 mov	 DWORD PTR [eax], eax
  00045	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00048	33 db		 xor	 ebx, ebx
  0004a	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0004d	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00050	8d 7d 10	 lea	 edi, DWORD PTR [ebp+16]
  00053	8b cf		 mov	 ecx, edi
  00055	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  00059	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Buynode
  0005e	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00061	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00065	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00068	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0006b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0006e	89 00		 mov	 DWORD PTR [eax], eax
  00070	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00073	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00076	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00079	8d 5d 1c	 lea	 ebx, DWORD PTR [ebp+28]
  0007c	8b cb		 mov	 ecx, ebx
  0007e	c6 44 24 24 01	 mov	 BYTE PTR __$EHRec$[esp+48], 1
  00083	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00088	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0008b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0008f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00092	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00095	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00098	89 00		 mov	 DWORD PTR [eax], eax
  0009a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0009d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000a0	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  000a7	8d 4d 28	 lea	 ecx, DWORD PTR [ebp+40]
  000aa	c6 44 24 24 02	 mov	 BYTE PTR __$EHRec$[esp+48], 2
  000af	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
  000b4	89 45 2c	 mov	 DWORD PTR [ebp+44], eax
  000b7	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000bb	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  000be	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c1	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  000c4	89 00		 mov	 DWORD PTR [eax], eax
  000c6	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  000c9	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000cc	c7 45 30 00 00
	00 00		 mov	 DWORD PTR [ebp+48], 0
  000d3	8d 4d 34	 lea	 ecx, DWORD PTR [ebp+52]
  000d6	c6 44 24 24 03	 mov	 BYTE PTR __$EHRec$[esp+48], 3
  000db	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  000e0	89 45 38	 mov	 DWORD PTR [ebp+56], eax
  000e3	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000e7	8b 45 38	 mov	 eax, DWORD PTR [ebp+56]
  000ea	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000ed	8b 45 38	 mov	 eax, DWORD PTR [ebp+56]
  000f0	89 00		 mov	 DWORD PTR [eax], eax
  000f2	8b 45 38	 mov	 eax, DWORD PTR [ebp+56]
  000f5	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000f8	c7 45 3c 00 00
	00 00		 mov	 DWORD PTR [ebp+60], 0
  000ff	8d 4d 40	 lea	 ecx, DWORD PTR [ebp+64]
  00102	c6 44 24 24 04	 mov	 BYTE PTR __$EHRec$[esp+48], 4
  00107	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  0010c	89 45 44	 mov	 DWORD PTR [ebp+68], eax
  0010f	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00113	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  00116	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00119	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  0011c	89 00		 mov	 DWORD PTR [eax], eax
  0011e	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  00121	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00124	c7 45 48 00 00
	00 00		 mov	 DWORD PTR [ebp+72], 0
  0012b	c6 44 24 24 05	 mov	 BYTE PTR __$EHRec$[esp+48], 5
  00130	8d 85 3c 01 00
	00		 lea	 eax, DWORD PTR [ebp+316]
  00136	c7 44 24 10 1e
	00 00 00	 mov	 DWORD PTR tv586[esp+40], 30 ; 0000001eH
  0013e	8b ff		 npad	 2
$L152230:

; 6    : 	for( int i=0; i<MAX_CHANNEL; i++)
; 7    : 	{
; 8    : 		for( int j=0; j<UD_COUNT; j++)

  00140	8d 88 10 ff ff
	ff		 lea	 ecx, DWORD PTR [eax-240]
  00146	ba 08 00 00 00	 mov	 edx, 8
  0014b	eb 03 8d 49 00	 npad	 5
$L152234:

; 9    : 			m_vServerID[j][i] = 0;

  00150	c6 01 00	 mov	 BYTE PTR [ecx], 0
  00153	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00156	4a		 dec	 edx
  00157	75 f7		 jne	 SHORT $L152234
  00159	8b 4c 24 10	 mov	 ecx, DWORD PTR tv586[esp+40]

; 10   : 
; 11   : 		m_vExtCell[i] = FALSE;

  0015d	c6 00 00	 mov	 BYTE PTR [eax], 0

; 12   : 		m_vEnable[i] = FALSE;

  00160	c6 40 1e 00	 mov	 BYTE PTR [eax+30], 0
  00164	40		 inc	 eax
  00165	49		 dec	 ecx
  00166	89 4c 24 10	 mov	 DWORD PTR tv586[esp+40], ecx
  0016a	75 d4		 jne	 SHORT $L152230

; 13   : 	}
; 14   : 
; 15   : 	m_mapRECALLMON.clear();

  0016c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0016f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00172	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00175	84 c9		 test	 cl, cl
  00177	89 44 24 14	 mov	 DWORD PTR $T188344[esp+40], eax
  0017b	89 44 24 10	 mov	 DWORD PTR __Pnode$188377[esp+40], eax
  0017f	75 35		 jne	 SHORT $L188897
$L188896:
  00181	8b 4c 24 10	 mov	 ecx, DWORD PTR __Pnode$188377[esp+40]
  00185	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00188	52		 push	 edx
  00189	8b ce		 mov	 ecx, esi
  0018b	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Erase
  00190	8b 44 24 10	 mov	 eax, DWORD PTR __Pnode$188377[esp+40]
  00194	8b 54 24 14	 mov	 edx, DWORD PTR $T188344[esp+40]
  00198	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019a	52		 push	 edx
  0019b	89 4c 24 14	 mov	 DWORD PTR __Pnode$188377[esp+44], ecx
  0019f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a4	8b 44 24 14	 mov	 eax, DWORD PTR __Pnode$188377[esp+44]
  001a8	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001ab	83 c4 04	 add	 esp, 4
  001ae	84 c9		 test	 cl, cl
  001b0	89 44 24 14	 mov	 DWORD PTR $T188344[esp+40], eax
  001b4	74 cb		 je	 SHORT $L188896
$L188897:
  001b6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001b9	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001bc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001bf	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  001c6	89 00		 mov	 DWORD PTR [eax], eax
  001c8	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  001cb	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 16   : 	m_mapSELFOBJ.clear();

  001ce	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001d1	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  001d4	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  001d7	84 c0		 test	 al, al
  001d9	89 74 24 14	 mov	 DWORD PTR $T188439[esp+40], esi
  001dd	75 26		 jne	 SHORT $L188475
  001df	90		 npad	 1
$L188473:
  001e0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001e3	51		 push	 ecx
  001e4	8b cf		 mov	 ecx, edi
  001e6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Erase
  001eb	8b 54 24 14	 mov	 edx, DWORD PTR $T188439[esp+40]
  001ef	8b 36		 mov	 esi, DWORD PTR [esi]
  001f1	52		 push	 edx
  001f2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001f7	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  001fa	83 c4 04	 add	 esp, 4
  001fd	84 c0		 test	 al, al
  001ff	89 74 24 14	 mov	 DWORD PTR $T188439[esp+40], esi
  00203	74 db		 je	 SHORT $L188473
$L188475:
  00205	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00208	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0020b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0020e	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00215	89 00		 mov	 DWORD PTR [eax], eax
  00217	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0021a	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 17   : 
; 18   : 	m_mapMONSTER.clear();

  0021d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00220	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00223	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00226	84 c0		 test	 al, al
  00228	8b f7		 mov	 esi, edi
  0022a	75 23		 jne	 SHORT $L188569
  0022c	8d 64 24 00	 npad	 4
$L188567:
  00230	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00233	51		 push	 ecx
  00234	8b cb		 mov	 ecx, ebx
  00236	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  0023b	8b 36		 mov	 esi, DWORD PTR [esi]
  0023d	57		 push	 edi
  0023e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00243	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00246	83 c4 04	 add	 esp, 4
  00249	84 c0		 test	 al, al
  0024b	8b fe		 mov	 edi, esi
  0024d	74 e1		 je	 SHORT $L188567
$L188569:
  0024f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00252	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00255	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00258	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  0025f	89 00		 mov	 DWORD PTR [eax], eax
  00261	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  00264	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx

; 19   : 	m_mapPLAYER.clear();

  00267	8b 55 2c	 mov	 edx, DWORD PTR [ebp+44]
  0026a	8b 5a 04	 mov	 ebx, DWORD PTR [edx+4]
  0026d	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00270	84 c0		 test	 al, al
  00272	8d 75 28	 lea	 esi, DWORD PTR [ebp+40]
  00275	8b fb		 mov	 edi, ebx
  00277	75 26		 jne	 SHORT $L188674
  00279	8d a4 24 00 00
	00 00		 npad	 7
$L188672:
  00280	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00283	50		 push	 eax
  00284	8b ce		 mov	 ecx, esi
  00286	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Erase
  0028b	8b 3f		 mov	 edi, DWORD PTR [edi]
  0028d	53		 push	 ebx
  0028e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00293	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00296	83 c4 04	 add	 esp, 4
  00299	84 c0		 test	 al, al
  0029b	8b df		 mov	 ebx, edi
  0029d	74 e1		 je	 SHORT $L188672
$L188674:
  0029f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002a2	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002a5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002a8	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  002af	89 00		 mov	 DWORD PTR [eax], eax
  002b1	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  002b4	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 20   : 
; 21   : 	m_mapSWITCH.clear();

  002b7	8b 4d 38	 mov	 ecx, DWORD PTR [ebp+56]
  002ba	8b 59 04	 mov	 ebx, DWORD PTR [ecx+4]
  002bd	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  002c0	84 c0		 test	 al, al
  002c2	8d 75 34	 lea	 esi, DWORD PTR [ebp+52]
  002c5	8b fb		 mov	 edi, ebx
  002c7	75 26		 jne	 SHORT $L188759
  002c9	8d a4 24 00 00
	00 00		 npad	 7
$L188757:
  002d0	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  002d3	52		 push	 edx
  002d4	8b ce		 mov	 ecx, esi
  002d6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  002db	8b 3f		 mov	 edi, DWORD PTR [edi]
  002dd	53		 push	 ebx
  002de	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002e3	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  002e6	83 c4 04	 add	 esp, 4
  002e9	84 c0		 test	 al, al
  002eb	8b df		 mov	 ebx, edi
  002ed	74 e1		 je	 SHORT $L188757
$L188759:
  002ef	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002f2	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002f5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002f8	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  002ff	89 00		 mov	 DWORD PTR [eax], eax
  00301	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00304	89 76 08	 mov	 DWORD PTR [esi+8], esi

; 22   : 	m_mapGATE.clear();

  00307	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  0030a	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  0030d	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00310	84 c0		 test	 al, al
  00312	8b f7		 mov	 esi, edi
  00314	75 20		 jne	 SHORT $L188854
$L188852:
  00316	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00319	51		 push	 ecx
  0031a	8d 4d 40	 lea	 ecx, DWORD PTR [ebp+64]
  0031d	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
  00322	8b 36		 mov	 esi, DWORD PTR [esi]
  00324	57		 push	 edi
  00325	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0032a	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  0032d	83 c4 04	 add	 esp, 4
  00330	84 c0		 test	 al, al
  00332	8b fe		 mov	 edi, esi
  00334	74 e0		 je	 SHORT $L188852
$L188854:
  00336	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  00339	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0033c	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  0033f	33 c9		 xor	 ecx, ecx
  00341	89 4d 48	 mov	 DWORD PTR [ebp+72], ecx
  00344	89 00		 mov	 DWORD PTR [eax], eax
  00346	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  00349	5f		 pop	 edi
  0034a	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 23   : 	
; 24   : 	m_dwID = 0;

  0034d	89 8d 78 01 00
	00		 mov	 DWORD PTR [ebp+376], ecx

; 25   : }

  00353	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00357	5e		 pop	 esi
  00358	8b c5		 mov	 eax, ebp
  0035a	5d		 pop	 ebp
  0035b	5b		 pop	 ebx
  0035c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00363	83 c4 18	 add	 esp, 24			; 00000018H
  00366	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187036:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@@std@@QAE@XZ
$L187037:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@@std@@QAE@XZ
$L187038:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
$L187039:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@QAE@XZ
$L187040:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
$L187041:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0CTCell@@QAE@XZ:
  00042	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188879
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTCell@@QAE@XZ ENDP					; CTCell::CTCell
; Function compile flags: /Ogty
;	COMDAT ??_GCTCell@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTCell@@UAEPAXI@Z PROC NEAR				; CTCell::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTCell@@UAE@XZ	; CTCell::~CTCell
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188905
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188905:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTCell@@UAEPAXI@Z ENDP				; CTCell::`scalar deleting destructor'
_TEXT	ENDS
END
