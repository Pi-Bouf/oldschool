; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\SSSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_1EO@BGAEGJFB@?$AA?$HL?$AA5?$AA1?$AAA?$AAB?$AA7?$AAA?$AA3?$AA0?$AA?9?$AA9?$AA9?$AA5?$AAA?$AA?9?$AA4?$AA4?$AAA?$AAB?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@JJOAEHDK@?$HL51AB7A30?9995A?944AB?9B869?97D79E92@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGFEPDED@LocalService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CCDHMLDD@?9?1?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MIGBKCMN@UnregServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LJBJJPCG@RegServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNHNHBAB@Install?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LAEJNBCE@UnInstall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBFDLFJJ@?$CFs?5?9Name?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GECJKCAK@Could?5not?5open?5Service?5Manager?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCEGMCNE@RPCSS?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDJFCBEP@Could?5not?5start?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@NGMHGENG@Char?5Save?5Error?5?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMOCNDDL@Could?5not?5open?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKJBBOLK@Could?5not?5stop?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMBIIKKI@Could?5not?5delete?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetAppId@CTMapSvrModule@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppIdT@CTMapSvrModule@@SAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryAppId@CTMapSvrModule@@SGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterAppId@CTMapSvrModule@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Install@CTMapSvrModule@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LOCALRECORD_ACK@CTMapSvrModule@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Tokenize@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@PBDAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAUtagRECORDSET@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterAppId@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsInstalled@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Uninstall@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTChannel@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTSkill@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagCABINET@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCQuest@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagPET@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEAAUtagRECORDSET@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagLOCAL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCTMapSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanIncluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanExcluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@IAEXPAPAVCTItem@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UninitializeCom@?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTChannel@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTSkill@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagCABINET@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCQuest@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagPET@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEABUtagRECORDSET@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagLOCAL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEAAPAVCTItem@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagLOCAL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagCABINET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagPET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagPROTECTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCQuest@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTChannel@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagARENA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagARENA@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEABQAVCTItem@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTItem@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTItem@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlLoadString@ATL@@YAHIPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WordCmpI@CAtlModule@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
PUBLIC	?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_CLOSECHAR_ACK
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	SEGMENT
$T184683 DD	0ffffffffH
	DD	FLAT:$L184674
$T184678 DD	019930520H
	DD	01H
	DD	FLAT:$T184683
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184671 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CLOSECHAR_ACK, COMDAT
; _this$ = ecx

; 227  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 228  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184671[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184673
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184673:

; 229  : 
; 230  : 	pMSG->SetID(MW_CLOSECHAR_ACK)
; 231  : 		<< dwCharID
; 232  : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0c 20 00 00	 push	 8204			; 0000200cH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 233  : 
; 234  : 	m_world.Say(pMSG);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 235  : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184674:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184671[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184678
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CLOSECHAR_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_CLOSECHAR_ACK
PUBLIC	?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z	; CTMapSvrModule::SendMW_ADDCHAR_ACK
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184698 DD	0ffffffffH
	DD	FLAT:$L184694
$T184696 DD	019930520H
	DD	01H
	DD	FLAT:$T184698
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z
_TEXT	SEGMENT
$T184691 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwIPAddr$ = 16						; size = 4
_wPort$ = 20						; size = 2
_dwUserID$ = 24						; size = 4
?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z PROC NEAR ; CTMapSvrModule::SendMW_ADDCHAR_ACK, COMDAT
; _this$ = ecx

; 242  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 243  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184691[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184693
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184693:

; 244  : 
; 245  : 	pMSG->SetID(MW_ADDCHAR_ACK)
; 246  : 		<< dwCharID
; 247  : 		<< dwKEY
; 248  : 		<< dwIPAddr
; 249  : 		<< wPort
; 250  : 		<< dwUserID;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwUserID$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _wPort$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwIPAddr$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 02 20 00 00	 push	 8194			; 00002002H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 251  : 
; 252  : 	m_world.Say(pMSG);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 253  : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184694:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184691[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184696
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDCHAR_ACK@CTMapSvrModule@@QAEXKKKGK@Z ENDP	; CTMapSvrModule::SendMW_ADDCHAR_ACK
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L184711

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L184711
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L184712
$L184711:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L184712:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z	; CTMapSvrModule::SendMW_TELEPORT_ACK
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	SEGMENT
$T184738 DD	0ffffffffH
	DD	FLAT:$L184734
$T184736 DD	019930520H
	DD	01H
	DD	FLAT:$T184738
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T184731 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bServerID$ = 16					; size = 1
?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_TELEPORT_ACK, COMDAT
; _this$ = ecx

; 422  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 423  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184731[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184733
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184733:

; 424  : 
; 425  : 	pMSG->SetID(MW_TELEPORT_ACK)
; 426  : 		<< dwCharID
; 427  : 		<< dwKEY
; 428  : 		<< bServerID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bServerID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 be 20 00 00	 push	 8382			; 000020beH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 429  : 
; 430  : 	m_world.Say(pMSG);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 431  : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184734:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184731[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184736
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TELEPORT_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP	; CTMapSvrModule::SendMW_TELEPORT_ACK
PUBLIC	?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_RECALLMONDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184752 DD	0ffffffffH
	DD	FLAT:$L184748
$T184750 DD	019930520H
	DD	01H
	DD	FLAT:$T184752
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T184745 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwMonID$ = 16						; size = 4
?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_RECALLMONDEL_ACK, COMDAT
; _this$ = ecx

; 613  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 614  : 	CPacket * pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184745[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184747
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184747:

; 615  : 
; 616  : 	pMSG->SetID(MW_RECALLMONDEL_ACK)
; 617  : 		<< dwCharID
; 618  : 		<< dwKey
; 619  : 		<< dwMonID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwMonID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 bb 20 00 00	 push	 8379			; 000020bbH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 620  : 
; 621  : 	m_world.Say(pMSG);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 622  : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184748:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184745[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184750
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RECALLMONDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_RECALLMONDEL_ACK
PUBLIC	?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_ENTERCHAR_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184766 DD	0ffffffffH
	DD	FLAT:$L184762
$T184764 DD	019930520H
	DD	01H
	DD	FLAT:$T184766
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184759 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_ENTERCHAR_ACK, COMDAT
; _this$ = ecx

; 626  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 627  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184759[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184761
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184761:

; 628  : 
; 629  : 	pMSG->SetID(MW_ENTERCHAR_ACK)
; 630  : 		<< dwCharID
; 631  : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 06 20 00 00	 push	 8198			; 00002006H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 632  : 
; 633  : 	m_world.Say(pMSG);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 634  : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184762:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184759[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184764
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERCHAR_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_ENTERCHAR_ACK
PUBLIC	?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_CHECKMAIN_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184780 DD	0ffffffffH
	DD	FLAT:$L184776
$T184778 DD	019930520H
	DD	01H
	DD	FLAT:$T184780
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184773 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CHECKMAIN_ACK, COMDAT
; _this$ = ecx

; 638  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 639  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184773[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184775
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184775:

; 640  : 
; 641  : 	pMSG->SetID(MW_CHECKMAIN_ACK)
; 642  : 		<< dwCharID
; 643  : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 c5 20 00 00	 push	 8389			; 000020c5H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 644  : 
; 645  : 	m_world.Say(pMSG);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 646  : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184776:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184773[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184778
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHECKMAIN_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_CHECKMAIN_ACK
PUBLIC	?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_CHGPARTYCHIEF_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184794 DD	0ffffffffH
	DD	FLAT:$L184790
$T184792 DD	019930520H
	DD	01H
	DD	FLAT:$T184794
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T184787 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwChiefID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTargetID$ = 16					; size = 4
?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CHGPARTYCHIEF_ACK, COMDAT
; _this$ = ecx

; 2151 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2152 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184787[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184789
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184789:

; 2153 : 
; 2154 : 	pMSG->SetID(MW_CHGPARTYCHIEF_ACK)
; 2155 : 		<< dwChiefID
; 2156 : 		<< dwKEY
; 2157 : 		<< dwTargetID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwTargetID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwChiefID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 a1 20 00 00	 push	 8353			; 000020a1H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2158 : 
; 2159 : 	m_world.Say(pMSG);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2160 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184790:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184787[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184792
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGPARTYCHIEF_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_CHGPARTYCHIEF_ACK
PUBLIC	?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z ; CTMapSvrModule::SendMW_CHGPARTYTYPE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184808 DD	0ffffffffH
	DD	FLAT:$L184804
$T184806 DD	019930520H
	DD	01H
	DD	FLAT:$T184808
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T184801 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bPartyType$ = 16					; size = 1
?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_CHGPARTYTYPE_ACK, COMDAT
; _this$ = ecx

; 2165 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2166 : 	CPacket * pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184801[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184803
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184803:

; 2167 : 
; 2168 : 	pMSG->SetID(MW_CHGPARTYTYPE_ACK)
; 2169 : 		<< dwCharID
; 2170 : 		<< dwKEY
; 2171 : 		<< bPartyType;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bPartyType$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 cb 20 00 00	 push	 8395			; 000020cbH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2172 : 
; 2173 : 	m_world.Say(pMSG);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2174 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184804:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184801[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184806
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGPARTYTYPE_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP	; CTMapSvrModule::SendMW_CHGPARTYTYPE_ACK
PUBLIC	?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z	; CTMapSvrModule::SendMW_PARTYDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184822 DD	0ffffffffH
	DD	FLAT:$L184818
$T184820 DD	019930520H
	DD	01H
	DD	FLAT:$T184822
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z
_TEXT	SEGMENT
$T184815 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wPartyID$ = 8						; size = 2
_dwTarget$ = 12						; size = 4
_bKick$ = 16						; size = 1
?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYDEL_ACK, COMDAT
; _this$ = ecx

; 2223 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2224 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184815[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184817
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184817:

; 2225 : 
; 2226 : 	pMsg->SetID(MW_PARTYDEL_ACK)
; 2227 : 		<< wPartyID
; 2228 : 		<< dwTarget
; 2229 : 		<< bKick;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bKick$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _wPartyID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 23 20 00 00	 push	 8227			; 00002023H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2230 : 
; 2231 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2232 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184818:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184815[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184820
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYDEL_ACK@CTMapSvrModule@@QAEXGKE@Z ENDP	; CTMapSvrModule::SendMW_PARTYDEL_ACK
PUBLIC	?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z ; CTMapSvrModule::SendMW_PARTYMANSTAT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184836 DD	0ffffffffH
	DD	FLAT:$L184832
$T184834 DD	019930520H
	DD	01H
	DD	FLAT:$T184836
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z
_TEXT	SEGMENT
$T184829 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wPartyID$ = 8						; size = 2
_dwID$ = 12						; size = 4
_bType$ = 16						; size = 1
_bLevel$ = 20						; size = 1
_dwMaxHP$ = 24						; size = 4
_dwCurHP$ = 28						; size = 4
_dwMaxMP$ = 32						; size = 4
_dwCurMP$ = 36						; size = 4
?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYMANSTAT_ACK, COMDAT
; _this$ = ecx

; 2241 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2242 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184829[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184831
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184831:

; 2243 : 
; 2244 : 	pMsg->SetID(MW_PARTYMANSTAT_ACK)
; 2245 : 		<< wPartyID
; 2246 : 		<< dwID
; 2247 : 		<< bType
; 2248 : 		<< bLevel
; 2249 : 		<< dwMaxHP
; 2250 : 		<< dwCurHP
; 2251 : 		<< dwMaxMP
; 2252 : 		<< dwCurMP;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _dwCurMP$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwMaxMP$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _dwCurHP$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _dwMaxHP$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bLevel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bType$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _wPartyID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 25 20 00 00	 push	 8229			; 00002025H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2253 : 
; 2254 : 	m_world.Say(pMsg);

  000af	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000b5	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000bb	56		 push	 esi
  000bc	ff 12		 call	 DWORD PTR [edx]

; 2255 : }

  000be	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cb	83 c4 10	 add	 esp, 16			; 00000010H
  000ce	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184832:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184829[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184834
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMANSTAT_ACK@CTMapSvrModule@@QAEXGKEEKKKK@Z ENDP ; CTMapSvrModule::SendMW_PARTYMANSTAT_ACK
PUBLIC	?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z	; CTMapSvrModule::SendMW_LEVELUP_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184850 DD	0ffffffffH
	DD	FLAT:$L184846
$T184848 DD	019930520H
	DD	01H
	DD	FLAT:$T184850
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T184843 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bLevel$ = 16						; size = 1
?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR	; CTMapSvrModule::SendMW_LEVELUP_ACK, COMDAT
; _this$ = ecx

; 2259 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2260 : 	CPacket * pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184843[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184845
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184845:

; 2261 : 	pMSG->SetID(MW_LEVELUP_ACK)
; 2262 : 		<< dwCharID
; 2263 : 		<< dwKey
; 2264 : 		<< bLevel;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bLevel$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 27 20 00 00	 push	 8231			; 00002027H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2265 : 
; 2266 : 	m_world.Say(pMSG);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2267 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184846:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184843[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184848
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LEVELUP_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP	; CTMapSvrModule::SendMW_LEVELUP_ACK
PUBLIC	?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z ; CTMapSvrModule::SendMW_GUILDDISORGANIZATION_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184864 DD	0ffffffffH
	DD	FLAT:$L184860
$T184862 DD	019930520H
	DD	01H
	DD	FLAT:$T184864
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T184857 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDDISORGANIZATION_ACK, COMDAT
; _this$ = ecx

; 2285 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2286 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184857[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184859
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184859:

; 2287 : 	pMsg->SetID(MW_GUILDDISORGANIZATION_ACK)
; 2288 : 		<< dwCharID
; 2289 : 		<< dwKey
; 2290 : 		<< bRet;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bRet$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 2d 20 00 00	 push	 8237			; 0000202dH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2291 : 
; 2292 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2293 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184860:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184857[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184862
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDDISORGANIZATION_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP ; CTMapSvrModule::SendMW_GUILDDISORGANIZATION_ACK
PUBLIC	?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z ; CTMapSvrModule::SendMW_GUILDINVITEANSWER_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184878 DD	0ffffffffH
	DD	FLAT:$L184874
$T184876 DD	019930520H
	DD	01H
	DD	FLAT:$T184878
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z
_TEXT	SEGMENT
$T184871 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bAnswer$ = 16						; size = 1
_dwInviter$ = 20					; size = 4
?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDINVITEANSWER_ACK, COMDAT
; _this$ = ecx

; 2310 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2311 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184871[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184873
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184873:

; 2312 : 	pMsg->SetID(MW_GUILDINVITEANSWER_ACK)
; 2313 : 		<< dwCharID
; 2314 : 		<< dwKey
; 2315 : 		<< bAnswer
; 2316 : 		<< dwInviter;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwInviter$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bAnswer$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 30 20 00 00	 push	 8240			; 00002030H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2317 : 
; 2318 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2319 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184874:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184871[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184876
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDINVITEANSWER_ACK@CTMapSvrModule@@QAEXKKEK@Z ENDP ; CTMapSvrModule::SendMW_GUILDINVITEANSWER_ACK
PUBLIC	?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_GUILDLEAVE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184892 DD	0ffffffffH
	DD	FLAT:$L184888
$T184890 DD	019930520H
	DD	01H
	DD	FLAT:$T184892
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184885 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDLEAVE_ACK, COMDAT
; _this$ = ecx

; 2322 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2323 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184885[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184887
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184887:

; 2324 : 	pMsg->SetID(MW_GUILDLEAVE_ACK)
; 2325 : 		<< dwCharID
; 2326 : 		<< dwKey;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 33 20 00 00	 push	 8243			; 00002033H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2327 : 
; 2328 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2329 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184888:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184885[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184890
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDLEAVE_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_GUILDLEAVE_ACK
PUBLIC	?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDMEMBERLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184906 DD	0ffffffffH
	DD	FLAT:$L184902
$T184904 DD	019930520H
	DD	01H
	DD	FLAT:$T184906
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184899 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDMEMBERLIST_ACK, COMDAT
; _this$ = ecx

; 2372 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2373 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184899[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184901
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184901:

; 2374 : 	pMsg->SetID(MW_GUILDMEMBERLIST_ACK)
; 2375 : 		<< dwCharID
; 2376 : 		<< dwKey;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 3c 20 00 00	 push	 8252			; 0000203cH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2377 : 
; 2378 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2379 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184902:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184899[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184904
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDMEMBERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDMEMBERLIST_ACK
PUBLIC	?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_GUILDINFO_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184920 DD	0ffffffffH
	DD	FLAT:$L184916
$T184918 DD	019930520H
	DD	01H
	DD	FLAT:$T184920
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184913 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDINFO_ACK, COMDAT
; _this$ = ecx

; 2382 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2383 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184913[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184915
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184915:

; 2384 : 	pMsg->SetID(MW_GUILDINFO_ACK)
; 2385 : 		<< dwCharID
; 2386 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 39 20 00 00	 push	 8249			; 00002039H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2387 : 
; 2388 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2389 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184916:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184913[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184918
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDINFO_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_GUILDINFO_ACK
PUBLIC	?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDCABINETLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184934 DD	0ffffffffH
	DD	FLAT:$L184930
$T184932 DD	019930520H
	DD	01H
	DD	FLAT:$T184934
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184927 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDCABINETLIST_ACK, COMDAT
; _this$ = ecx

; 2393 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2394 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184927[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184929
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184929:

; 2395 : 	pMsg->SetID(MW_GUILDCABINETLIST_ACK)
; 2396 : 		<< dwCharID
; 2397 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 d1 20 00 00	 push	 8401			; 000020d1H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2398 : 
; 2399 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2400 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184930:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184927[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184932
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCABINETLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDCABINETLIST_ACK
PUBLIC	?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z ; CTMapSvrModule::SendMW_GUILDCABINETPUTIN_ACK
EXTRN	?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z:NEAR	; CTItem::WrapPacket
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184948 DD	0ffffffffH
	DD	FLAT:$L184944
$T184946 DD	019930520H
	DD	01H
	DD	FLAT:$T184948
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z
_TEXT	SEGMENT
$T184941 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwItemID$ = 16						; size = 4
_pItem$ = 20						; size = 4
?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDCABINETPUTIN_ACK, COMDAT
; _this$ = ecx

; 2457 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2458 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184941[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184943
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184943:

; 2459 : 	pMsg->SetID(MW_GUILDCABINETPUTIN_ACK)
; 2460 : 		<< dwCharID
; 2461 : 		<< dwKEY
; 2462 : 		<< dwItemID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwItemID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 d3 20 00 00	 push	 8403			; 000020d3H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2463 : 
; 2464 : 	pItem->WrapPacket(pMsg);

  00073	8b 4c 24 28	 mov	 ecx, DWORD PTR _pItem$[esp+20]
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 2465 : 	m_world.Say(pMsg);

  0007d	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00083	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00089	56		 push	 esi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 2466 : }

  0008c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00099	83 c4 10	 add	 esp, 16			; 00000010H
  0009c	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184944:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184941[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184946
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCABINETPUTIN_ACK@CTMapSvrModule@@QAEXKKKPAVCTItem@@@Z ENDP ; CTMapSvrModule::SendMW_GUILDCABINETPUTIN_ACK
PUBLIC	?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z ; CTMapSvrModule::SendMW_GUILDCABINETTAKEOUT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184962 DD	0ffffffffH
	DD	FLAT:$L184958
$T184960 DD	019930520H
	DD	01H
	DD	FLAT:$T184962
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT
$T184955 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwItemID$ = 16						; size = 4
_bCount$ = 20						; size = 1
?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDCABINETTAKEOUT_ACK, COMDAT
; _this$ = ecx

; 2472 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2473 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184955[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184957
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184957:

; 2474 : 	pMsg->SetID(MW_GUILDCABINETTAKEOUT_ACK)
; 2475 : 		<< dwCharID
; 2476 : 		<< dwKEY
; 2477 : 		<< dwItemID
; 2478 : 		<< bCount;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bCount$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwItemID$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 d5 20 00 00	 push	 8405			; 000020d5H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2479 : 
; 2480 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2481 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184958:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184955[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184960
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCABINETTAKEOUT_ACK@CTMapSvrModule@@QAEXKKKE@Z ENDP ; CTMapSvrModule::SendMW_GUILDCABINETTAKEOUT_ACK
PUBLIC	?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z ; CTMapSvrModule::SendMW_GUILDCONTRIBUTION_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184976 DD	0ffffffffH
	DD	FLAT:$L184972
$T184974 DD	019930520H
	DD	01H
	DD	FLAT:$T184976
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z
_TEXT	SEGMENT
$T184969 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwExp$ = 16						; size = 4
_dwGold$ = 20						; size = 4
_dwSilver$ = 24						; size = 4
_dwCooper$ = 28						; size = 4
_dwPvPoint$ = 32					; size = 4
?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDCONTRIBUTION_ACK, COMDAT
; _this$ = ecx

; 2489 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2490 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184969[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184971
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184971:

; 2491 : 	pMsg->SetID(MW_GUILDCONTRIBUTION_ACK)
; 2492 : 		<< dwCharID
; 2493 : 		<< dwKEY
; 2494 : 		<< dwExp
; 2495 : 		<< dwGold
; 2496 : 		<< dwSilver
; 2497 : 		<< dwCooper
; 2498 : 		<< dwPvPoint;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _dwPvPoint$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCooper$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _dwSilver$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dwGold$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwExp$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 d7 20 00 00	 push	 8407			; 000020d7H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2499 : 
; 2500 : 	m_world.Say(pMsg);

  000a3	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000a9	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000af	56		 push	 esi
  000b0	ff 12		 call	 DWORD PTR [edx]

; 2501 : }

  000b2	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bf	83 c4 10	 add	 esp, 16			; 00000010H
  000c2	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184972:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184969[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184974
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCONTRIBUTION_ACK@CTMapSvrModule@@QAEXKKKKKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDCONTRIBUTION_ACK
PUBLIC	?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDARTICLELIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T184990 DD	0ffffffffH
	DD	FLAT:$L184986
$T184988 DD	019930520H
	DD	01H
	DD	FLAT:$T184990
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T184983 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDARTICLELIST_ACK, COMDAT
; _this$ = ecx

; 2504 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2505 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184983[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184985
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184985:

; 2506 : 	pMsg->SetID(MW_GUILDARTICLELIST_ACK)
; 2507 : 		<< dwCharID
; 2508 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 d9 20 00 00	 push	 8409			; 000020d9H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2509 : 
; 2510 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2511 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184986:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184983[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184988
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLELIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDARTICLELIST_ACK
PUBLIC	?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_GUILDARTICLEDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185004 DD	0ffffffffH
	DD	FLAT:$L185000
$T185002 DD	019930520H
	DD	01H
	DD	FLAT:$T185004
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T184997 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDARTICLEDEL_ACK, COMDAT
; _this$ = ecx

; 2529 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2530 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T184997[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L184999
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L184999:

; 2531 : 	pMsg->SetID(MW_GUILDARTICLEDEL_ACK)
; 2532 : 		<< dwCharID
; 2533 : 		<< dwKEY
; 2534 : 		<< dwID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 dd 20 00 00	 push	 8413			; 000020ddH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2535 : 
; 2536 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2537 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185000:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T184997[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185002
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDARTICLEDEL_ACK
PUBLIC	?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z ; CTMapSvrModule::SendMW_GUILDFAME_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185018 DD	0ffffffffH
	DD	FLAT:$L185014
$T185016 DD	019930520H
	DD	01H
	DD	FLAT:$T185018
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT
$T185011 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwFame$ = 16						; size = 4
_dwFameColor$ = 20					; size = 4
?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDFAME_ACK, COMDAT
; _this$ = ecx

; 2558 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2559 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185011[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185013
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185013:

; 2560 : 	pMsg->SetID(MW_GUILDFAME_ACK)
; 2561 : 		<< dwCharID
; 2562 : 		<< dwKEY
; 2563 : 		<< dwFame
; 2564 : 		<< dwFameColor;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwFameColor$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwFame$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 df 20 00 00	 push	 8415			; 000020dfH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2565 : 
; 2566 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2567 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185014:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185011[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185016
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDFAME_ACK@CTMapSvrModule@@QAEXKKKK@Z ENDP	; CTMapSvrModule::SendMW_GUILDFAME_ACK
PUBLIC	?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_GUILDWANTEDDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185032 DD	0ffffffffH
	DD	FLAT:$L185028
$T185030 DD	019930520H
	DD	01H
	DD	FLAT:$T185032
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185025 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDWANTEDDEL_ACK, COMDAT
; _this$ = ecx

; 2591 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2592 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185025[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185027
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185027:

; 2593 : 	pMsg->SetID(MW_GUILDWANTEDDEL_ACK)
; 2594 : 		<< dwCharID
; 2595 : 		<< dwKEY
; 2596 : 		<< dwID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e5 20 00 00	 push	 8421			; 000020e5H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2597 : 
; 2598 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2599 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185028:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185025[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185030
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDWANTEDDEL_ACK
PUBLIC	?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDWANTEDLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185046 DD	0ffffffffH
	DD	FLAT:$L185042
$T185044 DD	019930520H
	DD	01H
	DD	FLAT:$T185046
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185039 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDWANTEDLIST_ACK, COMDAT
; _this$ = ecx

; 2602 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2603 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185039[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185041
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185041:

; 2604 : 	pMsg->SetID(MW_GUILDWANTEDLIST_ACK)
; 2605 : 		<< dwCharID
; 2606 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 e7 20 00 00	 push	 8423			; 000020e7H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2607 : 
; 2608 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2609 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185042:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185039[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185044
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDWANTEDLIST_ACK
PUBLIC	?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_GUILDVOLUNTEERING_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185060 DD	0ffffffffH
	DD	FLAT:$L185056
$T185058 DD	019930520H
	DD	01H
	DD	FLAT:$T185060
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185053 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDVOLUNTEERING_ACK, COMDAT
; _this$ = ecx

; 2613 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2614 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185053[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185055
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185055:

; 2615 : 	pMsg->SetID(MW_GUILDVOLUNTEERING_ACK)
; 2616 : 		<< dwCharID
; 2617 : 		<< dwKEY
; 2618 : 		<< dwID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e9 20 00 00	 push	 8425			; 000020e9H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2619 : 
; 2620 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2621 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185056:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185053[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185058
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDVOLUNTEERING_ACK
PUBLIC	?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDVOLUNTEERINGDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185074 DD	0ffffffffH
	DD	FLAT:$L185070
$T185072 DD	019930520H
	DD	01H
	DD	FLAT:$T185074
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185067 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDVOLUNTEERINGDEL_ACK, COMDAT
; _this$ = ecx

; 2624 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2625 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185067[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185069
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185069:

; 2626 : 	pMsg->SetID(MW_GUILDVOLUNTEERINGDEL_ACK)
; 2627 : 		<< dwCharID
; 2628 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 eb 20 00 00	 push	 8427			; 000020ebH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2629 : 
; 2630 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2631 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185070:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185067[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185072
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDVOLUNTEERINGDEL_ACK
PUBLIC	?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDVOLUNTEERLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185088 DD	0ffffffffH
	DD	FLAT:$L185084
$T185086 DD	019930520H
	DD	01H
	DD	FLAT:$T185088
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185081 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDVOLUNTEERLIST_ACK, COMDAT
; _this$ = ecx

; 2634 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2635 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185081[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185083
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185083:

; 2636 : 	pMsg->SetID(MW_GUILDVOLUNTEERLIST_ACK)
; 2637 : 		<< dwCharID
; 2638 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 ed 20 00 00	 push	 8429			; 000020edH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2639 : 
; 2640 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2641 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185084:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185081[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185086
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDVOLUNTEERLIST_ACK
PUBLIC	?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z ; CTMapSvrModule::SendMW_GUILDVOLUNTEERREPLY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185102 DD	0ffffffffH
	DD	FLAT:$L185098
$T185100 DD	019930520H
	DD	01H
	DD	FLAT:$T185102
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT
$T185095 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTarget$ = 16						; size = 4
_bReply$ = 20						; size = 1
?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDVOLUNTEERREPLY_ACK, COMDAT
; _this$ = ecx

; 2646 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2647 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185095[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185097
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185097:

; 2648 : 	pMsg->SetID(MW_GUILDVOLUNTEERREPLY_ACK)
; 2649 : 		<< dwCharID
; 2650 : 		<< dwKEY
; 2651 : 		<< dwTarget
; 2652 : 		<< bReply;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bReply$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 ef 20 00 00	 push	 8431			; 000020efH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2653 : 
; 2654 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2655 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185098:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185095[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185100
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z ENDP ; CTMapSvrModule::SendMW_GUILDVOLUNTEERREPLY_ACK
PUBLIC	?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185116 DD	0ffffffffH
	DD	FLAT:$L185112
$T185114 DD	019930520H
	DD	01H
	DD	FLAT:$T185116
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185109 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDDEL_ACK, COMDAT
; _this$ = ecx

; 2689 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2690 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185109[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185111
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185111:

; 2691 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDDEL_ACK)
; 2692 : 		<< dwCharID
; 2693 : 		<< dwKEY
; 2694 : 		<< dwID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 f3 20 00 00	 push	 8435			; 000020f3H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2695 : 
; 2696 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2697 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185112:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185109[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185114
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDDEL_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDDEL_ACK
PUBLIC	?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185130 DD	0ffffffffH
	DD	FLAT:$L185126
$T185128 DD	019930520H
	DD	01H
	DD	FLAT:$T185130
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185123 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDLIST_ACK, COMDAT
; _this$ = ecx

; 2700 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2701 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185123[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185125
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185125:

; 2702 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDLIST_ACK)
; 2703 : 		<< dwCharID
; 2704 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 f5 20 00 00	 push	 8437			; 000020f5H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2705 : 
; 2706 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2707 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185126:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185123[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185128
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDLIST_ACK
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERING_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185144 DD	0ffffffffH
	DD	FLAT:$L185140
$T185142 DD	019930520H
	DD	01H
	DD	FLAT:$T185144
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT
$T185137 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwGuildID$ = 16					; size = 4
_dwID$ = 20						; size = 4
?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERING_ACK, COMDAT
; _this$ = ecx

; 2712 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2713 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185137[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185139
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185139:

; 2714 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERING_ACK)
; 2715 : 		<< dwCharID
; 2716 : 		<< dwKEY
; 2717 : 		<< dwGuildID
; 2718 : 		<< dwID;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 f7 20 00 00	 push	 8439			; 000020f7H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2719 : 
; 2720 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2721 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185140:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185137[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185142
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERING_ACK@CTMapSvrModule@@QAEXKKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERING_ACK
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185158 DD	0ffffffffH
	DD	FLAT:$L185154
$T185156 DD	019930520H
	DD	01H
	DD	FLAT:$T185158
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185151 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK, COMDAT
; _this$ = ecx

; 2724 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2725 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185151[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185153
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185153:

; 2726 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERINGDEL_ACK)
; 2727 : 		<< dwCharID
; 2728 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 f9 20 00 00	 push	 8441			; 000020f9H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2729 : 
; 2730 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2731 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185154:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185151[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185156
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERINGDEL_ACK
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185172 DD	0ffffffffH
	DD	FLAT:$L185168
$T185170 DD	019930520H
	DD	01H
	DD	FLAT:$T185172
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185165 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERLIST_ACK, COMDAT
; _this$ = ecx

; 2734 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2735 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185165[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185167
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185167:

; 2736 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERLIST_ACK)
; 2737 : 		<< dwCharID
; 2738 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 fb 20 00 00	 push	 8443			; 000020fbH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2739 : 
; 2740 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2741 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185168:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185165[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185170
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSVOLUNTEERLIST_ACK
PUBLIC	?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z ; CTMapSvrModule::SendMW_GUILDTACTICSREPLY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185186 DD	0ffffffffH
	DD	FLAT:$L185182
$T185184 DD	019930520H
	DD	01H
	DD	FLAT:$T185186
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT
$T185179 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTarget$ = 16						; size = 4
_bReply$ = 20						; size = 1
?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSREPLY_ACK, COMDAT
; _this$ = ecx

; 2746 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2747 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185179[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185181
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185181:

; 2748 : 	pMsg->SetID(MW_GUILDTACTICSREPLY_ACK)
; 2749 : 		<< dwCharID
; 2750 : 		<< dwKEY
; 2751 : 		<< dwTarget
; 2752 : 		<< bReply;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bReply$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 fd 20 00 00	 push	 8445			; 000020fdH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2753 : 
; 2754 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 2755 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185182:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185179[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185184
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSREPLY_ACK@CTMapSvrModule@@QAEXKKKE@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSREPLY_ACK
PUBLIC	?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSKICKOUT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185200 DD	0ffffffffH
	DD	FLAT:$L185196
$T185198 DD	019930520H
	DD	01H
	DD	FLAT:$T185200
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185193 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTarget$ = 16						; size = 4
?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSKICKOUT_ACK, COMDAT
; _this$ = ecx

; 2759 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2760 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185193[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185195
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185195:

; 2761 : 	pMsg->SetID(MW_GUILDTACTICSKICKOUT_ACK)
; 2762 : 		<< dwCharID
; 2763 : 		<< dwKEY
; 2764 : 		<< dwTarget;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwTarget$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 ff 20 00 00	 push	 8447			; 000020ffH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2765 : 
; 2766 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2767 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185196:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185193[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185198
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSKICKOUT_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSKICKOUT_ACK
PUBLIC	?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185214 DD	0ffffffffH
	DD	FLAT:$L185210
$T185212 DD	019930520H
	DD	01H
	DD	FLAT:$T185214
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185207 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSLIST_ACK, COMDAT
; _this$ = ecx

; 2816 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2817 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185207[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185209
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185209:

; 2818 : 	pMsg->SetID(MW_GUILDTACTICSLIST_ACK)
; 2819 : 		<< dwCharID
; 2820 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 3a 21 00 00	 push	 8506			; 0000213aH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2821 : 
; 2822 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 2823 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185210:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185207[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185212
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSLIST_ACK
PUBLIC	?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_TAKEMONMONEY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185228 DD	0ffffffffH
	DD	FLAT:$L185224
$T185226 DD	019930520H
	DD	01H
	DD	FLAT:$T185228
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185221 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwMoney$ = 16						; size = 4
?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_TAKEMONMONEY_ACK, COMDAT
; _this$ = ecx

; 2864 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2865 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185221[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185223
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185223:

; 2866 : 
; 2867 : 	pMsg->SetID(MW_TAKEMONMONEY_ACK)
; 2868 : 		<< dwCharID
; 2869 : 		<< dwKEY
; 2870 : 		<< dwMoney;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwMoney$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 45 20 00 00	 push	 8261			; 00002045H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2871 : 
; 2872 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 2873 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185224:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185221[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185226
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TAKEMONMONEY_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_TAKEMONMONEY_ACK
PUBLIC	?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z ; CTMapSvrModule::SendMW_MONSTERDIE_ACK
EXTRN	??6CPacket@@QAEAAV0@M@Z:NEAR			; CPacket::operator<<
EXTRN	__fltused:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185243 DD	0ffffffffH
	DD	FLAT:$L185238
$T185240 DD	019930520H
	DD	01H
	DD	FLAT:$T185243
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z
_TEXT	SEGMENT
$T185235 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwExp$ = 16						; size = 4
_dwMonID$ = 20						; size = 4
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
_wMonTermID$ = 36					; size = 2
_bTermType$ = 40					; size = 1
_bTriggerType$ = 44					; size = 1
_bCount$ = 48						; size = 1
?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z PROC NEAR ; CTMapSvrModule::SendMW_MONSTERDIE_ACK, COMDAT
; _this$ = ecx

; 2886 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2887 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185235[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185237
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185237:

; 2888 : 	pMsg->SetID(MW_MONSTERDIE_ACK)
; 2889 : 		<< dwCharID
; 2890 : 		<< dwKEY
; 2891 : 		<< dwExp
; 2892 : 		<< dwMonID
; 2893 : 		<< fPosX
; 2894 : 		<< fPosY
; 2895 : 		<< fPosZ
; 2896 : 		<< wMonTermID
; 2897 : 		<< bTermType
; 2898 : 		<< bTriggerType
; 2899 : 		<< bCount;

  0003b	8b 44 24 44	 mov	 eax, DWORD PTR _bCount$[esp+20]
  0003f	8b 4c 24 40	 mov	 ecx, DWORD PTR _bTriggerType$[esp+20]
  00043	8b 54 24 3c	 mov	 edx, DWORD PTR _bTermType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 3c	 mov	 eax, DWORD PTR _wMonTermID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 3c	 mov	 ecx, DWORD PTR _fPosZ$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 3c	 mov	 edx, DWORD PTR _fPosY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 3c	 mov	 eax, DWORD PTR _fPosX$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dwMonID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 3c	 mov	 edx, DWORD PTR _dwExp$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 3c	 mov	 eax, DWORD PTR _dwKEY$[esp+48]
  0006a	51		 push	 ecx
  0006b	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dwCharID$[esp+52]
  0006f	52		 push	 edx
  00070	50		 push	 eax
  00071	51		 push	 ecx
  00072	68 43 20 00 00	 push	 8259			; 00002043H
  00077	8b ce		 mov	 ecx, esi
  00079	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+80], -1
  00081	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000b0	8b c8		 mov	 ecx, eax
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c5	8b c8		 mov	 ecx, eax
  000c7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2900 : 
; 2901 : 	m_world.Say(pMsg);	

  000d3	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000d9	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000df	56		 push	 esi
  000e0	ff 12		 call	 DWORD PTR [edx]

; 2902 : }

  000e2	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ef	83 c4 10	 add	 esp, 16			; 00000010H
  000f2	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185238:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185235[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185240
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONSTERDIE_ACK@CTMapSvrModule@@QAEXKKKKMMMGEEE@Z ENDP ; CTMapSvrModule::SendMW_MONSTERDIE_ACK
PUBLIC	?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z ; CTMapSvrModule::SendMW_ADDITEM_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185257 DD	0ffffffffH
	DD	FLAT:$L185253
$T185255 DD	019930520H
	DD	01H
	DD	FLAT:$T185257
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z
_TEXT	SEGMENT
$T185250 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bServerID$ = 16					; size = 1
_bChannel$ = 20						; size = 1
_wMapID$ = 24						; size = 2
_dwMonID$ = 28						; size = 4
_bInvenID$ = 32						; size = 1
_bSlotID$ = 36						; size = 1
_pItem$ = 40						; size = 4
?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendMW_ADDITEM_ACK, COMDAT
; _this$ = ecx

; 2913 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2914 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185250[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185252
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185252:

; 2915 : 	pMsg->SetID(MW_ADDITEM_ACK)
; 2916 : 		<< dwCharID
; 2917 : 		<< dwKEY
; 2918 : 		<< bServerID
; 2919 : 		<< bChannel
; 2920 : 		<< wMapID
; 2921 : 		<< dwMonID
; 2922 : 		<< bInvenID
; 2923 : 		<< bSlotID;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _bSlotID$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _bInvenID$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _dwMonID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bServerID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 47 20 00 00	 push	 8263			; 00002047H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2924 : 
; 2925 : 	pItem->WrapPacket(pMsg);

  000af	8b 4c 24 3c	 mov	 ecx, DWORD PTR _pItem$[esp+20]
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 2926 : 
; 2927 : 	m_world.Say(pMsg);

  000b9	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000bf	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000c5	56		 push	 esi
  000c6	ff 12		 call	 DWORD PTR [edx]

; 2928 : }

  000c8	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d5	83 c4 10	 add	 esp, 16			; 00000010H
  000d8	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185253:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185250[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185255
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDITEM_ACK@CTMapSvrModule@@QAEXKKEEGKEEPAVCTItem@@@Z ENDP ; CTMapSvrModule::SendMW_ADDITEM_ACK
PUBLIC	?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendMW_FRIENDERASE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185271 DD	0ffffffffH
	DD	FLAT:$L185267
$T185269 DD	019930520H
	DD	01H
	DD	FLAT:$T185271
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185264 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTarget$ = 16						; size = 4
?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDERASE_ACK, COMDAT
; _this$ = ecx

; 3017 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3018 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185264[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185266
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185266:

; 3019 : 	pMsg->SetID(MW_FRIENDERASE_ACK)
; 3020 : 		<< dwCharID
; 3021 : 		<< dwKey
; 3022 : 		<< dwTarget;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwTarget$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 55 20 00 00	 push	 8277			; 00002055H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3023 : 
; 3024 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3025 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185267:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185264[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185269
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDERASE_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_FRIENDERASE_ACK
PUBLIC	?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z ; CTMapSvrModule::SendMW_FRIENDGROUPDELETE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185285 DD	0ffffffffH
	DD	FLAT:$L185281
$T185283 DD	019930520H
	DD	01H
	DD	FLAT:$T185285
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T185278 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bGroup$ = 16						; size = 1
?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDGROUPDELETE_ACK, COMDAT
; _this$ = ecx

; 3043 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3044 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185278[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185280
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185280:

; 3045 : 	pMsg->SetID(MW_FRIENDGROUPDELETE_ACK)
; 3046 : 		<< dwCharID
; 3047 : 		<< dwKey
; 3048 : 		<< bGroup;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bGroup$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 5c 20 00 00	 push	 8284			; 0000205cH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3049 : 
; 3050 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3051 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185281:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185278[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185283
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPDELETE_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP ; CTMapSvrModule::SendMW_FRIENDGROUPDELETE_ACK
PUBLIC	?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z ; CTMapSvrModule::SendMW_FRIENDGROUPCHANGE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185299 DD	0ffffffffH
	DD	FLAT:$L185295
$T185297 DD	019930520H
	DD	01H
	DD	FLAT:$T185299
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT
$T185292 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwFriend$ = 16						; size = 4
_bGroup$ = 20						; size = 1
?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDGROUPCHANGE_ACK, COMDAT
; _this$ = ecx

; 3056 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3057 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185292[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185294
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185294:

; 3058 : 	pMsg->SetID(MW_FRIENDGROUPCHANGE_ACK)
; 3059 : 		<< dwCharID
; 3060 : 		<< dwKey
; 3061 : 		<< dwFriend
; 3062 : 		<< bGroup;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bGroup$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwFriend$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 5e 20 00 00	 push	 8286			; 0000205eH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3063 : 
; 3064 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 3065 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185295:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185292[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185297
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPCHANGE_ACK@CTMapSvrModule@@QAEXKKKE@Z ENDP ; CTMapSvrModule::SendMW_FRIENDGROUPCHANGE_ACK
PUBLIC	?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z ; CTMapSvrModule::SendMW_ADDITEMRESULT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185313 DD	0ffffffffH
	DD	FLAT:$L185309
$T185311 DD	019930520H
	DD	01H
	DD	FLAT:$T185313
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z
_TEXT	SEGMENT
$T185306 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bServerID$ = 16					; size = 1
_bChannel$ = 20						; size = 1
_wMapID$ = 24						; size = 2
_dwMonID$ = 28						; size = 4
_bItemID$ = 32						; size = 1
_bResult$ = 36						; size = 1
?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z PROC NEAR ; CTMapSvrModule::SendMW_ADDITEMRESULT_ACK, COMDAT
; _this$ = ecx

; 3101 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3102 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185306[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185308
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185308:

; 3103 : 	pMsg->SetID(MW_ADDITEMRESULT_ACK)
; 3104 : 		<< dwCharID
; 3105 : 		<< dwKEY
; 3106 : 		<< bServerID
; 3107 : 		<< bChannel
; 3108 : 		<< wMapID
; 3109 : 		<< dwMonID
; 3110 : 		<< bItemID
; 3111 : 		<< bResult;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _bItemID$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _dwMonID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bServerID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 62 20 00 00	 push	 8290			; 00002062H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3112 : 
; 3113 : 	m_world.Say(pMsg);

  000af	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000b5	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000bb	56		 push	 esi
  000bc	ff 12		 call	 DWORD PTR [edx]

; 3114 : }

  000be	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cb	83 c4 10	 add	 esp, 16			; 00000010H
  000ce	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185309:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185306[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185311
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDITEMRESULT_ACK@CTMapSvrModule@@QAEXKKEEGKEE@Z ENDP ; CTMapSvrModule::SendMW_ADDITEMRESULT_ACK
PUBLIC	?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_ENTERSOLOMAP_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185327 DD	0ffffffffH
	DD	FLAT:$L185323
$T185325 DD	019930520H
	DD	01H
	DD	FLAT:$T185327
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185320 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_ENTERSOLOMAP_ACK, COMDAT
; _this$ = ecx

; 3118 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3119 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185320[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185322
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185322:

; 3120 : 
; 3121 : 	pMsg->SetID(MW_ENTERSOLOMAP_ACK)
; 3122 : 		<< dwCharID
; 3123 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 c2 20 00 00	 push	 8386			; 000020c2H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3124 : 
; 3125 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3126 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185323:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185320[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185325
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERSOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_ENTERSOLOMAP_ACK
PUBLIC	?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_LEAVESOLOMAP_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185341 DD	0ffffffffH
	DD	FLAT:$L185337
$T185339 DD	019930520H
	DD	01H
	DD	FLAT:$T185341
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185334 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_LEAVESOLOMAP_ACK, COMDAT
; _this$ = ecx

; 3130 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3131 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185334[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185336
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185336:

; 3132 : 
; 3133 : 	pMsg->SetID(MW_LEAVESOLOMAP_ACK)
; 3134 : 		<< dwCharID
; 3135 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 c3 20 00 00	 push	 8387			; 000020c3H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3136 : 
; 3137 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3138 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185337:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185334[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185339
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LEAVESOLOMAP_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_LEAVESOLOMAP_ACK
PUBLIC	?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_CHARSTATINFO_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185355 DD	0ffffffffH
	DD	FLAT:$L185351
$T185353 DD	019930520H
	DD	01H
	DD	FLAT:$T185355
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185348 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwReqCharID$ = 8					; size = 4
_dwCharID$ = 12						; size = 4
?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CHARSTATINFO_ACK, COMDAT
; _this$ = ecx

; 3141 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3142 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185348[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185350
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185350:

; 3143 : 	pMsg->SetID(MW_CHARSTATINFO_ACK)
; 3144 : 		<< dwReqCharID
; 3145 : 		<< dwCharID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwReqCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 64 20 00 00	 push	 8292			; 00002064H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3146 : 
; 3147 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3148 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185351:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185348[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185353
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARSTATINFO_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_CHARSTATINFO_ACK
PUBLIC	?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z ; CTMapSvrModule::SendMW_CHARSTATINFOANS_ACK
EXTRN	__ftol2:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185370 DD	0ffffffffH
	DD	FLAT:$L185365
$T185367 DD	019930520H
	DD	01H
	DD	FLAT:$T185370
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z
_TEXT	SEGMENT
$T185362 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwReqCharID$ = 8					; size = 4
_pPlayer$ = 12						; size = 4
?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CHARSTATINFOANS_ACK, COMDAT
; _this$ = ecx

; 3150 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 3151 : 	CPacket * pMsg = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b e9		 mov	 ebp, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T185362[esp+32], eax
  0002a	33 db		 xor	 ebx, ebx
  0002c	3b c3		 cmp	 eax, ebx
  0002e	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00032	74 09		 je	 SHORT $L185364
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b d8		 mov	 ebx, eax
$L185364:

; 3152 : 	pMsg->SetID(MW_CHARSTATINFOANS_ACK)
; 3153 : 		<< dwReqCharID
; 3154 : 		<< pPlayer->m_dwID
; 3155 : 		<< (WORD)pPlayer->GetSTR()
; 3156 : 		<< (WORD)pPlayer->GetDEX()
; 3157 : 		<< (WORD)pPlayer->GetCON()
; 3158 : 		<< (WORD)pPlayer->GetINT()
; 3159 : 		<< (WORD)pPlayer->GetWIS()
; 3160 : 		<< (WORD)pPlayer->GetMEN()
; 3161 : 		<< pPlayer->GetMinAP(FALSE)
; 3162 : 		<< pPlayer->GetMaxAP(FALSE)
; 3163 : 		<< pPlayer->GetDefendPower()
; 3164 : 		<< pPlayer->GetMinAP(TRUE)
; 3165 : 		<< pPlayer->GetMaxAP(TRUE)
; 3166 : 		<< pPlayer->GetAtkSpeed(TAD_PHYSICAL)
; 3167 : 		<< pPlayer->GetAtkSpeed(TAD_LONG)
; 3168 : 		<< pPlayer->GetAtkSpeed(TAD_MAGIC)
; 3169 : 		<< pPlayer->GetAtkSpeedRate(TAD_PHYSICAL)
; 3170 : 		<< pPlayer->GetAtkSpeedRate(TAD_LONG)
; 3171 : 		<< pPlayer->GetAtkSpeedRate(TAD_MAGIC)
; 3172 : 		<< pPlayer->GetAttackLevel()
; 3173 : 		<< pPlayer->GetDefendLevel()
; 3174 : 		<< pPlayer->GetCriticalPysProb()
; 3175 : 		<< pPlayer->GetMinMagicAP()
; 3176 : 		<< pPlayer->GetMaxMagicAP()
; 3177 : 		<< pPlayer->GetMagicDefPower()
; 3178 : 		<< pPlayer->GetMagicAtkLevel()
; 3179 : 		<< pPlayer->GetMagicDefLevel()
; 3180 : 		<< pPlayer->GetChargeSpeed()
; 3181 : 		<< pPlayer->GetChargeProb()
; 3182 : 		<< pPlayer->GetCriticalMagicProb()
; 3183 : 		<< pPlayer->m_wSkillPoint
; 3184 : 		<< pPlayer->m_aftermath.m_bStep;

  0003d	8b 7c 24 28	 mov	 edi, DWORD PTR _pPlayer$[esp+28]
  00041	8b 97 00 01 01
	00		 mov	 edx, DWORD PTR [edi+65792]
  00047	33 c0		 xor	 eax, eax
  00049	8a 87 d0 01 01
	00		 mov	 al, BYTE PTR [edi+66000]
  0004f	33 c9		 xor	 ecx, ecx
  00051	66 8b 8f 20 04
	01 00		 mov	 cx, WORD PTR [edi+66592]
  00058	8d b7 00 01 01
	00		 lea	 esi, DWORD PTR [edi+65792]
  0005e	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	8b ce		 mov	 ecx, esi
  0006a	ff 92 9c 00 00
	00		 call	 DWORD PTR [edx+156]
  00070	8b ce		 mov	 ecx, esi
  00072	50		 push	 eax
  00073	8b 06		 mov	 eax, DWORD PTR [esi]
  00075	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]
  0007b	8b 16		 mov	 edx, DWORD PTR [esi]
  0007d	8b ce		 mov	 ecx, esi
  0007f	50		 push	 eax
  00080	ff 92 b0 00 00
	00		 call	 DWORD PTR [edx+176]
  00086	8b ce		 mov	 ecx, esi
  00088	50		 push	 eax
  00089	8b 06		 mov	 eax, DWORD PTR [esi]
  0008b	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]
  00091	8b 16		 mov	 edx, DWORD PTR [esi]
  00093	8b ce		 mov	 ecx, esi
  00095	50		 push	 eax
  00096	ff 92 84 00 00
	00		 call	 DWORD PTR [edx+132]
  0009c	8b ce		 mov	 ecx, esi
  0009e	50		 push	 eax
  0009f	8b 06		 mov	 eax, DWORD PTR [esi]
  000a1	ff 90 ac 00 00
	00		 call	 DWORD PTR [eax+172]
  000a7	8b 16		 mov	 edx, DWORD PTR [esi]
  000a9	50		 push	 eax
  000aa	8b ce		 mov	 ecx, esi
  000ac	ff 92 a8 00 00
	00		 call	 DWORD PTR [edx+168]
  000b2	50		 push	 eax
  000b3	8b 06		 mov	 eax, DWORD PTR [esi]
  000b5	8b ce		 mov	 ecx, esi
  000b7	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  000bd	8b 16		 mov	 edx, DWORD PTR [esi]
  000bf	50		 push	 eax
  000c0	8b ce		 mov	 ecx, esi
  000c2	ff 92 98 00 00
	00		 call	 DWORD PTR [edx+152]
  000c8	8b ce		 mov	 ecx, esi
  000ca	50		 push	 eax
  000cb	8b 06		 mov	 eax, DWORD PTR [esi]
  000cd	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]
  000d3	8b 16		 mov	 edx, DWORD PTR [esi]
  000d5	8b ce		 mov	 ecx, esi
  000d7	50		 push	 eax
  000d8	ff 52 7c	 call	 DWORD PTR [edx+124]
  000db	8b ce		 mov	 ecx, esi
  000dd	50		 push	 eax
  000de	8b 06		 mov	 eax, DWORD PTR [esi]
  000e0	6a 03		 push	 3
  000e2	ff 50 6c	 call	 DWORD PTR [eax+108]
  000e5	8b 16		 mov	 edx, DWORD PTR [esi]
  000e7	50		 push	 eax
  000e8	6a 02		 push	 2
  000ea	8b ce		 mov	 ecx, esi
  000ec	ff 52 6c	 call	 DWORD PTR [edx+108]
  000ef	50		 push	 eax
  000f0	8b 06		 mov	 eax, DWORD PTR [esi]
  000f2	6a 01		 push	 1
  000f4	8b ce		 mov	 ecx, esi
  000f6	ff 50 6c	 call	 DWORD PTR [eax+108]
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	50		 push	 eax
  000fc	6a 03		 push	 3
  000fe	8b ce		 mov	 ecx, esi
  00100	ff 52 68	 call	 DWORD PTR [edx+104]
  00103	50		 push	 eax
  00104	8b 06		 mov	 eax, DWORD PTR [esi]
  00106	6a 02		 push	 2
  00108	8b ce		 mov	 ecx, esi
  0010a	ff 50 68	 call	 DWORD PTR [eax+104]
  0010d	8b 16		 mov	 edx, DWORD PTR [esi]
  0010f	50		 push	 eax
  00110	6a 01		 push	 1
  00112	8b ce		 mov	 ecx, esi
  00114	ff 52 68	 call	 DWORD PTR [edx+104]
  00117	50		 push	 eax
  00118	8b 06		 mov	 eax, DWORD PTR [esi]
  0011a	6a 01		 push	 1
  0011c	8b ce		 mov	 ecx, esi
  0011e	ff 90 90 00 00
	00		 call	 DWORD PTR [eax+144]
  00124	8b 16		 mov	 edx, DWORD PTR [esi]
  00126	50		 push	 eax
  00127	6a 01		 push	 1
  00129	8b ce		 mov	 ecx, esi
  0012b	ff 92 94 00 00
	00		 call	 DWORD PTR [edx+148]
  00131	50		 push	 eax
  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	8b ce		 mov	 ecx, esi
  00136	ff 50 78	 call	 DWORD PTR [eax+120]
  00139	8b 16		 mov	 edx, DWORD PTR [esi]
  0013b	50		 push	 eax
  0013c	6a 00		 push	 0
  0013e	8b ce		 mov	 ecx, esi
  00140	ff 92 90 00 00
	00		 call	 DWORD PTR [edx+144]
  00146	50		 push	 eax
  00147	8b 06		 mov	 eax, DWORD PTR [esi]
  00149	6a 00		 push	 0
  0014b	8b ce		 mov	 ecx, esi
  0014d	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]
  00153	8b 16		 mov	 edx, DWORD PTR [esi]
  00155	50		 push	 eax
  00156	6a 00		 push	 0
  00158	6a 00		 push	 0
  0015a	8b ce		 mov	 ecx, esi
  0015c	ff 52 5c	 call	 DWORD PTR [edx+92]
  0015f	e8 00 00 00 00	 call	 __ftol2
  00164	8b ce		 mov	 ecx, esi
  00166	50		 push	 eax
  00167	8b 06		 mov	 eax, DWORD PTR [esi]
  00169	6a 00		 push	 0
  0016b	6a 00		 push	 0
  0016d	ff 50 58	 call	 DWORD PTR [eax+88]
  00170	e8 00 00 00 00	 call	 __ftol2
  00175	8b 16		 mov	 edx, DWORD PTR [esi]
  00177	8b ce		 mov	 ecx, esi
  00179	50		 push	 eax
  0017a	6a 00		 push	 0
  0017c	6a 00		 push	 0
  0017e	ff 52 54	 call	 DWORD PTR [edx+84]
  00181	e8 00 00 00 00	 call	 __ftol2
  00186	8b ce		 mov	 ecx, esi
  00188	50		 push	 eax
  00189	8b 06		 mov	 eax, DWORD PTR [esi]
  0018b	6a 00		 push	 0
  0018d	6a 00		 push	 0
  0018f	ff 50 50	 call	 DWORD PTR [eax+80]
  00192	e8 00 00 00 00	 call	 __ftol2
  00197	8b 16		 mov	 edx, DWORD PTR [esi]
  00199	8b ce		 mov	 ecx, esi
  0019b	50		 push	 eax
  0019c	6a 00		 push	 0
  0019e	6a 00		 push	 0
  001a0	ff 52 4c	 call	 DWORD PTR [edx+76]
  001a3	e8 00 00 00 00	 call	 __ftol2
  001a8	8b ce		 mov	 ecx, esi
  001aa	50		 push	 eax
  001ab	8b 06		 mov	 eax, DWORD PTR [esi]
  001ad	6a 00		 push	 0
  001af	6a 00		 push	 0
  001b1	ff 50 48	 call	 DWORD PTR [eax+72]
  001b4	e8 00 00 00 00	 call	 __ftol2
  001b9	8b 8f 44 01 01
	00		 mov	 ecx, DWORD PTR [edi+65860]
  001bf	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR _dwReqCharID$[esp+144]
  001c6	50		 push	 eax
  001c7	51		 push	 ecx
  001c8	52		 push	 edx
  001c9	68 66 20 00 00	 push	 8294			; 00002066H
  001ce	8b cb		 mov	 ecx, ebx
  001d0	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  001d5	8b c8		 mov	 ecx, eax
  001d7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001dc	8b c8		 mov	 ecx, eax
  001de	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001e3	8b c8		 mov	 ecx, eax
  001e5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001ea	8b c8		 mov	 ecx, eax
  001ec	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001f1	8b c8		 mov	 ecx, eax
  001f3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001f8	8b c8		 mov	 ecx, eax
  001fa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001ff	8b c8		 mov	 ecx, eax
  00201	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00206	8b c8		 mov	 ecx, eax
  00208	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0020d	8b c8		 mov	 ecx, eax
  0020f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0021b	8b c8		 mov	 ecx, eax
  0021d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00222	8b c8		 mov	 ecx, eax
  00224	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00229	8b c8		 mov	 ecx, eax
  0022b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00230	8b c8		 mov	 ecx, eax
  00232	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00237	8b c8		 mov	 ecx, eax
  00239	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0023e	8b c8		 mov	 ecx, eax
  00240	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00245	8b c8		 mov	 ecx, eax
  00247	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0024c	8b c8		 mov	 ecx, eax
  0024e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00253	8b c8		 mov	 ecx, eax
  00255	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0025a	8b c8		 mov	 ecx, eax
  0025c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00261	8b c8		 mov	 ecx, eax
  00263	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00268	8b c8		 mov	 ecx, eax
  0026a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0026f	8b c8		 mov	 ecx, eax
  00271	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00276	8b c8		 mov	 ecx, eax
  00278	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0027d	8b c8		 mov	 ecx, eax
  0027f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00284	8b c8		 mov	 ecx, eax
  00286	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0028b	8b c8		 mov	 ecx, eax
  0028d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00292	8b c8		 mov	 ecx, eax
  00294	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00299	8b c8		 mov	 ecx, eax
  0029b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002a0	8b c8		 mov	 ecx, eax
  002a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002a7	8b c8		 mov	 ecx, eax
  002a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002ae	8b c8		 mov	 ecx, eax
  002b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3185 : 
; 3186 : 	m_world.Say(pMsg);

  002b5	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  002bb	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  002c1	53		 push	 ebx
  002c2	ff 10		 call	 DWORD PTR [eax]

; 3187 : }

  002c4	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	5d		 pop	 ebp
  002cb	5b		 pop	 ebx
  002cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002d3	83 c4 10	 add	 esp, 16			; 00000010H
  002d6	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185365:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185362[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185367
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARSTATINFOANS_ACK@CTMapSvrModule@@QAEXKPAVCTPlayer@@@Z ENDP ; CTMapSvrModule::SendMW_CHARSTATINFOANS_ACK
PUBLIC	?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z ; CTMapSvrModule::SendMW_LOCALENABLE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185384 DD	0ffffffffH
	DD	FLAT:$L185380
$T185382 DD	019930520H
	DD	01H
	DD	FLAT:$T185384
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
_TEXT	SEGMENT
$T185377 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wID$ = 8						; size = 2
_bStatus$ = 12						; size = 1
?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z PROC NEAR ; CTMapSvrModule::SendMW_LOCALENABLE_ACK, COMDAT
; _this$ = ecx

; 3189 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3190 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185377[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185379
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185379:

; 3191 : 	pMsg->SetID(MW_LOCALENABLE_ACK)
; 3192 : 		<< wID
; 3193 : 		<< bStatus;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _bStatus$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _wID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 68 20 00 00	 push	 8296			; 00002068H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3194 : 
; 3195 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3196 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185380:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185377[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185382
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LOCALENABLE_ACK@CTMapSvrModule@@QAEXGE@Z ENDP	; CTMapSvrModule::SendMW_LOCALENABLE_ACK
PUBLIC	?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z ; CTMapSvrModule::SendMW_CASTLEOCCUPY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185398 DD	0ffffffffH
	DD	FLAT:$L185394
$T185396 DD	019930520H
	DD	01H
	DD	FLAT:$T185398
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z
_TEXT	SEGMENT
$T185391 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wCastleID$ = 12					; size = 2
_dwGuildID$ = 16					; size = 4
_bCountry$ = 20						; size = 1
_dwLoseGuild$ = 24					; size = 4
?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z PROC NEAR ; CTMapSvrModule::SendMW_CASTLEOCCUPY_ACK, COMDAT
; _this$ = ecx

; 3202 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3203 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185391[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185393
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185393:

; 3204 : 	pMsg->SetID(MW_CASTLEOCCUPY_ACK)
; 3205 : 		<< bType
; 3206 : 		<< wCastleID
; 3207 : 		<< dwGuildID
; 3208 : 		<< bCountry
; 3209 : 		<< dwLoseGuild;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwLoseGuild$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bCountry$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwGuildID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _wCastleID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _bType$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 86 20 00 00	 push	 8326			; 00002086H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3210 : 
; 3211 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3212 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185394:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185391[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185396
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEOCCUPY_ACK@CTMapSvrModule@@QAEXEGKEK@Z ENDP ; CTMapSvrModule::SendMW_CASTLEOCCUPY_ACK
PUBLIC	?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z ; CTMapSvrModule::SendMW_LOCALOCCUPY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185412 DD	0ffffffffH
	DD	FLAT:$L185408
$T185410 DD	019930520H
	DD	01H
	DD	FLAT:$T185412
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z
_TEXT	SEGMENT
$T185405 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wLocalID$ = 12						; size = 2
_bCountry$ = 16						; size = 1
_dwGuildID$ = 20					; size = 4
_bCurCountry$ = 24					; size = 1
?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z PROC NEAR ; CTMapSvrModule::SendMW_LOCALOCCUPY_ACK, COMDAT
; _this$ = ecx

; 3218 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3219 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185405[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185407
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185407:

; 3220 : 	pMsg->SetID(MW_LOCALOCCUPY_ACK)
; 3221 : 		<< bType
; 3222 : 		<< wLocalID
; 3223 : 		<< bCountry
; 3224 : 		<< dwGuildID
; 3225 : 		<< bCurCountry;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bCurCountry$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _bCountry$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _wLocalID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _bType$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 6a 20 00 00	 push	 8298			; 0000206aH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3226 : 
; 3227 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3228 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185408:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185405[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185410
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LOCALOCCUPY_ACK@CTMapSvrModule@@QAEXEGEKE@Z ENDP ; CTMapSvrModule::SendMW_LOCALOCCUPY_ACK
PUBLIC	?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z ; CTMapSvrModule::SendMW_MISSIONOCCUPY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185426 DD	0ffffffffH
	DD	FLAT:$L185422
$T185424 DD	019930520H
	DD	01H
	DD	FLAT:$T185426
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z
_TEXT	SEGMENT
$T185419 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wLocalID$ = 12						; size = 2
_bCountry$ = 16						; size = 1
?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z PROC NEAR ; CTMapSvrModule::SendMW_MISSIONOCCUPY_ACK, COMDAT
; _this$ = ecx

; 3232 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3233 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185419[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185421
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185421:

; 3234 : 	pMsg->SetID(MW_MISSIONOCCUPY_ACK)
; 3235 : 		<< bType
; 3236 : 		<< wLocalID
; 3237 : 		<< bCountry;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bCountry$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wLocalID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bType$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 67 21 00 00	 push	 8551			; 00002167H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3238 : 
; 3239 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3240 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185422:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185419[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185424
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MISSIONOCCUPY_ACK@CTMapSvrModule@@QAEXEGE@Z ENDP ; CTMapSvrModule::SendMW_MISSIONOCCUPY_ACK
PUBLIC	?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z ; CTMapSvrModule::SendMW_CHGCORPSCOMMANDER_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185440 DD	0ffffffffH
	DD	FLAT:$L185436
$T185438 DD	019930520H
	DD	01H
	DD	FLAT:$T185440
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT
$T185433 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wPartyID$ = 16						; size = 2
?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z PROC NEAR ; CTMapSvrModule::SendMW_CHGCORPSCOMMANDER_ACK, COMDAT
; _this$ = ecx

; 3244 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3245 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185433[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185435
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185435:

; 3246 : 	pMsg->SetID(MW_CHGCORPSCOMMANDER_ACK)
; 3247 : 		<< dwCharID
; 3248 : 		<< dwKey
; 3249 : 		<< wPartyID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _wPartyID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 a3 20 00 00	 push	 8355			; 000020a3H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3250 : 
; 3251 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3252 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185436:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185433[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185438
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGCORPSCOMMANDER_ACK@CTMapSvrModule@@QAEXKKG@Z ENDP ; CTMapSvrModule::SendMW_CHGCORPSCOMMANDER_ACK
PUBLIC	?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z ; CTMapSvrModule::SendMW_CORPSLEAVE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185454 DD	0ffffffffH
	DD	FLAT:$L185450
$T185452 DD	019930520H
	DD	01H
	DD	FLAT:$T185454
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT
$T185447 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z PROC NEAR ; CTMapSvrModule::SendMW_CORPSLEAVE_ACK, COMDAT
; _this$ = ecx

; 3257 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3258 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185447[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185449
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185449:

; 3259 : 	pMsg->SetID(MW_CORPSLEAVE_ACK)
; 3260 : 		<< dwCharID
; 3261 : 		<< dwKey
; 3262 : 		<< wSquadID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _wSquadID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 72 20 00 00	 push	 8306			; 00002072H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3263 : 
; 3264 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3265 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185450:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185447[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185452
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSLEAVE_ACK@CTMapSvrModule@@QAEXKKG@Z ENDP	; CTMapSvrModule::SendMW_CORPSLEAVE_ACK
PUBLIC	?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z ; CTMapSvrModule::SendMW_CORPSCMD_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185468 DD	0ffffffffH
	DD	FLAT:$L185464
$T185466 DD	019930520H
	DD	01H
	DD	FLAT:$T185468
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z
_TEXT	SEGMENT
$T185461 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGeneral$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wMapID$ = 16						; size = 2
_wSquadID$ = 20						; size = 2
_dwCharID$ = 24						; size = 4
_bCMD$ = 28						; size = 1
_dwTargetID$ = 32					; size = 4
_bTargetType$ = 36					; size = 1
_wPosX$ = 40						; size = 2
_wPosZ$ = 44						; size = 2
?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z PROC NEAR ; CTMapSvrModule::SendMW_CORPSCMD_ACK, COMDAT
; _this$ = ecx

; 3302 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3303 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185461[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185463
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185463:

; 3304 : 	pMsg->SetID(MW_CORPSCMD_ACK)
; 3305 : 		<< dwGeneral
; 3306 : 		<< dwKey
; 3307 : 		<< wMapID
; 3308 : 		<< wSquadID
; 3309 : 		<< dwCharID
; 3310 : 		<< bCMD
; 3311 : 		<< dwTargetID
; 3312 : 		<< bTargetType
; 3313 : 		<< wPosX
; 3314 : 		<< wPosZ;

  0003b	8b 44 24 40	 mov	 eax, DWORD PTR _wPosZ$[esp+20]
  0003f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wPosX$[esp+20]
  00043	8b 54 24 38	 mov	 edx, DWORD PTR _bTargetType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 38	 mov	 eax, DWORD PTR _dwTargetID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _bCMD$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 38	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 38	 mov	 eax, DWORD PTR _wSquadID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 38	 mov	 ecx, DWORD PTR _wMapID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 38	 mov	 edx, DWORD PTR _dwKey$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 38	 mov	 eax, DWORD PTR _dwGeneral$[esp+48]
  0006a	51		 push	 ecx
  0006b	52		 push	 edx
  0006c	50		 push	 eax
  0006d	68 92 20 00 00	 push	 8338			; 00002092H
  00072	8b ce		 mov	 ecx, esi
  00074	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3315 : 
; 3316 : 	m_world.Say(pMsg);

  000c7	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000cd	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000d3	56		 push	 esi
  000d4	ff 12		 call	 DWORD PTR [edx]

; 3317 : }

  000d6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e3	83 c4 10	 add	 esp, 16			; 00000010H
  000e6	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185464:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185461[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185466
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSCMD_ACK@CTMapSvrModule@@QAEXKKGGKEKEGG@Z ENDP ; CTMapSvrModule::SendMW_CORPSCMD_ACK
PUBLIC	?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z ; CTMapSvrModule::SendMW_MOVECORPSENEMY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185482 DD	0ffffffffH
	DD	FLAT:$L185478
$T185480 DD	019930520H
	DD	01H
	DD	FLAT:$T185482
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
_TEXT	SEGMENT
$T185475 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwReporterID$ = 16					; size = 4
_dwEnemyID$ = 20					; size = 4
_bEnemyType$ = 24					; size = 1
_fSPEED$ = 28						; size = 4
_wMapID$ = 32						; size = 2
_wPosX$ = 36						; size = 2
_wPosZ$ = 40						; size = 2
_wDIR$ = 44						; size = 2
?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z PROC NEAR ; CTMapSvrModule::SendMW_MOVECORPSENEMY_ACK, COMDAT
; _this$ = ecx

; 3329 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3330 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185475[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185477
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185477:

; 3331 : 	pMsg->SetID(MW_MOVECORPSENEMY_ACK)
; 3332 : 		<< dwCharID
; 3333 : 		<< dwKey
; 3334 : 		<< dwReporterID
; 3335 : 		<< dwEnemyID
; 3336 : 		<< bEnemyType
; 3337 : 		<< fSPEED
; 3338 : 		<< wMapID
; 3339 : 		<< wPosX
; 3340 : 		<< wPosZ
; 3341 : 		<< wDIR;

  0003b	8b 44 24 40	 mov	 eax, DWORD PTR _wDIR$[esp+20]
  0003f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wPosZ$[esp+20]
  00043	8b 54 24 38	 mov	 edx, DWORD PTR _wPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 38	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _fSPEED$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 38	 mov	 edx, DWORD PTR _bEnemyType$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 38	 mov	 eax, DWORD PTR _dwEnemyID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwReporterID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 38	 mov	 edx, DWORD PTR _dwKey$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 38	 mov	 eax, DWORD PTR _dwCharID$[esp+48]
  0006a	51		 push	 ecx
  0006b	52		 push	 edx
  0006c	50		 push	 eax
  0006d	68 96 20 00 00	 push	 8342			; 00002096H
  00072	8b ce		 mov	 ecx, esi
  00074	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3342 : 
; 3343 : 	m_world.Say(pMsg);

  000c7	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000cd	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000d3	56		 push	 esi
  000d4	ff 12		 call	 DWORD PTR [edx]

; 3344 : }

  000d6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e3	83 c4 10	 add	 esp, 16			; 00000010H
  000e6	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185478:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185475[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185480
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MOVECORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z ENDP ; CTMapSvrModule::SendMW_MOVECORPSENEMY_ACK
PUBLIC	?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z ; CTMapSvrModule::SendMW_MOVECORPSUNIT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185496 DD	0ffffffffH
	DD	FLAT:$L185492
$T185494 DD	019930520H
	DD	01H
	DD	FLAT:$T185496
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z
_TEXT	SEGMENT
$T185489 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwTargetID$ = 20					; size = 4
_fSPEED$ = 24						; size = 4
_wMapID$ = 28						; size = 2
_dwBSPID$ = 32						; size = 4
_wPosX$ = 36						; size = 2
_wPosZ$ = 40						; size = 2
_wDIR$ = 44						; size = 2
?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z PROC NEAR ; CTMapSvrModule::SendMW_MOVECORPSUNIT_ACK, COMDAT
; _this$ = ecx

; 3356 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3357 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185489[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185491
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185491:

; 3358 : 	pMsg->SetID(MW_MOVECORPSUNIT_ACK)
; 3359 : 		<< dwCharID
; 3360 : 		<< dwKey
; 3361 : 		<< wSquadID
; 3362 : 		<< dwTargetID
; 3363 : 		<< fSPEED
; 3364 : 		<< wMapID
; 3365 : 		<< dwBSPID
; 3366 : 		<< wPosX
; 3367 : 		<< wPosZ
; 3368 : 		<< wDIR;

  0003b	8b 44 24 40	 mov	 eax, DWORD PTR _wDIR$[esp+20]
  0003f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wPosZ$[esp+20]
  00043	8b 54 24 38	 mov	 edx, DWORD PTR _wPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 38	 mov	 eax, DWORD PTR _dwBSPID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _wMapID$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 38	 mov	 edx, DWORD PTR _fSPEED$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 38	 mov	 eax, DWORD PTR _dwTargetID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 38	 mov	 ecx, DWORD PTR _wSquadID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 38	 mov	 edx, DWORD PTR _dwKey$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 38	 mov	 eax, DWORD PTR _dwCharID$[esp+48]
  0006a	51		 push	 ecx
  0006b	52		 push	 edx
  0006c	50		 push	 eax
  0006d	68 98 20 00 00	 push	 8344			; 00002098H
  00072	8b ce		 mov	 ecx, esi
  00074	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3369 : 
; 3370 : 	m_world.Say(pMsg);

  000c7	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000cd	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000d3	56		 push	 esi
  000d4	ff 12		 call	 DWORD PTR [edx]

; 3371 : }

  000d6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e3	83 c4 10	 add	 esp, 16			; 00000010H
  000e6	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185492:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185489[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185494
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MOVECORPSUNIT_ACK@CTMapSvrModule@@QAEXKKGKMGKGGG@Z ENDP ; CTMapSvrModule::SendMW_MOVECORPSUNIT_ACK
PUBLIC	?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z ; CTMapSvrModule::SendMW_ADDCORPSENEMY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185510 DD	0ffffffffH
	DD	FLAT:$L185506
$T185508 DD	019930520H
	DD	01H
	DD	FLAT:$T185510
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
_TEXT	SEGMENT
$T185503 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwReporterID$ = 16					; size = 4
_dwEnemyID$ = 20					; size = 4
_bEnemyType$ = 24					; size = 1
_fSPEED$ = 28						; size = 4
_wMapID$ = 32						; size = 2
_wPosX$ = 36						; size = 2
_wPosZ$ = 40						; size = 2
_wDIR$ = 44						; size = 2
?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z PROC NEAR ; CTMapSvrModule::SendMW_ADDCORPSENEMY_ACK, COMDAT
; _this$ = ecx

; 3382 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3383 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185503[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185505
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185505:

; 3384 : 	pMsg->SetID(MW_ADDCORPSENEMY_ACK)
; 3385 : 		<< dwCharID
; 3386 : 		<< dwKey
; 3387 : 		<< dwReporterID
; 3388 : 		<< dwEnemyID
; 3389 : 		<< bEnemyType
; 3390 : 		<< fSPEED
; 3391 : 		<< wMapID
; 3392 : 		<< wPosX
; 3393 : 		<< wPosZ
; 3394 : 		<< wDIR;

  0003b	8b 44 24 40	 mov	 eax, DWORD PTR _wDIR$[esp+20]
  0003f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wPosZ$[esp+20]
  00043	8b 54 24 38	 mov	 edx, DWORD PTR _wPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 38	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _fSPEED$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 38	 mov	 edx, DWORD PTR _bEnemyType$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 38	 mov	 eax, DWORD PTR _dwEnemyID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwReporterID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 38	 mov	 edx, DWORD PTR _dwKey$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 38	 mov	 eax, DWORD PTR _dwCharID$[esp+48]
  0006a	51		 push	 ecx
  0006b	52		 push	 edx
  0006c	50		 push	 eax
  0006d	68 9a 20 00 00	 push	 8346			; 0000209aH
  00072	8b ce		 mov	 ecx, esi
  00074	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3395 : 
; 3396 : 	m_world.Say(pMsg);

  000c7	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000cd	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000d3	56		 push	 esi
  000d4	ff 12		 call	 DWORD PTR [edx]

; 3397 : }

  000d6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e3	83 c4 10	 add	 esp, 16			; 00000010H
  000e6	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185506:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185503[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185508
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKEMGGGG@Z ENDP ; CTMapSvrModule::SendMW_ADDCORPSENEMY_ACK
PUBLIC	?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z ; CTMapSvrModule::SendMW_DELCORPSENEMY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185524 DD	0ffffffffH
	DD	FLAT:$L185520
$T185522 DD	019930520H
	DD	01H
	DD	FLAT:$T185524
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z
_TEXT	SEGMENT
$T185517 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwReporterID$ = 16					; size = 4
_dwEnemyID$ = 20					; size = 4
_bEnemyType$ = 24					; size = 1
?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_DELCORPSENEMY_ACK, COMDAT
; _this$ = ecx

; 3403 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3404 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185517[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185519
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185519:

; 3405 : 	pMsg->SetID(MW_DELCORPSENEMY_ACK)
; 3406 : 		<< dwCharID
; 3407 : 		<< dwKey
; 3408 : 		<< dwReporterID
; 3409 : 		<< dwEnemyID
; 3410 : 		<< bEnemyType;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bEnemyType$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwEnemyID$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwReporterID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 9c 20 00 00	 push	 8348			; 0000209cH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3411 : 
; 3412 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3413 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185520:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185517[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185522
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DELCORPSENEMY_ACK@CTMapSvrModule@@QAEXKKKKE@Z ENDP ; CTMapSvrModule::SendMW_DELCORPSENEMY_ACK
PUBLIC	?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z ; CTMapSvrModule::SendMW_CORPSHP_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185538 DD	0ffffffffH
	DD	FLAT:$L185534
$T185536 DD	019930520H
	DD	01H
	DD	FLAT:$T185538
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z
_TEXT	SEGMENT
$T185531 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwTargetID$ = 20					; size = 4
_dwMaxHP$ = 24						; size = 4
_dwHP$ = 28						; size = 4
?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CORPSHP_ACK, COMDAT
; _this$ = ecx

; 3420 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3421 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185531[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185533
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185533:

; 3422 : 	pMsg->SetID(MW_CORPSHP_ACK)
; 3423 : 		<< dwCharID
; 3424 : 		<< dwKey
; 3425 : 		<< wSquadID
; 3426 : 		<< dwTargetID
; 3427 : 		<< dwMaxHP
; 3428 : 		<< dwHP;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _dwHP$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwMaxHP$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _dwTargetID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _wSquadID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 9e 20 00 00	 push	 8350			; 0000209eH
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3429 : 
; 3430 : 	m_world.Say(pMsg);

  00097	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  0009d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000a3	56		 push	 esi
  000a4	ff 10		 call	 DWORD PTR [eax]

; 3431 : }

  000a6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b3	83 c4 10	 add	 esp, 16			; 00000010H
  000b6	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185534:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185531[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185536
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSHP_ACK@CTMapSvrModule@@QAEXKKGKKK@Z ENDP	; CTMapSvrModule::SendMW_CORPSHP_ACK
PUBLIC	?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendMW_TMSOUT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185552 DD	0ffffffffH
	DD	FLAT:$L185548
$T185550 DD	019930520H
	DD	01H
	DD	FLAT:$T185552
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185545 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTMS$ = 16						; size = 4
?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR	; CTMapSvrModule::SendMW_TMSOUT_ACK, COMDAT
; _this$ = ecx

; 3487 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3488 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185545[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185547
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185547:

; 3489 : 	pMsg->SetID(MW_TMSOUT_ACK)
; 3490 : 		<< dwCharID
; 3491 : 		<< dwKey
; 3492 : 		<< dwTMS;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwTMS$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 7b 20 00 00	 push	 8315			; 0000207bH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3493 : 
; 3494 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3495 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185548:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185545[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185550
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSOUT_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_TMSOUT_ACK
PUBLIC	?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z ; CTMapSvrModule::SendMW_CASTLEENABLE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185566 DD	0ffffffffH
	DD	FLAT:$L185562
$T185564 DD	019930520H
	DD	01H
	DD	FLAT:$T185566
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
_TEXT	SEGMENT
$T185559 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastle$ = 8						; size = 2
_bStatus$ = 12						; size = 1
?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z PROC NEAR ; CTMapSvrModule::SendMW_CASTLEENABLE_ACK, COMDAT
; _this$ = ecx

; 3498 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3499 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185559[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185561
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185561:

; 3500 : 	pMsg->SetID(MW_CASTLEENABLE_ACK)
; 3501 : 		<< wCastle
; 3502 : 		<< bStatus;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _bStatus$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _wCastle$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 7f 20 00 00	 push	 8319			; 0000207fH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3503 : 
; 3504 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3505 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185562:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185559[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185564
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEENABLE_ACK@CTMapSvrModule@@QAEXGE@Z ENDP	; CTMapSvrModule::SendMW_CASTLEENABLE_ACK
PUBLIC	?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z ; CTMapSvrModule::SendMW_CASTLEAPPLY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185580 DD	0ffffffffH
	DD	FLAT:$L185576
$T185578 DD	019930520H
	DD	01H
	DD	FLAT:$T185580
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z
_TEXT	SEGMENT
$T185573 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wCastle$ = 16						; size = 2
_dwTarget$ = 20						; size = 4
_bCamp$ = 24						; size = 1
?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z PROC NEAR ; CTMapSvrModule::SendMW_CASTLEAPPLY_ACK, COMDAT
; _this$ = ecx

; 3511 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3512 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185573[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185575
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185575:

; 3513 : 	pMsg->SetID(MW_CASTLEAPPLY_ACK)
; 3514 : 		<< dwCharID
; 3515 : 		<< dwKey
; 3516 : 		<< wCastle
; 3517 : 		<< dwTarget
; 3518 : 		<< bCamp;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bCamp$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _wCastle$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 81 20 00 00	 push	 8321			; 00002081H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3519 : 
; 3520 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3521 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185576:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185573[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185578
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEAPPLY_ACK@CTMapSvrModule@@QAEXKKGKE@Z ENDP ; CTMapSvrModule::SendMW_CASTLEAPPLY_ACK
PUBLIC	?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z	; CTMapSvrModule::SendMW_MONTEMPT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185594 DD	0ffffffffH
	DD	FLAT:$L185590
$T185592 DD	019930520H
	DD	01H
	DD	FLAT:$T185594
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z
_TEXT	SEGMENT
$T185587 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwAttacker$ = 8					; size = 4
_wMonID$ = 12						; size = 2
?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z PROC NEAR	; CTMapSvrModule::SendMW_MONTEMPT_ACK, COMDAT
; _this$ = ecx

; 3524 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3525 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185587[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185589
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185589:

; 3526 : 	pMsg->SetID(MW_MONTEMPT_ACK)
; 3527 : 		<< dwAttacker
; 3528 : 		<< wMonID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _wMonID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwAttacker$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 88 20 00 00	 push	 8328			; 00002088H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3529 : 
; 3530 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3531 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185590:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185587[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185592
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTEMPT_ACK@CTMapSvrModule@@QAEXKG@Z ENDP	; CTMapSvrModule::SendMW_MONTEMPT_ACK
PUBLIC	?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z ; CTMapSvrModule::SendMW_GETBLOOD_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185608 DD	0ffffffffH
	DD	FLAT:$L185604
$T185606 DD	019930520H
	DD	01H
	DD	FLAT:$T185608
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z
_TEXT	SEGMENT
$T185601 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwAtkID$ = 8						; size = 4
_bAtkType$ = 12						; size = 1
_dwHostID$ = 16						; size = 4
_bBloodType$ = 20					; size = 1
_dwBlood$ = 24						; size = 4
?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z PROC NEAR ; CTMapSvrModule::SendMW_GETBLOOD_ACK, COMDAT
; _this$ = ecx

; 3537 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3538 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185601[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185603
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185603:

; 3539 : 	pMsg->SetID(MW_GETBLOOD_ACK)
; 3540 : 		<< dwAtkID
; 3541 : 		<< bAtkType
; 3542 : 		<< dwHostID
; 3543 : 		<< bBloodType
; 3544 : 		<< dwBlood;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwBlood$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bBloodType$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwHostID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bAtkType$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwAtkID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 8a 20 00 00	 push	 8330			; 0000208aH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3545 : 
; 3546 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3547 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185604:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185601[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185606
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GETBLOOD_ACK@CTMapSvrModule@@QAEXKEKEK@Z ENDP	; CTMapSvrModule::SendMW_GETBLOOD_ACK
PUBLIC	?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z ; CTMapSvrModule::SendMW_MAGICMIRROR_ACK
EXTRN	?Copy@CPacket@@QAEXPAV1@@Z:NEAR			; CPacket::Copy
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185622 DD	0ffffffffH
	DD	FLAT:$L185618
$T185620 DD	019930520H
	DD	01H
	DD	FLAT:$T185622
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z
_TEXT	SEGMENT
$T185615 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wParty$ = 8						; size = 2
_bCountry$ = 12						; size = 1
_bAidCountry$ = 16					; size = 1
_bClass$ = 20						; size = 1
_pPacket$ = 24						; size = 4
?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z PROC NEAR ; CTMapSvrModule::SendMW_MAGICMIRROR_ACK, COMDAT
; _this$ = ecx

; 3563 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3564 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185615[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185617
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185617:

; 3565 : 	pMsg->Copy(pPacket);

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 3566 : 	pMsg->SetID(MW_MAGICMIRROR_ACK)
; 3567 : 		<< wParty
; 3568 : 		<< bCountry
; 3569 : 		<< bAidCountry
; 3570 : 		<< bClass;

  0004f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bClass$[esp+20]
  00053	8b 54 24 24	 mov	 edx, DWORD PTR _bAidCountry$[esp+20]
  00057	8b 44 24 20	 mov	 eax, DWORD PTR _bCountry$[esp+20]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 20	 mov	 ecx, DWORD PTR _wParty$[esp+24]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 b6 20 00 00	 push	 8374			; 000020b6H
  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3571 : 
; 3572 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3573 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185618:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185615[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185620
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MAGICMIRROR_ACK@CTMapSvrModule@@QAEXGEEEPAVCPacket@@@Z ENDP ; CTMapSvrModule::SendMW_MAGICMIRROR_ACK
PUBLIC	?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendMW_REGION_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185636 DD	0ffffffffH
	DD	FLAT:$L185632
$T185634 DD	019930520H
	DD	01H
	DD	FLAT:$T185636
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185629 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwRegion$ = 16						; size = 4
?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR	; CTMapSvrModule::SendMW_REGION_ACK, COMDAT
; _this$ = ecx

; 3578 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3579 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185629[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185631
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185631:

; 3580 : 	pMsg->SetID(MW_REGION_ACK)
; 3581 : 		<< dwCharID
; 3582 : 		<< dwKEY
; 3583 : 		<< dwRegion;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwRegion$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 bc 20 00 00	 push	 8380			; 000020bcH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3584 : 
; 3585 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3586 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185632:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185629[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185634
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_REGION_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_REGION_ACK
PUBLIC	?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z	; CTMapSvrModule::SendMW_ENDWAR_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185650 DD	0ffffffffH
	DD	FLAT:$L185646
$T185648 DD	019930520H
	DD	01H
	DD	FLAT:$T185650
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z
_TEXT	SEGMENT
$T185643 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastle$ = 8						; size = 2
?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z PROC NEAR	; CTMapSvrModule::SendMW_ENDWAR_ACK, COMDAT
; _this$ = ecx

; 3589 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3590 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185643[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185645
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185645:

; 3591 : 	pMsg->SetID(MW_ENDWAR_ACK)
; 3592 : 		<< wCastle;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _wCastle$[esp+20]
  0003f	50		 push	 eax
  00040	68 12 21 00 00	 push	 8466			; 00002112H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3593 : 
; 3594 : 	m_world.Say(pMsg);

  0005b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00061	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00067	56		 push	 esi
  00068	ff 12		 call	 DWORD PTR [edx]

; 3595 : }

  0006a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185646:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185643[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185648
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENDWAR_ACK@CTMapSvrModule@@QAEXG@Z ENDP		; CTMapSvrModule::SendMW_ENDWAR_ACK
PUBLIC	?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z ; CTMapSvrModule::SendMW_BEGINTELEPORT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185664 DD	0ffffffffH
	DD	FLAT:$L185660
$T185662 DD	019930520H
	DD	01H
	DD	FLAT:$T185664
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z
_TEXT	SEGMENT
$T185657 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bSameChannel$ = 16					; size = 1
_bChannel$ = 20						; size = 1
_wMapID$ = 24						; size = 2
_fPosX$ = 28						; size = 4
_fPosY$ = 32						; size = 4
_fPosZ$ = 36						; size = 4
?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z PROC NEAR ; CTMapSvrModule::SendMW_BEGINTELEPORT_ACK, COMDAT
; _this$ = ecx

; 3647 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3648 :     CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185657[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185659
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185659:

; 3649 : 
; 3650 : 	pMsg->SetID(MW_BEGINTELEPORT_ACK)
; 3651 : 		<< dwCharID
; 3652 : 		<< dwKey
; 3653 : 		<< bSameChannel
; 3654 : 		<< bChannel
; 3655 : 		<< wMapID
; 3656 : 		<< fPosX
; 3657 : 		<< fPosY
; 3658 : 		<< fPosZ;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bSameChannel$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKey$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 c7 20 00 00	 push	 8391			; 000020c7H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 3659 : 
; 3660 : 	m_world.Say(pMsg);

  000af	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  000b5	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000bb	56		 push	 esi
  000bc	ff 12		 call	 DWORD PTR [edx]

; 3661 : }

  000be	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cb	83 c4 10	 add	 esp, 16			; 00000010H
  000ce	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185660:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185657[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185662
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_BEGINTELEPORT_ACK@CTMapSvrModule@@QAEXKKEEGMMM@Z ENDP ; CTMapSvrModule::SendMW_BEGINTELEPORT_ACK
PUBLIC	?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendMW_PETRIDING_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185678 DD	0ffffffffH
	DD	FLAT:$L185674
$T185676 DD	019930520H
	DD	01H
	DD	FLAT:$T185678
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T185671 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwRiding$ = 16						; size = 4
?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_PETRIDING_ACK, COMDAT
; _this$ = ecx

; 3666 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3667 :     CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185671[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185673
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185673:

; 3668 : 
; 3669 : 	pMsg->SetID(MW_PETRIDING_ACK)
; 3670 : 		<< dwCharID
; 3671 : 		<< dwKey
; 3672 : 		<< dwRiding;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwRiding$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 cf 20 00 00	 push	 8399			; 000020cfH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3673 : 
; 3674 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3675 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185674:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185671[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185676
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PETRIDING_ACK@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendMW_PETRIDING_ACK
PUBLIC	?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z ; CTMapSvrModule::SendMW_HELMETHIDE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185692 DD	0ffffffffH
	DD	FLAT:$L185688
$T185690 DD	019930520H
	DD	01H
	DD	FLAT:$T185692
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T185685 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bHide$ = 16						; size = 1
?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_HELMETHIDE_ACK, COMDAT
; _this$ = ecx

; 3722 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3723 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185685[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185687
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185687:

; 3724 : 
; 3725 : 	pMsg->SetID(MW_HELMETHIDE_ACK)
; 3726 : 		<< dwCharID
; 3727 : 		<< dwKEY
; 3728 : 		<< bHide;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bHide$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 02 21 00 00	 push	 8450			; 00002102H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3729 : 
; 3730 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 3731 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185688:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185685[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185690
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_HELMETHIDE_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP	; CTMapSvrModule::SendMW_HELMETHIDE_ACK
PUBLIC	?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z ; CTMapSvrModule::SendMW_SOULMATESEARCH_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185706 DD	0ffffffffH
	DD	FLAT:$L185702
$T185704 DD	019930520H
	DD	01H
	DD	FLAT:$T185706
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z
_TEXT	SEGMENT
$T185699 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bMinLevel$ = 16					; size = 1
_bNpcInvenID$ = 20					; size = 1
_bNpcItemID$ = 24					; size = 1
?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z PROC NEAR ; CTMapSvrModule::SendMW_SOULMATESEARCH_ACK, COMDAT
; _this$ = ecx

; 3855 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3856 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185699[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185701
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185701:

; 3857 : 
; 3858 : 	pMsg->SetID(MW_SOULMATESEARCH_ACK)
; 3859 : 		<< dwCharID
; 3860 : 		<< dwKEY
; 3861 : 		<< bMinLevel
; 3862 : 		<< bNpcInvenID
; 3863 : 		<< bNpcItemID;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bNpcItemID$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bNpcInvenID$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _bMinLevel$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 08 21 00 00	 push	 8456			; 00002108H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3864 : 
; 3865 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 3866 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185702:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185699[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185704
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATESEARCH_ACK@CTMapSvrModule@@QAEXKKEEE@Z ENDP ; CTMapSvrModule::SendMW_SOULMATESEARCH_ACK
PUBLIC	?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_SOULMATEEND_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185720 DD	0ffffffffH
	DD	FLAT:$L185716
$T185718 DD	019930520H
	DD	01H
	DD	FLAT:$T185720
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185713 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_SOULMATEEND_ACK, COMDAT
; _this$ = ecx

; 3888 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3889 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185713[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185715
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185715:

; 3890 : 
; 3891 : 	pMsg->SetID(MW_SOULMATEEND_ACK)
; 3892 : 		<< dwCharID
; 3893 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0c 21 00 00	 push	 8460			; 0000210cH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3894 : 
; 3895 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 3896 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185716:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185713[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185718
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATEEND_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_SOULMATEEND_ACK
PUBLIC	?SendMW_LOCALRECORD_ACK@CTMapSvrModule@@QAEXPAVCPacket@@@Z ; CTMapSvrModule::SendMW_LOCALRECORD_ACK
; Function compile flags: /Ogty
;	COMDAT ?SendMW_LOCALRECORD_ACK@CTMapSvrModule@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
?SendMW_LOCALRECORD_ACK@CTMapSvrModule@@QAEXPAVCPacket@@@Z PROC NEAR ; CTMapSvrModule::SendMW_LOCALRECORD_ACK, COMDAT
; _this$ = ecx

; 4218 : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4219 : 	pMsg->SetID(MW_LOCALRECORD_ACK);

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _pMsg$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	68 22 21 00 00	 push	 8482			; 00002122H
  0000d	8b cf		 mov	 ecx, edi
  0000f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 4220 : 
; 4221 : 	m_world.Say(pMsg);

  00014	8b 86 b8 a3 01
	00		 mov	 eax, DWORD PTR [esi+107448]
  0001a	8d 8e b8 a3 01
	00		 lea	 ecx, DWORD PTR [esi+107448]
  00020	57		 push	 edi
  00021	ff 10		 call	 DWORD PTR [eax]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi

; 4222 : }

  00025	c2 04 00	 ret	 4
?SendMW_LOCALRECORD_ACK@CTMapSvrModule@@QAEXPAVCPacket@@@Z ENDP ; CTMapSvrModule::SendMW_LOCALRECORD_ACK
_TEXT	ENDS
PUBLIC	?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDPOINTLOG_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185737 DD	0ffffffffH
	DD	FLAT:$L185733
$T185735 DD	019930520H
	DD	01H
	DD	FLAT:$T185737
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185730 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDPOINTLOG_ACK, COMDAT
; _this$ = ecx

; 4226 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4227 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185730[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185732
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185732:

; 4228 : 
; 4229 : 	pMsg->SetID(MW_GUILDPOINTLOG_ACK)
; 4230 : 		<< dwCharID
; 4231 : 		<< dwKey;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 24 21 00 00	 push	 8484			; 00002124H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4232 : 
; 4233 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 4234 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185733:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185730[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185735
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPOINTLOG_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_GUILDPOINTLOG_ACK
PUBLIC	?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z ; CTMapSvrModule::SendMW_GUILDPVPRECORD_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185751 DD	0ffffffffH
	DD	FLAT:$L185747
$T185749 DD	019930520H
	DD	01H
	DD	FLAT:$T185751
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T185744 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bType$ = 16						; size = 1
?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDPVPRECORD_ACK, COMDAT
; _this$ = ecx

; 4257 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4258 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185744[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185746
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185746:

; 4259 : 
; 4260 : 	pMsg->SetID(MW_GUILDPVPRECORD_ACK)
; 4261 : 		<< dwCharID
; 4262 : 		<< dwKey
; 4263 : 		<< bType;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bType$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 28 21 00 00	 push	 8488			; 00002128H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4264 : 
; 4265 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 4266 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185747:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185744[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185749
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPVPRECORD_ACK@CTMapSvrModule@@QAEXKKE@Z ENDP ; CTMapSvrModule::SendMW_GUILDPVPRECORD_ACK
PUBLIC	?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z ; CTMapSvrModule::SendMW_MONSTERBUY_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185765 DD	0ffffffffH
	DD	FLAT:$L185761
$T185763 DD	019930520H
	DD	01H
	DD	FLAT:$T185765
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z
_TEXT	SEGMENT
$T185758 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wNpcID$ = 16						; size = 2
_wID$ = 20						; size = 2
_dwPrice$ = 24						; size = 4
?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z PROC NEAR ; CTMapSvrModule::SendMW_MONSTERBUY_ACK, COMDAT
; _this$ = ecx

; 4273 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4274 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185758[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185760
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185760:

; 4275 : 
; 4276 : 	pMsg->SetID(MW_MONSTERBUY_ACK)
; 4277 : 		<< dwCharID
; 4278 : 		<< dwKey
; 4279 : 		<< wNpcID
; 4280 : 		<< wID
; 4281 : 		<< dwPrice;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwPrice$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _wID$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _wNpcID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 2b 21 00 00	 push	 8491			; 0000212bH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4282 : 
; 4283 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 4284 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185761:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185758[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185763
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONSTERBUY_ACK@CTMapSvrModule@@QAEXKKGGK@Z ENDP	; CTMapSvrModule::SendMW_MONSTERBUY_ACK
PUBLIC	?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendMW_GUILDMONEYRECOVER_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185779 DD	0ffffffffH
	DD	FLAT:$L185775
$T185777 DD	019930520H
	DD	01H
	DD	FLAT:$T185779
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185772 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwPrice$ = 12						; size = 4
?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDMONEYRECOVER_ACK, COMDAT
; _this$ = ecx

; 4288 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4289 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185772[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185774
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185774:

; 4290 : 
; 4291 : 	pMsg->SetID(MW_GUILDMONEYRECOVER_ACK)
; 4292 : 		<< dwGuildID
; 4293 : 		<< dwPrice;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwPrice$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 2c 21 00 00	 push	 8492			; 0000212cH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4294 : 
; 4295 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 4296 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185775:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185772[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185777
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDMONEYRECOVER_ACK@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDMONEYRECOVER_ACK
PUBLIC	?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendMW_FRIENDLIST_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185793 DD	0ffffffffH
	DD	FLAT:$L185789
$T185791 DD	019930520H
	DD	01H
	DD	FLAT:$T185793
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T185786 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDLIST_ACK, COMDAT
; _this$ = ecx

; 4300 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4301 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185786[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185788
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185788:

; 4302 : 
; 4303 : 	pMsg->SetID(MW_FRIENDLIST_ACK)
; 4304 : 		<< dwCharID
; 4305 : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 2e 21 00 00	 push	 8494			; 0000212eH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4306 : 
; 4307 : 	m_world.Say(pMsg);

  00067	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0006d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00073	56		 push	 esi
  00074	ff 12		 call	 DWORD PTR [edx]

; 4308 : }

  00076	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185789:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185786[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185791
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDLIST_ACK@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendMW_FRIENDLIST_ACK
PUBLIC	?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z ; CTMapSvrModule::SendMW_CASHITEMSALE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185807 DD	0ffffffffH
	DD	FLAT:$L185803
$T185805 DD	019930520H
	DD	01H
	DD	FLAT:$T185807
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z
_TEXT	SEGMENT
$T185800 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_wValue$ = 12						; size = 2
_bRet$ = 16						; size = 1
?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z PROC NEAR ; CTMapSvrModule::SendMW_CASHITEMSALE_ACK, COMDAT
; _this$ = ecx

; 4311 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4312 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185800[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185802
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185802:

; 4313 : 	pMsg->SetID(MW_CASHITEMSALE_ACK)
; 4314 : 		<< dwIndex
; 4315 : 		<< wValue
; 4316 : 		<< bRet;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bRet$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wValue$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwIndex$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 34 21 00 00	 push	 8500			; 00002134H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4317 : 
; 4318 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 4319 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185803:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185800[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185805
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASHITEMSALE_ACK@CTMapSvrModule@@QAEXKGE@Z ENDP	; CTMapSvrModule::SendMW_CASHITEMSALE_ACK
PUBLIC	?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z ; CTMapSvrModule::SendMW_APEXDATA_ACK
EXTRN	??6CPacket@@QAEAAV0@H@Z:NEAR			; CPacket::operator<<
EXTRN	?AttachBinary@CPacket@@QAEXPAXH@Z:NEAR		; CPacket::AttachBinary
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185821 DD	0ffffffffH
	DD	FLAT:$L185817
$T185819 DD	019930520H
	DD	01H
	DD	FLAT:$T185821
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z
_TEXT	SEGMENT
$T185814 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_BufRecv$ = 16						; size = 4
_nBufLen$ = 20						; size = 4
?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z PROC NEAR ; CTMapSvrModule::SendMW_APEXDATA_ACK, COMDAT
; _this$ = ecx

; 4322 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 4323 : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T185814[esp+28], eax
  00029	33 f6		 xor	 esi, esi
  0002b	3b c6		 cmp	 eax, esi
  0002d	89 74 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], esi
  00031	74 09		 je	 SHORT $L185816
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f0		 mov	 esi, eax
$L185816:

; 4324 : 	pMsg->SetID(MW_APEXDATA_ACK)
; 4325 : 		<< dwCharID
; 4326 : 		<< dwKey
; 4327 : 		<< nBufLen;

  0003c	8b 7c 24 2c	 mov	 edi, DWORD PTR _nBufLen$[esp+24]
  00040	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00044	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00048	57		 push	 edi
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	68 01 29 00 00	 push	 10497			; 00002901H
  00050	8b ce		 mov	 ecx, esi
  00052	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00066	8b c8		 mov	 ecx, eax
  00068	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@H@Z	; CPacket::operator<<

; 4328 : 
; 4329 : 	pMsg->AttachBinary((LPVOID)BufRecv, nBufLen);

  00074	8b 54 24 28	 mov	 edx, DWORD PTR _BufRecv$[esp+24]
  00078	57		 push	 edi
  00079	52		 push	 edx
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?AttachBinary@CPacket@@QAEXPAXH@Z ; CPacket::AttachBinary

; 4330 : 
; 4331 : 	m_world.Say(pMsg);

  00081	8b 83 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebx+107448]
  00087	8d 8b b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebx+107448]
  0008d	56		 push	 esi
  0008e	ff 10		 call	 DWORD PTR [eax]

; 4332 : }

  00090	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009e	83 c4 10	 add	 esp, 16			; 00000010H
  000a1	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185817:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185814[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185819
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_APEXDATA_ACK@CTMapSvrModule@@QAEXKKPADH@Z ENDP	; CTMapSvrModule::SendMW_APEXDATA_ACK
PUBLIC	?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z	; CTMapSvrModule::SendMW_APEXSTART_ACK
EXTRN	??6CPacket@@QAEAAV0@J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185835 DD	0ffffffffH
	DD	FLAT:$L185831
$T185833 DD	019930520H
	DD	01H
	DD	FLAT:$T185835
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z
_TEXT	SEGMENT
$T185828 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_nData$ = 16						; size = 4
?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z PROC NEAR ; CTMapSvrModule::SendMW_APEXSTART_ACK, COMDAT
; _this$ = ecx

; 4335 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4336 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185828[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185830
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185830:

; 4337 : 	pMsg->SetID(MW_APEXSTART_ACK)
; 4338 : 		<< dwCharID
; 4339 : 		<< dwKey
; 4340 : 		<< nData;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _nData$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 02 29 00 00	 push	 10498			; 00002902H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@J@Z	; CPacket::operator<<

; 4341 : 
; 4342 : 	m_world.Say(pMsg);

  00073	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00079	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0007f	56		 push	 esi
  00080	ff 10		 call	 DWORD PTR [eax]

; 4343 : }

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
  00092	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185831:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185828[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185833
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_APEXSTART_ACK@CTMapSvrModule@@QAEXKKJ@Z ENDP	; CTMapSvrModule::SendMW_APEXSTART_ACK
PUBLIC	?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z	; CTMapSvrModule::SendMW_TERMINATE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185849 DD	0ffffffffH
	DD	FLAT:$L185845
$T185847 DD	019930520H
	DD	01H
	DD	FLAT:$T185849
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T185842 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z PROC NEAR	; CTMapSvrModule::SendMW_TERMINATE_ACK, COMDAT
; _this$ = ecx

; 4514 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4515 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185842[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185844
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185844:

; 4516 : 	pMsg->SetID(MW_TERMINATE_ACK)
; 4517 : 		<< dwKey;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0003f	50		 push	 eax
  00040	68 63 21 00 00	 push	 8547			; 00002163H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4518 : 
; 4519 : 	m_world.Say(pMsg);

  0005b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00061	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00067	56		 push	 esi
  00068	ff 12		 call	 DWORD PTR [edx]

; 4520 : }

  0006a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185845:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185842[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185847
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TERMINATE_ACK@CTMapSvrModule@@QAEXK@Z ENDP	; CTMapSvrModule::SendMW_TERMINATE_ACK
PUBLIC	?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z ; CTMapSvrModule::SendMW_TOURNAMENTENTERGATE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185863 DD	0ffffffffH
	DD	FLAT:$L185859
$T185861 DD	019930520H
	DD	01H
	DD	FLAT:$T185863
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z
_TEXT	SEGMENT
$T185856 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwMoney$ = 16						; size = 4
_bEnter$ = 20						; size = 1
?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z PROC NEAR ; CTMapSvrModule::SendMW_TOURNAMENTENTERGATE_ACK, COMDAT
; _this$ = ecx

; 4629 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4630 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185856[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185858
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185858:

; 4631 : 	pMsg->SetID(MW_TOURNAMENTENTERGATE_ACK)
; 4632 : 		<< dwCharID
; 4633 : 		<< dwKey
; 4634 : 		<< dwMoney
; 4635 : 		<< bEnter;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bEnter$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwMoney$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 5b 21 00 00	 push	 8539			; 0000215bH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4636 : 
; 4637 : 	m_world.Say(pMsg);

  0007f	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00085	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  0008b	56		 push	 esi
  0008c	ff 12		 call	 DWORD PTR [edx]

; 4638 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185859:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185856[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185861
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTENTERGATE_ACK@CTMapSvrModule@@QAEXKKKE@Z ENDP ; CTMapSvrModule::SendMW_TOURNAMENTENTERGATE_ACK
PUBLIC	?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z ; CTMapSvrModule::SendMW_TOURNAMENTRESULT_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185877 DD	0ffffffffH
	DD	FLAT:$L185873
$T185875 DD	019930520H
	DD	01H
	DD	FLAT:$T185877
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z
_TEXT	SEGMENT
$T185870 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bStep$ = 8						; size = 1
_bRet$ = 12						; size = 1
_dwWinner$ = 16						; size = 4
_dwLoser$ = 20						; size = 4
_dwBlueHideTick$ = 24					; size = 4
_dwRedHideTick$ = 28					; size = 4
?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_TOURNAMENTRESULT_ACK, COMDAT
; _this$ = ecx

; 4646 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4647 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185870[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185872
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185872:

; 4648 : 	pMsg->SetID(MW_TOURNAMENTRESULT_ACK)
; 4649 : 		<< bStep
; 4650 : 		<< bRet
; 4651 : 		<< dwWinner
; 4652 : 		<< dwLoser
; 4653 : 		<< dwBlueHideTick
; 4654 : 		<< dwRedHideTick;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _dwRedHideTick$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwBlueHideTick$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _dwLoser$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwWinner$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _bRet$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _bStep$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 5d 21 00 00	 push	 8541			; 0000215dH
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4655 : 
; 4656 : 	m_world.Say(pMsg);

  00097	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  0009d	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  000a3	56		 push	 esi
  000a4	ff 10		 call	 DWORD PTR [eax]

; 4657 : }

  000a6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b3	83 c4 10	 add	 esp, 16			; 00000010H
  000b6	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185873:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185870[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185875
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTRESULT_ACK@CTMapSvrModule@@QAEXEEKKKK@Z ENDP ; CTMapSvrModule::SendMW_TOURNAMENTRESULT_ACK
PUBLIC	?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z	; CTMapSvrModule::SendMW_RPSGAME_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185891 DD	0ffffffffH
	DD	FLAT:$L185887
$T185889 DD	019930520H
	DD	01H
	DD	FLAT:$T185891
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z
_TEXT	SEGMENT
$T185884 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bType$ = 16						; size = 1
_bWinCount$ = 20					; size = 1
_bPlayerRPS$ = 24					; size = 1
?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z PROC NEAR ; CTMapSvrModule::SendMW_RPSGAME_ACK, COMDAT
; _this$ = ecx

; 4683 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4684 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185884[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185886
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185886:

; 4685 : 	pMsg->SetID(MW_RPSGAME_ACK)
; 4686 : 		<< dwCharID
; 4687 : 		<< dwKey
; 4688 : 		<< bType
; 4689 : 		<< bWinCount
; 4690 : 		<< bPlayerRPS;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bPlayerRPS$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bWinCount$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _bType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 6c 21 00 00	 push	 8556			; 0000216cH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4691 : 
; 4692 : 	m_world.Say(pMsg);

  0008b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00091	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00097	56		 push	 esi
  00098	ff 12		 call	 DWORD PTR [edx]

; 4693 : }

  0009a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185887:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185884[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185889
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RPSGAME_ACK@CTMapSvrModule@@QAEXKKEEE@Z ENDP	; CTMapSvrModule::SendMW_RPSGAME_ACK
PUBLIC	?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z ; CTMapSvrModule::SendMW_MONTHRANKRESETCHAR_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T185905 DD	0ffffffffH
	DD	FLAT:$L185901
$T185903 DD	019930520H
	DD	01H
	DD	FLAT:$T185905
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T185898 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z PROC NEAR ; CTMapSvrModule::SendMW_MONTHRANKRESETCHAR_ACK, COMDAT
; _this$ = ecx

; 4696 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4697 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T185898[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L185900
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L185900:

; 4698 : 	pMsg->SetID(MW_MONTHRANKRESETCHAR_ACK)
; 4699 : 		<< dwCharID;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0003f	50		 push	 eax
  00040	68 6f 21 00 00	 push	 8559			; 0000216fH
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4700 : 
; 4701 : 	m_world.Say(pMsg);

  0005b	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  00061	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00067	56		 push	 esi
  00068	ff 12		 call	 DWORD PTR [edx]

; 4702 : }

  0006a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	83 c4 10	 add	 esp, 16			; 00000010H
  0007a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185901:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T185898[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185903
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTHRANKRESETCHAR_ACK@CTMapSvrModule@@QAEXK@Z ENDP ; CTMapSvrModule::SendMW_MONTHRANKRESETCHAR_ACK
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L185914
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L185914:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L185924
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L185924:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEIXZ ; std::vector<CTItem *,std::allocator<CTItem *> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L185929
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L185929:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE_NXZ ; std::vector<CTItem *,std::allocator<CTItem *> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L185939
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L185939:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::empty
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::size
_TEXT	ENDS
PUBLIC	?empty@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::empty, COMDAT
; _this$ = ecx

; 458  : 		return (size() == 0);

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 94 c0	 sete	 al

; 459  : 		}

  0000a	c3		 ret	 0
?empty@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::empty
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L185960
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L185960:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEIXZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L185983

; 517  : 		}

  00007	c3		 ret	 0
$L185983:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 02	 sar	 edx, 2
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L185988
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L185988:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ ; ATL::CAtlServiceModuleT<CTMapSvrModule,100>::LogEvent
EXTRN	_puts:NEAR
EXTRN	__imp__DeregisterEventSource@4:NEAR
EXTRN	__imp__RegisterEventSourceA@8:NEAR
EXTRN	__imp__ReportEventA@36:NEAR
EXTRN	_vsprintf:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT
_lpszStrings$ = -264					; size = 4
_chMsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_this$ = 8						; size = 4
_pszFormat$ = 12					; size = 4
?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ PROC NEAR ; ATL::CAtlServiceModuleT<CTMapSvrModule,100>::LogEvent, COMDAT

; 3835 : 	{

  00000	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie

; 3836 : 		TCHAR chMsg[256];
; 3837 : 		HANDLE hEventSource;
; 3838 : 		LPTSTR lpszStrings[1];
; 3839 : 		va_list pArg;
; 3840 : 
; 3841 : 		va_start(pArg, pszFormat);
; 3842 : 		_vstprintf(chMsg, pszFormat, pArg);

  0000b	8b 8c 24 10 01
	00 00		 mov	 ecx, DWORD PTR _pszFormat$[esp+260]
  00012	89 84 24 04 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+264], eax
  00019	56		 push	 esi
  0001a	8d 84 24 18 01
	00 00		 lea	 eax, DWORD PTR _pszFormat$[esp+268]
  00021	50		 push	 eax
  00022	51		 push	 ecx
  00023	8d 54 24 10	 lea	 edx, DWORD PTR _chMsg$[esp+276]
  00027	52		 push	 edx
  00028	e8 00 00 00 00	 call	 _vsprintf

; 3843 : 		va_end(pArg);
; 3844 : 
; 3845 : 		lpszStrings[0] = chMsg;
; 3846 : 
; 3847 : 		if (!m_bService)

  0002d	8b b4 24 1c 01
	00 00		 mov	 esi, DWORD PTR _this$[esp+276]
  00034	8d 44 24 14	 lea	 eax, DWORD PTR _chMsg$[esp+280]
  00038	89 44 24 10	 mov	 DWORD PTR _lpszStrings$[esp+280], eax
  0003c	8b 86 4c 01 00
	00		 mov	 eax, DWORD PTR [esi+332]
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	85 c0		 test	 eax, eax
  00047	75 0d		 jne	 SHORT $L181837

; 3848 : 		{
; 3849 : 			// Not running as a service, so print out the error message 
; 3850 : 			// to the console if possible
; 3851 : 			_putts(chMsg);

  00049	8d 4c 24 08	 lea	 ecx, DWORD PTR _chMsg$[esp+268]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _puts
  00053	83 c4 04	 add	 esp, 4
$L181837:

; 3852 : 		}
; 3853 : 
; 3854 : 		/* Get a handle to use with ReportEvent(). */
; 3855 : 		hEventSource = RegisterEventSource(NULL, m_szServiceName);

  00056	83 c6 2c	 add	 esi, 44			; 0000002cH
  00059	56		 push	 esi
  0005a	6a 00		 push	 0
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterEventSourceA@8
  00062	8b f0		 mov	 esi, eax

; 3856 : 		if (hEventSource != NULL)

  00064	85 f6		 test	 esi, esi
  00066	74 21		 je	 SHORT $L181838

; 3857 : 		{
; 3858 : 			/* Write to event log. */
; 3859 : 			ReportEvent(hEventSource, EVENTLOG_INFORMATION_TYPE, 0, 0, NULL, 1, 0, (LPCTSTR*) &lpszStrings[0], NULL);

  00068	6a 00		 push	 0
  0006a	8d 54 24 08	 lea	 edx, DWORD PTR _lpszStrings$[esp+272]
  0006e	52		 push	 edx
  0006f	6a 00		 push	 0
  00071	6a 01		 push	 1
  00073	6a 00		 push	 0
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 04		 push	 4
  0007b	56		 push	 esi
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReportEventA@36

; 3860 : 			DeregisterEventSource(hEventSource);

  00082	56		 push	 esi
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeregisterEventSource@4
$L181838:

; 3861 : 		}
; 3862 : 	}

  00089	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+268]
  00090	5e		 pop	 esi
  00091	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00096	81 c4 08 01 00
	00		 add	 esp, 264		; 00000108H
  0009c	c3		 ret	 0
?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ ENDP ; ATL::CAtlServiceModuleT<CTMapSvrModule,100>::LogEvent
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??R?$less@G@std@@QBE_NABG0@Z			; std::less<unsigned short>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@G@std@@QBE_NABG0@Z PROC NEAR			; std::less<unsigned short>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	66 8b 08	 mov	 cx, WORD PTR [eax]
  00007	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000b	66 3b 0a	 cmp	 cx, WORD PTR [edx]
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 140  : 		}

  00012	c2 08 00	 ret	 8
??R?$less@G@std@@QBE_NABG0@Z ENDP			; std::less<unsigned short>::operator()
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++, COMDAT
; _this$ = ecx

; 229  : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 230  : 			++this->_Myptr;

  00002	83 00 18	 add	 DWORD PTR [eax], 24	; 00000018H

; 231  : 			return (*this);
; 232  : 			}

  00005	c3		 ret	 0
??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 68   : 		const_iterator()

  00000	8b c1		 mov	 eax, ecx

; 69   : 			{	// construct with null pointer
; 70   : 			_Myptr = 0;

  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 71   : 			}

  00008	c3		 ret	 0
??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEABUtagRECORDSET@@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEABUtagRECORDSET@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEABUtagRECORDSET@@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEABUtagRECORDSET@@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++, COMDAT
; _this$ = ecx

; 229  : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 230  : 			++this->_Myptr;

  00002	83 00 04	 add	 DWORD PTR [eax], 4

; 231  : 			return (*this);
; 232  : 			}

  00005	c3		 ret	 0
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 68   : 		const_iterator()

  00000	8b c1		 mov	 eax, ecx

; 69   : 			{	// construct with null pointer
; 70   : 			_Myptr = 0;

  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 71   : 			}

  00008	c3		 ret	 0
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC NEAR	; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagLOCAL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagLOCAL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagLOCAL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagLOCAL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagCABINET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagCABINET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagCABINET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagCABINET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagPET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagPET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagPET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagPET@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagPROTECTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagPROTECTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagPROTECTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagPROTECTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCQuest@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCQuest@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCQuest@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCQuest@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTChannel@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTChannel@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTChannel@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTChannel@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagARENA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagARENA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagARENA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagARENA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagARENA@@@2@@Z ; std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagARENA@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagARENA@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagARENA@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagARENA@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagARENA@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagARENA@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0000b	c1 e1 03	 shl	 ecx, 3
  0000e	03 d1		 add	 edx, ecx
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  00012	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	f7 d9		 neg	 ecx
  0000a	c1 e1 02	 shl	 ecx, 2
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  00011	c2 04 00	 ret	 4
??Ziterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEABQAVCTItem@@XZ ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEABQAVCTItem@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEABQAVCTItem@@XZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEABQAVCTItem@@XZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L182990
  0000d	8d 49 00	 npad	 3
$L182989:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L182989
$L182990:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183000
  0000d	8d 49 00	 npad	 3
$L182999:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L182999
$L183000:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183012
  0000d	8d 49 00	 npad	 3
$L183011:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183011
$L183012:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183022
  0000d	8d 49 00	 npad	 3
$L183021:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183021
$L183022:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183032
  0000d	8d 49 00	 npad	 3
$L183031:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183031
$L183032:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183042
  0000d	8d 49 00	 npad	 3
$L183041:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183041
$L183042:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183052
  0000d	8d 49 00	 npad	 3
$L183051:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183051
$L183052:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183062
  0000d	8d 49 00	 npad	 3
$L183061:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183061
$L183062:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183072
  0000d	8d 49 00	 npad	 3
$L183071:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183071
$L183072:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183082
  0000d	8d 49 00	 npad	 3
$L183081:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183081
$L183082:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183092
  0000d	8d 49 00	 npad	 3
$L183091:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183091
$L183092:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183102
  0000d	8d 49 00	 npad	 3
$L183101:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183101
$L183102:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0f	 add	 eax, 15			; 0000000fH

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183114
  0000d	8d 49 00	 npad	 3
$L183113:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183113
$L183114:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z ; std::_Ptr_cat<CTPlayer>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z PROC NEAR ; std::_Ptr_cat<CTPlayer>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z ENDP ; std::_Ptr_cat<CTPlayer>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VCTItem@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTItem@@0@Z ; std::_Ptr_cat<CTItem>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@VCTItem@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTItem@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCTItem@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTItem@@0@Z PROC NEAR ; std::_Ptr_cat<CTItem>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@VCTItem@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTItem@@0@Z ENDP ; std::_Ptr_cat<CTItem>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L186685:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L186685
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 322  : 	{	// return pointer category from pointer to unsigned short arguments

  00000	51		 push	 ecx

; 323  : 	_Scalar_ptr_iterator_tag _Cat;
; 324  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 325  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 371  : 	{	// return pointer category from pointer to unsigned long arguments

  00000	51		 push	 ecx

; 372  : 	_Scalar_ptr_iterator_tag _Cat;
; 373  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 374  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	??0tagPACKETBUF@@QAE@XZ				; tagPACKETBUF::tagPACKETBUF
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
;	COMDAT ??0tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT
??0tagPACKETBUF@@QAE@XZ PROC NEAR			; tagPACKETBUF::tagPACKETBUF, COMDAT
; _this$ = ecx

; 121  : 	tagPACKETBUF()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket

; 122  : 	{
; 123  : 		m_pSESSION = NULL;

  0000b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 124  : 	};

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c3		 ret	 0
??0tagPACKETBUF@@QAE@XZ ENDP				; tagPACKETBUF::tagPACKETBUF
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L186712
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L186712:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	d1 f8		 sar	 eax, 1

; 517  : 		}

  00011	c3		 ret	 0
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::size
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L186720
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L186720:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ PROC NEAR	; std::allocator<CTPlayer *>::allocator<CTPlayer *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ ENDP		; std::allocator<CTPlayer *>::allocator<CTPlayer *>
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L186731
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L186731:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L186736
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L186736:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@G@std@@QAEXPAGI@Z	; std::allocator<unsigned short>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@G@std@@QAEXPAGI@Z PROC NEAR	; std::allocator<unsigned short>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@G@std@@QAEXPAGI@Z ENDP		; std::allocator<unsigned short>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<CTPlayer *>::allocator<CTPlayer *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z ; std::allocator<CTPlayer *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z PROC NEAR ; std::allocator<CTPlayer *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z ENDP ; std::allocator<CTPlayer *>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 09	 lea	 edx, DWORD PTR [ecx+ecx]
  00009	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000b	c2 04 00	 ret	 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L186779
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L186780
$L186779:
  00011	8b d0		 mov	 edx, eax
$L186780:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L150517
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L186787
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L186787:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L150517
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L150517:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ	; std::allocator<CTPlayer *>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ PROC NEAR ; std::allocator<CTPlayer *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ ENDP	; std::allocator<CTPlayer *>::max_size
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Min
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L150953
  0000d	8d 49 00	 npad	 3
$L150952:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L150952
$L150953:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L151065

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L186883

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L186864
  0001d	8d 49 00	 npad	 3
$L186863:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L186863
$L186864:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L186883:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L151069
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L151068:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L151069

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L151068
$L151069:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L151065:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z PROC NEAR ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z ENDP ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z ; std::_Allocate<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z PROC NEAR ; std::_Allocate<CTPlayer *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z ENDP ; std::_Allocate<CTPlayer *>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z ; CTMapSvrModule::SendSM_AICMD_REQ
EXTRN	?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z:NEAR ; CTMapSvrModule::SayToAI
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T186930 DD	0ffffffffH
	DD	FLAT:$L186922
$T186928 DD	019930520H
	DD	01H
	DD	FLAT:$T186930
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z
_TEXT	SEGMENT
$T186919 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwAICmdHandle$ = 8					; size = 4
_dwHostKEY$ = 12					; size = 4
_dwEventHost$ = 16					; size = 4
_dwRHId$ = 20						; size = 4
_bRHType$ = 24						; size = 1
_dwDelay$ = 28						; size = 4
_dwMonID$ = 32						; size = 4
_bChannel$ = 36						; size = 1
_wMapID$ = 40						; size = 2
_wPartyID$ = 44						; size = 2
?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z PROC NEAR ; CTMapSvrModule::SendSM_AICMD_REQ, COMDAT
; _this$ = ecx

; 16   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 17   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T186919[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L186920
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L186921
$L186920:
  00046	33 f6		 xor	 esi, esi
$L186921:

; 18   : 
; 19   : 	pBUF->m_packet.SetID(SM_AICMD_REQ)
; 20   : 		<< dwAICmdHandle
; 21   : 		<< dwHostKEY
; 22   : 		<< dwEventHost
; 23   : 		<< dwRHId
; 24   : 		<< bRHType
; 25   : 		<< dwDelay
; 26   : 		<< dwMonID
; 27   : 		<< bChannel
; 28   : 		<< wMapID
; 29   : 		<< wPartyID;

  00048	8b 44 24 40	 mov	 eax, DWORD PTR _wPartyID$[esp+20]
  0004c	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wMapID$[esp+20]
  00050	8b 54 24 38	 mov	 edx, DWORD PTR _bChannel$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 38	 mov	 eax, DWORD PTR _dwMonID$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwDelay$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 38	 mov	 edx, DWORD PTR _bRHType$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 38	 mov	 eax, DWORD PTR _dwRHId$[esp+36]
  00068	51		 push	 ecx
  00069	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwEventHost$[esp+40]
  0006d	52		 push	 edx
  0006e	8b 54 24 38	 mov	 edx, DWORD PTR _dwHostKEY$[esp+44]
  00072	50		 push	 eax
  00073	8b 44 24 38	 mov	 eax, DWORD PTR _dwAICmdHandle$[esp+48]
  00077	51		 push	 ecx
  00078	52		 push	 edx
  00079	50		 push	 eax
  0007a	68 03 10 00 00	 push	 4099			; 00001003H
  0007f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00082	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0008a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c7	8b c8		 mov	 ecx, eax
  000c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ce	8b c8		 mov	 ecx, eax
  000d0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 30   : 
; 31   : 	SayToAI(pBUF);

  000d5	56		 push	 esi
  000d6	8b cf		 mov	 ecx, edi
  000d8	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 32   : }

  000dd	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ea	83 c4 10	 add	 esp, 16			; 00000010H
  000ed	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186922:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T186919[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186928
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_AICMD_REQ@CTMapSvrModule@@QAEXKKKKEKKEGG@Z ENDP	; CTMapSvrModule::SendSM_AICMD_REQ
PUBLIC	?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z ; CTMapSvrModule::SendSM_AICMD_ACK
EXTRN	?SayToBATCH@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z:NEAR ; CTMapSvrModule::SayToBATCH
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T186948 DD	0ffffffffH
	DD	FLAT:$L186940
$T186946 DD	019930520H
	DD	01H
	DD	FLAT:$T186948
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z
_TEXT	SEGMENT
$T186937 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwAICmdHandle$ = 8					; size = 4
_dwHostKEY$ = 12					; size = 4
_dwEventHost$ = 16					; size = 4
_dwRHId$ = 20						; size = 4
_bRHType$ = 24						; size = 1
_dwMonID$ = 28						; size = 4
_bChannel$ = 32						; size = 1
_wMapID$ = 36						; size = 2
_wPartyID$ = 40						; size = 2
?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z PROC NEAR ; CTMapSvrModule::SendSM_AICMD_ACK, COMDAT
; _this$ = ecx

; 43   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 44   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T186937[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L186938
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L186939
$L186938:
  00046	33 f6		 xor	 esi, esi
$L186939:

; 45   : 
; 46   : 	pBUF->m_packet.SetID(SM_AICMD_ACK)
; 47   : 		<< dwAICmdHandle
; 48   : 		<< dwHostKEY
; 49   : 		<< dwEventHost
; 50   : 		<< dwRHId
; 51   : 		<< bRHType
; 52   : 		<< dwMonID
; 53   : 		<< bChannel
; 54   : 		<< wMapID
; 55   : 		<< wPartyID;

  00048	8b 44 24 3c	 mov	 eax, DWORD PTR _wPartyID$[esp+20]
  0004c	8b 4c 24 38	 mov	 ecx, DWORD PTR _wMapID$[esp+20]
  00050	8b 54 24 34	 mov	 edx, DWORD PTR _bChannel$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 34	 mov	 eax, DWORD PTR _dwMonID$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 34	 mov	 ecx, DWORD PTR _bRHType$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 34	 mov	 edx, DWORD PTR _dwRHId$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 34	 mov	 eax, DWORD PTR _dwEventHost$[esp+36]
  00068	51		 push	 ecx
  00069	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwHostKEY$[esp+40]
  0006d	52		 push	 edx
  0006e	8b 54 24 34	 mov	 edx, DWORD PTR _dwAICmdHandle$[esp+44]
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	52		 push	 edx
  00075	68 04 10 00 00	 push	 4100			; 00001004H
  0007a	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007d	c7 44 24 3c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+72], -1
  00085	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 56   : 
; 57   : 	SayToBATCH(pBUF);

  000c9	56		 push	 esi
  000ca	8b cf		 mov	 ecx, edi
  000cc	e8 00 00 00 00	 call	 ?SayToBATCH@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToBATCH

; 58   : }

  000d1	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000de	83 c4 10	 add	 esp, 16			; 00000010H
  000e1	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186940:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T186937[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186946
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_AICMD_ACK@CTMapSvrModule@@QAEXKKKKEKEGG@Z ENDP	; CTMapSvrModule::SendSM_AICMD_ACK
PUBLIC	?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z ; CTMapSvrModule::SendSM_SWITCHSTART_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T186966 DD	0ffffffffH
	DD	FLAT:$L186958
$T186964 DD	019930520H
	DD	01H
	DD	FLAT:$T186966
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z
_TEXT	SEGMENT
$T186955 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bChannel$ = 8						; size = 1
_wPartyID$ = 12						; size = 2
_wMapID$ = 16						; size = 2
_dwID$ = 20						; size = 4
_dwDuration$ = 24					; size = 4
?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z PROC NEAR ; CTMapSvrModule::SendSM_SWITCHSTART_REQ, COMDAT
; _this$ = ecx

; 65   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 66   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T186955[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L186956
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L186957
$L186956:
  00046	33 f6		 xor	 esi, esi
$L186957:

; 67   : 
; 68   : 	pBUF->m_packet.SetID(SM_SWITCHSTART_REQ)
; 69   : 		<< bChannel
; 70   : 		<< wPartyID
; 71   : 		<< wMapID
; 72   : 		<< dwID
; 73   : 		<< dwDuration;

  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dwDuration$[esp+20]
  0004c	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwID$[esp+20]
  00050	8b 54 24 24	 mov	 edx, DWORD PTR _wMapID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 24	 mov	 eax, DWORD PTR _wPartyID$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 24	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  0005e	52		 push	 edx
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	68 0b 10 00 00	 push	 4107			; 0000100bH
  00066	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00069	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00071	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 74   : 
; 75   : 	SayToAI(pBUF);

  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 76   : }

  000a1	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ae	83 c4 10	 add	 esp, 16			; 00000010H
  000b1	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186958:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T186955[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186964
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_SWITCHSTART_REQ@CTMapSvrModule@@QAEXEGGKK@Z ENDP ; CTMapSvrModule::SendSM_SWITCHSTART_REQ
PUBLIC	?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z	; CTMapSvrModule::SendSM_POSTBILL_REQ
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T186984 DD	0ffffffffH
	DD	FLAT:$L186976
$T186982 DD	019930520H
	DD	01H
	DD	FLAT:$T186984
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z
_TEXT	SEGMENT
$T186973 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwPostID$ = 12						; size = 4
_timeDel$ = 16						; size = 8
?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z PROC NEAR ; CTMapSvrModule::SendSM_POSTBILL_REQ, COMDAT
; _this$ = ecx

; 81   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 82   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T186973[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L186974
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L186975
$L186974:
  00046	33 f6		 xor	 esi, esi
$L186975:

; 83   : 
; 84   : 	pBUF->m_packet.SetID(SM_POSTBILL_REQ)
; 85   : 		<< dwCharID
; 86   : 		<< dwPostID
; 87   : 		<< timeDel;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _timeDel$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _timeDel$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwPostID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 0d 10 00 00	 push	 4109			; 0000100dH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 88   : 
; 89   : 	SayToAI(pBUF);

  00086	56		 push	 esi
  00087	8b cf		 mov	 ecx, edi
  00089	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 90   : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186976:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T186973[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186982
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK_J@Z ENDP	; CTMapSvrModule::SendSM_POSTBILL_REQ
PUBLIC	?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendSM_POSTBILLERASE_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187002 DD	0ffffffffH
	DD	FLAT:$L186994
$T187000 DD	019930520H
	DD	01H
	DD	FLAT:$T187002
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T186991 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwPostID$ = 12						; size = 4
?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendSM_POSTBILLERASE_REQ, COMDAT
; _this$ = ecx

; 94   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 95   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T186991[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L186992
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L186993
$L186992:
  00046	33 f6		 xor	 esi, esi
$L186993:

; 96   : 
; 97   : 	pBUF->m_packet.SetID(SM_POSTBILLERASE_REQ)
; 98   : 		<< dwCharID
; 99   : 		<< dwPostID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwPostID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 0f 10 00 00	 push	 4111			; 0000100fH
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 100  : 
; 101  : 	SayToAI(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 102  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186994:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T186991[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187000
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_POSTBILLERASE_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendSM_POSTBILLERASE_REQ
PUBLIC	?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendSM_DUELEND_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187020 DD	0ffffffffH
	DD	FLAT:$L187012
$T187018 DD	019930520H
	DD	01H
	DD	FLAT:$T187020
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187009 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwDuelID$ = 8						; size = 4
_dwLoser$ = 12						; size = 4
?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR	; CTMapSvrModule::SendSM_DUELEND_REQ, COMDAT
; _this$ = ecx

; 123  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 124  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187009[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187010
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187011
$L187010:
  00046	33 f6		 xor	 esi, esi
$L187011:

; 125  : 
; 126  : 	pBUF->m_packet.SetID(SM_DUELEND_REQ)
; 127  : 		<< dwDuelID
; 128  : 		<< dwLoser;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwLoser$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwDuelID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 12 10 00 00	 push	 4114			; 00001012H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 129  : 
; 130  : 	SayToAI(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 131  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187012:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187009[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187018
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_DUELEND_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendSM_DUELEND_REQ
PUBLIC	?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z ; CTMapSvrModule::SendSM_RESETHOST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187038 DD	0ffffffffH
	DD	FLAT:$L187030
$T187036 DD	019930520H
	DD	01H
	DD	FLAT:$T187038
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z
_TEXT	SEGMENT
$T187027 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bChannel$ = 8						; size = 1
_wMapID$ = 12						; size = 2
_wPartyID$ = 16						; size = 2
_dwID$ = 20						; size = 4
?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z PROC NEAR ; CTMapSvrModule::SendSM_RESETHOST_REQ, COMDAT
; _this$ = ecx

; 137  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 138  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187027[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187028
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187029
$L187028:
  00046	33 f6		 xor	 esi, esi
$L187029:

; 139  : 
; 140  : 	pBUF->m_packet.SetID(SM_RESETHOST_REQ)
; 141  : 		<< bChannel
; 142  : 		<< wMapID
; 143  : 		<< wPartyID
; 144  : 		<< dwID;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _wPartyID$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _wMapID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _bChannel$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 15 10 00 00	 push	 4117			; 00001015H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 145  : 
; 146  : 	SayToAI(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 147  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187030:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187027[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187036
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_RESETHOST_REQ@CTMapSvrModule@@QAEXEGGK@Z ENDP	; CTMapSvrModule::SendSM_RESETHOST_REQ
PUBLIC	?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z ; CTMapSvrModule::SendSM_AUCTIONCMD_REQ
EXTRN	?SayToLOG@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z:NEAR ; CTMapSvrModule::SayToLOG
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187056 DD	0ffffffffH
	DD	FLAT:$L187048
$T187054 DD	019930520H
	DD	01H
	DD	FLAT:$T187056
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z
_TEXT	SEGMENT
$T187045 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wNpcID$ = 8						; size = 2
_dwAuctionID$ = 12					; size = 4
_dEndTime$ = 16						; size = 8
?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z PROC NEAR ; CTMapSvrModule::SendSM_AUCTIONCMD_REQ, COMDAT
; _this$ = ecx

; 199  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 200  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187045[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187046
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187047
$L187046:
  00046	33 f6		 xor	 esi, esi
$L187047:

; 201  : 
; 202  : 	pBUF->m_packet.SetID(SM_AUCTIONCMD_REQ)
; 203  : 		<< wNpcID
; 204  : 		<< dwAuctionID
; 205  : 		<< dEndTime;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dEndTime$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dEndTime$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwAuctionID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _wNpcID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 21 10 00 00	 push	 4129			; 00001021H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 206  : 
; 207  : 	SayToLOG(pBUF);

  00086	56		 push	 esi
  00087	8b cf		 mov	 ecx, edi
  00089	e8 00 00 00 00	 call	 ?SayToLOG@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToLOG

; 208  : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187048:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187045[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187054
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_AUCTIONCMD_REQ@CTMapSvrModule@@QAEXGK_J@Z ENDP	; CTMapSvrModule::SendSM_AUCTIONCMD_REQ
PUBLIC	?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z	; CTMapSvrModule::SendDM_ACTEND_REQ
EXTRN	?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z:NEAR ; CTMapSvrModule::SayToDB
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187074 DD	0ffffffffH
	DD	FLAT:$L187066
$T187072 DD	019930520H
	DD	01H
	DD	FLAT:$T187074
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T187063 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z PROC NEAR	; CTMapSvrModule::SendDM_ACTEND_REQ, COMDAT
; _this$ = ecx

; 270  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 271  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187063[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187064
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187065
$L187064:
  00046	33 f6		 xor	 esi, esi
$L187065:

; 272  : 	pBUF->m_packet.SetID(DM_ACTEND_REQ)
; 273  : 		<< dwCharID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 6a 90 00 00	 push	 36970			; 0000906aH
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 274  : 
; 275  : 	SayToDB(pBUF);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 276  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187066:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187063[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187072
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_ACTEND_REQ@CTMapSvrModule@@QAEXK@Z ENDP		; CTMapSvrModule::SendDM_ACTEND_REQ
PUBLIC	?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendDM_RECALLMONDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187092 DD	0ffffffffH
	DD	FLAT:$L187084
$T187090 DD	019930520H
	DD	01H
	DD	FLAT:$T187092
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187081 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwMonID$ = 12						; size = 4
?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendDM_RECALLMONDEL_REQ, COMDAT
; _this$ = ecx

; 294  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 295  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187081[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187082
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187083
$L187082:
  00046	33 f6		 xor	 esi, esi
$L187083:

; 296  : 	pBUF->m_packet.SetID(DM_RECALLMONDEL_REQ)
; 297  : 		<< dwCharID
; 298  : 		<< dwMonID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwMonID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 34 90 00 00	 push	 36916			; 00009034H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 299  : 
; 300  : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 301  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187084:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187081[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187090
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_RECALLMONDEL_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendDM_RECALLMONDEL_REQ
PUBLIC	?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z ; CTMapSvrModule::SendDM_CLEARCURRENTUSER_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187110 DD	0ffffffffH
	DD	FLAT:$L187102
$T187108 DD	019930520H
	DD	01H
	DD	FLAT:$T187110
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T187099 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z PROC NEAR ; CTMapSvrModule::SendDM_CLEARCURRENTUSER_REQ, COMDAT
; _this$ = ecx

; 364  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 365  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187099[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187100
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187101
$L187100:
  00046	33 f6		 xor	 esi, esi
$L187101:

; 366  : 
; 367  : 	pBUF->m_packet.SetID(DM_CLEARCURRENTUSER_REQ)
; 368  : 		<< dwCharID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 2d 90 00 00	 push	 36909			; 0000902dH
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 369  : 
; 370  : 	SayToDB(pBUF);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 371  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187102:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187099[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187108
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CLEARCURRENTUSER_REQ@CTMapSvrModule@@QAEXK@Z ENDP ; CTMapSvrModule::SendDM_CLEARCURRENTUSER_REQ
PUBLIC	?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z ; CTMapSvrModule::SendDM_ENTERMAPSVR_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187128 DD	0ffffffffH
	DD	FLAT:$L187120
$T187126 DD	019930520H
	DD	01H
	DD	FLAT:$T187128
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z
_TEXT	SEGMENT
$T187117 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bDBLoad$ = 8						; size = 1
_dwUserID$ = 12						; size = 4
_dwCharID$ = 16						; size = 4
_dwKEY$ = 20						; size = 4
_dwIPAddr$ = 24						; size = 4
_wPort$ = 28						; size = 2
_bChannel$ = 32						; size = 1
?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z PROC NEAR ; CTMapSvrModule::SendDM_ENTERMAPSVR_REQ, COMDAT
; _this$ = ecx

; 380  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 381  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187117[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187118
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187119
$L187118:
  00046	33 f6		 xor	 esi, esi
$L187119:

; 382  : 
; 383  : 	pBUF->m_packet.SetID(DM_ENTERMAPSVR_REQ)
; 384  : 		<< bDBLoad
; 385  : 		<< dwUserID
; 386  : 		<< dwCharID
; 387  : 		<< dwKEY
; 388  : 		<< dwIPAddr
; 389  : 		<< wPort
; 390  : 		<< bChannel;

  00048	8b 44 24 34	 mov	 eax, DWORD PTR _bChannel$[esp+20]
  0004c	8b 4c 24 30	 mov	 ecx, DWORD PTR _wPort$[esp+20]
  00050	8b 54 24 2c	 mov	 edx, DWORD PTR _dwIPAddr$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 2c	 mov	 edx, DWORD PTR _dwUserID$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 2c	 mov	 eax, DWORD PTR _bDBLoad$[esp+36]
  00068	51		 push	 ecx
  00069	52		 push	 edx
  0006a	50		 push	 eax
  0006b	68 01 90 00 00	 push	 36865			; 00009001H
  00070	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00073	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0007b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 391  : 
; 392  : 	SayToDB(pBUF);

  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 393  : }

  000b9	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c6	83 c4 10	 add	 esp, 16			; 00000010H
  000c9	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187120:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187117[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187126
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_ENTERMAPSVR_REQ@CTMapSvrModule@@QAEXEKKKKGE@Z ENDP ; CTMapSvrModule::SendDM_ENTERMAPSVR_REQ
PUBLIC	?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z ; CTMapSvrModule::SendDM_TELEPORT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187146 DD	0ffffffffH
	DD	FLAT:$L187138
$T187144 DD	019930520H
	DD	01H
	DD	FLAT:$T187146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z
_TEXT	SEGMENT
$T187135 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
_bTutorialOut$ = 36					; size = 1
?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z PROC NEAR ; CTMapSvrModule::SendDM_TELEPORT_REQ, COMDAT
; _this$ = ecx

; 403  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 404  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187135[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187136
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187137
$L187136:
  00046	33 f6		 xor	 esi, esi
$L187137:

; 405  : 
; 406  : 	pBUF->m_packet.SetID(DM_TELEPORT_REQ)
; 407  : 		<< dwCharID
; 408  : 		<< dwKEY
; 409  : 		<< bChannel
; 410  : 		<< wMapID
; 411  : 		<< fPosX
; 412  : 		<< fPosY
; 413  : 		<< fPosZ
; 414  : 		<< bTutorialOut;

  00048	8b 44 24 38	 mov	 eax, DWORD PTR _bTutorialOut$[esp+20]
  0004c	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosZ$[esp+20]
  00050	8b 54 24 30	 mov	 edx, DWORD PTR _fPosY$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 30	 mov	 eax, DWORD PTR _fPosX$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 30	 mov	 ecx, DWORD PTR _wMapID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 30	 mov	 edx, DWORD PTR _bChannel$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  00068	51		 push	 ecx
  00069	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  0006d	52		 push	 edx
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	68 32 90 00 00	 push	 36914			; 00009032H
  00075	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00078	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00080	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 415  : 
; 416  : 	SayToDB(pBUF);

  000bd	56		 push	 esi
  000be	8b cf		 mov	 ecx, edi
  000c0	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 417  : }

  000c5	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d2	83 c4 10	 add	 esp, 16			; 00000010H
  000d5	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187138:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187135[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187144
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TELEPORT_REQ@CTMapSvrModule@@QAEXKKEGMMME@Z ENDP ; CTMapSvrModule::SendDM_TELEPORT_REQ
PUBLIC	?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z ; CTMapSvrModule::SendDM_ENTERMAPSVR_ACK
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187164 DD	0ffffffffH
	DD	FLAT:$L187156
$T187162 DD	019930520H
	DD	01H
	DD	FLAT:$T187164
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z
_TEXT	SEGMENT
$T187153 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_bDBLoad$ = 20						; size = 1
?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z PROC NEAR ; CTMapSvrModule::SendDM_ENTERMAPSVR_ACK, COMDAT
; _this$ = ecx

; 463  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 464  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187153[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187154
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187155
$L187154:
  00046	33 f6		 xor	 esi, esi
$L187155:

; 465  : 
; 466  : 	pBUF->m_packet.SetID(DM_ENTERMAPSVR_ACK)
; 467  : 		<< dwCharID
; 468  : 		<< dwKEY
; 469  : 		<< bResult
; 470  : 		<< bDBLoad;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _bDBLoad$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 02 90 00 00	 push	 36866			; 00009002H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 471  : 
; 472  : 	SayToBATCH(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToBATCH@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToBATCH

; 473  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187156:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187153[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187162
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_ENTERMAPSVR_ACK@CTMapSvrModule@@QAEXKKEE@Z ENDP	; CTMapSvrModule::SendDM_ENTERMAPSVR_ACK
PUBLIC	?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ; CTMapSvrModule::SendDM_LOGOUT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187182 DD	0ffffffffH
	DD	FLAT:$L187174
$T187180 DD	019930520H
	DD	01H
	DD	FLAT:$T187182
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT
$T187171 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPlayer$ = 8						; size = 4
_wACKMsg$ = 12						; size = 2
?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z PROC NEAR ; CTMapSvrModule::SendDM_LOGOUT_REQ, COMDAT
; _this$ = ecx

; 1296 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1297 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187171[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187172
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187173
$L187172:
  00046	33 f6		 xor	 esi, esi
$L187173:

; 1298 : 
; 1299 : 	pBUF->m_packet.SetID(DM_LOGOUT_REQ)
; 1300 : 		<< pPlayer->m_dwID
; 1301 : 		<< pPlayer->m_dwKEY
; 1302 : 		<< pPlayer->m_dwUserID
; 1303 : 		<< wACKMsg;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _wACKMsg$[esp+20]
  0004c	50		 push	 eax
  0004d	8b 44 24 20	 mov	 eax, DWORD PTR _pPlayer$[esp+24]
  00051	8b 88 ac 03 01
	00		 mov	 ecx, DWORD PTR [eax+66476]
  00057	8b 90 b0 03 01
	00		 mov	 edx, DWORD PTR [eax+66480]
  0005d	8b 80 44 01 01
	00		 mov	 eax, DWORD PTR [eax+65860]
  00063	51		 push	 ecx
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	68 08 90 00 00	 push	 36872			; 00009008H
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1304 : 
; 1305 : 	SayToDB(pBUF);

  00097	56		 push	 esi
  00098	8b cf		 mov	 ecx, edi
  0009a	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1306 : }

  0009f	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	83 c4 10	 add	 esp, 16			; 00000010H
  000af	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187174:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187171[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187180
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_LOGOUT_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ENDP ; CTMapSvrModule::SendDM_LOGOUT_REQ
PUBLIC	?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendDM_LOADCHAR_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187200 DD	0ffffffffH
	DD	FLAT:$L187192
$T187198 DD	019930520H
	DD	01H
	DD	FLAT:$T187200
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T187189 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwUserID$ = 16						; size = 4
?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendDM_LOADCHAR_REQ, COMDAT
; _this$ = ecx

; 1311 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1312 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187189[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187190
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187191
$L187190:
  00046	33 f6		 xor	 esi, esi
$L187191:

; 1313 : 
; 1314 : 	pBUF->m_packet.SetID(DM_LOADCHAR_REQ)
; 1315 : 		<< dwCharID
; 1316 : 		<< dwKEY
; 1317 : 		<< dwUserID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwUserID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 03 90 00 00	 push	 36867			; 00009003H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1318 : 
; 1319 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1320 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187192:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187189[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187198
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_LOADCHAR_REQ@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendDM_LOADCHAR_REQ
PUBLIC	?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendDM_LOADPOSTMESSAGE_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187218 DD	0ffffffffH
	DD	FLAT:$L187210
$T187216 DD	019930520H
	DD	01H
	DD	FLAT:$T187218
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187207 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendDM_LOADPOSTMESSAGE_REQ, COMDAT
; _this$ = ecx

; 1324 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1325 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187207[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187208
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187209
$L187208:
  00046	33 f6		 xor	 esi, esi
$L187209:

; 1326 : 
; 1327 : 	pBUF->m_packet.SetID(DM_LOADPOSTMESSAGE_REQ)
; 1328 : 		<< dwCharID
; 1329 : 		<< dwKEY;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 88 90 00 00	 push	 37000			; 00009088H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1330 : 
; 1331 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1332 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187210:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187207[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187216
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_LOADPOSTMESSAGE_REQ@CTMapSvrModule@@QAEXKK@Z ENDP ; CTMapSvrModule::SendDM_LOADPOSTMESSAGE_REQ
PUBLIC	?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z ; CTMapSvrModule::SendDM_LOGSKILL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187236 DD	0ffffffffH
	DD	FLAT:$L187228
$T187234 DD	019930520H
	DD	01H
	DD	FLAT:$T187236
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z
_TEXT	SEGMENT
$T187225 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGold$ = 12						; size = 4
_dwSilver$ = 16						; size = 4
_dwCooper$ = 20						; size = 4
_wSkill$ = 24						; size = 2
_bLevel$ = 28						; size = 1
?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z PROC NEAR ; CTMapSvrModule::SendDM_LOGSKILL_REQ, COMDAT
; _this$ = ecx

; 1340 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1341 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187225[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187226
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187227
$L187226:
  00046	33 f6		 xor	 esi, esi
$L187227:

; 1342 : 	
; 1343 : 	pBUF->m_packet.SetID(DM_LOGSKILL_REQ)
; 1344 : 		<< dwCharID
; 1345 : 		<< dwGold
; 1346 : 		<< dwSilver
; 1347 : 		<< dwCooper
; 1348 : 		<< wSkill
; 1349 : 		<< bLevel;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _bLevel$[esp+20]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _wSkill$[esp+20]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _dwCooper$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 28	 mov	 eax, DWORD PTR _dwSilver$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwGold$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 40 90 00 00	 push	 36928			; 00009040H
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1350 : 
; 1351 : 	SayToDB(pBUF);

  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1352 : }

  000ad	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187228:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187225[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187234
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_LOGSKILL_REQ@CTMapSvrModule@@QAEXKKKKGE@Z ENDP	; CTMapSvrModule::SendDM_LOGSKILL_REQ
PUBLIC	?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendDM_POSTDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187254 DD	0ffffffffH
	DD	FLAT:$L187246
$T187252 DD	019930520H
	DD	01H
	DD	FLAT:$T187254
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T187243 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwPostID$ = 16						; size = 4
?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z PROC NEAR	; CTMapSvrModule::SendDM_POSTDEL_REQ, COMDAT
; _this$ = ecx

; 1479 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1480 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187243[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187244
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187245
$L187244:
  00046	33 f6		 xor	 esi, esi
$L187245:

; 1481 : 	
; 1482 : 	pBUF->m_packet.SetID(DM_POSTDEL_REQ)
; 1483 : 		<< dwCharID
; 1484 : 		<< dwKey
; 1485 : 		<< dwPostID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwPostID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 2b 90 00 00	 push	 36907			; 0000902bH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1486 : 
; 1487 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1488 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187246:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187243[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187252
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTDEL_REQ@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendDM_POSTDEL_REQ
PUBLIC	?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendDM_POSTGETITEM_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187272 DD	0ffffffffH
	DD	FLAT:$L187264
$T187270 DD	019930520H
	DD	01H
	DD	FLAT:$T187272
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187261 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwPostID$ = 12						; size = 4
?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTGETITEM_REQ, COMDAT
; _this$ = ecx

; 1492 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1493 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187261[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187262
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187263
$L187262:
  00046	33 f6		 xor	 esi, esi
$L187263:

; 1494 : 	
; 1495 : 	pBUF->m_packet.SetID(DM_POSTGETITEM_REQ)
; 1496 : 		<< dwCharID
; 1497 : 		<< dwPostID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwPostID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 2c 90 00 00	 push	 36908			; 0000902cH
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1498 : 
; 1499 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1500 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187264:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187261[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187270
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTGETITEM_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendDM_POSTGETITEM_REQ
PUBLIC	?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z ; CTMapSvrModule::SendDM_LOCALOCCUPY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187290 DD	0ffffffffH
	DD	FLAT:$L187282
$T187288 DD	019930520H
	DD	01H
	DD	FLAT:$T187290
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
_TEXT	SEGMENT
$T187279 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wLocalID$ = 8						; size = 2
_bType$ = 12						; size = 1
_dwOccupiedGuild$ = 16					; size = 4
_dwOccupiedChar$ = 20					; size = 4
?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z PROC NEAR ; CTMapSvrModule::SendDM_LOCALOCCUPY_REQ, COMDAT
; _this$ = ecx

; 1524 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1525 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187279[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187280
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187281
$L187280:
  00046	33 f6		 xor	 esi, esi
$L187281:

; 1526 : 
; 1527 : 	pBUF->m_packet.SetID(DM_LOCALOCCUPY_REQ)
; 1528 : 		<< wLocalID
; 1529 : 		<< bType
; 1530 : 		<< dwOccupiedGuild
; 1531 : 		<< dwOccupiedChar;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwOccupiedChar$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwOccupiedGuild$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _wLocalID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 1c 90 00 00	 push	 36892			; 0000901cH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1532 : 
; 1533 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1534 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187282:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187279[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187288
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_LOCALOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z ENDP	; CTMapSvrModule::SendDM_LOCALOCCUPY_REQ
PUBLIC	?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z ; CTMapSvrModule::SendDM_CASTLEOCCUPY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187308 DD	0ffffffffH
	DD	FLAT:$L187300
$T187306 DD	019930520H
	DD	01H
	DD	FLAT:$T187308
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
_TEXT	SEGMENT
$T187297 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastleID$ = 8						; size = 2
_bType$ = 12						; size = 1
_dwWinGuild$ = 16					; size = 4
_dwLoseGuild$ = 20					; size = 4
?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z PROC NEAR ; CTMapSvrModule::SendDM_CASTLEOCCUPY_REQ, COMDAT
; _this$ = ecx

; 1540 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1541 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187297[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187298
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187299
$L187298:
  00046	33 f6		 xor	 esi, esi
$L187299:

; 1542 : 
; 1543 : 	pBUF->m_packet.SetID(DM_CASTLEOCCUPY_REQ)
; 1544 : 		<< wCastleID
; 1545 : 		<< bType
; 1546 : 		<< dwWinGuild
; 1547 : 		<< dwLoseGuild;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwLoseGuild$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwWinGuild$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _wCastleID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 30 90 00 00	 push	 36912			; 00009030H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1548 : 
; 1549 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1550 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187300:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187297[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187306
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASTLEOCCUPY_REQ@CTMapSvrModule@@QAEXGEKK@Z ENDP ; CTMapSvrModule::SendDM_CASTLEOCCUPY_REQ
PUBLIC	?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z ; CTMapSvrModule::SendDM_MISSIONOCCUPY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187326 DD	0ffffffffH
	DD	FLAT:$L187318
$T187324 DD	019930520H
	DD	01H
	DD	FLAT:$T187326
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z
_TEXT	SEGMENT
$T187315 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wLocalID$ = 8						; size = 2
_bType$ = 12						; size = 1
_bCountry$ = 16						; size = 1
_dwOccupiedChar$ = 20					; size = 4
?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z PROC NEAR ; CTMapSvrModule::SendDM_MISSIONOCCUPY_REQ, COMDAT
; _this$ = ecx

; 1556 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1557 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187315[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187316
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187317
$L187316:
  00046	33 f6		 xor	 esi, esi
$L187317:

; 1558 : 
; 1559 : 	pBUF->m_packet.SetID(DM_MISSIONOCCUPY_REQ)
; 1560 : 		<< wLocalID
; 1561 : 		<< bType
; 1562 : 		<< bCountry
; 1563 : 		<< dwOccupiedChar;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwOccupiedChar$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _bCountry$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _wLocalID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 c3 90 00 00	 push	 37059			; 000090c3H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1564 : 
; 1565 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1566 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187318:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187315[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187324
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_MISSIONOCCUPY_REQ@CTMapSvrModule@@QAEXGEEK@Z ENDP ; CTMapSvrModule::SendDM_MISSIONOCCUPY_REQ
PUBLIC	?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z ; CTMapSvrModule::SendDM_GUILDCABINETPUTIN_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187344 DD	0ffffffffH
	DD	FLAT:$L187336
$T187342 DD	019930520H
	DD	01H
	DD	FLAT:$T187344
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z
_TEXT	SEGMENT
$T187333 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwGuildID$ = 16					; size = 4
_pItem$ = 20						; size = 4
_bCount$ = 24						; size = 1
?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z PROC NEAR ; CTMapSvrModule::SendDM_GUILDCABINETPUTIN_REQ, COMDAT
; _this$ = ecx

; 2406 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 2407 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00019	6a 20		 push	 32			; 00000020H
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 74 24 0c	 mov	 DWORD PTR $T187333[esp+28], esi
  0002b	85 f6		 test	 esi, esi
  0002d	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00035	74 10		 je	 SHORT $L187334
  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00045	eb 02		 jmp	 SHORT $L187335
$L187334:
  00047	33 f6		 xor	 esi, esi
$L187335:

; 2408 : 
; 2409 : 	pBUF->m_packet.SetID(DM_GUILDCABINETPUTIN_REQ)
; 2410 : 		<< dwCharID
; 2411 : 		<< dwKEY
; 2412 : 		<< dwGuildID
; 2413 : 		<< bCount;

  00049	8b 44 24 30	 mov	 eax, DWORD PTR _bCount$[esp+24]
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwGuildID$[esp+24]
  00051	8b 54 24 24	 mov	 edx, DWORD PTR _dwKEY$[esp+24]
  00055	50		 push	 eax
  00056	8b 44 24 24	 mov	 eax, DWORD PTR _dwCharID$[esp+28]
  0005a	51		 push	 ecx
  0005b	52		 push	 edx
  0005c	50		 push	 eax
  0005d	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00060	68 4d 90 00 00	 push	 36941			; 0000904dH
  00065	8b cf		 mov	 ecx, edi
  00067	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2414 : 
; 2415 : 	pItem->WrapPacket(&(pBUF->m_packet));

  00090	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pItem$[esp+24]
  00094	57		 push	 edi
  00095	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 2416 : 
; 2417 : 	SayToDB(pBUF);

  0009a	56		 push	 esi
  0009b	8b cb		 mov	 ecx, ebx
  0009d	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 2418 : }

  000a2	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b0	83 c4 10	 add	 esp, 16			; 00000010H
  000b3	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187336:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187333[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187342
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDCABINETPUTIN_REQ@CTMapSvrModule@@QAEXKKKPAVCTItem@@E@Z ENDP ; CTMapSvrModule::SendDM_GUILDCABINETPUTIN_REQ
PUBLIC	?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z ; CTMapSvrModule::SendDM_GUILDCABINETTAKEOUT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187362 DD	0ffffffffH
	DD	FLAT:$L187354
$T187360 DD	019930520H
	DD	01H
	DD	FLAT:$T187362
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z
_TEXT	SEGMENT
$T187351 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwGuildID$ = 16					; size = 4
_dwItemID$ = 20						; size = 4
_bCount$ = 24						; size = 1
_bInvenID$ = 28						; size = 1
_bItemID$ = 32						; size = 1
?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z PROC NEAR ; CTMapSvrModule::SendDM_GUILDCABINETTAKEOUT_REQ, COMDAT
; _this$ = ecx

; 2426 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2427 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187351[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187352
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187353
$L187352:
  00046	33 f6		 xor	 esi, esi
$L187353:

; 2428 : 
; 2429 : 	pBUF->m_packet.SetID(DM_GUILDCABINETTAKEOUT_REQ)
; 2430 : 		<< dwCharID
; 2431 : 		<< dwKEY
; 2432 : 		<< dwGuildID
; 2433 : 		<< dwItemID
; 2434 : 		<< bCount
; 2435 : 		<< bInvenID
; 2436 : 		<< bItemID;

  00048	8b 44 24 34	 mov	 eax, DWORD PTR _bItemID$[esp+20]
  0004c	8b 4c 24 30	 mov	 ecx, DWORD PTR _bInvenID$[esp+20]
  00050	8b 54 24 2c	 mov	 edx, DWORD PTR _bCount$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 2c	 mov	 eax, DWORD PTR _dwItemID$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  00068	51		 push	 ecx
  00069	52		 push	 edx
  0006a	50		 push	 eax
  0006b	68 4f 90 00 00	 push	 36943			; 0000904fH
  00070	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00073	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0007b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2437 : 
; 2438 : 	SayToDB(pBUF);

  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 2439 : }

  000b9	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c6	83 c4 10	 add	 esp, 16			; 00000010H
  000c9	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187354:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187351[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187360
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDCABINETTAKEOUT_REQ@CTMapSvrModule@@QAEXKKKKEEE@Z ENDP ; CTMapSvrModule::SendDM_GUILDCABINETTAKEOUT_REQ
PUBLIC	?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z ; CTMapSvrModule::SendDM_GUILDCABINETROLLBACK_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187380 DD	0ffffffffH
	DD	FLAT:$L187372
$T187378 DD	019930520H
	DD	01H
	DD	FLAT:$T187380
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z
_TEXT	SEGMENT
$T187369 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwItemID$ = 12						; size = 4
_pItem$ = 16						; size = 4
?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendDM_GUILDCABINETROLLBACK_REQ, COMDAT
; _this$ = ecx

; 2443 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 2444 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00019	6a 20		 push	 32			; 00000020H
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 74 24 0c	 mov	 DWORD PTR $T187369[esp+28], esi
  0002b	85 f6		 test	 esi, esi
  0002d	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00035	74 10		 je	 SHORT $L187370
  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00045	eb 02		 jmp	 SHORT $L187371
$L187370:
  00047	33 f6		 xor	 esi, esi
$L187371:

; 2445 : 
; 2446 : 	pBUF->m_packet.SetID(DM_GUILDCABINETROLLBACK_REQ)
; 2447 : 		<< dwGuildID
; 2448 : 		<< dwItemID;

  00049	8b 44 24 24	 mov	 eax, DWORD PTR _dwItemID$[esp+24]
  0004d	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+24]
  00051	50		 push	 eax
  00052	51		 push	 ecx
  00053	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00056	68 51 90 00 00	 push	 36945			; 00009051H
  0005b	8b cf		 mov	 ecx, edi
  0005d	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00065	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2449 : 
; 2450 : 	pItem->WrapPacket(&(pBUF->m_packet));

  00078	8b 4c 24 28	 mov	 ecx, DWORD PTR _pItem$[esp+24]
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 2451 : 	SayToDB(pBUF);

  00082	56		 push	 esi
  00083	8b cb		 mov	 ecx, ebx
  00085	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 2452 : }

  0008a	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00098	83 c4 10	 add	 esp, 16			; 00000010H
  0009b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187372:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187369[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187378
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDCABINETROLLBACK_REQ@CTMapSvrModule@@QAEXKKPAVCTItem@@@Z ENDP ; CTMapSvrModule::SendDM_GUILDCABINETROLLBACK_REQ
PUBLIC	?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z ; CTMapSvrModule::SendDM_CABINETITEM_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187398 DD	0ffffffffH
	DD	FLAT:$L187390
$T187396 DD	019930520H
	DD	01H
	DD	FLAT:$T187398
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187387 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR ; CTMapSvrModule::SendDM_CABINETITEM_REQ, COMDAT
; _this$ = ecx

; 2852 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2853 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187387[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187388
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187389
$L187388:
  00046	33 f6		 xor	 esi, esi
$L187389:

; 2854 : 	pBUF->m_packet.SetID(DM_CABINETITEM_REQ)
; 2855 : 		<< dwCharID
; 2856 : 		<< dwKey;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 10 90 00 00	 push	 36880			; 00009010H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2857 : 
; 2858 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 2859 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187390:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187387[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187396
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CABINETITEM_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendDM_CABINETITEM_REQ
PUBLIC	?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z	; CTMapSvrModule::SendDM_POSTLIST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187416 DD	0ffffffffH
	DD	FLAT:$L187408
$T187414 DD	019930520H
	DD	01H
	DD	FLAT:$T187416
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT
$T187405 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wPage$ = 16						; size = 2
?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTLIST_REQ, COMDAT
; _this$ = ecx

; 3083 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3084 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187405[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187406
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187407
$L187406:
  00046	33 f6		 xor	 esi, esi
$L187407:

; 3085 : 
; 3086 : 	pBUF->m_packet.SetID(DM_POSTLIST_REQ)
; 3087 : 		<< dwCharID
; 3088 : 		<< dwKey
; 3089 : 		<< wPage;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _wPage$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 1a 90 00 00	 push	 36890			; 0000901aH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3090 : 
; 3091 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3092 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187408:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187405[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187414
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTLIST_REQ@CTMapSvrModule@@QAEXKKG@Z ENDP	; CTMapSvrModule::SendDM_POSTLIST_REQ
PUBLIC	?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z	; CTMapSvrModule::SendDM_PETDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187434 DD	0ffffffffH
	DD	FLAT:$L187426
$T187432 DD	019930520H
	DD	01H
	DD	FLAT:$T187434
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z
_TEXT	SEGMENT
$T187423 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwUserID$ = 8						; size = 4
_wPetID$ = 12						; size = 2
?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z PROC NEAR	; CTMapSvrModule::SendDM_PETDEL_REQ, COMDAT
; _this$ = ecx

; 3599 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3600 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187423[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187424
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187425
$L187424:
  00046	33 f6		 xor	 esi, esi
$L187425:

; 3601 : 	pBUF->m_packet.SetID(DM_PETDEL_REQ)
; 3602 : 		<< dwUserID
; 3603 : 		<< wPetID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _wPetID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwUserID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 41 90 00 00	 push	 36929			; 00009041H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3604 : 
; 3605 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3606 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187426:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187423[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187432
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_PETDEL_REQ@CTMapSvrModule@@QAEXKG@Z ENDP	; CTMapSvrModule::SendDM_PETDEL_REQ
PUBLIC	?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z ; CTMapSvrModule::SendDM_UDPLOG_REQ
EXTRN	?Write@CPacket@@QAEXPAXH@Z:NEAR			; CPacket::Write
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187452 DD	0ffffffffH
	DD	FLAT:$L187444
$T187450 DD	019930520H
	DD	01H
	DD	FLAT:$T187452
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z
_TEXT	SEGMENT
$T187441 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pLogData$ = 8						; size = 1016
?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z PROC NEAR ; CTMapSvrModule::SendDM_UDPLOG_REQ, COMDAT
; _this$ = ecx

; 3680 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 3681 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00019	6a 20		 push	 32			; 00000020H
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 74 24 0c	 mov	 DWORD PTR $T187441[esp+28], esi
  0002b	85 f6		 test	 esi, esi
  0002d	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00035	74 10		 je	 SHORT $L187442
  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00045	eb 02		 jmp	 SHORT $L187443
$L187442:
  00047	33 f6		 xor	 esi, esi
$L187443:

; 3682 : 
; 3683 : 	pBUF->m_packet.SetID(DM_UDPLOG_REQ);

  00049	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  0004c	68 42 90 00 00	 push	 36930			; 00009042H
  00051	8b cf		 mov	 ecx, edi
  00053	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 3684 : 
; 3685 : 
; 3686 : 	pBUF->m_packet.Write((LPVOID)&pLogData, sizeof(_LOG_DATA_) ); 

  00060	68 f8 03 00 00	 push	 1016			; 000003f8H
  00065	8d 44 24 24	 lea	 eax, DWORD PTR _pLogData$[esp+28]
  00069	50		 push	 eax
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?Write@CPacket@@QAEXPAXH@Z ; CPacket::Write

; 3687 : 		
; 3688 : 	SayToLOG(pBUF);

  00071	56		 push	 esi
  00072	8b cb		 mov	 ecx, ebx
  00074	e8 00 00 00 00	 call	 ?SayToLOG@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToLOG

; 3689 : }

  00079	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 f8 03	 ret	 1016			; 000003f8H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187444:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187441[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187450
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_UDPLOG_REQ@CTMapSvrModule@@QAEXU_LOG_DATA_@@@Z ENDP ; CTMapSvrModule::SendDM_UDPLOG_REQ
PUBLIC	?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendDM_SAVEEXP_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187470 DD	0ffffffffH
	DD	FLAT:$L187462
$T187468 DD	019930520H
	DD	01H
	DD	FLAT:$T187470
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187459 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwEXP$ = 12						; size = 4
?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR	; CTMapSvrModule::SendDM_SAVEEXP_REQ, COMDAT
; _this$ = ecx

; 3695 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3696 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187459[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187460
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187461
$L187460:
  00046	33 f6		 xor	 esi, esi
$L187461:

; 3697 : 	pBUF->m_packet.SetID(DM_SAVEEXP_REQ)
; 3698 : 		<< dwCharID
; 3699 : 		<< dwEXP;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwEXP$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 59 90 00 00	 push	 36953			; 00009059H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3700 : 
; 3701 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3702 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187462:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187459[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187468
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVEEXP_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendDM_SAVEEXP_REQ
PUBLIC	?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z ; CTMapSvrModule::SendDM_SAVEMONEY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187488 DD	0ffffffffH
	DD	FLAT:$L187480
$T187486 DD	019930520H
	DD	01H
	DD	FLAT:$T187488
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT
$T187477 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGold$ = 12						; size = 4
_dwSilver$ = 16						; size = 4
_dwCooper$ = 20						; size = 4
?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z PROC NEAR ; CTMapSvrModule::SendDM_SAVEMONEY_REQ, COMDAT
; _this$ = ecx

; 3708 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3709 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187477[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187478
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187479
$L187478:
  00046	33 f6		 xor	 esi, esi
$L187479:

; 3710 : 	pBUF->m_packet.SetID(DM_SAVEMONEY_REQ)
; 3711 : 		<< dwCharID
; 3712 : 		<< dwGold
; 3713 : 		<< dwSilver
; 3714 : 		<< dwCooper;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwCooper$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwSilver$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwGold$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 5a 90 00 00	 push	 36954			; 0000905aH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3715 : 
; 3716 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3717 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187480:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187477[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187486
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVEMONEY_REQ@CTMapSvrModule@@QAEXKKKK@Z ENDP	; CTMapSvrModule::SendDM_SAVEMONEY_REQ
PUBLIC	?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z ; CTMapSvrModule::SendDM_CASHITEMCABINET_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187506 DD	0ffffffffH
	DD	FLAT:$L187498
$T187504 DD	019930520H
	DD	01H
	DD	FLAT:$T187506
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T187495 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwUserID$ = 16						; size = 4
?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHITEMCABINET_REQ, COMDAT
; _this$ = ecx

; 3786 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3787 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187495[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187496
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187497
$L187496:
  00046	33 f6		 xor	 esi, esi
$L187497:

; 3788 : 	pBUF->m_packet.SetID(DM_CASHITEMCABINET_REQ)
; 3789 : 		<< dwCharID
; 3790 : 		<< dwKey
; 3791 : 		<< dwUserID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwUserID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 5b 90 00 00	 push	 36955			; 0000905bH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3792 : 
; 3793 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3794 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187498:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187495[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187504
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHITEMCABINET_REQ@CTMapSvrModule@@QAEXKKK@Z ENDP ; CTMapSvrModule::SendDM_CASHITEMCABINET_REQ
PUBLIC	?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z ; CTMapSvrModule::SendDM_CASHSHOPITEMLIST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187524 DD	0ffffffffH
	DD	FLAT:$L187516
$T187522 DD	019930520H
	DD	01H
	DD	FLAT:$T187524
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z
_TEXT	SEGMENT
$T187513 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwUserID$ = 16						; size = 4
_wItemID$ = 20						; size = 2
?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHSHOPITEMLIST_REQ, COMDAT
; _this$ = ecx

; 3820 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3821 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187513[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187514
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187515
$L187514:
  00046	33 f6		 xor	 esi, esi
$L187515:

; 3822 : 	pBUF->m_packet.SetID(DM_CASHSHOPITEMLIST_REQ)
; 3823 : 		<< dwCharID
; 3824 : 		<< dwKey
; 3825 : 		<< dwUserID
; 3826 : 		<< wItemID;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _wItemID$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwUserID$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 5f 90 00 00	 push	 36959			; 0000905fH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3827 : 
; 3828 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3829 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187516:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187513[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187522
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHSHOPITEMLIST_REQ@CTMapSvrModule@@QAEXKKKG@Z ENDP ; CTMapSvrModule::SendDM_CASHSHOPITEMLIST_REQ
PUBLIC	?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z ; CTMapSvrModule::SendDM_CASHCABINETBUY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187542 DD	0ffffffffH
	DD	FLAT:$L187534
$T187540 DD	019930520H
	DD	01H
	DD	FLAT:$T187542
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z
_TEXT	SEGMENT
$T187531 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wShopItemID$ = 16					; size = 2
?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHCABINETBUY_REQ, COMDAT
; _this$ = ecx

; 3943 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3944 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187531[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187532
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187533
$L187532:
  00046	33 f6		 xor	 esi, esi
$L187533:

; 3945 : 
; 3946 : 	pBUF->m_packet.SetID(DM_CASHCABINETBUY_REQ)
; 3947 : 		<< dwCharID
; 3948 : 		<< dwKey
; 3949 : 		<< wShopItemID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _wShopItemID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 6b 90 00 00	 push	 36971			; 0000906bH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3950 : 
; 3951 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3952 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187534:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187531[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187540
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHCABINETBUY_REQ@CTMapSvrModule@@QAEXKKG@Z ENDP ; CTMapSvrModule::SendDM_CASHCABINETBUY_REQ
PUBLIC	?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z ; CTMapSvrModule::SendDM_STOPTHECLOCK_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187560 DD	0ffffffffH
	DD	FLAT:$L187552
$T187558 DD	019930520H
	DD	01H
	DD	FLAT:$T187560
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z
_TEXT	SEGMENT
$T187549 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bInven$ = 16						; size = 1
_bItem$ = 20						; size = 1
_wShopItemID$ = 24					; size = 2
?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z PROC NEAR ; CTMapSvrModule::SendDM_STOPTHECLOCK_REQ, COMDAT
; _this$ = ecx

; 4142 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4143 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187549[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187550
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187551
$L187550:
  00046	33 f6		 xor	 esi, esi
$L187551:

; 4144 : 
; 4145 : 	pBUF->m_packet.SetID(DM_STOPTHECLOCK_REQ)
; 4146 : 		<< dwCharID
; 4147 : 		<< dwKey
; 4148 : 		<< bInven
; 4149 : 		<< bItem
; 4150 : 		<< wShopItemID;

  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wShopItemID$[esp+20]
  0004c	8b 4c 24 28	 mov	 ecx, DWORD PTR _bItem$[esp+20]
  00050	8b 54 24 24	 mov	 edx, DWORD PTR _bInven$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0005e	52		 push	 edx
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	68 75 90 00 00	 push	 36981			; 00009075H
  00066	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00069	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00071	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 4151 : 
; 4152 : 	SayToDB(pBUF);

  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4153 : }

  000a1	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ae	83 c4 10	 add	 esp, 16			; 00000010H
  000b1	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187552:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187549[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187558
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_STOPTHECLOCK_REQ@CTMapSvrModule@@QAEXKKEEG@Z ENDP ; CTMapSvrModule::SendDM_STOPTHECLOCK_REQ
PUBLIC	?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z ; CTMapSvrModule::SendDM_AUCTIONEND_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187578 DD	0ffffffffH
	DD	FLAT:$L187570
$T187576 DD	019930520H
	DD	01H
	DD	FLAT:$T187578
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z
_TEXT	SEGMENT
$T187567 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wNpcID$ = 8						; size = 2
_dwAuctionID$ = 12					; size = 4
_dEndTime$ = 16						; size = 8
?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z PROC NEAR ; CTMapSvrModule::SendDM_AUCTIONEND_REQ, COMDAT
; _this$ = ecx

; 4377 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4378 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187567[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187568
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187569
$L187568:
  00046	33 f6		 xor	 esi, esi
$L187569:

; 4379 : 
; 4380 : 	pBUF->m_packet.SetID(DM_AUCTIONEND_REQ)
; 4381 : 		<< wNpcID
; 4382 : 		<< dwAuctionID
; 4383 : 		<< dEndTime;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dEndTime$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dEndTime$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwAuctionID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _wNpcID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 8e 90 00 00	 push	 37006			; 0000908eH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 4384 : 
; 4385 : 	SayToDB(pBUF);

  00086	56		 push	 esi
  00087	8b cf		 mov	 ecx, edi
  00089	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4386 : }

  0008e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009b	83 c4 10	 add	 esp, 16			; 00000010H
  0009e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187570:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187567[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187576
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_AUCTIONEND_REQ@CTMapSvrModule@@QAEXGK_J@Z ENDP	; CTMapSvrModule::SendDM_AUCTIONEND_REQ
PUBLIC	?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z ; CTMapSvrModule::SendDM_AUCTIONREGCANCEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187596 DD	0ffffffffH
	DD	FLAT:$L187588
$T187594 DD	019930520H
	DD	01H
	DD	FLAT:$T187596
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z
_TEXT	SEGMENT
$T187585 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_wNpcID$ = 16						; size = 2
_dwAuctionID$ = 20					; size = 4
?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z PROC NEAR ; CTMapSvrModule::SendDM_AUCTIONREGCANCEL_REQ, COMDAT
; _this$ = ecx

; 4392 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4393 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187585[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187586
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187587
$L187586:
  00046	33 f6		 xor	 esi, esi
$L187587:

; 4394 : 
; 4395 : 	pBUF->m_packet.SetID(DM_AUCTIONREGCANCEL_REQ)
; 4396 : 		<< dwCharID
; 4397 : 		<< dwKEY
; 4398 : 		<< wNpcID
; 4399 : 		<< dwAuctionID;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwAuctionID$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _wNpcID$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 90 90 00 00	 push	 37008			; 00009090H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4400 : 
; 4401 : 	SayToDB(pBUF);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4402 : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187588:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187585[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187594
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_AUCTIONREGCANCEL_REQ@CTMapSvrModule@@QAEXKKGK@Z ENDP ; CTMapSvrModule::SendDM_AUCTIONREGCANCEL_REQ
PUBLIC	?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z	; CTMapSvrModule::SendDM_POSTVIEW_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187614 DD	0ffffffffH
	DD	FLAT:$L187606
$T187612 DD	019930520H
	DD	01H
	DD	FLAT:$T187614
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T187603 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwPostID$ = 16						; size = 4
?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTVIEW_REQ, COMDAT
; _this$ = ecx

; 4523 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4524 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187603[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187604
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187605
$L187604:
  00046	33 f6		 xor	 esi, esi
$L187605:

; 4525 : 	pBUF->m_packet.SetID(DM_POSTVIEW_REQ)
; 4526 : 		<< dwCharID
; 4527 : 		<< dwKey
; 4528 : 		<< dwPostID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwPostID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 ae 90 00 00	 push	 37038			; 000090aeH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4529 : 
; 4530 : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4531 : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187606:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187603[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187612
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTVIEW_REQ@CTMapSvrModule@@QAEXKKK@Z ENDP	; CTMapSvrModule::SendDM_POSTVIEW_REQ
PUBLIC	?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z	; CTMapSvrModule::SendDM_POSTBILL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187632 DD	0ffffffffH
	DD	FLAT:$L187624
$T187630 DD	019930520H
	DD	01H
	DD	FLAT:$T187632
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T187621 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z PROC NEAR	; CTMapSvrModule::SendDM_POSTBILL_REQ, COMDAT
; _this$ = ecx

; 4534 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4535 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187621[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187622
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187623
$L187622:
  00046	33 f6		 xor	 esi, esi
$L187623:

; 4536 : 	pBUF->m_packet.SetID(DM_POSTBILL_REQ)
; 4537 : 		<< dwCharID
; 4538 : 		<< dwKey;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 b1 90 00 00	 push	 37041			; 000090b1H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4539 : 
; 4540 : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4541 : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187624:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187621[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187630
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTBILL_REQ@CTMapSvrModule@@QAEXKK@Z ENDP	; CTMapSvrModule::SendDM_POSTBILL_REQ
PUBLIC	?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z ; CTMapSvrModule::SendDM_TOURNAMENTREWARD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T187650 DD	0ffffffffH
	DD	FLAT:$L187642
$T187648 DD	019930520H
	DD	01H
	DD	FLAT:$T187650
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z
_TEXT	SEGMENT
$T187639 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bMonth$ = 8						; size = 1
_wTournamentID$ = 12					; size = 2
_bEntryID$ = 16						; size = 1
_dwChiefID$ = 20					; size = 4
_dwWinner$ = 24						; size = 4
_bIsEquipShield$ = 28					; size = 1
?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z PROC NEAR ; CTMapSvrModule::SendDM_TOURNAMENTREWARD_REQ, COMDAT
; _this$ = ecx

; 4665 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4666 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T187639[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L187640
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L187641
$L187640:
  00046	33 f6		 xor	 esi, esi
$L187641:

; 4667 : 	pBUF->m_packet.SetID(DM_TOURNAMENTREWARD_REQ)
; 4668 : 		<< bMonth
; 4669 : 		<< wTournamentID
; 4670 : 		<< bEntryID
; 4671 : 		<< dwChiefID
; 4672 : 		<< dwWinner
; 4673 : 		<< bIsEquipShield;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _bIsEquipShield$[esp+20]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwWinner$[esp+20]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _dwChiefID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 28	 mov	 eax, DWORD PTR _bEntryID$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 28	 mov	 ecx, DWORD PTR _wTournamentID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 28	 mov	 edx, DWORD PTR _bMonth$[esp+32]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 b8 90 00 00	 push	 37048			; 000090b8H
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4674 : 
; 4675 : 	SayToDB(pBUF);

  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4676 : }

  000ad	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187642:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T187639[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187648
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTREWARD_REQ@CTMapSvrModule@@QAEXEGEKKE@Z ENDP ; CTMapSvrModule::SendDM_TOURNAMENTREWARD_REQ
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTMAGIC@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTMAGIC@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTMAGIC *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTMAGIC *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTDURINGITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTDURINGITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTDURINGITEM *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTDURINGITEM *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator, COMDAT
; _this$ = ecx

; 209  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 210  : 			{	// construct with null vector pointer
; 211  : 			}

  00008	c3		 ret	 0
??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEAAUtagRECORDSET@@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEAAUtagRECORDSET@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEAAUtagRECORDSET@@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBEAAUtagRECORDSET@@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AV012@H@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++, COMDAT
; _this$ = ecx

; 236  : 			iterator _Tmp = *this;

  00000	8b 11		 mov	 edx, DWORD PTR [ecx]

; 237  : 			++*this;

  00002	8d 42 18	 lea	 eax, DWORD PTR [edx+24]
  00005	89 01		 mov	 DWORD PTR [ecx], eax

; 238  : 			return (_Tmp);

  00007	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000b	89 10		 mov	 DWORD PTR [eax], edx

; 239  : 			}

  0000d	c2 08 00	 ret	 8
??Eiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 209  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 210  : 			{	// construct with null vector pointer
; 211  : 			}

  00008	c3		 ret	 0
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++, COMDAT
; _this$ = ecx

; 236  : 			iterator _Tmp = *this;

  00000	8b 11		 mov	 edx, DWORD PTR [ecx]

; 237  : 			++*this;

  00002	8d 42 04	 lea	 eax, DWORD PTR [edx+4]
  00005	89 01		 mov	 DWORD PTR [ecx], eax

; 238  : 			return (_Tmp);

  00007	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000b	89 10		 mov	 DWORD PTR [eax], edx

; 239  : 			}

  0000d	c2 08 00	 ret	 8
??Eiterator@?$vector@KV?$allocator@K@std@@@std@@QAE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@KV?$allocator@K@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTChannel@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTChannel@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTChannel@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTChannel@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTSkill@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTSkill@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTSkill@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTSkill@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagARENA@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagARENA@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagARENA@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagCABINET@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagCABINET@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagCABINET@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagCABINET@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCQuest@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCQuest@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCQuest@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCQuest@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagPET@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagPET@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagPET@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagPET@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE@PAUtagRECORDSET@@@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00009	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00012	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagLOCAL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagLOCAL@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagLOCAL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagLOCAL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEAAPAVCTItem@@XZ ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEAAPAVCTItem@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEAAPAVCTItem@@XZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBEAAPAVCTItem@@XZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000d	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00011	2b ca		 sub	 ecx, edx
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00015	c2 08 00	 ret	 8
??Giterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE@PAPAVCTItem@@@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182850

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188339

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188320
  0001d	8d 49 00	 npad	 3
$L188319:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188319
$L188320:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188339:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182854
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182853:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182854

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182853
$L182854:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182850:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182860

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188389

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188370
  0001d	8d 49 00	 npad	 3
$L188369:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188369
$L188370:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188389:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182864
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182863:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182864

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182863
$L182864:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182860:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182870

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188439

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188422
  0001d	8d 49 00	 npad	 3
$L188421:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188421
$L188422:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188439:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182874
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182873:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182874

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182873
$L182874:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182870:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182880

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188489

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188477
  0001d	8d 49 00	 npad	 3
$L188476:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188476
$L188477:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188489:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182884
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182883:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182884

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182883
$L182884:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182880:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182890

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188539

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188527
  0001d	8d 49 00	 npad	 3
$L188526:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188526
$L188527:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188539:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182894
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182893:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182894

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182893
$L182894:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182890:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182900

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188589

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188577
  0001d	8d 49 00	 npad	 3
$L188576:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188576
$L188577:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188589:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182904
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182903:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182904

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182903
$L182904:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182900:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182910

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188639

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188627
  0001d	8d 49 00	 npad	 3
$L188626:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188626
$L188627:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188639:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182914
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182913:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182914

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182913
$L182914:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182910:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182920

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188689

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188677
  0001d	8d 49 00	 npad	 3
$L188676:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188676
$L188677:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188689:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182924
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182923:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182924

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182923
$L182924:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182920:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182930

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188739

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188727
  0001d	8d 49 00	 npad	 3
$L188726:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188726
$L188727:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188739:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182934
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182933:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182934

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182933
$L182934:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182930:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182940

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188789

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188777
  0001d	8d 49 00	 npad	 3
$L188776:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188776
$L188777:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188789:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182944
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182943:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182944

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182943
$L182944:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182940:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182950

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188839

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188827
  0001d	8d 49 00	 npad	 3
$L188826:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188826
$L188827:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188839:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182954
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182953:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182954

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182953
$L182954:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182950:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182960

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 0f	 mov	 bl, BYTE PTR [edx+15]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188889

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188877
  0001d	8d 49 00	 npad	 3
$L188876:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188876
$L188877:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188889:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182964
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182963:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182964

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182963
$L182964:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182960:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L182970

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L188939

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L188927
  0001d	8d 49 00	 npad	 3
$L188926:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L188926
$L188927:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L188939:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L182974
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L182973:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L182974

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L182973
$L182974:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L182970:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@@Z ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@@Z PROC NEAR ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@YAXPAPAVCTItem@@0AAV?$allocator@PAVCTItem@@@0@@Z ENDP ; std::_Destroy_range<CTItem *,std::allocator<CTItem *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmaptype.h
;	COMDAT ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
_pMSG$ = 8						; size = 4
?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z PROC NEAR ; tagMONTHRANKER::WrapPacketIn, COMDAT
; _this$ = ecx

; 2288 : 		(*pMSG)
; 2289 : 			<< m_dwTotalRank
; 2290 : 			<< m_dwMonthRank
; 2291 : 			<< m_dwCharID
; 2292 : 			<< m_strName
; 2293 : 			<< m_dwTotalPoint
; 2294 : 			<< m_dwMonthPoint
; 2295 : 			<< m_wMonthWin
; 2296 : 			<< m_wMonthLose
; 2297 : 			<< m_dwTotalWin
; 2298 : 			<< m_dwTotalLose
; 2299 : 			<< m_bCountry
; 2300 : 			<< m_bLevel
; 2301 : 			<< m_bClass
; 2302 : 			<< m_bRace
; 2303 : 			<< m_bSex
; 2304 : 			<< m_bHair
; 2305 : 			<< m_bFace
; 2306 : 			<< m_strSay
; 2307 : 			<< m_strGuild;		

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00006	56		 push	 esi
  00007	50		 push	 eax
  00008	52		 push	 edx
  00009	33 c0		 xor	 eax, eax
  0000b	8a 41 2a	 mov	 al, BYTE PTR [ecx+42]
  0000e	33 d2		 xor	 edx, edx
  00010	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  00013	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00016	50		 push	 eax
  00017	33 c0		 xor	 eax, eax
  00019	8a 41 28	 mov	 al, BYTE PTR [ecx+40]
  0001c	52		 push	 edx
  0001d	33 d2		 xor	 edx, edx
  0001f	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  00022	50		 push	 eax
  00023	33 c0		 xor	 eax, eax
  00025	8a 41 26	 mov	 al, BYTE PTR [ecx+38]
  00028	52		 push	 edx
  00029	33 d2		 xor	 edx, edx
  0002b	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  0002e	50		 push	 eax
  0002f	33 c0		 xor	 eax, eax
  00031	8a 41 24	 mov	 al, BYTE PTR [ecx+36]
  00034	52		 push	 edx
  00035	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00038	50		 push	 eax
  00039	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0003c	52		 push	 edx
  0003d	50		 push	 eax
  0003e	33 d2		 xor	 edx, edx
  00040	66 8b 51 1a	 mov	 dx, WORD PTR [ecx+26]
  00044	33 c0		 xor	 eax, eax
  00046	66 8b 41 18	 mov	 ax, WORD PTR [ecx+24]
  0004a	52		 push	 edx
  0004b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0004e	50		 push	 eax
  0004f	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00052	52		 push	 edx
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	50		 push	 eax
  00056	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00059	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0005c	56		 push	 esi
  0005d	52		 push	 edx
  0005e	50		 push	 eax
  0005f	51		 push	 ecx
  00060	8b 4c 24 54	 mov	 ecx, DWORD PTR _pMSG$[esp+76]
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e0	8b c8		 mov	 ecx, eax
  000e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e7	5e		 pop	 esi

; 2308 : 	}

  000e8	c2 04 00	 ret	 4
?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ENDP	; tagMONTHRANKER::WrapPacketIn
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L188989
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L188989:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z PROC NEAR ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z ENDP ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L189038
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L189038:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z ; std::allocator<CTPlayer *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z PROC NEAR ; std::allocator<CTPlayer *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z ENDP ; std::allocator<CTPlayer *>::allocate
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z ; CTMapSvrModule::SendMW_MONTHRANKUPDATE_ACK
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	SEGMENT
$T189117 DD	0ffffffffH
	DD	FLAT:$L189113
$T189115 DD	019930520H
	DD	01H
	DD	FLAT:$T189117
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z
_TEXT	SEGMENT
$T189110 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_stMonthRanker$ = 8					; size = 4
?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z PROC NEAR ; CTMapSvrModule::SendMW_MONTHRANKUPDATE_ACK, COMDAT
; _this$ = ecx

; 4486 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 4487 : 	CPacket * pMsg = new CPacket();	

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b f9		 mov	 edi, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T189110[esp+28], eax
  00029	33 f6		 xor	 esi, esi
  0002b	3b c6		 cmp	 eax, esi
  0002d	89 74 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], esi
  00031	74 09		 je	 SHORT $L189112
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f0		 mov	 esi, eax
$L189112:

; 4488 : 	pMsg->SetID(MW_MONTHRANKUPDATE_ACK)
; 4489 : 		<< m_bRankMonth
; 4490 : 		<< stMonthRanker.m_bCountry;

  0003c	8b 5c 24 20	 mov	 ebx, DWORD PTR _stMonthRanker$[esp+24]
  00040	33 c0		 xor	 eax, eax
  00042	8a 43 24	 mov	 al, BYTE PTR [ebx+36]
  00045	33 c9		 xor	 ecx, ecx
  00047	8a 8f 69 10 00
	00		 mov	 cl, BYTE PTR [edi+4201]
  0004d	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00055	50		 push	 eax
  00056	51		 push	 ecx
  00057	68 3e 21 00 00	 push	 8510			; 0000213eH
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4491 : 	
; 4492 : 	stMonthRanker.WrapPacketIn(pMsg);

  00071	56		 push	 esi
  00072	8b cb		 mov	 ecx, ebx
  00074	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn

; 4493 : 
; 4494 : 	m_world.Say(pMsg);

  00079	8b 97 b8 a3 01
	00		 mov	 edx, DWORD PTR [edi+107448]
  0007f	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00085	56		 push	 esi
  00086	ff 12		 call	 DWORD PTR [edx]

; 4495 : }

  00088	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189113:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T189110[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189115
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTHRANKUPDATE_ACK@CTMapSvrModule@@QAEXAAUtagMONTHRANKER@@@Z ENDP ; CTMapSvrModule::SendMW_MONTHRANKUPDATE_ACK
PUBLIC	?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z ; CTMapSvrModule::SendMW_FAMERANKUPDATE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T189131 DD	0ffffffffH
	DD	FLAT:$L189127
$T189129 DD	019930520H
	DD	01H
	DD	FLAT:$T189131
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z
_TEXT	SEGMENT
$T189124 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_bMonth$ = 12						; size = 1
_bOrder$ = 16						; size = 1
_stFameRanker$ = 20					; size = 4
?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z PROC NEAR ; CTMapSvrModule::SendMW_FAMERANKUPDATE_ACK, COMDAT
; _this$ = ecx

; 4501 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 4502 : 	CPacket * pMsg = new CPacket();	

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T189124[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L189126
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L189126:

; 4503 : 	pMsg->SetID(MW_FAMERANKUPDATE_ACK)
; 4504 : 		<< bType
; 4505 : 		<< bMonth
; 4506 : 		<< bOrder;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bOrder$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _bMonth$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bType$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 6a 21 00 00	 push	 8554			; 0000216aH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4507 : 
; 4508 : 	stFameRanker.WrapPacketIn(pMsg);

  00073	8b 4c 24 28	 mov	 ecx, DWORD PTR _stFameRanker$[esp+20]
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn

; 4509 : 
; 4510 : 	m_world.Say(pMsg);

  0007d	8b 87 b8 a3 01
	00		 mov	 eax, DWORD PTR [edi+107448]
  00083	8d 8f b8 a3 01
	00		 lea	 ecx, DWORD PTR [edi+107448]
  00089	56		 push	 esi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 4511 : }

  0008c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00099	83 c4 10	 add	 esp, 16			; 00000010H
  0009c	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189127:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T189124[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189129
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FAMERANKUPDATE_ACK@CTMapSvrModule@@QAEXEEEAAUtagMONTHRANKER@@@Z ENDP ; CTMapSvrModule::SendMW_FAMERANKUPDATE_ACK
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::end
_TEXT	ENDS
PUBLIC	??A?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAUtagRECORDSET@@I@Z ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAUtagRECORDSET@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAUtagRECORDSET@@I@Z PROC NEAR ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0000a	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]

; 556  : 		}

  0000d	c2 04 00	 ret	 4
??A?$vector@UtagRECORDSET@@V?$allocator@UtagRECORDSET@@@std@@@std@@QAEAAUtagRECORDSET@@I@Z ENDP ; std::vector<tagRECORDSET,std::allocator<tagRECORDSET> >::operator[]
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTChannel@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTChannel@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTChannel@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTChannel@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTSkill@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTSkill@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTSkill@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTSkill@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAUtagARENA@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAUtagARENA@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAUtagARENA@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAUtagARENA@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagCABINET@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagCABINET@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagCABINET@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagCABINET@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagHOTKEYINVEN@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCQuest@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCQuest@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCQuest@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCQuest@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagPET@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagPET@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagPET@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagPET@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagPROTECTED@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagLOCAL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagLOCAL@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagLOCAL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagLOCAL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTItem *,std::allocator<CTItem *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTItem *,std::allocator<CTItem *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::end
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@IAEXPAPAVCTItem@@0@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@IAEXPAPAVCTItem@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@IAEXPAPAVCTItem@@0@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@IAEXPAPAVCTItem@@0@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L182486
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L182485:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L182487

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L182488
$L182487:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L182488:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L182485
  00029	5b		 pop	 ebx
$L182486:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Lbound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L182712
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L182711:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L182713

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L182714
$L182713:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L182714:
  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L182711
  0002b	5b		 pop	 ebx
$L182712:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L190093
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L190093:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L190101

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L190101

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L190098
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L190098:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L190101:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L190141

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L190141:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L190149

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L190149:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L149765

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L149765:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L149766

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L149766:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L190195

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L190161
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L190162
$L190161:
  00036	8b d3		 mov	 edx, ebx
$L190162:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L190168
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L190169
$L190168:
  00041	8b cb		 mov	 ecx, ebx
$L190169:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L190192

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L190192:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L190195:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::end
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190433 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T190435 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L190236
$T190436 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L190234
$T190434 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T190435
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T190436
$T190428 DD	019930520H
	DD	04H
	DD	FLAT:$T190433
	DD	02H
	DD	FLAT:$T190434
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L150507

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L150509
$L150507:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L150509
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L150509

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L150509:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L150511
$L190234:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L190429
  00092	c3		 ret	 0
$L190429:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L150511:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L190353

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L190350
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L190351
$L190350:
  000ae	83 c6 04	 add	 esi, 4
$L190351:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L190353:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L190395
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L190395:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L190424
  000f2	8b c2		 mov	 eax, edx
$L190424:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L190236:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L190334
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L190334:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L190437:
$L190432:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190428
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ; CTMapSvrModule::SendSM_DUELSTART_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190522 DD	0ffffffffH
	DD	FLAT:$L190452
	DD	00H
	DD	FLAT:$L190453
	DD	01H
	DD	FLAT:$L190454
$T190520 DD	019930520H
	DD	03H
	DD	FLAT:$T190522
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT
$T190449 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwDuelID$ = 8						; size = 4
_dwInviter$ = 12					; size = 4
_strInviter$ = 16					; size = 4
_dwTarget$ = 20						; size = 4
_strTarget$ = 24					; size = 4
?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z PROC NEAR ; CTMapSvrModule::SendSM_DUELSTART_REQ, COMDAT
; _this$ = ecx

; 109  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 110  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T190449[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  0003b	74 10		 je	 SHORT $L190450
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L190451
$L190450:
  0004d	33 f6		 xor	 esi, esi
$L190451:

; 111  : 
; 112  : 	pBUF->m_packet.SetID(SM_DUELSTART_REQ)
; 113  : 		<< dwDuelID
; 114  : 		<< dwInviter
; 115  : 		<< strInviter
; 116  : 		<< dwTarget
; 117  : 		<< strTarget;

  0004f	8b 44 24 2c	 mov	 eax, DWORD PTR _dwTarget$[esp+24]
  00053	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwInviter$[esp+24]
  00057	8b 54 24 20	 mov	 edx, DWORD PTR _dwDuelID$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 2c	 mov	 edi, DWORD PTR _strInviter$[esp+28]
  00060	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00064	8b 5c 24 34	 mov	 ebx, DWORD PTR _strTarget$[esp+28]
  00068	53		 push	 ebx
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	51		 push	 ecx
  0006c	52		 push	 edx
  0006d	68 10 10 00 00	 push	 4112			; 00001010H
  00072	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00075	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 118  : 
; 119  : 	SayToAI(pBUF);

  0009d	56		 push	 esi
  0009e	8b cd		 mov	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 120  : }

  000a5	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a8	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ad	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b0	83 ca ff	 or	 edx, -1
  000b3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b7	4a		 dec	 edx
  000b8	85 d2		 test	 edx, edx
  000ba	5f		 pop	 edi
  000bb	7f 08		 jg	 SHORT $L190488
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	50		 push	 eax
  000c2	ff 52 04	 call	 DWORD PTR [edx+4]
$L190488:
  000c5	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c8	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d3	83 ca ff	 or	 edx, -1
  000d6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000da	4a		 dec	 edx
  000db	85 d2		 test	 edx, edx
  000dd	5e		 pop	 esi
  000de	5d		 pop	 ebp
  000df	5b		 pop	 ebx
  000e0	7f 08		 jg	 SHORT $L190515
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e6	50		 push	 eax
  000e7	ff 52 04	 call	 DWORD PTR [edx+4]
$L190515:
  000ea	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f5	83 c4 10	 add	 esp, 16			; 00000010H
  000f8	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190452:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190453:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strInviter$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190454:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T190449[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190520
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_DUELSTART_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ENDP ; CTMapSvrModule::SendSM_DUELSTART_REQ
PUBLIC	?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendSM_GODBALLCMD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190571 DD	0ffffffffH
	DD	FLAT:$L190532
	DD	00H
	DD	FLAT:$L190533
$T190569 DD	019930520H
	DD	02H
	DD	FLAT:$T190571
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T190529 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wGodBall$ = 8						; size = 2
_bCmd$ = 12						; size = 1
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_wCastle$ = 24						; size = 2
_dwDelay$ = 28						; size = 4
_dwKey$ = 32						; size = 4
_strCharName$ = 36					; size = 4
?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendSM_GODBALLCMD_REQ, COMDAT
; _this$ = ecx

; 157  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 158  : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T190529[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L190530
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L190531
$L190530:
  0004c	33 f6		 xor	 esi, esi
$L190531:

; 159  : 
; 160  : 	pBUF->m_packet.SetID(SM_GODBALLCMD_REQ)
; 161  : 		<< wGodBall
; 162  : 		<< bCmd
; 163  : 		<< bChannel
; 164  : 		<< wMapID
; 165  : 		<< wCastle
; 166  : 		<< dwDelay
; 167  : 		<< dwKey
; 168  : 		<< strCharName;

  0004e	8b 7c 24 3c	 mov	 edi, DWORD PTR _strCharName$[esp+24]
  00052	8b 44 24 38	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00056	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwDelay$[esp+24]
  0005a	8b 54 24 30	 mov	 edx, DWORD PTR _wCastle$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	8b 44 24 34	 mov	 eax, DWORD PTR _wMapID$[esp+32]
  00064	51		 push	 ecx
  00065	8b 4c 24 34	 mov	 ecx, DWORD PTR _bChannel$[esp+36]
  00069	52		 push	 edx
  0006a	8b 54 24 34	 mov	 edx, DWORD PTR _bCmd$[esp+40]
  0006e	50		 push	 eax
  0006f	8b 44 24 34	 mov	 eax, DWORD PTR _wGodBall$[esp+44]
  00073	51		 push	 ecx
  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	68 19 10 00 00	 push	 4121			; 00001019H
  0007b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007e	c6 44 24 3c 00	 mov	 BYTE PTR __$EHRec$[esp+72], 0
  00083	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 169  : 
; 170  : 	SayToAI(pBUF);

  000c0	56		 push	 esi
  000c1	8b cd		 mov	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 ?SayToAI@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToAI

; 171  : }

  000c8	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000cb	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d6	83 ca ff	 or	 edx, -1
  000d9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000dd	4a		 dec	 edx
  000de	85 d2		 test	 edx, edx
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5d		 pop	 ebp
  000e3	7f 08		 jg	 SHORT $L190564
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e9	50		 push	 eax
  000ea	ff 52 04	 call	 DWORD PTR [edx+4]
$L190564:
  000ed	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f8	83 c4 10	 add	 esp, 16			; 00000010H
  000fb	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190532:
  00000	8d 4d 20	 lea	 ecx, DWORD PTR _strCharName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190533:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T190529[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190569
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_GODBALLCMD_REQ@CTMapSvrModule@@QAEXGEEGGKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendSM_GODBALLCMD_REQ
PUBLIC	?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendSM_GODBALLCMD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190620 DD	0ffffffffH
	DD	FLAT:$L190581
	DD	00H
	DD	FLAT:$L190582
$T190618 DD	019930520H
	DD	02H
	DD	FLAT:$T190620
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T190578 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wGodBall$ = 8						; size = 2
_bCmd$ = 12						; size = 1
_dwKey$ = 16						; size = 4
_bChannel$ = 20						; size = 1
_wMapID$ = 24						; size = 2
_wCastle$ = 28						; size = 2
_strCharName$ = 32					; size = 4
?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendSM_GODBALLCMD_ACK, COMDAT
; _this$ = ecx

; 180  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 181  : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T190578[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L190579
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L190580
$L190579:
  0004c	33 f6		 xor	 esi, esi
$L190580:

; 182  : 
; 183  : 	pBUF->m_packet.SetID(SM_GODBALLCMD_ACK)
; 184  : 		<< wGodBall
; 185  : 		<< bCmd
; 186  : 		<< dwKey
; 187  : 		<< bChannel
; 188  : 		<< wMapID
; 189  : 		<< wCastle
; 190  : 		<< strCharName;

  0004e	8b 7c 24 38	 mov	 edi, DWORD PTR _strCharName$[esp+24]
  00052	8b 44 24 34	 mov	 eax, DWORD PTR _wCastle$[esp+24]
  00056	8b 4c 24 30	 mov	 ecx, DWORD PTR _wMapID$[esp+24]
  0005a	8b 54 24 2c	 mov	 edx, DWORD PTR _bChannel$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	8b 44 24 30	 mov	 eax, DWORD PTR _dwKey$[esp+32]
  00064	51		 push	 ecx
  00065	8b 4c 24 30	 mov	 ecx, DWORD PTR _bCmd$[esp+36]
  00069	52		 push	 edx
  0006a	8b 54 24 30	 mov	 edx, DWORD PTR _wGodBall$[esp+40]
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	52		 push	 edx
  00071	68 1a 10 00 00	 push	 4122			; 0000101aH
  00076	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00079	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  0007e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 191  : 
; 192  : 	SayToBATCH(pBUF);

  000b4	56		 push	 esi
  000b5	8b cd		 mov	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 ?SayToBATCH@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToBATCH

; 193  : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5d		 pop	 ebp
  000d7	7f 08		 jg	 SHORT $L190613
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L190613:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190581:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strCharName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190582:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T190578[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190618
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendSM_GODBALLCMD_ACK@CTMapSvrModule@@QAEXGEKEGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendSM_GODBALLCMD_ACK
PUBLIC	?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ; CTMapSvrModule::SendMW_HEROSELECT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190665 DD	0ffffffffH
	DD	FLAT:$L190630
	DD	00H
	DD	FLAT:$L190631
$T190663 DD	019930520H
	DD	02H
	DD	FLAT:$T190665
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT
$T190627 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wBattleZoneID$ = 8					; size = 2
_strHeroName$ = 12					; size = 4
_timeHero$ = 16						; size = 8
?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z PROC NEAR ; CTMapSvrModule::SendMW_HEROSELECT_ACK, COMDAT
; _this$ = ecx

; 259  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 260  : 	CPacket* pMSG = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T190627[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L190628
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L190629
$L190628:
  00045	33 f6		 xor	 esi, esi
$L190629:

; 261  : 	pMSG->SetID(MW_HEROSELECT_ACK)
; 262  : 		<< wBattleZoneID		
; 263  : 		<< strHeroName
; 264  : 		<< timeHero;

  00047	8b 44 24 2c	 mov	 eax, DWORD PTR _timeHero$[esp+28]
  0004b	8b 4c 24 28	 mov	 ecx, DWORD PTR _timeHero$[esp+24]
  0004f	8b 7c 24 24	 mov	 edi, DWORD PTR _strHeroName$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _wBattleZoneID$[esp+24]
  00057	50		 push	 eax
  00058	51		 push	 ecx
  00059	57		 push	 edi
  0005a	52		 push	 edx
  0005b	68 1c 21 00 00	 push	 8476			; 0000211cH
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 265  : 
; 266  : 	m_world.Say(pMSG);

  00081	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  00087	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  0008d	56		 push	 esi
  0008e	ff 10		 call	 DWORD PTR [eax]

; 267  : }

  00090	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00093	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0009b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009e	83 ca ff	 or	 edx, -1
  000a1	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a5	4a		 dec	 edx
  000a6	85 d2		 test	 edx, edx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5d		 pop	 ebp
  000ab	7f 08		 jg	 SHORT $L190658
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b1	50		 push	 eax
  000b2	ff 52 04	 call	 DWORD PTR [edx+4]
$L190658:
  000b5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c0	83 c4 10	 add	 esp, 16			; 00000010H
  000c3	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190630:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strHeroName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190631:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T190627[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190663
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_HEROSELECT_ACK@CTMapSvrModule@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ENDP ; CTMapSvrModule::SendMW_HEROSELECT_ACK
PUBLIC	?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ; CTMapSvrModule::SendDM_EVENTQUARTER_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190714 DD	0ffffffffH
	DD	FLAT:$L190675
	DD	00H
	DD	FLAT:$L190676
$T190712 DD	019930520H
	DD	02H
	DD	FLAT:$T190714
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT
$T190672 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strName$ = 8						; size = 4
_bDay$ = 12						; size = 1
_bHour$ = 16						; size = 1
_bMinute$ = 20						; size = 1
?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z PROC NEAR ; CTMapSvrModule::SendDM_EVENTQUARTER_REQ, COMDAT
; _this$ = ecx

; 282  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 283  : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T190672[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L190673
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L190674
$L190673:
  0004c	33 f6		 xor	 esi, esi
$L190674:

; 284  : 	pBUF->m_packet.SetID(DM_EVENTQUARTER_REQ)
; 285  : 		<< strName
; 286  : 		<< bDay
; 287  : 		<< bHour
; 288  : 		<< bMinute;

  0004e	8b 44 24 2c	 mov	 eax, DWORD PTR _bMinute$[esp+24]
  00052	8b 4c 24 28	 mov	 ecx, DWORD PTR _bHour$[esp+24]
  00056	8b 54 24 24	 mov	 edx, DWORD PTR _bDay$[esp+24]
  0005a	8b 7c 24 20	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005e	50		 push	 eax
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	57		 push	 edi
  00062	68 58 90 00 00	 push	 36952			; 00009058H
  00067	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006a	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 289  : 
; 290  : 	SayToDB(pBUF);

  00090	56		 push	 esi
  00091	8b cd		 mov	 ecx, ebp
  00093	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 291  : }

  00098	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5d		 pop	 ebp
  000b3	7f 08		 jg	 SHORT $L190707
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L190707:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190675:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190676:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T190672[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190712
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_EVENTQUARTER_REQ@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ENDP ; CTMapSvrModule::SendDM_EVENTQUARTER_REQ
PUBLIC	?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTMapSvrModule::SendDM_SMSSEND_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190794 DD	0ffffffffH
	DD	FLAT:$L190724
	DD	00H
	DD	FLAT:$L190725
	DD	01H
	DD	FLAT:$L190726
$T190792 DD	019930520H
	DD	03H
	DD	FLAT:$T190794
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T190721 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bInven$ = 16						; size = 1
_bItem$ = 20						; size = 1
_wItemID$ = 24						; size = 2
_bType$ = 28						; size = 1
_dwGuildID$ = 32					; size = 4
_strTarget$ = 36					; size = 4
_strMsg$ = 40						; size = 4
?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTMapSvrModule::SendDM_SMSSEND_REQ, COMDAT
; _this$ = ecx

; 442  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 443  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T190721[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  0003b	74 10		 je	 SHORT $L190722
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L190723
$L190722:
  0004d	33 f6		 xor	 esi, esi
$L190723:

; 444  : 
; 445  : 	pBUF->m_packet.SetID(DM_SMSSEND_REQ)
; 446  : 		<< dwCharID
; 447  : 		<< dwKey
; 448  : 		<< bInven
; 449  : 		<< bItem
; 450  : 		<< wItemID
; 451  : 		<< bType
; 452  : 		<< dwGuildID
; 453  : 		<< strTarget
; 454  : 		<< strMsg;

  0004f	8b 44 24 38	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  00053	8b 4c 24 34	 mov	 ecx, DWORD PTR _bType$[esp+24]
  00057	8b 54 24 30	 mov	 edx, DWORD PTR _wItemID$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 40	 mov	 edi, DWORD PTR _strTarget$[esp+28]
  00060	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00064	8b 5c 24 44	 mov	 ebx, DWORD PTR _strMsg$[esp+28]
  00068	53		 push	 ebx
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	8b 44 24 3c	 mov	 eax, DWORD PTR _bItem$[esp+40]
  0006f	51		 push	 ecx
  00070	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bInven$[esp+44]
  00074	52		 push	 edx
  00075	8b 54 24 3c	 mov	 edx, DWORD PTR _dwKey$[esp+48]
  00079	50		 push	 eax
  0007a	8b 44 24 3c	 mov	 eax, DWORD PTR _dwCharID$[esp+52]
  0007e	51		 push	 ecx
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	68 43 90 00 00	 push	 36931			; 00009043H
  00086	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00089	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b1	8b c8		 mov	 ecx, eax
  000b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b8	8b c8		 mov	 ecx, eax
  000ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 455  : 
; 456  : 	SayToDB(pBUF);

  000cd	56		 push	 esi
  000ce	8b cd		 mov	 ecx, ebp
  000d0	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 457  : }

  000d5	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000d8	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000dd	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e0	83 ca ff	 or	 edx, -1
  000e3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e7	4a		 dec	 edx
  000e8	85 d2		 test	 edx, edx
  000ea	5f		 pop	 edi
  000eb	7f 08		 jg	 SHORT $L190761
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	50		 push	 eax
  000f2	ff 52 04	 call	 DWORD PTR [edx+4]
$L190761:
  000f5	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000f8	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00100	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00103	83 ca ff	 or	 edx, -1
  00106	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010a	4a		 dec	 edx
  0010b	85 d2		 test	 edx, edx
  0010d	5e		 pop	 esi
  0010e	5d		 pop	 ebp
  0010f	5b		 pop	 ebx
  00110	7f 08		 jg	 SHORT $L190788
  00112	8b 08		 mov	 ecx, DWORD PTR [eax]
  00114	8b 11		 mov	 edx, DWORD PTR [ecx]
  00116	50		 push	 eax
  00117	ff 52 04	 call	 DWORD PTR [edx+4]
$L190788:
  0011a	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0011e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00125	83 c4 10	 add	 esp, 16			; 00000010H
  00128	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190724:
  00000	8d 4d 24	 lea	 ecx, DWORD PTR _strMsg$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190725:
  00008	8d 4d 20	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190726:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T190721[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190792
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SMSSEND_REQ@CTMapSvrModule@@QAEXKKEEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTMapSvrModule::SendDM_SMSSEND_REQ
PUBLIC	?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z ; CTMapSvrModule::SendMW_ENTERSVR_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190839 DD	0ffffffffH
	DD	FLAT:$L190804
	DD	00H
	DD	FLAT:$L190805
$T190837 DD	019930520H
	DD	02H
	DD	FLAT:$T190839
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z
_TEXT	SEGMENT
$T190801 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strNAME$ = 16						; size = 4
_bLevel$ = 20						; size = 1
_bRealSex$ = 24						; size = 1
_bClass$ = 28						; size = 1
_bRace$ = 32						; size = 1
_bSex$ = 36						; size = 1
_bFace$ = 40						; size = 1
_bHair$ = 44						; size = 1
_bHelmetHide$ = 48					; size = 1
_bCountry$ = 52						; size = 1
_bAidCountry$ = 56					; size = 1
_dwRegion$ = 60						; size = 4
_bChannel$ = 64						; size = 1
_wMapID$ = 68						; size = 2
_fPosX$ = 72						; size = 4
_fPosY$ = 76						; size = 4
_fPosZ$ = 80						; size = 4
_bLogout$ = 84						; size = 1
_bSave$ = 88						; size = 1
_bResult$ = 92						; size = 1
_dwUserIP$ = 96						; size = 4
?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z PROC NEAR ; CTMapSvrModule::SendMW_ENTERSVR_ACK, COMDAT
; _this$ = ecx

; 671  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 672  : 	CPacket *pMSG = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T190801[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L190802
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L190803
$L190802:
  00045	33 f6		 xor	 esi, esi
$L190803:

; 673  : 
; 674  : 	pMSG->SetID(MW_ENTERSVR_ACK)
; 675  : 		<< dwCharID
; 676  : 		<< dwKEY
; 677  : 		<< strNAME
; 678  : 		<< bLevel
; 679  : 		<< bRealSex
; 680  : 		<< bClass
; 681  : 		<< bRace
; 682  : 		<< bSex
; 683  : 		<< bFace
; 684  : 		<< bHair
; 685  : 		<< bHelmetHide
; 686  : 		<< bCountry
; 687  : 		//<< bAidCountry
; 688  : 		<< dwRegion
; 689  : 		<< bChannel
; 690  : 		<< wMapID
; 691  : 		<< fPosX
; 692  : 		<< fPosY
; 693  : 		<< fPosZ
; 694  : 		<< bLogout
; 695  : 		<< bSave
; 696  : 		<< bResult
; 697  : 		<< dwUserIP;

  00047	8b 44 24 78	 mov	 eax, DWORD PTR _dwUserIP$[esp+24]
  0004b	8b 4c 24 74	 mov	 ecx, DWORD PTR _bResult$[esp+24]
  0004f	8b 54 24 70	 mov	 edx, DWORD PTR _bSave$[esp+24]
  00053	50		 push	 eax
  00054	8b 44 24 70	 mov	 eax, DWORD PTR _bLogout$[esp+28]
  00058	51		 push	 ecx
  00059	8b 4c 24 70	 mov	 ecx, DWORD PTR _fPosZ$[esp+32]
  0005d	52		 push	 edx
  0005e	8b 54 24 70	 mov	 edx, DWORD PTR _fPosY$[esp+36]
  00062	50		 push	 eax
  00063	8b 44 24 70	 mov	 eax, DWORD PTR _fPosX$[esp+40]
  00067	51		 push	 ecx
  00068	8b 4c 24 70	 mov	 ecx, DWORD PTR _wMapID$[esp+44]
  0006c	52		 push	 edx
  0006d	8b 54 24 70	 mov	 edx, DWORD PTR _bChannel$[esp+48]
  00071	50		 push	 eax
  00072	8b 44 24 70	 mov	 eax, DWORD PTR _dwRegion$[esp+52]
  00076	51		 push	 ecx
  00077	8b 4c 24 6c	 mov	 ecx, DWORD PTR _bCountry$[esp+56]
  0007b	52		 push	 edx
  0007c	8b 54 24 6c	 mov	 edx, DWORD PTR _bHelmetHide$[esp+60]
  00080	50		 push	 eax
  00081	8b 44 24 6c	 mov	 eax, DWORD PTR _bHair$[esp+64]
  00085	51		 push	 ecx
  00086	8b 4c 24 6c	 mov	 ecx, DWORD PTR _bFace$[esp+68]
  0008a	8b 7c 24 54	 mov	 edi, DWORD PTR _strNAME$[esp+68]
  0008e	52		 push	 edx
  0008f	8b 54 24 6c	 mov	 edx, DWORD PTR _bSex$[esp+72]
  00093	50		 push	 eax
  00094	8b 44 24 6c	 mov	 eax, DWORD PTR _bRace$[esp+76]
  00098	51		 push	 ecx
  00099	8b 4c 24 6c	 mov	 ecx, DWORD PTR _bClass$[esp+80]
  0009d	52		 push	 edx
  0009e	8b 54 24 6c	 mov	 edx, DWORD PTR _bRealSex$[esp+84]
  000a2	50		 push	 eax
  000a3	8b 44 24 6c	 mov	 eax, DWORD PTR _bLevel$[esp+88]
  000a7	51		 push	 ecx
  000a8	8b 4c 24 68	 mov	 ecx, DWORD PTR _dwKEY$[esp+92]
  000ac	52		 push	 edx
  000ad	8b 54 24 68	 mov	 edx, DWORD PTR _dwCharID$[esp+96]
  000b1	50		 push	 eax
  000b2	57		 push	 edi
  000b3	51		 push	 ecx
  000b4	52		 push	 edx
  000b5	68 08 20 00 00	 push	 8200			; 00002008H
  000ba	8b ce		 mov	 ecx, esi
  000bc	c6 44 24 74 00	 mov	 BYTE PTR __$EHRec$[esp+128], 0
  000c1	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000db	8b c8		 mov	 ecx, eax
  000dd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e2	8b c8		 mov	 ecx, eax
  000e4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e9	8b c8		 mov	 ecx, eax
  000eb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f0	8b c8		 mov	 ecx, eax
  000f2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f7	8b c8		 mov	 ecx, eax
  000f9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fe	8b c8		 mov	 ecx, eax
  00100	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0010c	8b c8		 mov	 ecx, eax
  0010e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0011a	8b c8		 mov	 ecx, eax
  0011c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00128	8b c8		 mov	 ecx, eax
  0012a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00136	8b c8		 mov	 ecx, eax
  00138	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0013d	8b c8		 mov	 ecx, eax
  0013f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00144	8b c8		 mov	 ecx, eax
  00146	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0014b	8b c8		 mov	 ecx, eax
  0014d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00152	8b c8		 mov	 ecx, eax
  00154	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00159	8b c8		 mov	 ecx, eax
  0015b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 698  : 
; 699  : 	m_world.Say(pMSG);

  00160	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  00166	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  0016c	56		 push	 esi
  0016d	ff 10		 call	 DWORD PTR [eax]

; 700  : }

  0016f	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00172	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0017a	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0017d	83 ca ff	 or	 edx, -1
  00180	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00184	4a		 dec	 edx
  00185	85 d2		 test	 edx, edx
  00187	5f		 pop	 edi
  00188	5e		 pop	 esi
  00189	5d		 pop	 ebp
  0018a	7f 08		 jg	 SHORT $L190835
  0018c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00190	50		 push	 eax
  00191	ff 52 04	 call	 DWORD PTR [edx+4]
$L190835:
  00194	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00198	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0019f	83 c4 10	 add	 esp, 16			; 00000010H
  001a2	c2 5c 00	 ret	 92			; 0000005cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190804:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190805:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T190801[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190837
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERSVR_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEKEGMMMEEEK@Z ENDP ; CTMapSvrModule::SendMW_ENTERSVR_ACK
PUBLIC	?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z ; CTMapSvrModule::SendDM_POSTRECV_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T190981 DD	0ffffffffH
	DD	FLAT:$L190849
	DD	00H
	DD	FLAT:$L190850
	DD	01H
	DD	FLAT:$L190851
	DD	02H
	DD	FLAT:$L190852
	DD	03H
	DD	FLAT:$L190853
$T190979 DD	019930520H
	DD	05H
	DD	FLAT:$T190981
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T190846 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwSendID$ = 8						; size = 4
_dwRecvID$ = 12						; size = 4
_strSender$ = 16					; size = 4
_strTarget$ = 20					; size = 4
_strTitle$ = 24						; size = 4
_strMessage$ = 28					; size = 4
_bType$ = 32						; size = 1
_dwGold$ = 36						; size = 4
_dwSilver$ = 40						; size = 4
_dwCooper$ = 44						; size = 4
_pItem$ = 48						; size = 4
?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTRECV_REQ, COMDAT
; _this$ = ecx

; 1365 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	bb 03 00 00 00	 mov	 ebx, 3

; 1366 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00025	6a 20		 push	 32			; 00000020H
  00027	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	8b f8		 mov	 edi, eax
  00032	83 c4 04	 add	 esp, 4
  00035	89 7c 24 14	 mov	 DWORD PTR $T190846[esp+36], edi
  00039	85 ff		 test	 edi, edi
  0003b	c6 44 24 20 04	 mov	 BYTE PTR __$EHRec$[esp+44], 4
  00040	74 10		 je	 SHORT $L190847
  00042	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00045	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00050	eb 02		 jmp	 SHORT $L190848
$L190847:
  00052	33 ff		 xor	 edi, edi
$L190848:

; 1367 : 	
; 1368 : 	pBUF->m_packet.SetID(DM_POSTRECV_REQ)
; 1369 : 		<< dwSendID
; 1370 : 		<< dwRecvID
; 1371 : 		<< strSender
; 1372 : 		<< strTarget
; 1373 : 		<< strTitle
; 1374 : 		<< strMessage
; 1375 : 		<< bType
; 1376 : 		<< dwGold
; 1377 : 		<< dwSilver
; 1378 : 		<< dwCooper;

  00054	8b 44 24 4c	 mov	 eax, DWORD PTR _dwCooper$[esp+32]
  00058	8b 4c 24 48	 mov	 ecx, DWORD PTR _dwSilver$[esp+32]
  0005c	8b 54 24 44	 mov	 edx, DWORD PTR _dwGold$[esp+32]
  00060	8b 6c 24 30	 mov	 ebp, DWORD PTR _strSender$[esp+32]
  00064	50		 push	 eax
  00065	8b 44 24 44	 mov	 eax, DWORD PTR _bType$[esp+36]
  00069	51		 push	 ecx
  0006a	8b 4c 24 44	 mov	 ecx, DWORD PTR _strMessage$[esp+40]
  0006e	52		 push	 edx
  0006f	8b 54 24 44	 mov	 edx, DWORD PTR _strTitle$[esp+44]
  00073	50		 push	 eax
  00074	8b 44 24 44	 mov	 eax, DWORD PTR _strTarget$[esp+48]
  00078	51		 push	 ecx
  00079	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwRecvID$[esp+52]
  0007d	52		 push	 edx
  0007e	8b 54 24 40	 mov	 edx, DWORD PTR _dwSendID$[esp+56]
  00082	50		 push	 eax
  00083	55		 push	 ebp
  00084	51		 push	 ecx
  00085	52		 push	 edx
  00086	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00089	68 23 90 00 00	 push	 36899			; 00009023H
  0008e	8b ce		 mov	 ecx, esi
  00090	88 5c 24 4c	 mov	 BYTE PTR __$EHRec$[esp+88], bl
  00094	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d1	8b c8		 mov	 ecx, eax
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d8	8b c8		 mov	 ecx, eax
  000da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1379 : 
; 1380 : 	if(pItem)

  000df	8b 5c 24 50	 mov	 ebx, DWORD PTR _pItem$[esp+32]
  000e3	85 db		 test	 ebx, ebx

; 1381 : 	{
; 1382 : 		pBUF->m_packet
; 1383 : 			<< BYTE(1)
; 1384 : 			<< pItem->m_bInven;

  000e5	8b ce		 mov	 ecx, esi
  000e7	74 1e		 je	 SHORT $L178037
  000e9	33 c0		 xor	 eax, eax
  000eb	8a 43 2a	 mov	 al, BYTE PTR [ebx+42]
  000ee	50		 push	 eax
  000ef	6a 01		 push	 1
  000f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f6	8b c8		 mov	 ecx, eax
  000f8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1385 : 
; 1386 : 		pItem->WrapPacket(&(pBUF->m_packet));

  000fd	56		 push	 esi
  000fe	8b cb		 mov	 ecx, ebx
  00100	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 1387 : 	}
; 1388 : 	else

  00105	eb 07		 jmp	 SHORT $L178038
$L178037:

; 1389 : 	{
; 1390 : 		pBUF->m_packet
; 1391 : 			<< BYTE(0);

  00107	6a 00		 push	 0
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L178038:

; 1392 : 	}
; 1393 : 
; 1394 : 	SayToDB(pBUF);

  0010e	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  00112	57		 push	 edi
  00113	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1395 : }

  00118	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  0011b	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  00120	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00123	83 ca ff	 or	 edx, -1
  00126	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0012a	4a		 dec	 edx
  0012b	85 d2		 test	 edx, edx
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5d		 pop	 ebp
  00130	5b		 pop	 ebx
  00131	7f 08		 jg	 SHORT $L190896
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	8b 11		 mov	 edx, DWORD PTR [ecx]
  00137	50		 push	 eax
  00138	ff 52 04	 call	 DWORD PTR [edx+4]
$L190896:
  0013b	8b 44 24 24	 mov	 eax, DWORD PTR _strTarget$[esp+16]
  0013f	83 c0 f0	 add	 eax, -16		; fffffff0H
  00142	c6 44 24 10 01	 mov	 BYTE PTR __$EHRec$[esp+28], 1
  00147	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0014a	83 ca ff	 or	 edx, -1
  0014d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00151	4a		 dec	 edx
  00152	85 d2		 test	 edx, edx
  00154	7f 08		 jg	 SHORT $L190923
  00156	8b 08		 mov	 ecx, DWORD PTR [eax]
  00158	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015a	50		 push	 eax
  0015b	ff 52 04	 call	 DWORD PTR [edx+4]
$L190923:
  0015e	8b 44 24 28	 mov	 eax, DWORD PTR _strTitle$[esp+16]
  00162	83 c0 f0	 add	 eax, -16		; fffffff0H
  00165	c6 44 24 10 00	 mov	 BYTE PTR __$EHRec$[esp+28], 0
  0016a	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0016d	83 ca ff	 or	 edx, -1
  00170	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00174	4a		 dec	 edx
  00175	85 d2		 test	 edx, edx
  00177	7f 08		 jg	 SHORT $L190950
  00179	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017d	50		 push	 eax
  0017e	ff 52 04	 call	 DWORD PTR [edx+4]
$L190950:
  00181	8b 44 24 2c	 mov	 eax, DWORD PTR _strMessage$[esp+16]
  00185	83 c0 f0	 add	 eax, -16		; fffffff0H
  00188	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00190	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00193	83 ca ff	 or	 edx, -1
  00196	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0019a	4a		 dec	 edx
  0019b	85 d2		 test	 edx, edx
  0019d	7f 08		 jg	 SHORT $L190977
  0019f	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a3	50		 push	 eax
  001a4	ff 52 04	 call	 DWORD PTR [edx+4]
$L190977:
  001a7	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  001ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001b2	83 c4 14	 add	 esp, 20			; 00000014H
  001b5	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190849:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190850:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190851:
  00010	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190852:
  00018	8d 4d 0c	 lea	 ecx, DWORD PTR _strSender$[ebp-4]
  0001b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190853:
  00020	8b 45 f0	 mov	 eax, DWORD PTR $T190846[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00029	59		 pop	 ecx
  0002a	c3		 ret	 0
__ehhandler$?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z:
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190979
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTRECV_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKPAVCTItem@@@Z ENDP ; CTMapSvrModule::SendDM_POSTRECV_REQ
PUBLIC	?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z ; CTMapSvrModule::SendDM_POSTCANSEND_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191123 DD	0ffffffffH
	DD	FLAT:$L190991
	DD	00H
	DD	FLAT:$L190992
	DD	01H
	DD	FLAT:$L190993
	DD	02H
	DD	FLAT:$L190994
	DD	03H
	DD	FLAT:$L190995
$T191121 DD	019930520H
	DD	05H
	DD	FLAT:$T191123
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z
_TEXT	SEGMENT
$T190988 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwSendID$ = 8						; size = 4
_strSender$ = 12					; size = 4
_strTarget$ = 16					; size = 4
_strTitle$ = 20						; size = 4
_strMessage$ = 24					; size = 4
_bType$ = 28						; size = 1
_dwGold$ = 32						; size = 4
_dwSilver$ = 36						; size = 4
_dwCooper$ = 40						; size = 4
_bInven$ = 44						; size = 1
_bSlot$ = 48						; size = 1
?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTCANSEND_REQ, COMDAT
; _this$ = ecx

; 1459 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 03 00 00 00	 mov	 ebx, 3

; 1460 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T190988[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 04	 mov	 BYTE PTR __$EHRec$[esp+36], 4
  0003b	74 10		 je	 SHORT $L190989
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L190990
$L190989:
  0004d	33 f6		 xor	 esi, esi
$L190990:

; 1461 : 	
; 1462 : 	pBUF->m_packet.SetID(DM_POSTCANSEND_REQ)
; 1463 : 		<< dwSendID
; 1464 : 		<< strSender
; 1465 : 		<< strTarget
; 1466 : 		<< strTitle
; 1467 : 		<< strMessage
; 1468 : 		<< bType
; 1469 : 		<< dwGold
; 1470 : 		<< dwSilver
; 1471 : 		<< dwCooper
; 1472 : 		<< bInven
; 1473 : 		<< bSlot;

  0004f	8b 44 24 48	 mov	 eax, DWORD PTR _bSlot$[esp+24]
  00053	8b 4c 24 44	 mov	 ecx, DWORD PTR _bInven$[esp+24]
  00057	8b 54 24 40	 mov	 edx, DWORD PTR _dwCooper$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 28	 mov	 edi, DWORD PTR _strSender$[esp+28]
  00060	50		 push	 eax
  00061	8b 44 24 44	 mov	 eax, DWORD PTR _dwSilver$[esp+32]
  00065	51		 push	 ecx
  00066	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwGold$[esp+36]
  0006a	52		 push	 edx
  0006b	8b 54 24 44	 mov	 edx, DWORD PTR _bType$[esp+40]
  0006f	50		 push	 eax
  00070	8b 44 24 44	 mov	 eax, DWORD PTR _strMessage$[esp+44]
  00074	51		 push	 ecx
  00075	8b 4c 24 44	 mov	 ecx, DWORD PTR _strTitle$[esp+48]
  00079	52		 push	 edx
  0007a	8b 54 24 3c	 mov	 edx, DWORD PTR _dwSendID$[esp+52]
  0007e	50		 push	 eax
  0007f	51		 push	 ecx
  00080	88 5c 24 3c	 mov	 BYTE PTR __$EHRec$[esp+72], bl
  00084	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strTarget$[esp+60]
  00088	53		 push	 ebx
  00089	57		 push	 edi
  0008a	52		 push	 edx
  0008b	68 25 90 00 00	 push	 36901			; 00009025H
  00090	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00093	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d0	8b c8		 mov	 ecx, eax
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d7	8b c8		 mov	 ecx, eax
  000d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1474 : 
; 1475 : 	SayToDB(pBUF);

  000e5	56		 push	 esi
  000e6	8b cd		 mov	 ecx, ebp
  000e8	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1476 : }

  000ed	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000f0	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  000f5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f8	83 ca ff	 or	 edx, -1
  000fb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ff	4a		 dec	 edx
  00100	85 d2		 test	 edx, edx
  00102	5f		 pop	 edi
  00103	7f 08		 jg	 SHORT $L191038
  00105	8b 08		 mov	 ecx, DWORD PTR [eax]
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	50		 push	 eax
  0010a	ff 52 04	 call	 DWORD PTR [edx+4]
$L191038:
  0010d	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00110	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00115	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00118	83 ca ff	 or	 edx, -1
  0011b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0011f	4a		 dec	 edx
  00120	85 d2		 test	 edx, edx
  00122	5e		 pop	 esi
  00123	5d		 pop	 ebp
  00124	5b		 pop	 ebx
  00125	7f 08		 jg	 SHORT $L191065
  00127	8b 08		 mov	 ecx, DWORD PTR [eax]
  00129	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012b	50		 push	 eax
  0012c	ff 52 04	 call	 DWORD PTR [edx+4]
$L191065:
  0012f	8b 44 24 20	 mov	 eax, DWORD PTR _strTitle$[esp+12]
  00133	83 c0 f0	 add	 eax, -16		; fffffff0H
  00136	c6 44 24 0c 00	 mov	 BYTE PTR __$EHRec$[esp+24], 0
  0013b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0013e	83 ca ff	 or	 edx, -1
  00141	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00145	4a		 dec	 edx
  00146	85 d2		 test	 edx, edx
  00148	7f 08		 jg	 SHORT $L191092
  0014a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014e	50		 push	 eax
  0014f	ff 52 04	 call	 DWORD PTR [edx+4]
$L191092:
  00152	8b 44 24 24	 mov	 eax, DWORD PTR _strMessage$[esp+12]
  00156	83 c0 f0	 add	 eax, -16		; fffffff0H
  00159	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00161	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00164	83 ca ff	 or	 edx, -1
  00167	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0016b	4a		 dec	 edx
  0016c	85 d2		 test	 edx, edx
  0016e	7f 08		 jg	 SHORT $L191119
  00170	8b 08		 mov	 ecx, DWORD PTR [eax]
  00172	8b 11		 mov	 edx, DWORD PTR [ecx]
  00174	50		 push	 eax
  00175	ff 52 04	 call	 DWORD PTR [edx+4]
$L191119:
  00178	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0017c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00183	83 c4 10	 add	 esp, 16			; 00000010H
  00186	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190991:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190992:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190993:
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190994:
  00018	8d 4d 08	 lea	 ecx, DWORD PTR _strSender$[ebp-4]
  0001b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L190995:
  00020	8b 45 f0	 mov	 eax, DWORD PTR $T190988[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00029	59		 pop	 ecx
  0002a	c3		 ret	 0
__ehhandler$?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z:
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191121
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTCANSEND_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000EKKKEE@Z ENDP ; CTMapSvrModule::SendDM_POSTCANSEND_REQ
PUBLIC	?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z ; CTMapSvrModule::SendMW_POSTRECV_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191230 DD	0ffffffffH
	DD	FLAT:$L191133
	DD	00H
	DD	FLAT:$L191134
	DD	01H
	DD	FLAT:$L191135
	DD	02H
	DD	FLAT:$L191136
$T191228 DD	019930520H
	DD	04H
	DD	FLAT:$T191230
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z
_TEXT	SEGMENT
$T191130 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwPostID$ = 8						; size = 4
_strSender$ = 12					; size = 4
_strTarget$ = 16					; size = 4
_strTitle$ = 20						; size = 4
_bType$ = 24						; size = 1
?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z PROC NEAR ; CTMapSvrModule::SendMW_POSTRECV_ACK, COMDAT
; _this$ = ecx

; 1507 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 02 00 00 00	 mov	 ebx, 2

; 1508 : 	CPacket *pMSG = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191130[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 03	 mov	 BYTE PTR __$EHRec$[esp+36], 3
  00039	74 0b		 je	 SHORT $L191131
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191132
$L191131:
  00046	33 f6		 xor	 esi, esi
$L191132:

; 1509 : 	
; 1510 : 	pMSG->SetID(MW_POSTRECV_ACK)
; 1511 : 		<< dwPostID
; 1512 : 		<< strSender
; 1513 : 		<< strTarget
; 1514 : 		<< strTitle
; 1515 : 		<< bType;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _bType$[esp+24]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _strTitle$[esp+24]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwPostID$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 28	 mov	 edi, DWORD PTR _strSender$[esp+28]
  00059	50		 push	 eax
  0005a	51		 push	 ecx
  0005b	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  0005f	8b 5c 24 34	 mov	 ebx, DWORD PTR _strTarget$[esp+36]
  00063	53		 push	 ebx
  00064	57		 push	 edi
  00065	52		 push	 edx
  00066	68 7d 20 00 00	 push	 8317			; 0000207dH
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1516 : 
; 1517 : 	m_world.Say(pMSG);

  00095	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0009b	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000a1	56		 push	 esi
  000a2	ff 10		 call	 DWORD PTR [eax]

; 1518 : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  000ac	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000af	83 ca ff	 or	 edx, -1
  000b2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b6	4a		 dec	 edx
  000b7	85 d2		 test	 edx, edx
  000b9	5f		 pop	 edi
  000ba	7f 08		 jg	 SHORT $L191172
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	50		 push	 eax
  000c1	ff 52 04	 call	 DWORD PTR [edx+4]
$L191172:
  000c4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c7	c6 44 24 18 00	 mov	 BYTE PTR __$EHRec$[esp+36], 0
  000cc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cf	83 ca ff	 or	 edx, -1
  000d2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d6	4a		 dec	 edx
  000d7	85 d2		 test	 edx, edx
  000d9	5e		 pop	 esi
  000da	5d		 pop	 ebp
  000db	5b		 pop	 ebx
  000dc	7f 08		 jg	 SHORT $L191199
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	50		 push	 eax
  000e3	ff 52 04	 call	 DWORD PTR [edx+4]
$L191199:
  000e6	8b 44 24 20	 mov	 eax, DWORD PTR _strTitle$[esp+12]
  000ea	83 c0 f0	 add	 eax, -16		; fffffff0H
  000ed	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  000f5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f8	83 ca ff	 or	 edx, -1
  000fb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ff	4a		 dec	 edx
  00100	85 d2		 test	 edx, edx
  00102	7f 08		 jg	 SHORT $L191226
  00104	8b 08		 mov	 ecx, DWORD PTR [eax]
  00106	8b 11		 mov	 edx, DWORD PTR [ecx]
  00108	50		 push	 eax
  00109	ff 52 04	 call	 DWORD PTR [edx+4]
$L191226:
  0010c	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00117	83 c4 10	 add	 esp, 16			; 00000010H
  0011a	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191133:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191134:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191135:
  00010	8d 4d 08	 lea	 ecx, DWORD PTR _strSender$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191136:
  00018	8b 45 f0	 mov	 eax, DWORD PTR $T191130[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
__ehhandler$?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z:
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191228
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_POSTRECV_ACK@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00E@Z ENDP ; CTMapSvrModule::SendMW_POSTRECV_ACK
PUBLIC	?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z ; CTMapSvrModule::SendMW_PARTYADD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191306 DD	0ffffffffH
	DD	FLAT:$L191240
	DD	00H
	DD	FLAT:$L191241
	DD	01H
	DD	FLAT:$L191242
$T191304 DD	019930520H
	DD	03H
	DD	FLAT:$T191306
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
_TEXT	SEGMENT
$T191237 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strOrigin$ = 8						; size = 4
_strTarget$ = 12					; size = 4
_bObtainType$ = 16					; size = 1
_dwMaxHP$ = 20						; size = 4
_dwHP$ = 24						; size = 4
_dwMaxMP$ = 28						; size = 4
_dwMP$ = 32						; size = 4
?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYADD_ACK, COMDAT
; _this$ = ecx

; 2183 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2184 : 	CPacket *pMSG = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191237[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191238
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191239
$L191238:
  00046	33 f6		 xor	 esi, esi
$L191239:

; 2185 : 
; 2186 : 	pMSG->SetID(MW_PARTYADD_ACK)
; 2187 : 		<< strOrigin
; 2188 : 		<< strTarget
; 2189 : 		<< bObtainType
; 2190 : 		<< dwMaxHP
; 2191 : 		<< dwHP
; 2192 : 		<< dwMaxMP
; 2193 : 		<< dwMP;

  00048	8b 44 24 38	 mov	 eax, DWORD PTR _dwMP$[esp+24]
  0004c	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwMaxMP$[esp+24]
  00050	8b 54 24 30	 mov	 edx, DWORD PTR _dwHP$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 24	 mov	 edi, DWORD PTR _strOrigin$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 34	 mov	 eax, DWORD PTR _dwMaxHP$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 34	 mov	 ecx, DWORD PTR _bObtainType$[esp+36]
  00063	52		 push	 edx
  00064	50		 push	 eax
  00065	51		 push	 ecx
  00066	88 5c 24 30	 mov	 BYTE PTR __$EHRec$[esp+60], bl
  0006a	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strTarget$[esp+48]
  0006e	53		 push	 ebx
  0006f	57		 push	 edi
  00070	68 19 20 00 00	 push	 8217			; 00002019H
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2194 : 
; 2195 : 	m_world.Say(pMSG);

  000ad	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000b3	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000b9	56		 push	 esi
  000ba	ff 12		 call	 DWORD PTR [edx]

; 2196 : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000c4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c7	83 ca ff	 or	 edx, -1
  000ca	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ce	4a		 dec	 edx
  000cf	85 d2		 test	 edx, edx
  000d1	5f		 pop	 edi
  000d2	7f 08		 jg	 SHORT $L191275
  000d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d8	50		 push	 eax
  000d9	ff 52 04	 call	 DWORD PTR [edx+4]
$L191275:
  000dc	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000df	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000e7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ea	83 ca ff	 or	 edx, -1
  000ed	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f1	4a		 dec	 edx
  000f2	85 d2		 test	 edx, edx
  000f4	5e		 pop	 esi
  000f5	5d		 pop	 ebp
  000f6	5b		 pop	 ebx
  000f7	7f 08		 jg	 SHORT $L191301
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fd	50		 push	 eax
  000fe	ff 52 04	 call	 DWORD PTR [edx+4]
$L191301:
  00101	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00105	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010c	83 c4 10	 add	 esp, 16			; 00000010H
  0010f	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191240:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191241:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strOrigin$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191242:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191237[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191304
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYADD_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z ENDP ; CTMapSvrModule::SendMW_PARTYADD_ACK
PUBLIC	?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z ; CTMapSvrModule::SendMW_PARTYJOIN_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191382 DD	0ffffffffH
	DD	FLAT:$L191316
	DD	00H
	DD	FLAT:$L191317
	DD	01H
	DD	FLAT:$L191318
$T191380 DD	019930520H
	DD	03H
	DD	FLAT:$T191382
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z
_TEXT	SEGMENT
$T191313 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strOrigin$ = 8						; size = 4
_strTarget$ = 12					; size = 4
_bObtainType$ = 16					; size = 1
_bResponse$ = 20					; size = 1
_dwMaxHP$ = 24						; size = 4
_dwHP$ = 28						; size = 4
_dwMaxMP$ = 32						; size = 4
_dwMP$ = 36						; size = 4
?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYJOIN_ACK, COMDAT
; _this$ = ecx

; 2205 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2206 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191313[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191314
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191315
$L191314:
  00046	33 f6		 xor	 esi, esi
$L191315:

; 2207 : 
; 2208 : 	pMsg->SetID(MW_PARTYJOIN_ACK)
; 2209 : 		<< strOrigin
; 2210 : 		<< strTarget
; 2211 : 		<< bObtainType
; 2212 : 		<< bResponse
; 2213 : 		<< dwMaxHP
; 2214 : 		<< dwHP
; 2215 : 		<< dwMaxMP
; 2216 : 		<< dwMP;

  00048	8b 44 24 3c	 mov	 eax, DWORD PTR _dwMP$[esp+24]
  0004c	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwMaxMP$[esp+24]
  00050	8b 54 24 34	 mov	 edx, DWORD PTR _dwHP$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 24	 mov	 edi, DWORD PTR _strOrigin$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 38	 mov	 eax, DWORD PTR _dwMaxHP$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 38	 mov	 ecx, DWORD PTR _bResponse$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 38	 mov	 edx, DWORD PTR _bObtainType$[esp+40]
  00068	50		 push	 eax
  00069	51		 push	 ecx
  0006a	52		 push	 edx
  0006b	88 5c 24 34	 mov	 BYTE PTR __$EHRec$[esp+64], bl
  0006f	8b 5c 24 40	 mov	 ebx, DWORD PTR _strTarget$[esp+52]
  00073	53		 push	 ebx
  00074	57		 push	 edi
  00075	68 21 20 00 00	 push	 8225			; 00002021H
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2217 : 
; 2218 : 	m_world.Say(pMsg);

  000b9	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  000bf	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000c5	56		 push	 esi
  000c6	ff 10		 call	 DWORD PTR [eax]

; 2219 : }

  000c8	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000cb	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000d0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d3	83 ca ff	 or	 edx, -1
  000d6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000da	4a		 dec	 edx
  000db	85 d2		 test	 edx, edx
  000dd	5f		 pop	 edi
  000de	7f 08		 jg	 SHORT $L191350
  000e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e4	50		 push	 eax
  000e5	ff 52 04	 call	 DWORD PTR [edx+4]
$L191350:
  000e8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000eb	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000f3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f6	83 ca ff	 or	 edx, -1
  000f9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000fd	4a		 dec	 edx
  000fe	85 d2		 test	 edx, edx
  00100	5e		 pop	 esi
  00101	5d		 pop	 ebp
  00102	5b		 pop	 ebx
  00103	7f 08		 jg	 SHORT $L191377
  00105	8b 08		 mov	 ecx, DWORD PTR [eax]
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	50		 push	 eax
  0010a	ff 52 04	 call	 DWORD PTR [edx+4]
$L191377:
  0010d	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00111	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00118	83 c4 10	 add	 esp, 16			; 00000010H
  0011b	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191316:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191317:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strOrigin$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191318:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191313[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191380
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYJOIN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEKKKK@Z ENDP ; CTMapSvrModule::SendMW_PARTYJOIN_ACK
PUBLIC	?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_GUILDESTABLISH_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191427 DD	0ffffffffH
	DD	FLAT:$L191392
	DD	00H
	DD	FLAT:$L191393
$T191425 DD	019930520H
	DD	02H
	DD	FLAT:$T191427
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T191389 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDESTABLISH_ACK, COMDAT
; _this$ = ecx

; 2273 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2274 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191389[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191390
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191391
$L191390:
  00045	33 f6		 xor	 esi, esi
$L191391:

; 2275 : 	pMsg->SetID(MW_GUILDESTABLISH_ACK)
; 2276 : 		<< dwCharID
; 2277 : 		<< dwKey
; 2278 : 		<< strName;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 2b 20 00 00	 push	 8235			; 0000202bH
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2279 : 
; 2280 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 2281 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L191422
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L191422:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191392:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191393:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191389[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191425
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDESTABLISH_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_GUILDESTABLISH_ACK
PUBLIC	?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_GUILDINVITE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191472 DD	0ffffffffH
	DD	FLAT:$L191437
	DD	00H
	DD	FLAT:$L191438
$T191470 DD	019930520H
	DD	02H
	DD	FLAT:$T191472
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T191434 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDINVITE_ACK, COMDAT
; _this$ = ecx

; 2297 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2298 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191434[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191435
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191436
$L191435:
  00045	33 f6		 xor	 esi, esi
$L191436:

; 2299 : 	pMsg->SetID(MW_GUILDINVITE_ACK)
; 2300 : 		<< dwCharID
; 2301 : 		<< dwKey
; 2302 : 		<< strTarget;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 2f 20 00 00	 push	 8239			; 0000202fH
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2303 : 
; 2304 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 2305 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L191467
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L191467:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191437:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191438:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191434[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191470
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_GUILDINVITE_ACK
PUBLIC	?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTMapSvrModule::SendMW_GUILDDUTY_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191517 DD	0ffffffffH
	DD	FLAT:$L191482
	DD	00H
	DD	FLAT:$L191483
$T191515 DD	019930520H
	DD	02H
	DD	FLAT:$T191517
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT
$T191479 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bDuty$ = 20						; size = 1
?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDDUTY_ACK, COMDAT
; _this$ = ecx

; 2334 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2335 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191479[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191480
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191481
$L191480:
  00045	33 f6		 xor	 esi, esi
$L191481:

; 2336 : 	pMsg->SetID(MW_GUILDDUTY_ACK)
; 2337 : 		<< dwCharID
; 2338 : 		<< dwKey
; 2339 : 		<< strTarget
; 2340 : 		<< bDuty;

  00047	8b 44 24 2c	 mov	 eax, DWORD PTR _bDuty$[esp+24]
  0004b	8b 7c 24 28	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	50		 push	 eax
  00058	57		 push	 edi
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 35 20 00 00	 push	 8245			; 00002035H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2341 : 
; 2342 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 2343 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L191509
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L191509:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191482:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191483:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191479[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191515
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDDUTY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ENDP ; CTMapSvrModule::SendMW_GUILDDUTY_ACK
PUBLIC	?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTMapSvrModule::SendMW_GUILDPEER_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191562 DD	0ffffffffH
	DD	FLAT:$L191527
	DD	00H
	DD	FLAT:$L191528
$T191560 DD	019930520H
	DD	02H
	DD	FLAT:$T191562
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT
$T191524 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bPeer$ = 20						; size = 1
?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDPEER_ACK, COMDAT
; _this$ = ecx

; 2348 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2349 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191524[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191525
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191526
$L191525:
  00045	33 f6		 xor	 esi, esi
$L191526:

; 2350 : 	pMsg->SetID(MW_GUILDPEER_ACK)
; 2351 : 		<< dwCharID
; 2352 : 		<< dwKEY
; 2353 : 		<< strTarget
; 2354 : 		<< bPeer;

  00047	8b 44 24 2c	 mov	 eax, DWORD PTR _bPeer$[esp+24]
  0004b	8b 7c 24 28	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKEY$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	50		 push	 eax
  00058	57		 push	 edi
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 37 20 00 00	 push	 8247			; 00002037H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2355 : 
; 2356 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 2357 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L191555
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L191555:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191527:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191528:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191524[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191560
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPEER_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ENDP ; CTMapSvrModule::SendMW_GUILDPEER_ACK
PUBLIC	?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_GUILDKICKOUT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191607 DD	0ffffffffH
	DD	FLAT:$L191572
	DD	00H
	DD	FLAT:$L191573
$T191605 DD	019930520H
	DD	02H
	DD	FLAT:$T191607
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T191569 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDKICKOUT_ACK, COMDAT
; _this$ = ecx

; 2361 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2362 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191569[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191570
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191571
$L191570:
  00045	33 f6		 xor	 esi, esi
$L191571:

; 2363 : 	pMsg->SetID(MW_GUILDKICKOUT_ACK)
; 2364 : 		<< dwCharID
; 2365 : 		<< dwKey
; 2366 : 		<< strTarget;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 3a 20 00 00	 push	 8250			; 0000203aH
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2367 : 
; 2368 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 2369 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L191600
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L191600:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191572:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191573:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191569[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191605
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDKICKOUT_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_GUILDKICKOUT_ACK
PUBLIC	?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTMapSvrModule::SendMW_GUILDARTICLEADD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191683 DD	0ffffffffH
	DD	FLAT:$L191617
	DD	00H
	DD	FLAT:$L191618
	DD	01H
	DD	FLAT:$L191619
$T191681 DD	019930520H
	DD	03H
	DD	FLAT:$T191683
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T191614 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strTitle$ = 16						; size = 4
_strArticle$ = 20					; size = 4
?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDARTICLEADD_ACK, COMDAT
; _this$ = ecx

; 2516 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2517 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191614[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191615
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191616
$L191615:
  00046	33 f6		 xor	 esi, esi
$L191616:

; 2518 : 	pMsg->SetID(MW_GUILDARTICLEADD_ACK)
; 2519 : 		<< dwCharID
; 2520 : 		<< dwKEY
; 2521 : 		<< strTitle
; 2522 : 		<< strArticle;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00050	57		 push	 edi
  00051	8b 7c 24 2c	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00055	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00059	8b 5c 24 30	 mov	 ebx, DWORD PTR _strArticle$[esp+28]
  0005d	53		 push	 ebx
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	68 db 20 00 00	 push	 8411			; 000020dbH
  00066	8b ce		 mov	 ecx, esi
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2523 : 
; 2524 : 	m_world.Say(pMsg);

  00089	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  0008f	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00095	56		 push	 esi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2525 : }

  00098	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009b	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000a0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a3	83 ca ff	 or	 edx, -1
  000a6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000aa	4a		 dec	 edx
  000ab	85 d2		 test	 edx, edx
  000ad	5f		 pop	 edi
  000ae	7f 08		 jg	 SHORT $L191649
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	50		 push	 eax
  000b5	ff 52 04	 call	 DWORD PTR [edx+4]
$L191649:
  000b8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000bb	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c6	83 ca ff	 or	 edx, -1
  000c9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000cd	4a		 dec	 edx
  000ce	85 d2		 test	 edx, edx
  000d0	5e		 pop	 esi
  000d1	5d		 pop	 ebp
  000d2	5b		 pop	 ebx
  000d3	7f 08		 jg	 SHORT $L191676
  000d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	50		 push	 eax
  000da	ff 52 04	 call	 DWORD PTR [edx+4]
$L191676:
  000dd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e8	83 c4 10	 add	 esp, 16			; 00000010H
  000eb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191617:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191618:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191619:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191614[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191681
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEADD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTMapSvrModule::SendMW_GUILDARTICLEADD_ACK
PUBLIC	?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTMapSvrModule::SendMW_GUILDARTICLEUPDATE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191759 DD	0ffffffffH
	DD	FLAT:$L191693
	DD	00H
	DD	FLAT:$L191694
	DD	01H
	DD	FLAT:$L191695
$T191757 DD	019930520H
	DD	03H
	DD	FLAT:$T191759
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T191690 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
_strTitle$ = 20						; size = 4
_strArticle$ = 24					; size = 4
?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDARTICLEUPDATE_ACK, COMDAT
; _this$ = ecx

; 2543 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2544 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191690[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191691
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191692
$L191691:
  00046	33 f6		 xor	 esi, esi
$L191692:

; 2545 : 	pMsg->SetID(MW_GUILDARTICLEUPDATE_ACK)
; 2546 : 		<< dwCharID
; 2547 : 		<< dwKEY
; 2548 : 		<< dwID
; 2549 : 		<< strTitle
; 2550 : 		<< strArticle;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwID$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKEY$[esp+24]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 30	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00059	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005d	8b 5c 24 34	 mov	 ebx, DWORD PTR _strArticle$[esp+28]
  00061	53		 push	 ebx
  00062	57		 push	 edi
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 e1 20 00 00	 push	 8417			; 000020e1H
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2551 : 
; 2552 : 	m_world.Say(pMsg);

  00095	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0009b	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000a1	56		 push	 esi
  000a2	ff 10		 call	 DWORD PTR [eax]

; 2553 : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ac	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000af	83 ca ff	 or	 edx, -1
  000b2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b6	4a		 dec	 edx
  000b7	85 d2		 test	 edx, edx
  000b9	5f		 pop	 edi
  000ba	7f 08		 jg	 SHORT $L191725
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	50		 push	 eax
  000c1	ff 52 04	 call	 DWORD PTR [edx+4]
$L191725:
  000c4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cf	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d2	83 ca ff	 or	 edx, -1
  000d5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d9	4a		 dec	 edx
  000da	85 d2		 test	 edx, edx
  000dc	5e		 pop	 esi
  000dd	5d		 pop	 ebp
  000de	5b		 pop	 ebx
  000df	7f 08		 jg	 SHORT $L191752
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	50		 push	 eax
  000e6	ff 52 04	 call	 DWORD PTR [edx+4]
$L191752:
  000e9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
  000f7	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191693:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191694:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191695:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191690[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191757
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEUPDATE_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTMapSvrModule::SendMW_GUILDARTICLEUPDATE_ACK
PUBLIC	?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z ; CTMapSvrModule::SendMW_GUILDWANTEDADD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191835 DD	0ffffffffH
	DD	FLAT:$L191769
	DD	00H
	DD	FLAT:$L191770
	DD	01H
	DD	FLAT:$L191771
$T191833 DD	019930520H
	DD	03H
	DD	FLAT:$T191835
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z
_TEXT	SEGMENT
$T191766 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
_strTitle$ = 20						; size = 4
_strText$ = 24						; size = 4
_bMinLevel$ = 28					; size = 1
_bMaxLevel$ = 32					; size = 1
?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDWANTEDADD_ACK, COMDAT
; _this$ = ecx

; 2575 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2576 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191766[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191767
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191768
$L191767:
  00046	33 f6		 xor	 esi, esi
$L191768:

; 2577 : 	pMsg->SetID(MW_GUILDWANTEDADD_ACK)
; 2578 : 		<< dwCharID
; 2579 : 		<< dwKEY
; 2580 : 		<< dwID
; 2581 : 		<< strTitle
; 2582 : 		<< strText
; 2583 : 		<< bMinLevel
; 2584 : 		<< bMaxLevel;

  00048	8b 44 24 38	 mov	 eax, DWORD PTR _bMaxLevel$[esp+24]
  0004c	8b 4c 24 34	 mov	 ecx, DWORD PTR _bMinLevel$[esp+24]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _dwID$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 30	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+36]
  00063	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  00067	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strText$[esp+36]
  0006b	53		 push	 ebx
  0006c	57		 push	 edi
  0006d	52		 push	 edx
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	68 e3 20 00 00	 push	 8419			; 000020e3H
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2585 : 
; 2586 : 	m_world.Say(pMsg);

  000ad	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000b3	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000b9	56		 push	 esi
  000ba	ff 12		 call	 DWORD PTR [edx]

; 2587 : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000c4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c7	83 ca ff	 or	 edx, -1
  000ca	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ce	4a		 dec	 edx
  000cf	85 d2		 test	 edx, edx
  000d1	5f		 pop	 edi
  000d2	7f 08		 jg	 SHORT $L191802
  000d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d8	50		 push	 eax
  000d9	ff 52 04	 call	 DWORD PTR [edx+4]
$L191802:
  000dc	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000df	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000e7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ea	83 ca ff	 or	 edx, -1
  000ed	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f1	4a		 dec	 edx
  000f2	85 d2		 test	 edx, edx
  000f4	5e		 pop	 esi
  000f5	5d		 pop	 ebp
  000f6	5b		 pop	 ebx
  000f7	7f 08		 jg	 SHORT $L191829
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fd	50		 push	 eax
  000fe	ff 52 04	 call	 DWORD PTR [edx+4]
$L191829:
  00101	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00105	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010c	83 c4 10	 add	 esp, 16			; 00000010H
  0010f	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191769:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strText$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191770:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191771:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191766[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191833
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE@Z ENDP ; CTMapSvrModule::SendMW_GUILDWANTEDADD_ACK
PUBLIC	?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDADD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191911 DD	0ffffffffH
	DD	FLAT:$L191845
	DD	00H
	DD	FLAT:$L191846
	DD	01H
	DD	FLAT:$L191847
$T191909 DD	019930520H
	DD	03H
	DD	FLAT:$T191911
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z
_TEXT	SEGMENT
$T191842 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwID$ = 16						; size = 4
_strTitle$ = 20						; size = 4
_strText$ = 24						; size = 4
_bDay$ = 28						; size = 1
_bMinLevel$ = 32					; size = 1
_bMaxLevel$ = 36					; size = 1
_dwPoint$ = 40						; size = 4
_dwGold$ = 44						; size = 4
_dwSilver$ = 48						; size = 4
_dwCooper$ = 52						; size = 4
?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDADD_ACK, COMDAT
; _this$ = ecx

; 2668 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 2669 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T191842[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L191843
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L191844
$L191843:
  00046	33 f6		 xor	 esi, esi
$L191844:

; 2670 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDADD_ACK)
; 2671 : 		<< dwCharID
; 2672 : 		<< dwKEY
; 2673 : 		<< dwID
; 2674 : 		<< strTitle
; 2675 : 		<< strText
; 2676 : 		<< bDay
; 2677 : 		<< bMinLevel
; 2678 : 		<< bMaxLevel
; 2679 : 		<< dwPoint
; 2680 : 		<< dwGold
; 2681 : 		<< dwSilver
; 2682 : 		<< dwCooper;

  00048	8b 44 24 4c	 mov	 eax, DWORD PTR _dwCooper$[esp+24]
  0004c	8b 4c 24 48	 mov	 ecx, DWORD PTR _dwSilver$[esp+24]
  00050	8b 54 24 44	 mov	 edx, DWORD PTR _dwGold$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 30	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 48	 mov	 eax, DWORD PTR _dwPoint$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 48	 mov	 ecx, DWORD PTR _bMaxLevel$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 48	 mov	 edx, DWORD PTR _bMinLevel$[esp+40]
  00068	50		 push	 eax
  00069	8b 44 24 48	 mov	 eax, DWORD PTR _bDay$[esp+44]
  0006d	51		 push	 ecx
  0006e	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwID$[esp+48]
  00072	52		 push	 edx
  00073	8b 54 24 40	 mov	 edx, DWORD PTR _dwKEY$[esp+52]
  00077	50		 push	 eax
  00078	8b 44 24 40	 mov	 eax, DWORD PTR _dwCharID$[esp+56]
  0007c	88 5c 24 38	 mov	 BYTE PTR __$EHRec$[esp+68], bl
  00080	8b 5c 24 50	 mov	 ebx, DWORD PTR _strText$[esp+56]
  00084	53		 push	 ebx
  00085	57		 push	 edi
  00086	51		 push	 ecx
  00087	52		 push	 edx
  00088	50		 push	 eax
  00089	68 f1 20 00 00	 push	 8433			; 000020f1H
  0008e	8b ce		 mov	 ecx, esi
  00090	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b1	8b c8		 mov	 ecx, eax
  000b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b8	8b c8		 mov	 ecx, eax
  000ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000db	8b c8		 mov	 ecx, eax
  000dd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e2	8b c8		 mov	 ecx, eax
  000e4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2683 : 
; 2684 : 	m_world.Say(pMsg);

  000e9	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000ef	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000f5	56		 push	 esi
  000f6	ff 12		 call	 DWORD PTR [edx]

; 2685 : }

  000f8	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000fb	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  00100	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00103	83 ca ff	 or	 edx, -1
  00106	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010a	4a		 dec	 edx
  0010b	85 d2		 test	 edx, edx
  0010d	5f		 pop	 edi
  0010e	7f 08		 jg	 SHORT $L191880
  00110	8b 08		 mov	 ecx, DWORD PTR [eax]
  00112	8b 11		 mov	 edx, DWORD PTR [ecx]
  00114	50		 push	 eax
  00115	ff 52 04	 call	 DWORD PTR [edx+4]
$L191880:
  00118	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0011b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00123	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00126	83 ca ff	 or	 edx, -1
  00129	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0012d	4a		 dec	 edx
  0012e	85 d2		 test	 edx, edx
  00130	5e		 pop	 esi
  00131	5d		 pop	 ebp
  00132	5b		 pop	 ebx
  00133	7f 08		 jg	 SHORT $L191907
  00135	8b 08		 mov	 ecx, DWORD PTR [eax]
  00137	8b 11		 mov	 edx, DWORD PTR [ecx]
  00139	50		 push	 eax
  0013a	ff 52 04	 call	 DWORD PTR [edx+4]
$L191907:
  0013d	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00141	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00148	83 c4 10	 add	 esp, 16			; 00000010H
  0014b	c2 30 00	 ret	 48			; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191845:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strText$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191846:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191847:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T191842[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191909
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDADD_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEKKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSWANTEDADD_ACK
PUBLIC	?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSINVITE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T191956 DD	0ffffffffH
	DD	FLAT:$L191921
	DD	00H
	DD	FLAT:$L191922
$T191954 DD	019930520H
	DD	02H
	DD	FLAT:$T191956
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
_TEXT	SEGMENT
$T191918 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_bDay$ = 20						; size = 1
_dwPoint$ = 24						; size = 4
_dwGold$ = 28						; size = 4
_dwSilver$ = 32						; size = 4
_dwCooper$ = 36						; size = 4
?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSINVITE_ACK, COMDAT
; _this$ = ecx

; 2776 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2777 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191918[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191919
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191920
$L191919:
  00045	33 f6		 xor	 esi, esi
$L191920:

; 2778 : 	pMsg->SetID(MW_GUILDTACTICSINVITE_ACK)
; 2779 : 		<< dwCharID
; 2780 : 		<< dwKEY
; 2781 : 		<< strName
; 2782 : 		<< bDay
; 2783 : 		<< dwPoint
; 2784 : 		<< dwGold
; 2785 : 		<< dwSilver
; 2786 : 		<< dwCooper;

  00047	8b 44 24 3c	 mov	 eax, DWORD PTR _dwCooper$[esp+24]
  0004b	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwSilver$[esp+24]
  0004f	8b 54 24 34	 mov	 edx, DWORD PTR _dwGold$[esp+24]
  00053	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  00057	50		 push	 eax
  00058	8b 44 24 34	 mov	 eax, DWORD PTR _dwPoint$[esp+28]
  0005c	51		 push	 ecx
  0005d	8b 4c 24 34	 mov	 ecx, DWORD PTR _bDay$[esp+32]
  00061	52		 push	 edx
  00062	8b 54 24 30	 mov	 edx, DWORD PTR _dwKEY$[esp+36]
  00066	50		 push	 eax
  00067	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+40]
  0006b	51		 push	 ecx
  0006c	57		 push	 edi
  0006d	52		 push	 edx
  0006e	50		 push	 eax
  0006f	68 36 21 00 00	 push	 8502			; 00002136H
  00074	8b ce		 mov	 ecx, esi
  00076	c6 44 24 3c 00	 mov	 BYTE PTR __$EHRec$[esp+72], 0
  0007b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000aa	8b c8		 mov	 ecx, eax
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b1	8b c8		 mov	 ecx, eax
  000b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2787 : 
; 2788 : 	m_world.Say(pMsg);

  000b8	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000be	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000c4	56		 push	 esi
  000c5	ff 12		 call	 DWORD PTR [edx]

; 2789 : }

  000c7	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000ca	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d5	83 ca ff	 or	 edx, -1
  000d8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000dc	4a		 dec	 edx
  000dd	85 d2		 test	 edx, edx
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5d		 pop	 ebp
  000e2	7f 08		 jg	 SHORT $L191952
  000e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e8	50		 push	 eax
  000e9	ff 52 04	 call	 DWORD PTR [edx+4]
$L191952:
  000ec	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f7	83 c4 10	 add	 esp, 16			; 00000010H
  000fa	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191921:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191922:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191918[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191954
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSINVITE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSINVITE_ACK
PUBLIC	?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z ; CTMapSvrModule::SendMW_GUILDTACTICSANSWER_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192001 DD	0ffffffffH
	DD	FLAT:$L191966
	DD	00H
	DD	FLAT:$L191967
$T191999 DD	019930520H
	DD	02H
	DD	FLAT:$T192001
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
_TEXT	SEGMENT
$T191963 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bAnswer$ = 16						; size = 1
_strName$ = 20						; size = 4
_bDay$ = 24						; size = 1
_dwPoint$ = 28						; size = 4
_dwGold$ = 32						; size = 4
_dwSilver$ = 36						; size = 4
_dwCooper$ = 40						; size = 4
?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDTACTICSANSWER_ACK, COMDAT
; _this$ = ecx

; 2799 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2800 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T191963[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L191964
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L191965
$L191964:
  00045	33 f6		 xor	 esi, esi
$L191965:

; 2801 : 	pMsg->SetID(MW_GUILDTACTICSANSWER_ACK)
; 2802 : 		<< dwCharID
; 2803 : 		<< dwKEY
; 2804 : 		<< bAnswer
; 2805 : 		<< strName
; 2806 : 		<< bDay
; 2807 : 		<< dwPoint
; 2808 : 		<< dwGold
; 2809 : 		<< dwSilver
; 2810 : 		<< dwCooper;

  00047	8b 44 24 40	 mov	 eax, DWORD PTR _dwCooper$[esp+24]
  0004b	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dwSilver$[esp+24]
  0004f	8b 54 24 38	 mov	 edx, DWORD PTR _dwGold$[esp+24]
  00053	8b 7c 24 2c	 mov	 edi, DWORD PTR _strName$[esp+24]
  00057	50		 push	 eax
  00058	8b 44 24 38	 mov	 eax, DWORD PTR _dwPoint$[esp+28]
  0005c	51		 push	 ecx
  0005d	8b 4c 24 38	 mov	 ecx, DWORD PTR _bDay$[esp+32]
  00061	52		 push	 edx
  00062	8b 54 24 34	 mov	 edx, DWORD PTR _bAnswer$[esp+36]
  00066	50		 push	 eax
  00067	8b 44 24 34	 mov	 eax, DWORD PTR _dwKEY$[esp+40]
  0006b	51		 push	 ecx
  0006c	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwCharID$[esp+44]
  00070	57		 push	 edi
  00071	52		 push	 edx
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	68 38 21 00 00	 push	 8504			; 00002138H
  00079	8b ce		 mov	 ecx, esi
  0007b	c6 44 24 40 00	 mov	 BYTE PTR __$EHRec$[esp+76], 0
  00080	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2811 : 
; 2812 : 	m_world.Say(pMsg);

  000c4	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000ca	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000d0	56		 push	 esi
  000d1	ff 12		 call	 DWORD PTR [edx]

; 2813 : }

  000d3	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000d6	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000de	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e1	83 ca ff	 or	 edx, -1
  000e4	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e8	4a		 dec	 edx
  000e9	85 d2		 test	 edx, edx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5d		 pop	 ebp
  000ee	7f 08		 jg	 SHORT $L191997
  000f0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	50		 push	 eax
  000f5	ff 52 04	 call	 DWORD PTR [edx+4]
$L191997:
  000f8	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000fc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00103	83 c4 10	 add	 esp, 16			; 00000010H
  00106	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191966:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L191967:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T191963[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191999
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSANSWER_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EKKKK@Z ENDP ; CTMapSvrModule::SendMW_GUILDTACTICSANSWER_ACK
PUBLIC	?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z ; CTMapSvrModule::SendMW_CHAT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192108 DD	0ffffffffH
	DD	FLAT:$L192011
	DD	00H
	DD	FLAT:$L192012
	DD	01H
	DD	FLAT:$L192013
	DD	02H
	DD	FLAT:$L192014
$T192106 DD	019930520H
	DD	04H
	DD	FLAT:$T192108
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z
_TEXT	SEGMENT
$T192008 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bChannel$ = 8						; size = 1
_dwSender$ = 12						; size = 4
_dwSenderKEY$ = 16					; size = 4
_strSenderName$ = 20					; size = 4
_bType$ = 24						; size = 1
_bGroup$ = 28						; size = 1
_dwTarget$ = 32						; size = 4
_strName$ = 36						; size = 4
_strTalk$ = 40						; size = 4
?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z PROC NEAR ; CTMapSvrModule::SendMW_CHAT_ACK, COMDAT
; _this$ = ecx

; 2835 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 02 00 00 00	 mov	 ebx, 2

; 2836 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192008[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 03	 mov	 BYTE PTR __$EHRec$[esp+36], 3
  00039	74 0b		 je	 SHORT $L192009
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192010
$L192009:
  00046	33 f6		 xor	 esi, esi
$L192010:

; 2837 : 	pMsg->SetID(MW_CHAT_ACK)
; 2838 : 		<< bChannel
; 2839 : 		<< dwSender
; 2840 : 		<< dwSenderKEY
; 2841 : 		<< strSenderName
; 2842 : 		<< bType
; 2843 : 		<< bGroup
; 2844 : 		<< dwTarget
; 2845 : 		<< strName
; 2846 : 		<< strTalk;

  00048	8b 44 24 40	 mov	 eax, DWORD PTR _strTalk$[esp+24]
  0004c	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwTarget$[esp+24]
  00050	8b 54 24 34	 mov	 edx, DWORD PTR _bGroup$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 30	 mov	 edi, DWORD PTR _strSenderName$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 38	 mov	 eax, DWORD PTR _bType$[esp+32]
  0005e	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00062	8b 5c 24 44	 mov	 ebx, DWORD PTR _strName$[esp+32]
  00066	53		 push	 ebx
  00067	51		 push	 ecx
  00068	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwSenderKEY$[esp+40]
  0006c	52		 push	 edx
  0006d	8b 54 24 38	 mov	 edx, DWORD PTR _dwSender$[esp+44]
  00071	50		 push	 eax
  00072	8b 44 24 38	 mov	 eax, DWORD PTR _bChannel$[esp+48]
  00076	57		 push	 edi
  00077	51		 push	 ecx
  00078	52		 push	 edx
  00079	50		 push	 eax
  0007a	68 3e 20 00 00	 push	 8254			; 0000203eH
  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b0	8b c8		 mov	 ecx, eax
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2847 : 
; 2848 : 	m_world.Say(pMsg);

  000c5	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000cb	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000d1	56		 push	 esi
  000d2	ff 12		 call	 DWORD PTR [edx]

; 2849 : }

  000d4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000d7	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  000dc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000df	83 ca ff	 or	 edx, -1
  000e2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e6	4a		 dec	 edx
  000e7	85 d2		 test	 edx, edx
  000e9	5f		 pop	 edi
  000ea	7f 08		 jg	 SHORT $L192050
  000ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f0	50		 push	 eax
  000f1	ff 52 04	 call	 DWORD PTR [edx+4]
$L192050:
  000f4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000f7	c6 44 24 18 00	 mov	 BYTE PTR __$EHRec$[esp+36], 0
  000fc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ff	83 ca ff	 or	 edx, -1
  00102	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00106	4a		 dec	 edx
  00107	85 d2		 test	 edx, edx
  00109	5e		 pop	 esi
  0010a	5d		 pop	 ebp
  0010b	5b		 pop	 ebx
  0010c	7f 08		 jg	 SHORT $L192077
  0010e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00110	8b 11		 mov	 edx, DWORD PTR [ecx]
  00112	50		 push	 eax
  00113	ff 52 04	 call	 DWORD PTR [edx+4]
$L192077:
  00116	8b 44 24 34	 mov	 eax, DWORD PTR _strTalk$[esp+12]
  0011a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0011d	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00125	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00128	83 ca ff	 or	 edx, -1
  0012b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0012f	4a		 dec	 edx
  00130	85 d2		 test	 edx, edx
  00132	7f 08		 jg	 SHORT $L192104
  00134	8b 08		 mov	 ecx, DWORD PTR [eax]
  00136	8b 11		 mov	 edx, DWORD PTR [ecx]
  00138	50		 push	 eax
  00139	ff 52 04	 call	 DWORD PTR [edx+4]
$L192104:
  0013c	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00140	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00147	83 c4 10	 add	 esp, 16			; 00000010H
  0014a	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192011:
  00000	8d 4d 24	 lea	 ecx, DWORD PTR _strTalk$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192012:
  00008	8d 4d 20	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192013:
  00010	8d 4d 10	 lea	 ecx, DWORD PTR _strSenderName$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192014:
  00018	8b 45 f0	 mov	 eax, DWORD PTR $T192008[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
__ehhandler$?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z:
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192106
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHAT_ACK@CTMapSvrModule@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEK00@Z ENDP ; CTMapSvrModule::SendMW_CHAT_ACK
PUBLIC	?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_PROTECTEDCHECK_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192153 DD	0ffffffffH
	DD	FLAT:$L192118
	DD	00H
	DD	FLAT:$L192119
$T192151 DD	019930520H
	DD	02H
	DD	FLAT:$T192153
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192115 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bConnect$ = 16						; size = 1
_strProtected$ = 20					; size = 4
?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_PROTECTEDCHECK_ACK, COMDAT
; _this$ = ecx

; 2966 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2967 :     CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192115[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192116
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192117
$L192116:
  00045	33 f6		 xor	 esi, esi
$L192117:

; 2968 : 	pMsg->SetID(MW_PROTECTEDCHECK_ACK)
; 2969 : 		<< dwCharID
; 2970 : 		<< dwKey
; 2971 : 		<< bConnect
; 2972 : 		<< strProtected;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strProtected$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _bConnect$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 8b 20 00 00	 push	 8331			; 0000208bH
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2973 : 
; 2974 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 2975 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192149
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192149:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192118:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strProtected$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192119:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192115[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192151
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PROTECTEDCHECK_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_PROTECTEDCHECK_ACK
PUBLIC	?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_FRIENDPROTECTEDASK_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192198 DD	0ffffffffH
	DD	FLAT:$L192163
	DD	00H
	DD	FLAT:$L192164
$T192196 DD	019930520H
	DD	02H
	DD	FLAT:$T192198
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192160 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strInviter$ = 16					; size = 4
?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDPROTECTEDASK_ACK, COMDAT
; _this$ = ecx

; 2979 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2980 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192160[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192161
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192162
$L192161:
  00045	33 f6		 xor	 esi, esi
$L192162:

; 2981 : 	pMsg->SetID(MW_FRIENDPROTECTEDASK_ACK)
; 2982 : 		<< dwCharID
; 2983 : 		<< dwKey
; 2984 : 		<< strInviter;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strInviter$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 8d 20 00 00	 push	 8333			; 0000208dH
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2985 : 
; 2986 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 2987 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L192194
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L192194:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192163:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strInviter$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192164:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192160[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192196
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDPROTECTEDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_FRIENDPROTECTEDASK_ACK
PUBLIC	?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_FRIENDASK_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192243 DD	0ffffffffH
	DD	FLAT:$L192208
	DD	00H
	DD	FLAT:$L192209
$T192241 DD	019930520H
	DD	02H
	DD	FLAT:$T192243
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192205 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDASK_ACK, COMDAT
; _this$ = ecx

; 2991 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 2992 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192205[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192206
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192207
$L192206:
  00045	33 f6		 xor	 esi, esi
$L192207:

; 2993 : 	pMsg->SetID(MW_FRIENDASK_ACK)
; 2994 : 		<< dwCharID
; 2995 : 		<< dwKey
; 2996 : 		<< strName;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 51 20 00 00	 push	 8273			; 00002051H
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2997 : 
; 2998 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 2999 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L192239
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L192239:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192208:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192209:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192205[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192241
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_FRIENDASK_ACK
PUBLIC	?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTMapSvrModule::SendMW_FRIENDREPLY_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192288 DD	0ffffffffH
	DD	FLAT:$L192253
	DD	00H
	DD	FLAT:$L192254
$T192286 DD	019930520H
	DD	02H
	DD	FLAT:$T192288
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT
$T192250 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
_bReply$ = 20						; size = 1
?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDREPLY_ACK, COMDAT
; _this$ = ecx

; 3004 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3005 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192250[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192251
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192252
$L192251:
  00045	33 f6		 xor	 esi, esi
$L192252:

; 3006 : 	pMsg->SetID(MW_FRIENDREPLY_ACK)
; 3007 : 		<< dwCharID
; 3008 : 		<< dwKey
; 3009 : 		<< strName
; 3010 : 		<< bReply;

  00047	8b 44 24 2c	 mov	 eax, DWORD PTR _bReply$[esp+24]
  0004b	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	50		 push	 eax
  00058	57		 push	 edi
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 53 20 00 00	 push	 8275			; 00002053H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3011 : 
; 3012 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 3013 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192284
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192284:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192253:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192254:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192250[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192286
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDREPLY_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ENDP ; CTMapSvrModule::SendMW_FRIENDREPLY_ACK
PUBLIC	?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_FRIENDGROUPMAKE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192333 DD	0ffffffffH
	DD	FLAT:$L192298
	DD	00H
	DD	FLAT:$L192299
$T192331 DD	019930520H
	DD	02H
	DD	FLAT:$T192333
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192295 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bGroup$ = 16						; size = 1
_strName$ = 20						; size = 4
?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDGROUPMAKE_ACK, COMDAT
; _this$ = ecx

; 3030 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3031 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192295[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192296
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192297
$L192296:
  00045	33 f6		 xor	 esi, esi
$L192297:

; 3032 : 	pMsg->SetID(MW_FRIENDGROUPMAKE_ACK)
; 3033 : 		<< dwCharID
; 3034 : 		<< dwKey
; 3035 : 		<< bGroup
; 3036 : 		<< strName;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _bGroup$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 5a 20 00 00	 push	 8282			; 0000205aH
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3037 : 
; 3038 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 3039 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192328
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192328:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192298:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192299:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192295[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192331
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPMAKE_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_FRIENDGROUPMAKE_ACK
PUBLIC	?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_FRIENDGROUPNAME_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192378 DD	0ffffffffH
	DD	FLAT:$L192343
	DD	00H
	DD	FLAT:$L192344
$T192376 DD	019930520H
	DD	02H
	DD	FLAT:$T192378
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192340 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bGroup$ = 16						; size = 1
_strName$ = 20						; size = 4
?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_FRIENDGROUPNAME_ACK, COMDAT
; _this$ = ecx

; 3070 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3071 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192340[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192341
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192342
$L192341:
  00045	33 f6		 xor	 esi, esi
$L192342:

; 3072 : 	pMsg->SetID(MW_FRIENDGROUPNAME_ACK)
; 3073 : 		<< dwCharID
; 3074 : 		<< dwKey
; 3075 : 		<< bGroup
; 3076 : 		<< strName;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _bGroup$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 60 20 00 00	 push	 8288			; 00002060H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3077 : 
; 3078 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 3079 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192373
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192373:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192343:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192344:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192340[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192376
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPNAME_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_FRIENDGROUPNAME_ACK
PUBLIC	?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_CORPSASK_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192423 DD	0ffffffffH
	DD	FLAT:$L192388
	DD	00H
	DD	FLAT:$L192389
$T192421 DD	019930520H
	DD	02H
	DD	FLAT:$T192423
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192385 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTargetName$ = 16					; size = 4
?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CORPSASK_ACK, COMDAT
; _this$ = ecx

; 3269 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3270 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192385[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192386
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192387
$L192386:
  00045	33 f6		 xor	 esi, esi
$L192387:

; 3271 : 	pMsg->SetID(MW_CORPSASK_ACK)
; 3272 : 		<< dwCharID
; 3273 : 		<< dwKey
; 3274 : 		<< strTargetName;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _strTargetName$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 6c 20 00 00	 push	 8300			; 0000206cH
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3275 : 
; 3276 : 	m_world.Say(pMsg);

  0007c	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00082	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00088	56		 push	 esi
  00089	ff 12		 call	 DWORD PTR [edx]

; 3277 : }

  0008b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008e	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00096	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00099	83 ca ff	 or	 edx, -1
  0009c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a0	4a		 dec	 edx
  000a1	85 d2		 test	 edx, edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5d		 pop	 ebp
  000a6	7f 08		 jg	 SHORT $L192418
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	50		 push	 eax
  000ad	ff 52 04	 call	 DWORD PTR [edx+4]
$L192418:
  000b0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 10	 add	 esp, 16			; 00000010H
  000be	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192388:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTargetName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192389:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192385[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192421
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSASK_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_CORPSASK_ACK
PUBLIC	?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_CORPSREPLY_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192468 DD	0ffffffffH
	DD	FLAT:$L192433
	DD	00H
	DD	FLAT:$L192434
$T192466 DD	019930520H
	DD	02H
	DD	FLAT:$T192468
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192430 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bReply$ = 16						; size = 1
_strReqName$ = 20					; size = 4
?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CORPSREPLY_ACK, COMDAT
; _this$ = ecx

; 3282 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3283 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192430[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192431
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192432
$L192431:
  00045	33 f6		 xor	 esi, esi
$L192432:

; 3284 : 	pMsg->SetID(MW_CORPSREPLY_ACK)
; 3285 : 		<< dwCharID
; 3286 : 		<< dwKey
; 3287 : 		<< bReply
; 3288 : 		<< strReqName;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strReqName$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _bReply$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 6e 20 00 00	 push	 8302			; 0000206eH
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3289 : 
; 3290 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 3291 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192463
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192463:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192433:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strReqName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192434:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192430[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192466
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSREPLY_ACK@CTMapSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_CORPSREPLY_ACK
PUBLIC	?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z ; CTMapSvrModule::SendMW_PARTYMOVE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192544 DD	0ffffffffH
	DD	FLAT:$L192478
	DD	00H
	DD	FLAT:$L192479
	DD	01H
	DD	FLAT:$L192480
$T192542 DD	019930520H
	DD	03H
	DD	FLAT:$T192544
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z
_TEXT	SEGMENT
$T192475 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTargetName$ = 16					; size = 4
_strDestName$ = 20					; size = 4
_wDestParty$ = 24					; size = 2
?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYMOVE_ACK, COMDAT
; _this$ = ecx

; 3438 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 3439 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192475[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L192476
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192477
$L192476:
  00046	33 f6		 xor	 esi, esi
$L192477:

; 3440 : 	pMsg->SetID(MW_PARTYMOVE_ACK)
; 3441 : 		<< dwCharID
; 3442 : 		<< dwKey
; 3443 : 		<< strTargetName
; 3444 : 		<< strDestName
; 3445 : 		<< wDestParty;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _wDestParty$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 2c	 mov	 edi, DWORD PTR _strTargetName$[esp+28]
  00059	50		 push	 eax
  0005a	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005e	8b 5c 24 34	 mov	 ebx, DWORD PTR _strDestName$[esp+32]
  00062	53		 push	 ebx
  00063	57		 push	 edi
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 a0 20 00 00	 push	 8352			; 000020a0H
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3446 : 
; 3447 : 	m_world.Say(pMsg);

  00095	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0009b	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000a1	56		 push	 esi
  000a2	ff 10		 call	 DWORD PTR [eax]

; 3448 : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ac	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000af	83 ca ff	 or	 edx, -1
  000b2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b6	4a		 dec	 edx
  000b7	85 d2		 test	 edx, edx
  000b9	5f		 pop	 edi
  000ba	7f 08		 jg	 SHORT $L192512
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	50		 push	 eax
  000c1	ff 52 04	 call	 DWORD PTR [edx+4]
$L192512:
  000c4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cf	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d2	83 ca ff	 or	 edx, -1
  000d5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d9	4a		 dec	 edx
  000da	85 d2		 test	 edx, edx
  000dc	5e		 pop	 esi
  000dd	5d		 pop	 ebp
  000de	5b		 pop	 ebx
  000df	7f 08		 jg	 SHORT $L192537
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	50		 push	 eax
  000e6	ff 52 04	 call	 DWORD PTR [edx+4]
$L192537:
  000e9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
  000f7	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192478:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strDestName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192479:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTargetName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192480:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T192475[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192542
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMOVE_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0G@Z ENDP ; CTMapSvrModule::SendMW_PARTYMOVE_ACK
PUBLIC	?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_TMSSEND_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192589 DD	0ffffffffH
	DD	FLAT:$L192554
	DD	00H
	DD	FLAT:$L192555
$T192587 DD	019930520H
	DD	02H
	DD	FLAT:$T192589
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192551 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTMS$ = 16						; size = 4
_strMessage$ = 20					; size = 4
?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_TMSSEND_ACK, COMDAT
; _this$ = ecx

; 3454 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3455 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192551[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192552
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192553
$L192552:
  00045	33 f6		 xor	 esi, esi
$L192553:

; 3456 : 	pMsg->SetID(MW_TMSSEND_ACK)
; 3457 : 		<< dwCharID
; 3458 : 		<< dwKey
; 3459 : 		<< dwTMS
; 3460 : 		<< strMessage;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strMessage$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _dwTMS$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 76 20 00 00	 push	 8310			; 00002076H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3461 : 
; 3462 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 3463 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L192582
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192582:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192554:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192555:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192551[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192587
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSSEND_ACK@CTMapSvrModule@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_TMSSEND_ACK
PUBLIC	?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_TMSINVITEASK_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192634 DD	0ffffffffH
	DD	FLAT:$L192599
	DD	00H
	DD	FLAT:$L192600
$T192632 DD	019930520H
	DD	02H
	DD	FLAT:$T192634
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T192596 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTargetID$ = 16					; size = 4
_dwTargetKEY$ = 20					; size = 4
_bResult$ = 24						; size = 1
_dwTMS$ = 28						; size = 4
_strMessage$ = 32					; size = 4
?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_TMSINVITEASK_ACK, COMDAT
; _this$ = ecx

; 3471 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3472 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192596[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192597
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192598
$L192597:
  00045	33 f6		 xor	 esi, esi
$L192598:

; 3473 : 	pMsg->SetID(MW_TMSINVITEASK_ACK)
; 3474 : 		<< dwCharID
; 3475 : 		<< dwKEY
; 3476 : 		<< dwTargetID
; 3477 : 		<< dwTargetKEY
; 3478 : 		<< bResult
; 3479 : 		<< dwTMS
; 3480 : 		<< strMessage;

  00047	8b 7c 24 38	 mov	 edi, DWORD PTR _strMessage$[esp+24]
  0004b	8b 44 24 34	 mov	 eax, DWORD PTR _dwTMS$[esp+24]
  0004f	8b 4c 24 30	 mov	 ecx, DWORD PTR _bResult$[esp+24]
  00053	8b 54 24 2c	 mov	 edx, DWORD PTR _dwTargetKEY$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	8b 44 24 30	 mov	 eax, DWORD PTR _dwTargetID$[esp+32]
  0005d	51		 push	 ecx
  0005e	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwKEY$[esp+36]
  00062	52		 push	 edx
  00063	8b 54 24 30	 mov	 edx, DWORD PTR _dwCharID$[esp+40]
  00067	50		 push	 eax
  00068	51		 push	 ecx
  00069	52		 push	 edx
  0006a	68 cd 20 00 00	 push	 8397			; 000020cdH
  0006f	8b ce		 mov	 ecx, esi
  00071	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3481 : 
; 3482 : 	m_world.Say(pMsg);

  000ac	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  000b2	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000b8	56		 push	 esi
  000b9	ff 10		 call	 DWORD PTR [eax]

; 3483 : }

  000bb	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000be	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c6	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c9	83 ca ff	 or	 edx, -1
  000cc	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d0	4a		 dec	 edx
  000d1	85 d2		 test	 edx, edx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5d		 pop	 ebp
  000d6	7f 08		 jg	 SHORT $L192627
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	50		 push	 eax
  000dd	ff 52 04	 call	 DWORD PTR [edx+4]
$L192627:
  000e0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000eb	83 c4 10	 add	 esp, 16			; 00000010H
  000ee	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192599:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192600:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192596[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192632
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSINVITEASK_ACK@CTMapSvrModule@@QAEXKKKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_TMSINVITEASK_ACK
PUBLIC	?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z ; CTMapSvrModule::SendMW_DEALITEMERROR_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192710 DD	0ffffffffH
	DD	FLAT:$L192644
	DD	00H
	DD	FLAT:$L192645
	DD	01H
	DD	FLAT:$L192646
$T192708 DD	019930520H
	DD	03H
	DD	FLAT:$T192710
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
_TEXT	SEGMENT
$T192641 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strTarget$ = 8						; size = 4
_strErrorChar$ = 12					; size = 4
_bError$ = 16						; size = 1
?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z PROC NEAR ; CTMapSvrModule::SendMW_DEALITEMERROR_ACK, COMDAT
; _this$ = ecx

; 3552 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 3553 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192641[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L192642
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192643
$L192642:
  00046	33 f6		 xor	 esi, esi
$L192643:

; 3554 : 	pMsg->SetID(MW_DEALITEMERROR_ACK)
; 3555 : 		<< strTarget
; 3556 : 		<< strErrorChar
; 3557 : 		<< bError;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _bError$[esp+24]
  0004c	57		 push	 edi
  0004d	8b 7c 24 24	 mov	 edi, DWORD PTR _strTarget$[esp+28]
  00051	50		 push	 eax
  00052	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00056	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strErrorChar$[esp+32]
  0005a	53		 push	 ebx
  0005b	57		 push	 edi
  0005c	68 ae 20 00 00	 push	 8366			; 000020aeH
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3558 : 
; 3559 : 	m_world.Say(pMsg);

  0007d	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00083	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00089	56		 push	 esi
  0008a	ff 12		 call	 DWORD PTR [edx]

; 3560 : }

  0008c	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0008f	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  00094	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00097	83 ca ff	 or	 edx, -1
  0009a	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0009e	4a		 dec	 edx
  0009f	85 d2		 test	 edx, edx
  000a1	5f		 pop	 edi
  000a2	7f 08		 jg	 SHORT $L192676
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a8	50		 push	 eax
  000a9	ff 52 04	 call	 DWORD PTR [edx+4]
$L192676:
  000ac	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000af	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000b7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ba	83 ca ff	 or	 edx, -1
  000bd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000c1	4a		 dec	 edx
  000c2	85 d2		 test	 edx, edx
  000c4	5e		 pop	 esi
  000c5	5d		 pop	 ebp
  000c6	5b		 pop	 ebx
  000c7	7f 08		 jg	 SHORT $L192703
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cd	50		 push	 eax
  000ce	ff 52 04	 call	 DWORD PTR [edx+4]
$L192703:
  000d1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000dc	83 c4 10	 add	 esp, 16			; 00000010H
  000df	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192644:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strErrorChar$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192645:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192646:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T192641[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192708
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DEALITEMERROR_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z ENDP ; CTMapSvrModule::SendMW_DEALITEMERROR_ACK
PUBLIC	?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z ; CTMapSvrModule::SendCT_USERMOVE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192755 DD	0ffffffffH
	DD	FLAT:$L192720
	DD	00H
	DD	FLAT:$L192721
$T192753 DD	019930520H
	DD	02H
	DD	FLAT:$T192755
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z
_TEXT	SEGMENT
$T192717 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strName$ = 8						; size = 4
_bChannel$ = 12						; size = 1
_wMapID$ = 16						; size = 2
_fPosX$ = 20						; size = 4
_fPosY$ = 24						; size = 4
_fPosZ$ = 28						; size = 4
_wPartyID$ = 32						; size = 2
?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z PROC NEAR ; CTMapSvrModule::SendCT_USERMOVE_ACK, COMDAT
; _this$ = ecx

; 3615 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3616 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T192717[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L192718
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L192719
$L192718:
  00045	33 f6		 xor	 esi, esi
$L192719:

; 3617 : 	pMsg->SetID(CT_USERMOVE_ACK)
; 3618 : 		<< strName
; 3619 : 		<< bChannel
; 3620 : 		<< wMapID
; 3621 : 		<< fPosX
; 3622 : 		<< fPosY
; 3623 : 		<< fPosZ
; 3624 : 		<< wPartyID;

  00047	8b 44 24 38	 mov	 eax, DWORD PTR _wPartyID$[esp+24]
  0004b	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosZ$[esp+24]
  0004f	8b 54 24 30	 mov	 edx, DWORD PTR _fPosY$[esp+24]
  00053	8b 7c 24 20	 mov	 edi, DWORD PTR _strName$[esp+24]
  00057	50		 push	 eax
  00058	8b 44 24 30	 mov	 eax, DWORD PTR _fPosX$[esp+28]
  0005c	51		 push	 ecx
  0005d	8b 4c 24 30	 mov	 ecx, DWORD PTR _wMapID$[esp+32]
  00061	52		 push	 edx
  00062	8b 54 24 30	 mov	 edx, DWORD PTR _bChannel$[esp+36]
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	52		 push	 edx
  00069	57		 push	 edi
  0006a	68 2e 60 00 00	 push	 24622			; 0000602eH
  0006f	8b ce		 mov	 ecx, esi
  00071	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3625 : 
; 3626 : 	m_world.Say(pMsg);

  000ac	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  000b2	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000b8	56		 push	 esi
  000b9	ff 10		 call	 DWORD PTR [eax]

; 3627 : }

  000bb	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000be	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c6	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c9	83 ca ff	 or	 edx, -1
  000cc	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d0	4a		 dec	 edx
  000d1	85 d2		 test	 edx, edx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5d		 pop	 ebp
  000d6	7f 08		 jg	 SHORT $L192748
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	50		 push	 eax
  000dd	ff 52 04	 call	 DWORD PTR [edx+4]
$L192748:
  000e0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000eb	83 c4 10	 add	 esp, 16			; 00000010H
  000ee	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192720:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192721:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192717[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192753
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_USERMOVE_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EGMMMG@Z ENDP ; CTMapSvrModule::SendCT_USERMOVE_ACK
PUBLIC	?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTMapSvrModule::SendCT_USERPOSITION_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192831 DD	0ffffffffH
	DD	FLAT:$L192765
	DD	00H
	DD	FLAT:$L192766
	DD	01H
	DD	FLAT:$L192767
$T192829 DD	019930520H
	DD	03H
	DD	FLAT:$T192831
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T192762 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strGMName$ = 8						; size = 4
_strTargetName$ = 12					; size = 4
?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTMapSvrModule::SendCT_USERPOSITION_ACK, COMDAT
; _this$ = ecx

; 3630 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 3631 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192762[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L192763
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192764
$L192763:
  00046	33 f6		 xor	 esi, esi
$L192764:
  00048	57		 push	 edi

; 3632 : 	pMsg->SetID(CT_USERPOSITION_ACK)
; 3633 : 		<< strTargetName
; 3634 : 		<< strGMName;

  00049	8b 7c 24 24	 mov	 edi, DWORD PTR _strGMName$[esp+28]
  0004d	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00051	8b 5c 24 28	 mov	 ebx, DWORD PTR _strTargetName$[esp+28]
  00055	57		 push	 edi
  00056	53		 push	 ebx
  00057	68 44 60 00 00	 push	 24644			; 00006044H
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3635 : 
; 3636 : 	m_world.Say(pMsg);

  00071	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  00077	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  0007d	56		 push	 esi
  0007e	ff 10		 call	 DWORD PTR [eax]

; 3637 : }

  00080	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00083	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  00088	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0008b	83 ca ff	 or	 edx, -1
  0008e	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00092	4a		 dec	 edx
  00093	85 d2		 test	 edx, edx
  00095	5f		 pop	 edi
  00096	7f 08		 jg	 SHORT $L192797
  00098	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009c	50		 push	 eax
  0009d	ff 52 04	 call	 DWORD PTR [edx+4]
$L192797:
  000a0	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a3	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000ab	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ae	83 ca ff	 or	 edx, -1
  000b1	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b5	4a		 dec	 edx
  000b6	85 d2		 test	 edx, edx
  000b8	5e		 pop	 esi
  000b9	5d		 pop	 ebp
  000ba	5b		 pop	 ebx
  000bb	7f 08		 jg	 SHORT $L192825
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	50		 push	 eax
  000c2	ff 52 04	 call	 DWORD PTR [edx+4]
$L192825:
  000c5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192765:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strTargetName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192766:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strGMName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192767:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T192762[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192829
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_USERPOSITION_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTMapSvrModule::SendCT_USERPOSITION_ACK
PUBLIC	?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTMapSvrModule::SendMW_PARTYMEMBERRECALL_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192907 DD	0ffffffffH
	DD	FLAT:$L192841
	DD	00H
	DD	FLAT:$L192842
	DD	01H
	DD	FLAT:$L192843
$T192905 DD	019930520H
	DD	03H
	DD	FLAT:$T192907
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T192838 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bInvenID$ = 16						; size = 1
_bItemID$ = 20						; size = 1
_strOrigin$ = 24					; size = 4
_strTarget$ = 28					; size = 4
?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYMEMBERRECALL_ACK, COMDAT
; _this$ = ecx

; 3739 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 3740 : 	CPacket *pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192838[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L192839
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192840
$L192839:
  00046	33 f6		 xor	 esi, esi
$L192840:

; 3741 : 
; 3742 : 	pMsg->SetID(MW_PARTYMEMBERRECALL_ACK)
; 3743 : 		<< dwCharID
; 3744 : 		<< dwKEY
; 3745 : 		<< bInvenID
; 3746 : 		<< bItemID
; 3747 : 		<< strOrigin
; 3748 : 		<< strTarget;

  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _bItemID$[esp+24]
  0004c	8b 4c 24 28	 mov	 ecx, DWORD PTR _bInvenID$[esp+24]
  00050	8b 54 24 24	 mov	 edx, DWORD PTR _dwKEY$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 34	 mov	 edi, DWORD PTR _strOrigin$[esp+28]
  00059	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005d	8b 5c 24 38	 mov	 ebx, DWORD PTR _strTarget$[esp+28]
  00061	53		 push	 ebx
  00062	57		 push	 edi
  00063	50		 push	 eax
  00064	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+40]
  00068	51		 push	 ecx
  00069	52		 push	 edx
  0006a	50		 push	 eax
  0006b	68 04 21 00 00	 push	 8452			; 00002104H
  00070	8b ce		 mov	 ecx, esi
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3749 : 
; 3750 : 	m_world.Say(pMsg);

  000a1	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000a7	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000ad	56		 push	 esi
  000ae	ff 12		 call	 DWORD PTR [edx]

; 3751 : }

  000b0	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000b3	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000b8	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000bb	83 ca ff	 or	 edx, -1
  000be	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000c2	4a		 dec	 edx
  000c3	85 d2		 test	 edx, edx
  000c5	5f		 pop	 edi
  000c6	7f 08		 jg	 SHORT $L192876
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cc	50		 push	 eax
  000cd	ff 52 04	 call	 DWORD PTR [edx+4]
$L192876:
  000d0	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000d3	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000db	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000de	83 ca ff	 or	 edx, -1
  000e1	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e5	4a		 dec	 edx
  000e6	85 d2		 test	 edx, edx
  000e8	5e		 pop	 esi
  000e9	5d		 pop	 ebp
  000ea	5b		 pop	 ebx
  000eb	7f 08		 jg	 SHORT $L192903
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	50		 push	 eax
  000f2	ff 52 04	 call	 DWORD PTR [edx+4]
$L192903:
  000f5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00100	83 c4 10	 add	 esp, 16			; 00000010H
  00103	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192841:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192842:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strOrigin$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192843:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T192838[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192905
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMEMBERRECALL_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTMapSvrModule::SendMW_PARTYMEMBERRECALL_ACK
PUBLIC	?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z ; CTMapSvrModule::SendMW_PARTYMEMBERRECALLANS_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T192983 DD	0ffffffffH
	DD	FLAT:$L192917
	DD	00H
	DD	FLAT:$L192918
	DD	01H
	DD	FLAT:$L192919
$T192981 DD	019930520H
	DD	03H
	DD	FLAT:$T192983
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z
_TEXT	SEGMENT
$T192914 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_strUser$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bType$ = 20						; size = 1
_bInvenID$ = 24						; size = 1
_bItemID$ = 28						; size = 1
_bChannel$ = 32						; size = 1
_wMapID$ = 36						; size = 2
_fPosX$ = 40						; size = 4
_fPosY$ = 44						; size = 4
_fPosZ$ = 48						; size = 4
?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYMEMBERRECALLANS_ACK, COMDAT
; _this$ = ecx

; 3764 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 3765 : 	CPacket *pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T192914[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L192915
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L192916
$L192915:
  00046	33 f6		 xor	 esi, esi
$L192916:

; 3766 : 
; 3767 : 	pMsg->SetID(MW_PARTYMEMBERRECALLANS_ACK)
; 3768 : 		<< bResult
; 3769 : 		<< strUser
; 3770 : 		<< strTarget
; 3771 : 		<< bType
; 3772 : 		<< bInvenID
; 3773 : 		<< bItemID
; 3774 : 		<< bChannel
; 3775 : 		<< wMapID
; 3776 : 		<< fPosX
; 3777 : 		<< fPosY
; 3778 : 		<< fPosZ;

  00048	8b 44 24 48	 mov	 eax, DWORD PTR _fPosZ$[esp+24]
  0004c	8b 4c 24 44	 mov	 ecx, DWORD PTR _fPosY$[esp+24]
  00050	8b 54 24 40	 mov	 edx, DWORD PTR _fPosX$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 28	 mov	 edi, DWORD PTR _strUser$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 44	 mov	 eax, DWORD PTR _wMapID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 44	 mov	 ecx, DWORD PTR _bChannel$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 44	 mov	 edx, DWORD PTR _bItemID$[esp+40]
  00068	50		 push	 eax
  00069	8b 44 24 44	 mov	 eax, DWORD PTR _bInvenID$[esp+44]
  0006d	51		 push	 ecx
  0006e	8b 4c 24 44	 mov	 ecx, DWORD PTR _bType$[esp+48]
  00072	52		 push	 edx
  00073	8b 54 24 3c	 mov	 edx, DWORD PTR _bResult$[esp+52]
  00077	50		 push	 eax
  00078	51		 push	 ecx
  00079	88 5c 24 3c	 mov	 BYTE PTR __$EHRec$[esp+72], bl
  0007d	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strTarget$[esp+60]
  00081	53		 push	 ebx
  00082	57		 push	 edi
  00083	52		 push	 edx
  00084	68 14 21 00 00	 push	 8468			; 00002114H
  00089	8b ce		 mov	 ecx, esi
  0008b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c1	8b c8		 mov	 ecx, eax
  000c3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c8	8b c8		 mov	 ecx, eax
  000ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000d6	8b c8		 mov	 ecx, eax
  000d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 3779 : 
; 3780 : 	m_world.Say(pMsg);

  000dd	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  000e3	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000e9	56		 push	 esi
  000ea	ff 10		 call	 DWORD PTR [eax]

; 3781 : }

  000ec	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000ef	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000f4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f7	83 ca ff	 or	 edx, -1
  000fa	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000fe	4a		 dec	 edx
  000ff	85 d2		 test	 edx, edx
  00101	5f		 pop	 edi
  00102	7f 08		 jg	 SHORT $L192952
  00104	8b 08		 mov	 ecx, DWORD PTR [eax]
  00106	8b 11		 mov	 edx, DWORD PTR [ecx]
  00108	50		 push	 eax
  00109	ff 52 04	 call	 DWORD PTR [edx+4]
$L192952:
  0010c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0010f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00117	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0011a	83 ca ff	 or	 edx, -1
  0011d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00121	4a		 dec	 edx
  00122	85 d2		 test	 edx, edx
  00124	5e		 pop	 esi
  00125	5d		 pop	 ebp
  00126	5b		 pop	 ebx
  00127	7f 08		 jg	 SHORT $L192979
  00129	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012d	50		 push	 eax
  0012e	ff 52 04	 call	 DWORD PTR [edx+4]
$L192979:
  00131	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00135	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0013c	83 c4 10	 add	 esp, 16			; 00000010H
  0013f	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192917:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192918:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR _strUser$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192919:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T192914[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192981
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMEMBERRECALLANS_ACK@CTMapSvrModule@@QAEXEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEEEGMMM@Z ENDP ; CTMapSvrModule::SendMW_PARTYMEMBERRECALLANS_ACK
PUBLIC	?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z ; CTMapSvrModule::SendDM_CASHITEMGET_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193032 DD	0ffffffffH
	DD	FLAT:$L192993
	DD	00H
	DD	FLAT:$L192994
$T193030 DD	019930520H
	DD	02H
	DD	FLAT:$T193032
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z
_TEXT	SEGMENT
$T192990 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
_dwUserID$ = 20						; size = 4
_dwID$ = 24						; size = 4
_bInven$ = 28						; size = 1
_bSlot$ = 32						; size = 1
?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHITEMGET_REQ, COMDAT
; _this$ = ecx

; 3802 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3803 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T192990[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L192991
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L192992
$L192991:
  0004c	33 f6		 xor	 esi, esi
$L192992:

; 3804 : 	pBUF->m_packet.SetID(DM_CASHITEMGET_REQ)
; 3805 : 		<< dwCharID
; 3806 : 		<< dwKey
; 3807 : 		<< strName
; 3808 : 		<< dwUserID
; 3809 : 		<< dwID
; 3810 : 		<< bInven
; 3811 : 		<< bSlot;

  0004e	8b 44 24 38	 mov	 eax, DWORD PTR _bSlot$[esp+24]
  00052	8b 4c 24 34	 mov	 ecx, DWORD PTR _bInven$[esp+24]
  00056	8b 54 24 30	 mov	 edx, DWORD PTR _dwID$[esp+24]
  0005a	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 30	 mov	 eax, DWORD PTR _dwUserID$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKey$[esp+32]
  00068	52		 push	 edx
  00069	8b 54 24 2c	 mov	 edx, DWORD PTR _dwCharID$[esp+36]
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	51		 push	 ecx
  00070	52		 push	 edx
  00071	68 5d 90 00 00	 push	 36957			; 0000905dH
  00076	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00079	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  0007e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3812 : 
; 3813 : 	SayToDB(pBUF);

  000b4	56		 push	 esi
  000b5	8b cd		 mov	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3814 : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5d		 pop	 ebp
  000d7	7f 08		 jg	 SHORT $L193028
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L193028:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192993:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L192994:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T192990[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193030
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHITEMGET_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KKEE@Z ENDP ; CTMapSvrModule::SendDM_CASHITEMGET_REQ
PUBLIC	?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendDM_CASHITEMBUY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193081 DD	0ffffffffH
	DD	FLAT:$L193042
	DD	00H
	DD	FLAT:$L193043
$T193079 DD	019930520H
	DD	02H
	DD	FLAT:$T193081
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193039 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwUserID$ = 16						; size = 4
_wCashItemID$ = 20					; size = 2
_bBuyType$ = 24						; size = 1
_strTarget$ = 28					; size = 4
?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHITEMBUY_REQ, COMDAT
; _this$ = ecx

; 3837 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3838 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193039[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193040
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193041
$L193040:
  0004c	33 f6		 xor	 esi, esi
$L193041:

; 3839 : 	pBUF->m_packet.SetID(DM_CASHITEMBUY_REQ)
; 3840 : 		<< dwCharID
; 3841 : 		<< dwKey
; 3842 : 		<< dwUserID
; 3843 : 		<< wCashItemID
; 3844 : 		<< bBuyType
; 3845 : 		<< strTarget;

  0004e	8b 7c 24 34	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  00052	8b 44 24 30	 mov	 eax, DWORD PTR _bBuyType$[esp+24]
  00056	8b 4c 24 2c	 mov	 ecx, DWORD PTR _wCashItemID$[esp+24]
  0005a	8b 54 24 28	 mov	 edx, DWORD PTR _dwUserID$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKey$[esp+32]
  00064	51		 push	 ecx
  00065	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+36]
  00069	52		 push	 edx
  0006a	50		 push	 eax
  0006b	51		 push	 ecx
  0006c	68 61 90 00 00	 push	 36961			; 00009061H
  00071	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00074	c6 44 24 34 00	 mov	 BYTE PTR __$EHRec$[esp+64], 0
  00079	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3846 : 
; 3847 : 	SayToDB(pBUF);

  000a8	56		 push	 esi
  000a9	8b cd		 mov	 ecx, ebp
  000ab	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3848 : }

  000b0	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000b3	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000bb	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  000be	83 c9 ff	 or	 ecx, -1
  000c1	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  000c5	49		 dec	 ecx
  000c6	85 c9		 test	 ecx, ecx
  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5d		 pop	 ebp
  000cb	7f 08		 jg	 SHORT $L193077
  000cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d1	50		 push	 eax
  000d2	ff 52 04	 call	 DWORD PTR [edx+4]
$L193077:
  000d5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
  000e3	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193042:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193043:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193039[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193079
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHITEMBUY_REQ@CTMapSvrModule@@QAEXKKKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendDM_CASHITEMBUY_REQ
PUBLIC	?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ; CTMapSvrModule::SendMW_SOULMATEREG_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193126 DD	0ffffffffH
	DD	FLAT:$L193091
	DD	00H
	DD	FLAT:$L193092
$T193124 DD	019930520H
	DD	02H
	DD	FLAT:$T193126
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT
$T193088 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_bReg$ = 20						; size = 1
_bNpcInvenID$ = 24					; size = 1
_bNpcItemID$ = 28					; size = 1
?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z PROC NEAR ; CTMapSvrModule::SendMW_SOULMATEREG_ACK, COMDAT
; _this$ = ecx

; 3873 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 3874 : 	CPacket *pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193088[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193089
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193090
$L193089:
  00045	33 f6		 xor	 esi, esi
$L193090:

; 3875 : 
; 3876 : 	pMsg->SetID(MW_SOULMATEREG_ACK)
; 3877 : 		<< dwCharID
; 3878 : 		<< dwKEY
; 3879 : 		<< strName
; 3880 : 		<< bReg		
; 3881 : 		<< bNpcInvenID
; 3882 : 		<< bNpcItemID;

  00047	8b 44 24 34	 mov	 eax, DWORD PTR _bNpcItemID$[esp+24]
  0004b	8b 4c 24 30	 mov	 ecx, DWORD PTR _bNpcInvenID$[esp+24]
  0004f	8b 54 24 2c	 mov	 edx, DWORD PTR _bReg$[esp+24]
  00053	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  00057	50		 push	 eax
  00058	8b 44 24 28	 mov	 eax, DWORD PTR _dwKEY$[esp+28]
  0005c	51		 push	 ecx
  0005d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+32]
  00061	52		 push	 edx
  00062	57		 push	 edi
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	68 0a 21 00 00	 push	 8458			; 0000210aH
  0006a	8b ce		 mov	 ecx, esi
  0006c	c6 44 24 34 00	 mov	 BYTE PTR __$EHRec$[esp+64], 0
  00071	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3883 : 
; 3884 : 	m_world.Say(pMsg);

  000a0	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000a6	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000ac	56		 push	 esi
  000ad	ff 12		 call	 DWORD PTR [edx]

; 3885 : }

  000af	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000b2	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000ba	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000bd	83 ca ff	 or	 edx, -1
  000c0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000c4	4a		 dec	 edx
  000c5	85 d2		 test	 edx, edx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5d		 pop	 ebp
  000ca	7f 08		 jg	 SHORT $L193122
  000cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d0	50		 push	 eax
  000d1	ff 52 04	 call	 DWORD PTR [edx+4]
$L193122:
  000d4	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000d8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000df	83 c4 10	 add	 esp, 16			; 00000010H
  000e2	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193091:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193092:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193088[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193124
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATEREG_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ENDP ; CTMapSvrModule::SendMW_SOULMATEREG_ACK
PUBLIC	?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z ; CTMapSvrModule::SendDM_CASHITEMPUTIN_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193175 DD	0ffffffffH
	DD	FLAT:$L193136
	DD	00H
	DD	FLAT:$L193137
$T193173 DD	019930520H
	DD	02H
	DD	FLAT:$T193175
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z
_TEXT	SEGMENT
$T193133 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
_bInvenID$ = 20						; size = 1
_bItemID$ = 24						; size = 1
_pItem$ = 28						; size = 4
?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendDM_CASHITEMPUTIN_REQ, COMDAT
; _this$ = ecx

; 3960 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b e9		 mov	 ebp, ecx
  0001c	33 db		 xor	 ebx, ebx

; 3961 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001e	6a 20		 push	 32			; 00000020H
  00020	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	8b f8		 mov	 edi, eax
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 7c 24 10	 mov	 DWORD PTR $T193133[esp+32], edi
  00032	3b fb		 cmp	 edi, ebx
  00034	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  00039	74 0c		 je	 SHORT $L193134
  0003b	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	89 1f		 mov	 DWORD PTR [edi], ebx
  00045	eb 02		 jmp	 SHORT $L193135
$L193134:
  00047	33 ff		 xor	 edi, edi
$L193135:

; 3962 : 
; 3963 : 	pBUF->m_packet.SetID(DM_CASHITEMPUTIN_REQ)
; 3964 : 		<< dwCharID
; 3965 : 		<< dwKey
; 3966 : 		<< strName
; 3967 : 		<< bInvenID
; 3968 : 		<< bItemID;

  00049	8b 44 24 34	 mov	 eax, DWORD PTR _bItemID$[esp+28]
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bInvenID$[esp+28]
  00051	8b 54 24 28	 mov	 edx, DWORD PTR _dwKey$[esp+28]
  00055	50		 push	 eax
  00056	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  0005a	51		 push	 ecx
  0005b	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  0005f	8b 5c 24 34	 mov	 ebx, DWORD PTR _strName$[esp+36]
  00063	53		 push	 ebx
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00069	68 6d 90 00 00	 push	 36973			; 0000906dH
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3969 : 
; 3970 : 	pItem->WrapPacket(&(pBUF->m_packet));

  00098	8b 4c 24 38	 mov	 ecx, DWORD PTR _pItem$[esp+28]
  0009c	56		 push	 esi
  0009d	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 3971 : 
; 3972 : 	SayToDB(pBUF);

  000a2	57		 push	 edi
  000a3	8b cd		 mov	 ecx, ebp
  000a5	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 3973 : }

  000aa	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000ad	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000b5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b8	83 ca ff	 or	 edx, -1
  000bb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000bf	4a		 dec	 edx
  000c0	85 d2		 test	 edx, edx
  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5d		 pop	 ebp
  000c5	5b		 pop	 ebx
  000c6	7f 08		 jg	 SHORT $L193171
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cc	50		 push	 eax
  000cd	ff 52 04	 call	 DWORD PTR [edx+4]
$L193171:
  000d0	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000db	83 c4 10	 add	 esp, 16			; 00000010H
  000de	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193136:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193137:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193133[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193173
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHITEMPUTIN_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEPAVCTItem@@@Z ENDP ; CTMapSvrModule::SendDM_CASHITEMPUTIN_REQ
PUBLIC	?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendDM_SAVECHARBASE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193224 DD	0ffffffffH
	DD	FLAT:$L193185
	DD	00H
	DD	FLAT:$L193186
$T193222 DD	019930520H
	DD	02H
	DD	FLAT:$T193224
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193182 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_bType$ = 12						; size = 1
_bValue$ = 16						; size = 1
_strName$ = 20						; size = 4
?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendDM_SAVECHARBASE_REQ, COMDAT
; _this$ = ecx

; 4089 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4090 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193182[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193183
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193184
$L193183:
  0004c	33 f6		 xor	 esi, esi
$L193184:

; 4091 : 
; 4092 : 	pBUF->m_packet.SetID(DM_SAVECHARBASE_REQ)
; 4093 : 		<< dwCharID
; 4094 : 		<< bType
; 4095 : 		<< bValue
; 4096 : 		<< strName;

  0004e	8b 7c 24 2c	 mov	 edi, DWORD PTR _strName$[esp+24]
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _bValue$[esp+24]
  00056	8b 4c 24 24	 mov	 ecx, DWORD PTR _bType$[esp+24]
  0005a	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	52		 push	 edx
  00062	68 72 90 00 00	 push	 36978			; 00009072H
  00067	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006a	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4097 : 
; 4098 : 	SayToDB(pBUF);

  00090	56		 push	 esi
  00091	8b cd		 mov	 ecx, ebp
  00093	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4099 : }

  00098	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5d		 pop	 ebp
  000b3	7f 08		 jg	 SHORT $L193220
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L193220:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193185:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193186:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193182[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193222
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVECHARBASE_REQ@CTMapSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendDM_SAVECHARBASE_REQ
PUBLIC	?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendDM_CHECKCHANGENAME_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193273 DD	0ffffffffH
	DD	FLAT:$L193234
	DD	00H
	DD	FLAT:$L193235
$T193271 DD	019930520H
	DD	02H
	DD	FLAT:$T193273
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193231 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bInven$ = 16						; size = 1
_bItem$ = 20						; size = 1
_strName$ = 24						; size = 4
?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendDM_CHECKCHANGENAME_REQ, COMDAT
; _this$ = ecx

; 4106 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4107 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193231[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193232
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193233
$L193232:
  0004c	33 f6		 xor	 esi, esi
$L193233:

; 4108 : 
; 4109 : 	pBUF->m_packet.SetID(DM_CHECKCHANGENAME_REQ)
; 4110 : 		<< dwCharID
; 4111 : 		<< dwKey
; 4112 : 		<< bInven
; 4113 : 		<< bItem
; 4114 : 		<< strName;

  0004e	8b 7c 24 30	 mov	 edi, DWORD PTR _strName$[esp+24]
  00052	8b 44 24 2c	 mov	 eax, DWORD PTR _bItem$[esp+24]
  00056	8b 4c 24 28	 mov	 ecx, DWORD PTR _bInven$[esp+24]
  0005a	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	50		 push	 eax
  00067	68 73 90 00 00	 push	 36979			; 00009073H
  0006c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006f	c6 44 24 30 00	 mov	 BYTE PTR __$EHRec$[esp+60], 0
  00074	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4115 : 
; 4116 : 	SayToDB(pBUF);

  0009c	56		 push	 esi
  0009d	8b cd		 mov	 ecx, ebp
  0009f	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4117 : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5d		 pop	 ebp
  000bf	7f 08		 jg	 SHORT $L193269
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L193269:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193234:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193235:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193231[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193271
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CHECKCHANGENAME_REQ@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendDM_CHECKCHANGENAME_REQ
PUBLIC	?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_CHANGECHARBASE_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193318 DD	0ffffffffH
	DD	FLAT:$L193283
	DD	00H
	DD	FLAT:$L193284
$T193316 DD	019930520H
	DD	02H
	DD	FLAT:$T193318
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193280 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bType$ = 16						; size = 1
_bValue$ = 20						; size = 1
_strName$ = 24						; size = 4
?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CHANGECHARBASE_ACK, COMDAT
; _this$ = ecx

; 4124 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4125 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193280[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193281
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193282
$L193281:
  00045	33 f6		 xor	 esi, esi
$L193282:

; 4126 : 
; 4127 : 	pMsg->SetID(MW_CHANGECHARBASE_ACK)
; 4128 : 		<< dwCharID
; 4129 : 		<< dwKey
; 4130 : 		<< bType
; 4131 : 		<< bValue
; 4132 : 		<< strName;

  00047	8b 7c 24 30	 mov	 edi, DWORD PTR _strName$[esp+24]
  0004b	8b 44 24 2c	 mov	 eax, DWORD PTR _bValue$[esp+24]
  0004f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bType$[esp+24]
  00053	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  0005d	51		 push	 ecx
  0005e	52		 push	 edx
  0005f	50		 push	 eax
  00060	68 1a 21 00 00	 push	 8474			; 0000211aH
  00065	8b ce		 mov	 ecx, esi
  00067	c6 44 24 30 00	 mov	 BYTE PTR __$EHRec$[esp+60], 0
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4133 : 
; 4134 : 	m_world.Say(pMsg);

  00094	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  0009a	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000a0	56		 push	 esi
  000a1	ff 12		 call	 DWORD PTR [edx]

; 4135 : }

  000a3	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a6	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000ae	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b1	83 ca ff	 or	 edx, -1
  000b4	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b8	4a		 dec	 edx
  000b9	85 d2		 test	 edx, edx
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5d		 pop	 ebp
  000be	7f 08		 jg	 SHORT $L193314
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c4	50		 push	 eax
  000c5	ff 52 04	 call	 DWORD PTR [edx+4]
$L193314:
  000c8	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d3	83 c4 10	 add	 esp, 16			; 00000010H
  000d6	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193283:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193284:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193280[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193316
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHANGECHARBASE_ACK@CTMapSvrModule@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_CHANGECHARBASE_ACK
PUBLIC	?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ; CTMapSvrModule::SendDM_HEROSELECT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193367 DD	0ffffffffH
	DD	FLAT:$L193328
	DD	00H
	DD	FLAT:$L193329
$T193365 DD	019930520H
	DD	02H
	DD	FLAT:$T193367
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT
$T193325 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwGuildID$ = 16					; size = 4
_wBattleZoneID$ = 20					; size = 2
_strHeroName$ = 24					; size = 4
_timeHero$ = 28						; size = 8
?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z PROC NEAR ; CTMapSvrModule::SendDM_HEROSELECT_REQ, COMDAT
; _this$ = ecx

; 4162 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4163 : 	LPPACKETBUF pMSG = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193325[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193326
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193327
$L193326:
  0004c	33 f6		 xor	 esi, esi
$L193327:

; 4164 : 	pMSG->m_packet.SetID(DM_HEROSELECT_REQ)
; 4165 : 		<< dwCharID
; 4166 : 		<< dwKey
; 4167 : 		<< dwGuildID
; 4168 : 		<< wBattleZoneID
; 4169 : 		<< strHeroName
; 4170 : 		<< timeHero;

  0004e	8b 44 24 38	 mov	 eax, DWORD PTR _timeHero$[esp+28]
  00052	8b 4c 24 34	 mov	 ecx, DWORD PTR _timeHero$[esp+24]
  00056	8b 7c 24 30	 mov	 edi, DWORD PTR _strHeroName$[esp+24]
  0005a	8b 54 24 2c	 mov	 edx, DWORD PTR _wBattleZoneID$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 2c	 mov	 eax, DWORD PTR _dwGuildID$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKey$[esp+32]
  00068	57		 push	 edi
  00069	52		 push	 edx
  0006a	8b 54 24 30	 mov	 edx, DWORD PTR _dwCharID$[esp+40]
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	52		 push	 edx
  00071	68 79 90 00 00	 push	 36985			; 00009079H
  00076	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00079	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  0007e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 4171 : 
; 4172 : 	SayToDB(pMSG);

  000ad	56		 push	 esi
  000ae	8b cd		 mov	 ecx, ebp
  000b0	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4173 : }

  000b5	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000b8	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c3	83 ca ff	 or	 edx, -1
  000c6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ca	4a		 dec	 edx
  000cb	85 d2		 test	 edx, edx
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5d		 pop	 ebp
  000d0	7f 08		 jg	 SHORT $L193362
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	50		 push	 eax
  000d7	ff 52 04	 call	 DWORD PTR [edx+4]
$L193362:
  000da	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000de	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e5	83 c4 10	 add	 esp, 16			; 00000010H
  000e8	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193328:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strHeroName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193329:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193325[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193365
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_HEROSELECT_REQ@CTMapSvrModule@@QAEXKKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ENDP ; CTMapSvrModule::SendDM_HEROSELECT_REQ
PUBLIC	?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ; CTMapSvrModule::SendMW_GAINPVPPOINT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193412 DD	0ffffffffH
	DD	FLAT:$L193377
	DD	00H
	DD	FLAT:$L193378
$T193410 DD	019930520H
	DD	02H
	DD	FLAT:$T193412
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT
$T193374 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bOwnerType$ = 8					; size = 1
_dwOwnerID$ = 12					; size = 4
_dwPoint$ = 16						; size = 4
_bEvent$ = 20						; size = 1
_bType$ = 24						; size = 1
_bGain$ = 28						; size = 1
_strName$ = 32						; size = 4
_bClass$ = 36						; size = 1
_bLevel$ = 40						; size = 1
?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z PROC NEAR ; CTMapSvrModule::SendMW_GAINPVPPOINT_ACK, COMDAT
; _this$ = ecx

; 4200 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4201 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193374[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193375
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193376
$L193375:
  00045	33 f6		 xor	 esi, esi
$L193376:

; 4202 : 
; 4203 : 	pMsg->SetID(MW_GAINPVPPOINT_ACK)
; 4204 : 		<< bOwnerType
; 4205 : 		<< dwOwnerID
; 4206 : 		<< dwPoint
; 4207 : 		<< bEvent
; 4208 : 		<< bType
; 4209 : 		<< bGain
; 4210 : 		<< strName
; 4211 : 		<< bClass
; 4212 : 		<< bLevel;

  00047	8b 44 24 40	 mov	 eax, DWORD PTR _bLevel$[esp+24]
  0004b	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bClass$[esp+24]
  0004f	8b 7c 24 38	 mov	 edi, DWORD PTR _strName$[esp+24]
  00053	8b 54 24 34	 mov	 edx, DWORD PTR _bGain$[esp+24]
  00057	50		 push	 eax
  00058	8b 44 24 34	 mov	 eax, DWORD PTR _bType$[esp+28]
  0005c	51		 push	 ecx
  0005d	8b 4c 24 34	 mov	 ecx, DWORD PTR _bEvent$[esp+32]
  00061	57		 push	 edi
  00062	52		 push	 edx
  00063	8b 54 24 38	 mov	 edx, DWORD PTR _dwPoint$[esp+40]
  00067	50		 push	 eax
  00068	8b 44 24 38	 mov	 eax, DWORD PTR _dwOwnerID$[esp+44]
  0006c	51		 push	 ecx
  0006d	8b 4c 24 38	 mov	 ecx, DWORD PTR _bOwnerType$[esp+48]
  00071	52		 push	 edx
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	68 21 21 00 00	 push	 8481			; 00002121H
  00079	8b ce		 mov	 ecx, esi
  0007b	c6 44 24 40 00	 mov	 BYTE PTR __$EHRec$[esp+76], 0
  00080	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4213 : 
; 4214 : 	m_world.Say(pMsg);

  000c4	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000ca	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000d0	56		 push	 esi
  000d1	ff 12		 call	 DWORD PTR [edx]

; 4215 : }

  000d3	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000d6	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000de	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e1	83 ca ff	 or	 edx, -1
  000e4	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e8	4a		 dec	 edx
  000e9	85 d2		 test	 edx, edx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5d		 pop	 ebp
  000ee	7f 08		 jg	 SHORT $L193407
  000f0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	50		 push	 eax
  000f5	ff 52 04	 call	 DWORD PTR [edx+4]
$L193407:
  000f8	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000fc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00103	83 c4 10	 add	 esp, 16			; 00000010H
  00106	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193377:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193378:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193374[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193410
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GAINPVPPOINT_ACK@CTMapSvrModule@@QAEXEKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ENDP ; CTMapSvrModule::SendMW_GAINPVPPOINT_ACK
PUBLIC	?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ; CTMapSvrModule::SendMW_GUILDPOINTREWARD_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193488 DD	0ffffffffH
	DD	FLAT:$L193422
	DD	00H
	DD	FLAT:$L193423
	DD	01H
	DD	FLAT:$L193424
$T193486 DD	019930520H
	DD	03H
	DD	FLAT:$T193488
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT
$T193419 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_dwPoint$ = 20						; size = 4
_strMessage$ = 24					; size = 4
?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z PROC NEAR ; CTMapSvrModule::SendMW_GUILDPOINTREWARD_ACK, COMDAT
; _this$ = ecx

; 4241 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 4242 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 44 24 0c	 mov	 DWORD PTR $T193419[esp+28], eax
  00032	85 c0		 test	 eax, eax
  00034	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  00039	74 0b		 je	 SHORT $L193420
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b f0		 mov	 esi, eax
  00044	eb 02		 jmp	 SHORT $L193421
$L193420:
  00046	33 f6		 xor	 esi, esi
$L193421:

; 4243 : 
; 4244 : 	pMsg->SetID(MW_GUILDPOINTREWARD_ACK)
; 4245 : 		<< dwCharID
; 4246 : 		<< dwKey
; 4247 : 		<< strTarget
; 4248 : 		<< dwPoint
; 4249 : 		<< strMessage;

  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dwPoint$[esp+24]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00054	57		 push	 edi
  00055	8b 7c 24 2c	 mov	 edi, DWORD PTR _strTarget$[esp+28]
  00059	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005d	8b 5c 24 34	 mov	 ebx, DWORD PTR _strMessage$[esp+28]
  00061	53		 push	 ebx
  00062	50		 push	 eax
  00063	57		 push	 edi
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 26 21 00 00	 push	 8486			; 00002126H
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4250 : 
; 4251 : 	m_world.Say(pMsg);

  00095	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0009b	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000a1	56		 push	 esi
  000a2	ff 10		 call	 DWORD PTR [eax]

; 4252 : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ac	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000af	83 ca ff	 or	 edx, -1
  000b2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b6	4a		 dec	 edx
  000b7	85 d2		 test	 edx, edx
  000b9	5f		 pop	 edi
  000ba	7f 08		 jg	 SHORT $L193456
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	50		 push	 eax
  000c1	ff 52 04	 call	 DWORD PTR [edx+4]
$L193456:
  000c4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cf	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d2	83 ca ff	 or	 edx, -1
  000d5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d9	4a		 dec	 edx
  000da	85 d2		 test	 edx, edx
  000dc	5e		 pop	 esi
  000dd	5d		 pop	 ebp
  000de	5b		 pop	 ebx
  000df	7f 08		 jg	 SHORT $L193483
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	50		 push	 eax
  000e6	ff 52 04	 call	 DWORD PTR [edx+4]
$L193483:
  000e9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
  000f7	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193422:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193423:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193424:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T193419[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193486
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPOINTREWARD_ACK@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ENDP ; CTMapSvrModule::SendMW_GUILDPOINTREWARD_ACK
PUBLIC	?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z ; CTMapSvrModule::SendDM_AUCTIONREG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193537 DD	0ffffffffH
	DD	FLAT:$L193498
	DD	00H
	DD	FLAT:$L193499
$T193535 DD	019930520H
	DD	02H
	DD	FLAT:$T193537
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z
_TEXT	SEGMENT
$T193495 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwSeller$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_wNpcID$ = 20						; size = 2
_wHour$ = 24						; size = 2
_bInvenID$ = 28						; size = 1
_ldwDirectPrice$ = 32					; size = 8
_ldwStartPrice$ = 40					; size = 8
_pTItem$ = 48						; size = 4
_dwCode$ = 52						; size = 4
?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z PROC NEAR ; CTMapSvrModule::SendDM_AUCTIONREG_REQ, COMDAT
; _this$ = ecx

; 4356 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b e9		 mov	 ebp, ecx
  0001c	33 db		 xor	 ebx, ebx

; 4357 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001e	6a 20		 push	 32			; 00000020H
  00020	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	8b f8		 mov	 edi, eax
  0002b	83 c4 04	 add	 esp, 4
  0002e	89 7c 24 10	 mov	 DWORD PTR $T193495[esp+32], edi
  00032	3b fb		 cmp	 edi, ebx
  00034	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  00039	74 0c		 je	 SHORT $L193496
  0003b	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	89 1f		 mov	 DWORD PTR [edi], ebx
  00045	eb 02		 jmp	 SHORT $L193497
$L193496:
  00047	33 ff		 xor	 edi, edi
$L193497:

; 4358 : 	pBUF->m_packet.SetID(DM_AUCTIONREG_REQ)	
; 4359 : 		<< dwSeller
; 4360 : 		<< dwKEY
; 4361 : 		<< strName
; 4362 : 		<< wNpcID
; 4363 : 		<< wHour
; 4364 : 		<< bInvenID				
; 4365 : 		<< ldwDirectPrice
; 4366 : 		<< ldwStartPrice
; 4367 : 		<< dwCode;

  00049	8b 44 24 50	 mov	 eax, DWORD PTR _dwCode$[esp+28]
  0004d	8b 4c 24 48	 mov	 ecx, DWORD PTR _ldwStartPrice$[esp+32]
  00051	8b 54 24 44	 mov	 edx, DWORD PTR _ldwStartPrice$[esp+28]
  00055	50		 push	 eax
  00056	8b 44 24 44	 mov	 eax, DWORD PTR _ldwDirectPrice$[esp+36]
  0005a	51		 push	 ecx
  0005b	8b 4c 24 44	 mov	 ecx, DWORD PTR _ldwDirectPrice$[esp+36]
  0005f	52		 push	 edx
  00060	8b 54 24 44	 mov	 edx, DWORD PTR _bInvenID$[esp+40]
  00064	50		 push	 eax
  00065	8b 44 24 44	 mov	 eax, DWORD PTR _wHour$[esp+44]
  00069	51		 push	 ecx
  0006a	8b 4c 24 44	 mov	 ecx, DWORD PTR _wNpcID$[esp+48]
  0006e	52		 push	 edx
  0006f	8b 54 24 40	 mov	 edx, DWORD PTR _dwKEY$[esp+52]
  00073	50		 push	 eax
  00074	8b 44 24 40	 mov	 eax, DWORD PTR _dwSeller$[esp+56]
  00078	51		 push	 ecx
  00079	88 5c 24 3c	 mov	 BYTE PTR __$EHRec$[esp+72], bl
  0007d	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strName$[esp+60]
  00081	53		 push	 ebx
  00082	52		 push	 edx
  00083	50		 push	 eax
  00084	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00087	68 8c 90 00 00	 push	 37004			; 0000908cH
  0008c	8b ce		 mov	 ecx, esi
  0008e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4368 : 
; 4369 : 	pTItem->WrapPacket(&(pBUF->m_packet));

  000d2	8b 4c 24 4c	 mov	 ecx, DWORD PTR _pTItem$[esp+28]
  000d6	56		 push	 esi
  000d7	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 4370 : 
; 4371 : 	SayToDB(pBUF);

  000dc	57		 push	 edi
  000dd	8b cd		 mov	 ecx, ebp
  000df	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4372 : }

  000e4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000e7	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000ef	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f2	83 ca ff	 or	 edx, -1
  000f5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f9	4a		 dec	 edx
  000fa	85 d2		 test	 edx, edx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5d		 pop	 ebp
  000ff	5b		 pop	 ebx
  00100	7f 08		 jg	 SHORT $L193532
  00102	8b 08		 mov	 ecx, DWORD PTR [eax]
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	50		 push	 eax
  00107	ff 52 04	 call	 DWORD PTR [edx+4]
$L193532:
  0010a	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0010e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00115	83 c4 10	 add	 esp, 16			; 00000010H
  00118	c2 30 00	 ret	 48			; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193498:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193499:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193495[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193535
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_AUCTIONREG_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GGE_J1PAVCTItem@@K@Z ENDP ; CTMapSvrModule::SendDM_AUCTIONREG_REQ
PUBLIC	?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z ; CTMapSvrModule::SendDM_AUCTIONBID_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193586 DD	0ffffffffH
	DD	FLAT:$L193547
	DD	00H
	DD	FLAT:$L193548
$T193584 DD	019930520H
	DD	02H
	DD	FLAT:$T193586
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z
_TEXT	SEGMENT
$T193544 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_dwUserID$ = 20						; size = 4
_wNpcID$ = 24						; size = 2
_dwAuctionID$ = 28					; size = 4
_ldwBidPrice$ = 32					; size = 8
?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z PROC NEAR ; CTMapSvrModule::SendDM_AUCTIONBID_REQ, COMDAT
; _this$ = ecx

; 4411 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4412 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193544[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193545
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193546
$L193545:
  0004c	33 f6		 xor	 esi, esi
$L193546:

; 4413 : 
; 4414 : 	pBUF->m_packet.SetID(DM_AUCTIONBID_REQ)
; 4415 : 		<< dwCharID
; 4416 : 		<< dwKEY
; 4417 : 		<< strName
; 4418 : 		<< dwUserID
; 4419 : 		<< wNpcID
; 4420 : 		<< dwAuctionID		
; 4421 : 		<< ldwBidPrice;

  0004e	8b 44 24 3c	 mov	 eax, DWORD PTR _ldwBidPrice$[esp+28]
  00052	8b 4c 24 38	 mov	 ecx, DWORD PTR _ldwBidPrice$[esp+24]
  00056	8b 54 24 34	 mov	 edx, DWORD PTR _dwAuctionID$[esp+24]
  0005a	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 34	 mov	 eax, DWORD PTR _wNpcID$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwUserID$[esp+32]
  00068	52		 push	 edx
  00069	8b 54 24 30	 mov	 edx, DWORD PTR _dwKEY$[esp+36]
  0006d	50		 push	 eax
  0006e	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+40]
  00072	51		 push	 ecx
  00073	57		 push	 edi
  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	68 92 90 00 00	 push	 37010			; 00009092H
  0007b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007e	c6 44 24 3c 00	 mov	 BYTE PTR __$EHRec$[esp+72], 0
  00083	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 4422 : 
; 4423 : 	SayToDB(pBUF);

  000b9	56		 push	 esi
  000ba	8b cd		 mov	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4424 : }

  000c1	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000c4	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cf	83 ca ff	 or	 edx, -1
  000d2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d6	4a		 dec	 edx
  000d7	85 d2		 test	 edx, edx
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5d		 pop	 ebp
  000dc	7f 08		 jg	 SHORT $L193579
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	50		 push	 eax
  000e3	ff 52 04	 call	 DWORD PTR [edx+4]
$L193579:
  000e6	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f1	83 c4 10	 add	 esp, 16			; 00000010H
  000f4	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193547:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193548:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193544[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193584
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_AUCTIONBID_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KGK_J@Z ENDP ; CTMapSvrModule::SendDM_AUCTIONBID_REQ
PUBLIC	?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z ; CTMapSvrModule::SendDM_AUCTIONBUYDIRECT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193635 DD	0ffffffffH
	DD	FLAT:$L193596
	DD	00H
	DD	FLAT:$L193597
$T193633 DD	019930520H
	DD	02H
	DD	FLAT:$T193635
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z
_TEXT	SEGMENT
$T193593 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_wNpcID$ = 20						; size = 2
_dwAuctionID$ = 24					; size = 4
_bCount$ = 28						; size = 1
_ldwBidPrice$ = 32					; size = 8
?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z PROC NEAR ; CTMapSvrModule::SendDM_AUCTIONBUYDIRECT_REQ, COMDAT
; _this$ = ecx

; 4433 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4434 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193593[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193594
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193595
$L193594:
  0004c	33 f6		 xor	 esi, esi
$L193595:

; 4435 : 
; 4436 : 	pBUF->m_packet.SetID(DM_AUCTIONBUYDIRECT_REQ)
; 4437 : 		<< dwCharID
; 4438 : 		<< dwKEY
; 4439 : 		<< strName
; 4440 : 		<< wNpcID
; 4441 : 		<< dwAuctionID	
; 4442 : 		<< bCount
; 4443 : 		<< ldwBidPrice;

  0004e	8b 44 24 3c	 mov	 eax, DWORD PTR _ldwBidPrice$[esp+28]
  00052	8b 4c 24 38	 mov	 ecx, DWORD PTR _ldwBidPrice$[esp+24]
  00056	8b 54 24 34	 mov	 edx, DWORD PTR _bCount$[esp+24]
  0005a	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 34	 mov	 eax, DWORD PTR _dwAuctionID$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 34	 mov	 ecx, DWORD PTR _wNpcID$[esp+32]
  00068	52		 push	 edx
  00069	8b 54 24 30	 mov	 edx, DWORD PTR _dwKEY$[esp+36]
  0006d	50		 push	 eax
  0006e	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+40]
  00072	51		 push	 ecx
  00073	57		 push	 edi
  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	68 94 90 00 00	 push	 37012			; 00009094H
  0007b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007e	c6 44 24 3c 00	 mov	 BYTE PTR __$EHRec$[esp+72], 0
  00083	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 4444 : 
; 4445 : 	SayToDB(pBUF);

  000b9	56		 push	 esi
  000ba	8b cd		 mov	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4446 : }

  000c1	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000c4	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cf	83 ca ff	 or	 edx, -1
  000d2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d6	4a		 dec	 edx
  000d7	85 d2		 test	 edx, edx
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5d		 pop	 ebp
  000dc	7f 08		 jg	 SHORT $L193628
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	50		 push	 eax
  000e3	ff 52 04	 call	 DWORD PTR [edx+4]
$L193628:
  000e6	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f1	83 c4 10	 add	 esp, 16			; 00000010H
  000f4	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193596:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193597:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193593[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193633
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_AUCTIONBUYDIRECT_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKE_J@Z ENDP ; CTMapSvrModule::SendDM_AUCTIONBUYDIRECT_REQ
PUBLIC	?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z ; CTMapSvrModule::SendDM_GAINCASHBONUS_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193684 DD	0ffffffffH
	DD	FLAT:$L193645
	DD	00H
	DD	FLAT:$L193646
$T193682 DD	019930520H
	DD	02H
	DD	FLAT:$T193684
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z
_TEXT	SEGMENT
$T193642 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strName$ = 16						; size = 4
_bInven$ = 20						; size = 1
_bItem$ = 24						; size = 1
_wItemID$ = 28						; size = 2
_dwBonus$ = 32						; size = 4
?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z PROC NEAR ; CTMapSvrModule::SendDM_GAINCASHBONUS_REQ, COMDAT
; _this$ = ecx

; 4455 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4456 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193642[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193643
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193644
$L193643:
  0004c	33 f6		 xor	 esi, esi
$L193644:

; 4457 : 
; 4458 : 	pBUF->m_packet.SetID(DM_GAINCASHBONUS_REQ)
; 4459 : 		<< dwCharID
; 4460 : 		<< dwKEY
; 4461 : 		<< strName
; 4462 : 		<< bInven
; 4463 : 		<< bItem
; 4464 : 		<< wItemID
; 4465 : 		<< dwBonus;

  0004e	8b 44 24 38	 mov	 eax, DWORD PTR _dwBonus$[esp+24]
  00052	8b 4c 24 34	 mov	 ecx, DWORD PTR _wItemID$[esp+24]
  00056	8b 54 24 30	 mov	 edx, DWORD PTR _bItem$[esp+24]
  0005a	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 30	 mov	 eax, DWORD PTR _bInven$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKEY$[esp+32]
  00068	52		 push	 edx
  00069	8b 54 24 2c	 mov	 edx, DWORD PTR _dwCharID$[esp+36]
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	51		 push	 ecx
  00070	52		 push	 edx
  00071	68 a1 90 00 00	 push	 37025			; 000090a1H
  00076	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00079	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  0007e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4466 : 
; 4467 : 	SayToDB(pBUF);

  000b4	56		 push	 esi
  000b5	8b cd		 mov	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4468 : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5d		 pop	 ebp
  000d7	7f 08		 jg	 SHORT $L193677
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L193677:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193645:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193646:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193642[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193682
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GAINCASHBONUS_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEGK@Z ENDP ; CTMapSvrModule::SendDM_GAINCASHBONUS_REQ
PUBLIC	?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendDM_WARLORDSAY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193733 DD	0ffffffffH
	DD	FLAT:$L193694
	DD	00H
	DD	FLAT:$L193695
$T193731 DD	019930520H
	DD	02H
	DD	FLAT:$T193733
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193691 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_bRankMonth$ = 12					; size = 1
_dwCharID$ = 16						; size = 4
_strSay$ = 20						; size = 4
?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendDM_WARLORDSAY_REQ, COMDAT
; _this$ = ecx

; 4474 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4475 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193691[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193692
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193693
$L193692:
  0004c	33 f6		 xor	 esi, esi
$L193693:

; 4476 : 	pBUF->m_packet.SetID(DM_WARLORDSAY_REQ)
; 4477 : 		<< bType
; 4478 : 		<< bRankMonth
; 4479 : 		<< dwCharID
; 4480 : 		<< strSay;

  0004e	8b 7c 24 2c	 mov	 edi, DWORD PTR _strSay$[esp+24]
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00056	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRankMonth$[esp+24]
  0005a	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	52		 push	 edx
  00062	68 a5 90 00 00	 push	 37029			; 000090a5H
  00067	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006a	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4481 : 
; 4482 : 	SayToDB(pBUF);

  00090	56		 push	 esi
  00091	8b cd		 mov	 ecx, ebp
  00093	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4483 : }

  00098	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5d		 pop	 ebp
  000b3	7f 08		 jg	 SHORT $L193726
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L193726:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193694:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strSay$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193695:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193691[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193731
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_WARLORDSAY_REQ@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendDM_WARLORDSAY_REQ
PUBLIC	?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z ; CTMapSvrModule::SendDM_POSTBILLUPDATE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193782 DD	0ffffffffH
	DD	FLAT:$L193743
	DD	00H
	DD	FLAT:$L193744
$T193780 DD	019930520H
	DD	02H
	DD	FLAT:$T193782
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z
_TEXT	SEGMENT
$T193740 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_strChar$ = 12						; size = 4
_dwPostID$ = 16						; size = 4
_bType$ = 20						; size = 1
_dwGold$ = 24						; size = 4
_dwSilver$ = 28						; size = 4
_dwCooper$ = 32						; size = 4
?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTBILLUPDATE_REQ, COMDAT
; _this$ = ecx

; 4550 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4551 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T193740[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L193741
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L193742
$L193741:
  0004c	33 f6		 xor	 esi, esi
$L193742:

; 4552 : 	pBUF->m_packet.SetID(DM_POSTBILLUPDATE_REQ)
; 4553 : 		<< dwCharID
; 4554 : 		<< strChar
; 4555 : 		<< dwPostID
; 4556 : 		<< bType
; 4557 : 		<< dwGold
; 4558 : 		<< dwSilver
; 4559 : 		<< dwCooper;

  0004e	8b 44 24 38	 mov	 eax, DWORD PTR _dwCooper$[esp+24]
  00052	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwSilver$[esp+24]
  00056	8b 54 24 30	 mov	 edx, DWORD PTR _dwGold$[esp+24]
  0005a	8b 7c 24 24	 mov	 edi, DWORD PTR _strChar$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 30	 mov	 eax, DWORD PTR _bType$[esp+28]
  00063	51		 push	 ecx
  00064	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwPostID$[esp+32]
  00068	52		 push	 edx
  00069	8b 54 24 2c	 mov	 edx, DWORD PTR _dwCharID$[esp+36]
  0006d	50		 push	 eax
  0006e	51		 push	 ecx
  0006f	57		 push	 edi
  00070	52		 push	 edx
  00071	68 b2 90 00 00	 push	 37042			; 000090b2H
  00076	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00079	c6 44 24 38 00	 mov	 BYTE PTR __$EHRec$[esp+68], 0
  0007e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4560 : 
; 4561 : 	SayToDB(pBUF);

  000b4	56		 push	 esi
  000b5	8b cd		 mov	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4562 : }

  000bc	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5d		 pop	 ebp
  000d7	7f 08		 jg	 SHORT $L193775
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L193775:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193743:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strChar$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193744:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193740[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193780
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTBILLUPDATE_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEKKK@Z ENDP ; CTMapSvrModule::SendDM_POSTBILLUPDATE_REQ
PUBLIC	?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_WARLORDSAY_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193827 DD	0ffffffffH
	DD	FLAT:$L193792
	DD	00H
	DD	FLAT:$L193793
$T193825 DD	019930520H
	DD	02H
	DD	FLAT:$T193827
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193789 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_bRankMonth$ = 12					; size = 1
_dwCharID$ = 16						; size = 4
_strSay$ = 20						; size = 4
?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_WARLORDSAY_ACK, COMDAT
; _this$ = ecx

; 4566 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4567 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193789[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193790
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193791
$L193790:
  00045	33 f6		 xor	 esi, esi
$L193791:

; 4568 : 	pMsg->SetID(MW_WARLORDSAY_ACK)
; 4569 : 		<< bType
; 4570 : 		<< bRankMonth
; 4571 : 		<< dwCharID		
; 4572 : 		<< strSay;

  00047	8b 7c 24 2c	 mov	 edi, DWORD PTR _strSay$[esp+24]
  0004b	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRankMonth$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+24]
  00057	57		 push	 edi
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	68 42 21 00 00	 push	 8514			; 00002142H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4573 : 
; 4574 : 	m_world.Say(pMsg);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 4575 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L193820
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L193820:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193792:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strSay$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193793:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193789[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193825
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_WARLORDSAY_ACK@CTMapSvrModule@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_WARLORDSAY_ACK
PUBLIC	?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTMapSvrModule::SendMW_TOURNAMENT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193905 DD	0ffffffffH
	DD	FLAT:$L193837
	DD	00H
	DD	FLAT:$L193838
$T193897 DD	019930520H
	DD	02H
	DD	FLAT:$T193905
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T193834 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wProtocol$ = 16					; size = 2
_dwValue$ = 20						; size = 4
_wValue$ = 24						; size = 2
_bValue$ = 28						; size = 1
_strValue$ = 32						; size = 4
?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_TOURNAMENT_ACK, COMDAT
; _this$ = ecx

; 4584 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4585 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193834[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193835
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193836
$L193835:
  00045	33 f6		 xor	 esi, esi
$L193836:

; 4586 : 	pMsg->SetID(MW_TOURNAMENT_ACK)
; 4587 : 		<< dwCharID
; 4588 : 		<< dwKey
; 4589 : 		<< wProtocol;

  00047	8b 7c 24 28	 mov	 edi, DWORD PTR _wProtocol$[esp+24]
  0004b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00053	57		 push	 edi
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	68 46 21 00 00	 push	 8518			; 00002146H
  0005b	8b ce		 mov	 ecx, esi
  0005d	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 4590 : 
; 4591 : 	switch(wProtocol)

  0007c	0f b7 c7	 movzx	 eax, di
  0007f	05 b8 de ff ff	 add	 eax, -8520		; ffffdeb8H
  00084	83 f8 18	 cmp	 eax, 24			; 00000018H
  00087	0f 87 83 00 00
	00		 ja	 $L181133
  0008d	0f b6 90 00 00
	00 00		 movzx	 edx, BYTE PTR $L193898[eax]
  00094	8b 7c 24 38	 mov	 edi, DWORD PTR _strValue$[esp+24]
  00098	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L193904[edx*4]
$L181128:

; 4592 : 	{
; 4593 : 	case MW_TOURNAMENTAPPLYINFO_ACK:
; 4594 : 	case MW_TOURNAMENTJOINLIST_ACK:
; 4595 : 	case MW_TOURNAMENTMATCHLIST_ACK:
; 4596 : 	case MW_TOURNAMENTEVENTLIST_ACK:
; 4597 : 	case MW_TOURNAMENTSCHEDULE_ACK:
; 4598 : 		break;
; 4599 : 	case MW_TOURNAMENTAPPLY_ACK:
; 4600 : 	case MW_TOURNAMENTEVENTINFO_ACK:
; 4601 : 		(*pMsg) << bValue;

  0009f	8b 44 24 34	 mov	 eax, DWORD PTR _bValue$[esp+24]
  000a3	50		 push	 eax
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4620 : 	}
; 4621 : 
; 4622 : 	m_world.Say(pMsg);

  000ab	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000b1	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000b7	56		 push	 esi
  000b8	ff 12		 call	 DWORD PTR [edx]

; 4623 : }

  000ba	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000bd	eb 58		 jmp	 SHORT $L193903
$L181130:

; 4602 : 		break;
; 4603 : 	case MW_TOURNAMENTPARTYLIST_ACK:
; 4604 : 		(*pMsg) << dwValue;
; 4605 : 		break;
; 4606 : 	case MW_TOURNAMENTPARTYADD_ACK:
; 4607 : 		(*pMsg) << strValue;

  000bf	57		 push	 edi
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 4620 : 	}
; 4621 : 
; 4622 : 	m_world.Say(pMsg);

  000c7	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  000cd	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  000d3	56		 push	 esi
  000d4	ff 12		 call	 DWORD PTR [edx]

; 4623 : }

  000d6	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000d9	eb 3c		 jmp	 SHORT $L193903
$L181131:

; 4608 : 		break;
; 4609 : 	case MW_TOURNAMENTEVENTJOIN_ACK:
; 4610 : 		(*pMsg)
; 4611 : 			<< bValue
; 4612 : 			<< dwValue;

  000db	8b 54 24 2c	 mov	 edx, DWORD PTR _dwValue$[esp+24]
  000df	8b 44 24 34	 mov	 eax, DWORD PTR _bValue$[esp+24]
  000e3	52		 push	 edx
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ec	8b c8		 mov	 ecx, eax

; 4613 : 		break;

  000ee	eb 07		 jmp	 SHORT $L193901
$L181132:

; 4614 : 	case MW_TOURNAMENTPARTYDEL_ACK:
; 4615 : 		(*pMsg)
; 4616 : 			<< dwValue;

  000f0	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwValue$[esp+24]
  000f4	51		 push	 ecx
  000f5	8b ce		 mov	 ecx, esi
$L193901:
  000f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
$L181124:

; 4620 : 	}
; 4621 : 
; 4622 : 	m_world.Say(pMsg);

  000fc	8b 95 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebp+107448]
  00102	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00108	56		 push	 esi
  00109	ff 12		 call	 DWORD PTR [edx]

; 4623 : }

  0010b	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0010e	eb 07		 jmp	 SHORT $L193903
$L181133:

; 4617 : 		break;
; 4618 : 	default:
; 4619 : 		return;

  00110	8b 44 24 38	 mov	 eax, DWORD PTR _strValue$[esp+24]
  00114	83 c0 f0	 add	 eax, -16		; fffffff0H
$L193903:
  00117	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0011f	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00122	83 ca ff	 or	 edx, -1
  00125	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00129	4a		 dec	 edx
  0012a	85 d2		 test	 edx, edx
  0012c	7f 08		 jg	 SHORT $L193866
  0012e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00130	8b 11		 mov	 edx, DWORD PTR [ecx]
  00132	50		 push	 eax
  00133	ff 52 04	 call	 DWORD PTR [edx+4]
$L193866:

; 4623 : }

  00136	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0013a	5f		 pop	 edi
  0013b	5e		 pop	 esi
  0013c	5d		 pop	 ebp
  0013d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00144	83 c4 10	 add	 esp, 16			; 00000010H
  00147	c2 1c 00	 ret	 28			; 0000001cH
  0014a	8b ff		 npad	 2
$L193904:
  0014c	00 00 00 00	 DD	 $L181124
  00150	00 00 00 00	 DD	 $L181128
  00154	00 00 00 00	 DD	 $L181132
  00158	00 00 00 00	 DD	 $L181130
  0015c	00 00 00 00	 DD	 $L181131
  00160	00 00 00 00	 DD	 $L181133
$L193898:
  00164	00		 DB	 0
  00165	05		 DB	 5
  00166	01		 DB	 1
  00167	05		 DB	 5
  00168	00		 DB	 0
  00169	05		 DB	 5
  0016a	02		 DB	 2
  0016b	05		 DB	 5
  0016c	03		 DB	 3
  0016d	05		 DB	 5
  0016e	00		 DB	 0
  0016f	05		 DB	 5
  00170	00		 DB	 0
  00171	05		 DB	 5
  00172	01		 DB	 1
  00173	05		 DB	 5
  00174	04		 DB	 4
  00175	05		 DB	 5
  00176	05		 DB	 5
  00177	05		 DB	 5
  00178	05		 DB	 5
  00179	05		 DB	 5
  0017a	02		 DB	 2
  0017b	05		 DB	 5
  0017c	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193837:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strValue$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193838:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193834[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193897
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENT_ACK@CTMapSvrModule@@QAEXKKGKGEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTMapSvrModule::SendMW_TOURNAMENT_ACK
PUBLIC	?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z ; CTMapSvrModule::SendMW_CHATBAN_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T193950 DD	0ffffffffH
	DD	FLAT:$L193915
	DD	00H
	DD	FLAT:$L193916
$T193948 DD	019930520H
	DD	02H
	DD	FLAT:$T193950
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z
_TEXT	SEGMENT
$T193912 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strTarget$ = 8						; size = 4
_wMin$ = 12						; size = 2
_dwOperatorID$ = 16					; size = 4
_dwOperatorKey$ = 20					; size = 4
?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z PROC NEAR ; CTMapSvrModule::SendMW_CHATBAN_ACK, COMDAT
; _this$ = ecx

; 4705 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 4706 : 	CPacket * pPacket = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 44 24 0c	 mov	 DWORD PTR $T193912[esp+28], eax
  00031	85 c0		 test	 eax, eax
  00033	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00038	74 0b		 je	 SHORT $L193913
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	eb 02		 jmp	 SHORT $L193914
$L193913:
  00045	33 f6		 xor	 esi, esi
$L193914:

; 4707 : 	pPacket->SetID(MW_CHATBAN_ACK)
; 4708 : 		<< strTarget
; 4709 : 		<< wMin
; 4710 : 		<< dwOperatorID
; 4711 : 		<< dwOperatorKey;

  00047	8b 44 24 2c	 mov	 eax, DWORD PTR _dwOperatorKey$[esp+24]
  0004b	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwOperatorID$[esp+24]
  0004f	8b 54 24 24	 mov	 edx, DWORD PTR _wMin$[esp+24]
  00053	8b 7c 24 20	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  00057	50		 push	 eax
  00058	51		 push	 ecx
  00059	52		 push	 edx
  0005a	57		 push	 edi
  0005b	68 16 21 00 00	 push	 8470			; 00002116H
  00060	8b ce		 mov	 ecx, esi
  00062	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 4712 : 	m_world.Say(pPacket);

  00088	8b 85 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebp+107448]
  0008e	8d 8d b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebp+107448]
  00094	56		 push	 esi
  00095	ff 10		 call	 DWORD PTR [eax]

; 4713 : }

  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	7f 08		 jg	 SHORT $L193946
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L193946:
  000bc	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L193915:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L193916:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T193912[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193948
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHATBAN_ACK@CTMapSvrModule@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GKK@Z ENDP ; CTMapSvrModule::SendMW_CHATBAN_ACK
PUBLIC	??A?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@I@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@I@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@I@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@I@Z ; std::vector<CTItem *,std::allocator<CTItem *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@I@Z PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@I@Z ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::operator[]
_TEXT	ENDS
PUBLIC	?back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@XZ ; std::vector<CTItem *,std::allocator<CTItem *> >::back
; Function compile flags: /Ogty
;	COMDAT ?back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@XZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 04	 sub	 eax, 4

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEAAPAVCTItem@@XZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::back
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEXXZ ; std::vector<CTItem *,std::allocator<CTItem *> >::pop_back
; Function compile flags: /Ogty
;	COMDAT ?pop_back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CTItem *,std::allocator<CTItem *> >::pop_back, COMDAT
; _this$ = ecx

; 587  : 		{	// erase element at end

  00000	56		 push	 esi

; 588  : 		if (!empty())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 14		 je	 SHORT $L181506
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	8b c2		 mov	 eax, edx
  0000d	2b c6		 sub	 eax, esi
  0000f	c1 f8 02	 sar	 eax, 2
  00012	85 c0		 test	 eax, eax
  00014	74 06		 je	 SHORT $L181506

; 589  : 			{	// erase last element
; 590  : 			_Destroy(_Mylast - 1, _Mylast);
; 591  : 			--_Mylast;

  00016	83 c2 fc	 add	 edx, -4			; fffffffcH
  00019	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$L181506:
  0001c	5e		 pop	 esi

; 592  : 			}
; 593  : 		}

  0001d	c3		 ret	 0
?pop_back@?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTItem *,std::allocator<CTItem *> >::pop_back
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[]
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L194239
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L194207:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L194209
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L194210
$L194209:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L194210:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L194207
  00029	5b		 pop	 ebx
$L194239:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L194244

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L194244:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L194320
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L194288:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L194290
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L194291
$L194290:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L194291:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L194288
  0002b	5b		 pop	 ebx
$L194320:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L194441
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L194441:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L194464
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L194464:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
_TEXT	ENDS
PUBLIC	??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L194516
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L194516:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear, COMDAT
; _this$ = ecx

; 743  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 744  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L194530
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L194530:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 745  : 		}

  00029	c3		 ret	 0
?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L149774

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L149774:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L149775

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L149775:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L149777
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L149777
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L194536
  00047	8b de		 mov	 ebx, esi
$L194536:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L194590
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L194587
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L194587:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L194590:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L149777:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L194627

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L194623
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L194623:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L194627:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTItem *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z ; CTMapSvrModule::SendDM_CREATERECALLMON_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T194778 DD	0ffffffffH
	DD	FLAT:$L194648
	DD	00H
	DD	FLAT:$L194649
	DD	01H
	DD	FLAT:$L194650
$T194774 DD	019930520H
	DD	03H
	DD	FLAT:$T194778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T194645 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPlayer$ = 8						; size = 4
_wMonID$ = 12						; size = 2
_dwATTR$ = 16						; size = 4
_wPetID$ = 20						; size = 2
_strName$ = 24						; size = 4
_bLevel$ = 28						; size = 1
_bClass$ = 32						; size = 1
_bRace$ = 36						; size = 1
_bAction$ = 40						; size = 1
_bStatus$ = 44						; size = 1
_bMode$ = 48						; size = 1
_dwMaxHP$ = 52						; size = 4
_dwMaxMP$ = 56						; size = 4
_dwHP$ = 60						; size = 4
_dwMP$ = 64						; size = 4
_bHit$ = 68						; size = 1
_bSkillLevel$ = 72					; size = 1
_fPosX$ = 76						; size = 4
_fPosY$ = 80						; size = 4
_fPosZ$ = 84						; size = 4
_wDir$ = 88						; size = 2
_dwTime$ = 92						; size = 4
_vSkill$ = 96						; size = 16
?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z PROC NEAR ; CTMapSvrModule::SendDM_CREATERECALLMON_REQ, COMDAT
; _this$ = ecx

; 326  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	bb 01 00 00 00	 mov	 ebx, 1

; 327  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00025	6a 20		 push	 32			; 00000020H
  00027	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	8b f0		 mov	 esi, eax
  00032	83 c4 04	 add	 esp, 4
  00035	89 74 24 14	 mov	 DWORD PTR $T194645[esp+36], esi
  00039	85 f6		 test	 esi, esi
  0003b	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  00040	74 12		 je	 SHORT $L194646
  00042	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00045	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0004a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00050	8b ee		 mov	 ebp, esi
  00052	eb 02		 jmp	 SHORT $L194647
$L194646:
  00054	33 ed		 xor	 ebp, ebp
$L194647:

; 328  : 	pBUF->m_packet.SetID(DM_CREATERECALLMON_REQ)
; 329  : 		<< pPlayer->m_dwID
; 330  : 		<< pPlayer->m_dwKEY
; 331  : 		<< wMonID
; 332  : 		<< dwATTR
; 333  : 		<< wPetID
; 334  : 		<< strName
; 335  : 		<< bLevel
; 336  : 		<< bClass
; 337  : 		<< bRace
; 338  : 		<< bAction
; 339  : 		<< bStatus
; 340  : 		<< bMode
; 341  : 		<< dwMaxHP
; 342  : 		<< dwMaxMP
; 343  : 		<< dwHP
; 344  : 		<< dwMP
; 345  : 		<< bHit
; 346  : 		<< bSkillLevel
; 347  : 		<< fPosX
; 348  : 		<< fPosY
; 349  : 		<< fPosZ
; 350  : 		<< wDir
; 351  : 		<< dwTime
; 352  : 		<< BYTE(vSkill.size());

  00056	8b bc 24 84 00
	00 00		 mov	 edi, DWORD PTR _vSkill$[esp+36]
  0005d	85 ff		 test	 edi, edi
  0005f	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00063	75 04		 jne	 SHORT $L194659
  00065	33 c0		 xor	 eax, eax
  00067	eb 0b		 jmp	 SHORT $L194660
$L194659:
  00069	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _vSkill$[esp+40]
  00070	2b c7		 sub	 eax, edi
  00072	d1 f8		 sar	 eax, 1
$L194660:
  00074	50		 push	 eax
  00075	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR _dwTime$[esp+36]
  0007c	8b 4c 24 7c	 mov	 ecx, DWORD PTR _wDir$[esp+36]
  00080	8b 54 24 78	 mov	 edx, DWORD PTR _fPosZ$[esp+36]
  00084	50		 push	 eax
  00085	8b 44 24 78	 mov	 eax, DWORD PTR _fPosY$[esp+40]
  00089	51		 push	 ecx
  0008a	8b 4c 24 78	 mov	 ecx, DWORD PTR _fPosX$[esp+44]
  0008e	52		 push	 edx
  0008f	8b 54 24 78	 mov	 edx, DWORD PTR _bSkillLevel$[esp+48]
  00093	50		 push	 eax
  00094	8b 44 24 78	 mov	 eax, DWORD PTR _bHit$[esp+52]
  00098	51		 push	 ecx
  00099	8b 4c 24 78	 mov	 ecx, DWORD PTR _dwMP$[esp+56]
  0009d	52		 push	 edx
  0009e	8b 54 24 78	 mov	 edx, DWORD PTR _dwHP$[esp+60]
  000a2	50		 push	 eax
  000a3	8b 44 24 78	 mov	 eax, DWORD PTR _dwMaxMP$[esp+64]
  000a7	51		 push	 ecx
  000a8	8b 4c 24 78	 mov	 ecx, DWORD PTR _dwMaxHP$[esp+68]
  000ac	52		 push	 edx
  000ad	8b 54 24 78	 mov	 edx, DWORD PTR _bMode$[esp+72]
  000b1	50		 push	 eax
  000b2	8b 44 24 78	 mov	 eax, DWORD PTR _bStatus$[esp+76]
  000b6	51		 push	 ecx
  000b7	8b 4c 24 78	 mov	 ecx, DWORD PTR _bAction$[esp+80]
  000bb	52		 push	 edx
  000bc	8b 54 24 78	 mov	 edx, DWORD PTR _bRace$[esp+84]
  000c0	50		 push	 eax
  000c1	8b 44 24 78	 mov	 eax, DWORD PTR _bClass$[esp+88]
  000c5	51		 push	 ecx
  000c6	8b 4c 24 78	 mov	 ecx, DWORD PTR _bLevel$[esp+92]
  000ca	52		 push	 edx
  000cb	8b 54 24 78	 mov	 edx, DWORD PTR _strName$[esp+96]
  000cf	50		 push	 eax
  000d0	8b 44 24 78	 mov	 eax, DWORD PTR _wPetID$[esp+100]
  000d4	51		 push	 ecx
  000d5	8b 4c 24 78	 mov	 ecx, DWORD PTR _dwATTR$[esp+104]
  000d9	52		 push	 edx
  000da	8b 54 24 78	 mov	 edx, DWORD PTR _wMonID$[esp+108]
  000de	50		 push	 eax
  000df	8b 44 24 78	 mov	 eax, DWORD PTR _pPlayer$[esp+112]
  000e3	51		 push	 ecx
  000e4	8b 88 b0 03 01
	00		 mov	 ecx, DWORD PTR [eax+66480]
  000ea	52		 push	 edx
  000eb	8b 90 44 01 01
	00		 mov	 edx, DWORD PTR [eax+65860]
  000f1	51		 push	 ecx
  000f2	52		 push	 edx
  000f3	8d 5d 04	 lea	 ebx, DWORD PTR [ebp+4]
  000f6	68 2e 90 00 00	 push	 36910			; 0000902eH
  000fb	8b cb		 mov	 ecx, ebx
  000fd	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00109	8b c8		 mov	 ecx, eax
  0010b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00110	8b c8		 mov	 ecx, eax
  00112	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00117	8b c8		 mov	 ecx, eax
  00119	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00125	8b c8		 mov	 ecx, eax
  00127	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0012c	8b c8		 mov	 ecx, eax
  0012e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00133	8b c8		 mov	 ecx, eax
  00135	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0013a	8b c8		 mov	 ecx, eax
  0013c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00141	8b c8		 mov	 ecx, eax
  00143	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00148	8b c8		 mov	 ecx, eax
  0014a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0014f	8b c8		 mov	 ecx, eax
  00151	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00156	8b c8		 mov	 ecx, eax
  00158	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0015d	8b c8		 mov	 ecx, eax
  0015f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00164	8b c8		 mov	 ecx, eax
  00166	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0016b	8b c8		 mov	 ecx, eax
  0016d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00172	8b c8		 mov	 ecx, eax
  00174	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00179	8b c8		 mov	 ecx, eax
  0017b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00180	8b c8		 mov	 ecx, eax
  00182	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00187	8b c8		 mov	 ecx, eax
  00189	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0018e	8b c8		 mov	 ecx, eax
  00190	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00195	8b c8		 mov	 ecx, eax
  00197	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0019c	8b c8		 mov	 ecx, eax
  0019e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001a3	8b c8		 mov	 ecx, eax
  001a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 353  : 
; 354  : 	for(DWORD i=0; i< vSkill.size(); i++)

  001aa	33 f6		 xor	 esi, esi
  001ac	8d 64 24 00	 npad	 4
$L175566:
  001b0	85 ff		 test	 edi, edi
  001b2	74 20		 je	 SHORT $L194776
  001b4	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _vSkill$[esp+40]
  001bb	2b c7		 sub	 eax, edi
  001bd	d1 f8		 sar	 eax, 1
  001bf	3b f0		 cmp	 esi, eax
  001c1	73 11		 jae	 SHORT $L194776

; 355  : 	{
; 356  : 		pBUF->m_packet
; 357  : 			<< vSkill[i];

  001c3	33 c0		 xor	 eax, eax
  001c5	66 8b 04 77	 mov	 ax, WORD PTR [edi+esi*2]
  001c9	8b cb		 mov	 ecx, ebx
  001cb	50		 push	 eax
  001cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001d1	46		 inc	 esi
  001d2	eb dc		 jmp	 SHORT $L175566
$L194776:

; 358  : 	}
; 359  : 
; 360  : 	SayToDB(pBUF);

  001d4	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  001d8	55		 push	 ebp
  001d9	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 361  : }

  001de	8b 44 24 38	 mov	 eax, DWORD PTR _strName$[esp+32]
  001e2	83 c0 f0	 add	 eax, -16		; fffffff0H
  001e5	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  001ea	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  001ed	83 ca ff	 or	 edx, -1
  001f0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  001f4	4a		 dec	 edx
  001f5	85 d2		 test	 edx, edx
  001f7	7f 08		 jg	 SHORT $L194750
  001f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fd	50		 push	 eax
  001fe	ff 52 04	 call	 DWORD PTR [edx+4]
$L194750:
  00201	85 ff		 test	 edi, edi
  00203	74 09		 je	 SHORT $L194769
  00205	57		 push	 edi
  00206	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0020b	83 c4 04	 add	 esp, 4
$L194769:
  0020e	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00212	5f		 pop	 edi
  00213	5e		 pop	 esi
  00214	5d		 pop	 ebp
  00215	5b		 pop	 ebx
  00216	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0021d	83 c4 14	 add	 esp, 20			; 00000014H
  00220	c2 68 00	 ret	 104			; 00000068H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194648:
  00000	8d 4d 5c	 lea	 ecx, DWORD PTR _vSkill$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
$L194649:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L194650:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T194645[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194774
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CREATERECALLMON_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@GKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEKKKKEEMMMGKV?$vector@GV?$allocator@G@std@@@std@@@Z ENDP ; CTMapSvrModule::SendDM_CREATERECALLMON_REQ
PUBLIC	?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z ; CTMapSvrModule::SendMW_CREATERECALLMON_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T194914 DD	0ffffffffH
	DD	FLAT:$L194788
	DD	00H
	DD	FLAT:$L194789
	DD	01H
	DD	FLAT:$L194790
$T194910 DD	019930520H
	DD	03H
	DD	FLAT:$T194914
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T194785 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwMonID$ = 16						; size = 4
_wMon$ = 20						; size = 2
_dwATTR$ = 24						; size = 4
_wPetID$ = 28						; size = 2
_strName$ = 32						; size = 4
_dwTime$ = 36						; size = 4
_bLevel$ = 40						; size = 1
_bClass$ = 44						; size = 1
_bRace$ = 48						; size = 1
_bAction$ = 52						; size = 1
_bStatus$ = 56						; size = 1
_bMode$ = 60						; size = 1
_dwMaxHP$ = 64						; size = 4
_dwMaxMP$ = 68						; size = 4
_dwHP$ = 72						; size = 4
_dwMP$ = 76						; size = 4
_bHit$ = 80						; size = 1
_bSkillLevel$ = 84					; size = 1
_fPosX$ = 88						; size = 4
_fPosY$ = 92						; size = 4
_fPosZ$ = 96						; size = 4
_wDir$ = 100						; size = 2
_vSkill$ = 104						; size = 16
?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CREATERECALLMON_ACK, COMDAT
; _this$ = ecx

; 571  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	bb 01 00 00 00	 mov	 ebx, 1

; 572  : 	CPacket *pMSG = new CPacket();

  00025	6a 1c		 push	 28			; 0000001cH
  00027	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 44 24 14	 mov	 DWORD PTR $T194785[esp+36], eax
  00037	85 c0		 test	 eax, eax
  00039	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  0003e	74 0b		 je	 SHORT $L194786
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00047	8b e8		 mov	 ebp, eax
  00049	eb 02		 jmp	 SHORT $L194787
$L194786:
  0004b	33 ed		 xor	 ebp, ebp
$L194787:

; 573  : 
; 574  : 	pMSG->SetID(MW_CREATERECALLMON_ACK)
; 575  : 		<< dwCharID
; 576  : 		<< dwKEY
; 577  : 		<< dwMonID
; 578  : 		<< wMon
; 579  : 		<< dwATTR
; 580  : 		<< wPetID
; 581  : 		<< strName
; 582  : 		<< bLevel
; 583  : 		<< bClass
; 584  : 		<< bRace
; 585  : 		<< bAction
; 586  : 		<< bStatus
; 587  : 		<< bMode
; 588  : 		<< dwMaxHP
; 589  : 		<< dwMaxMP
; 590  : 		<< dwHP
; 591  : 		<< dwMP
; 592  : 		<< bHit
; 593  : 		<< bSkillLevel
; 594  : 		<< fPosX
; 595  : 		<< fPosY
; 596  : 		<< fPosZ
; 597  : 		<< wDir
; 598  : 		<< dwTime
; 599  : 		<< BYTE(vSkill.size());

  0004d	8b bc 24 8c 00
	00 00		 mov	 edi, DWORD PTR _vSkill$[esp+36]
  00054	85 ff		 test	 edi, edi
  00056	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005a	8b 9c 24 90 00
	00 00		 mov	 ebx, DWORD PTR _vSkill$[esp+40]
  00061	75 04		 jne	 SHORT $L194795
  00063	33 c0		 xor	 eax, eax
  00065	eb 06		 jmp	 SHORT $L194796
$L194795:
  00067	8b c3		 mov	 eax, ebx
  00069	2b c7		 sub	 eax, edi
  0006b	d1 f8		 sar	 eax, 1
$L194796:
  0006d	50		 push	 eax
  0006e	8b 44 24 48	 mov	 eax, DWORD PTR _dwTime$[esp+36]
  00072	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR _wDir$[esp+36]
  00079	50		 push	 eax
  0007a	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR _fPosZ$[esp+40]
  00081	51		 push	 ecx
  00082	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _fPosY$[esp+44]
  00089	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _fPosX$[esp+44]
  00090	52		 push	 edx
  00091	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bSkillLevel$[esp+48]
  00098	50		 push	 eax
  00099	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bHit$[esp+52]
  000a0	51		 push	 ecx
  000a1	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _dwMP$[esp+56]
  000a8	52		 push	 edx
  000a9	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _dwHP$[esp+60]
  000b0	50		 push	 eax
  000b1	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _dwMaxMP$[esp+64]
  000b8	51		 push	 ecx
  000b9	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _dwMaxHP$[esp+68]
  000c0	52		 push	 edx
  000c1	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bMode$[esp+72]
  000c8	50		 push	 eax
  000c9	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bStatus$[esp+76]
  000d0	51		 push	 ecx
  000d1	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _bAction$[esp+80]
  000d8	52		 push	 edx
  000d9	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bRace$[esp+84]
  000e0	50		 push	 eax
  000e1	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bClass$[esp+88]
  000e8	51		 push	 ecx
  000e9	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _bLevel$[esp+92]
  000f0	52		 push	 edx
  000f1	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _strName$[esp+96]
  000f8	50		 push	 eax
  000f9	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR _wPetID$[esp+100]
  00100	51		 push	 ecx
  00101	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR _dwATTR$[esp+104]
  00108	52		 push	 edx
  00109	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _wMon$[esp+108]
  00110	50		 push	 eax
  00111	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR _dwMonID$[esp+112]
  00118	51		 push	 ecx
  00119	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR _dwKEY$[esp+116]
  00120	52		 push	 edx
  00121	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _dwCharID$[esp+120]
  00128	50		 push	 eax
  00129	51		 push	 ecx
  0012a	52		 push	 edx
  0012b	68 b9 20 00 00	 push	 8377			; 000020b9H
  00130	8b cd		 mov	 ecx, ebp
  00132	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00137	8b c8		 mov	 ecx, eax
  00139	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0013e	8b c8		 mov	 ecx, eax
  00140	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00145	8b c8		 mov	 ecx, eax
  00147	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0014c	8b c8		 mov	 ecx, eax
  0014e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0015a	8b c8		 mov	 ecx, eax
  0015c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00161	8b c8		 mov	 ecx, eax
  00163	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00168	8b c8		 mov	 ecx, eax
  0016a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0016f	8b c8		 mov	 ecx, eax
  00171	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00176	8b c8		 mov	 ecx, eax
  00178	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0017d	8b c8		 mov	 ecx, eax
  0017f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00184	8b c8		 mov	 ecx, eax
  00186	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0018b	8b c8		 mov	 ecx, eax
  0018d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00192	8b c8		 mov	 ecx, eax
  00194	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00199	8b c8		 mov	 ecx, eax
  0019b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001a0	8b c8		 mov	 ecx, eax
  001a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001a7	8b c8		 mov	 ecx, eax
  001a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ae	8b c8		 mov	 ecx, eax
  001b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001b5	8b c8		 mov	 ecx, eax
  001b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001bc	8b c8		 mov	 ecx, eax
  001be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001ca	8b c8		 mov	 ecx, eax
  001cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001d1	8b c8		 mov	 ecx, eax
  001d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001d8	8b c8		 mov	 ecx, eax
  001da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001df	8b c8		 mov	 ecx, eax
  001e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 600  : 
; 601  : 	for(DWORD i=0; i<vSkill.size(); i++)

  001e6	33 f6		 xor	 esi, esi
$L175907:
  001e8	85 ff		 test	 edi, edi
  001ea	74 1b		 je	 SHORT $L194912
  001ec	8b c3		 mov	 eax, ebx
  001ee	2b c7		 sub	 eax, edi
  001f0	d1 f8		 sar	 eax, 1
  001f2	3b f0		 cmp	 esi, eax
  001f4	73 11		 jae	 SHORT $L194912

; 602  : 	{
; 603  : 		(*pMSG)
; 604  : 			<< vSkill[i];

  001f6	33 c0		 xor	 eax, eax
  001f8	66 8b 04 77	 mov	 ax, WORD PTR [edi+esi*2]
  001fc	8b cd		 mov	 ecx, ebp
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00204	46		 inc	 esi
  00205	eb e1		 jmp	 SHORT $L175907
$L194912:

; 605  : 	}
; 606  : 
; 607  : 	m_world.Say(pMSG);

  00207	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  0020b	8b 91 b8 a3 01
	00		 mov	 edx, DWORD PTR [ecx+107448]
  00211	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  00217	55		 push	 ebp
  00218	ff 12		 call	 DWORD PTR [edx]

; 608  : }

  0021a	8b 44 24 40	 mov	 eax, DWORD PTR _strName$[esp+32]
  0021e	83 c0 f0	 add	 eax, -16		; fffffff0H
  00221	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  00226	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00229	83 ca ff	 or	 edx, -1
  0022c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00230	4a		 dec	 edx
  00231	85 d2		 test	 edx, edx
  00233	7f 08		 jg	 SHORT $L194887
  00235	8b 08		 mov	 ecx, DWORD PTR [eax]
  00237	8b 11		 mov	 edx, DWORD PTR [ecx]
  00239	50		 push	 eax
  0023a	ff 52 04	 call	 DWORD PTR [edx+4]
$L194887:
  0023d	85 ff		 test	 edi, edi
  0023f	74 09		 je	 SHORT $L194905
  00241	57		 push	 edi
  00242	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00247	83 c4 04	 add	 esp, 4
$L194905:
  0024a	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0024e	5f		 pop	 edi
  0024f	5e		 pop	 esi
  00250	5d		 pop	 ebp
  00251	5b		 pop	 ebx
  00252	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00259	83 c4 14	 add	 esp, 20			; 00000014H
  0025c	c2 70 00	 ret	 112			; 00000070H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194788:
  00000	8d 4d 64	 lea	 ecx, DWORD PTR _vSkill$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
$L194789:
  00008	8d 4d 1c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L194790:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T194785[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194910
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CREATERECALLMON_ACK@CTMapSvrModule@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z ENDP ; CTMapSvrModule::SendMW_CREATERECALLMON_ACK
PUBLIC	?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z ; CTMapSvrModule::SendDM_POSTRECVFROMSVR_REQ
EXTRN	?GetSvrMsg@CTMapSvrModule@@QAE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:NEAR ; CTMapSvrModule::GetSvrMsg
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T195177 DD	0ffffffffH
	DD	FLAT:$L194929
	DD	00H
	DD	FLAT:$L194930
	DD	01H
	DD	FLAT:$L194931
	DD	02H
	DD	FLAT:$L194932
	DD	02H
	DD	FLAT:$L194933
$T195170 DD	019930520H
	DD	05H
	DD	FLAT:$T195177
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
_TEXT	SEGMENT
$T194920 = -24						; size = 4
$T194924 = -20						; size = 4
$T194921 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwRecvID$ = 8						; size = 4
_strTarget$ = 12					; size = 4
_strTitle$ = 16						; size = 4
_strMessage$ = 20					; size = 4
_bType$ = 24						; size = 1
_dwGold$ = 28						; size = 4
_dwSilver$ = 32						; size = 4
_dwCooper$ = 36						; size = 4
_vpItem$ = 40						; size = 4
?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTRECVFROMSVR_REQ, COMDAT
; _this$ = ecx

; 1406 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	55		 push	 ebp
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b f9		 mov	 edi, ecx
  0001d	89 7c 24 14	 mov	 DWORD PTR _this$[esp+36], edi

; 1407 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00021	6a 20		 push	 32			; 00000020H
  00023	c7 44 24 24 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 2
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	8b f0		 mov	 esi, eax
  00032	83 c4 04	 add	 esp, 4
  00035	89 74 24 10	 mov	 DWORD PTR $T194921[esp+36], esi
  00039	85 f6		 test	 esi, esi
  0003b	c6 44 24 20 03	 mov	 BYTE PTR __$EHRec$[esp+44], 3
  00040	74 14		 je	 SHORT $L194922
  00042	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00045	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0004a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00050	89 74 24 0c	 mov	 DWORD PTR $T194920[esp+36], esi
  00054	eb 08		 jmp	 SHORT $L194923
$L194922:
  00056	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR $T194920[esp+36], 0
$L194923:

; 1408 : 	
; 1409 : 	pBUF->m_packet.SetID(DM_POSTRECV_REQ)
; 1410 : 		<< DWORD(0)
; 1411 : 		<< dwRecvID
; 1412 : 		<< GetSvrMsg(NAME_OPERATOR)
; 1413 : 		<< strTarget
; 1414 : 		<< strTitle
; 1415 : 		<< strMessage
; 1416 : 		<< bType
; 1417 : 		<< dwGold
; 1418 : 		<< dwSilver
; 1419 : 		<< dwCooper;

  0005e	6a 06		 push	 6
  00060	8d 44 24 14	 lea	 eax, DWORD PTR $T194924[esp+40]
  00064	50		 push	 eax
  00065	8b cf		 mov	 ecx, edi
  00067	c6 44 24 28 02	 mov	 BYTE PTR __$EHRec$[esp+52], 2
  0006c	e8 00 00 00 00	 call	 ?GetSvrMsg@CTMapSvrModule@@QAE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTMapSvrModule::GetSvrMsg
  00071	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwCooper$[esp+32]
  00075	8b 54 24 40	 mov	 edx, DWORD PTR _dwSilver$[esp+32]
  00079	8b 00		 mov	 eax, DWORD PTR [eax]
  0007b	8b 6c 24 0c	 mov	 ebp, DWORD PTR $T194920[esp+36]
  0007f	51		 push	 ecx
  00080	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwGold$[esp+36]
  00084	52		 push	 edx
  00085	8b 54 24 40	 mov	 edx, DWORD PTR _bType$[esp+40]
  00089	51		 push	 ecx
  0008a	8b 4c 24 40	 mov	 ecx, DWORD PTR _strMessage$[esp+44]
  0008e	52		 push	 edx
  0008f	8b 54 24 40	 mov	 edx, DWORD PTR _strTitle$[esp+48]
  00093	51		 push	 ecx
  00094	8b 4c 24 40	 mov	 ecx, DWORD PTR _strTarget$[esp+52]
  00098	52		 push	 edx
  00099	8b 54 24 40	 mov	 edx, DWORD PTR _dwRecvID$[esp+56]
  0009d	51		 push	 ecx
  0009e	50		 push	 eax
  0009f	52		 push	 edx
  000a0	6a 00		 push	 0
  000a2	83 c5 04	 add	 ebp, 4
  000a5	68 23 90 00 00	 push	 36899			; 00009023H
  000aa	8b cd		 mov	 ecx, ebp
  000ac	c6 44 24 4c 04	 mov	 BYTE PTR __$EHRec$[esp+88], 4
  000b1	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e0	8b c8		 mov	 ecx, eax
  000e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e7	8b c8		 mov	 ecx, eax
  000e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000fc	8b 44 24 10	 mov	 eax, DWORD PTR $T194924[esp+36]
  00100	83 c0 f0	 add	 eax, -16		; fffffff0H
  00103	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  00108	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0010b	83 ca ff	 or	 edx, -1
  0010e	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00112	4a		 dec	 edx
  00113	85 d2		 test	 edx, edx
  00115	7f 08		 jg	 SHORT $L194978
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011b	50		 push	 eax
  0011c	ff 52 04	 call	 DWORD PTR [edx+4]
$L194978:

; 1420 : 
; 1421 : 	if(vpItem)

  0011f	8b 7c 24 48	 mov	 edi, DWORD PTR _vpItem$[esp+32]
  00123	85 ff		 test	 edi, edi
  00125	74 6d		 je	 SHORT $L178057

; 1422 : 	{
; 1423 : 		pBUF->m_packet
; 1424 : 			<< BYTE(vpItem->size());

  00127	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0012a	85 c9		 test	 ecx, ecx
  0012c	75 04		 jne	 SHORT $L194984
  0012e	33 c0		 xor	 eax, eax
  00130	eb 08		 jmp	 SHORT $L194985
$L194984:
  00132	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00135	2b c1		 sub	 eax, ecx
  00137	c1 f8 02	 sar	 eax, 2
$L194985:
  0013a	50		 push	 eax
  0013b	8b cd		 mov	 ecx, ebp
  0013d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00142	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
$L178059:

; 1425 : 
; 1426 : 		while(!vpItem->empty())

  00145	85 c0		 test	 eax, eax
  00147	74 54		 je	 SHORT $L195174
  00149	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  0014c	8b ca		 mov	 ecx, edx
  0014e	2b c8		 sub	 ecx, eax
  00150	c1 f9 02	 sar	 ecx, 2
  00153	85 c9		 test	 ecx, ecx
  00155	74 46		 je	 SHORT $L195174

; 1427 : 		{
; 1428 : 			CTItem * pItem = vpItem->back();

  00157	8b 72 fc	 mov	 esi, DWORD PTR [edx-4]

; 1429 : 
; 1430 : 			pBUF->m_packet
; 1431 : 				<< pItem->m_bInven;

  0015a	33 c0		 xor	 eax, eax
  0015c	8a 46 2a	 mov	 al, BYTE PTR [esi+42]
  0015f	8b cd		 mov	 ecx, ebp
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1432 : 
; 1433 : 			pItem->WrapPacket(&(pBUF->m_packet));

  00167	55		 push	 ebp
  00168	8b ce		 mov	 ecx, esi
  0016a	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 1434 : 
; 1435 : 			delete pItem;

  0016f	8b 16		 mov	 edx, DWORD PTR [esi]
  00171	6a 01		 push	 1
  00173	8b ce		 mov	 ecx, esi
  00175	ff 12		 call	 DWORD PTR [edx]

; 1436 : 			vpItem->pop_back();

  00177	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0017a	85 c0		 test	 eax, eax
  0017c	74 1f		 je	 SHORT $L195174
  0017e	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00181	8b ca		 mov	 ecx, edx
  00183	2b c8		 sub	 ecx, eax
  00185	c1 f9 02	 sar	 ecx, 2
  00188	85 c9		 test	 ecx, ecx
  0018a	74 b9		 je	 SHORT $L178059
  0018c	83 c2 fc	 add	 edx, -4			; fffffffcH
  0018f	89 57 08	 mov	 DWORD PTR [edi+8], edx

; 1437 : 		}

  00192	eb b1		 jmp	 SHORT $L178059
$L178057:

; 1438 : 	}
; 1439 : 	else
; 1440 : 	{
; 1441 : 		pBUF->m_packet
; 1442 : 			<< BYTE(0);

  00194	6a 00		 push	 0
  00196	8b cd		 mov	 ecx, ebp
  00198	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L195174:

; 1443 : 	}
; 1444 : 
; 1445 : 	SayToDB(pBUF);

  0019d	8b 44 24 0c	 mov	 eax, DWORD PTR $T194920[esp+36]
  001a1	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+36]
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1446 : }

  001ab	8b 44 24 2c	 mov	 eax, DWORD PTR _strTarget$[esp+32]
  001af	83 c0 f0	 add	 eax, -16		; fffffff0H
  001b2	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  001b7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  001ba	83 ca ff	 or	 edx, -1
  001bd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  001c1	4a		 dec	 edx
  001c2	85 d2		 test	 edx, edx
  001c4	5f		 pop	 edi
  001c5	5e		 pop	 esi
  001c6	5d		 pop	 ebp
  001c7	7f 08		 jg	 SHORT $L195114
  001c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001cd	50		 push	 eax
  001ce	ff 52 04	 call	 DWORD PTR [edx+4]
$L195114:
  001d1	8b 44 24 24	 mov	 eax, DWORD PTR _strTitle$[esp+20]
  001d5	83 c0 f0	 add	 eax, -16		; fffffff0H
  001d8	c6 44 24 14 00	 mov	 BYTE PTR __$EHRec$[esp+32], 0
  001dd	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  001e0	83 ca ff	 or	 edx, -1
  001e3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  001e7	4a		 dec	 edx
  001e8	85 d2		 test	 edx, edx
  001ea	7f 08		 jg	 SHORT $L195141
  001ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f0	50		 push	 eax
  001f1	ff 52 04	 call	 DWORD PTR [edx+4]
$L195141:
  001f4	8b 44 24 28	 mov	 eax, DWORD PTR _strMessage$[esp+20]
  001f8	83 c0 f0	 add	 eax, -16		; fffffff0H
  001fb	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00203	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00206	83 ca ff	 or	 edx, -1
  00209	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0020d	4a		 dec	 edx
  0020e	85 d2		 test	 edx, edx
  00210	7f 08		 jg	 SHORT $L195168
  00212	8b 08		 mov	 ecx, DWORD PTR [eax]
  00214	8b 11		 mov	 edx, DWORD PTR [ecx]
  00216	50		 push	 eax
  00217	ff 52 04	 call	 DWORD PTR [edx+4]
$L195168:
  0021a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0021e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00225	83 c4 18	 add	 esp, 24			; 00000018H
  00228	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194929:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L194930:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L194931:
  00010	8d 4d 08	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L194932:
  00018	8b 45 ec	 mov	 eax, DWORD PTR $T194921[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
$L194933:
  00023	8d 4d ec	 lea	 ecx, DWORD PTR $T194924[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z:
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T195170
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTRECVFROMSVR_REQ@CTMapSvrModule@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00EKKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z ENDP ; CTMapSvrModule::SendDM_POSTRECVFROMSVR_REQ
PUBLIC	?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ; CTMapSvrModule::SendDM_DELETEDEALITEM_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T195370 DD	0ffffffffH
	DD	FLAT:$L195187
$T195365 DD	019930520H
	DD	01H
	DD	FLAT:$T195370
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T195184 = 8						; size = 4
_pPlayer$ = 8						; size = 4
?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z PROC NEAR ; CTMapSvrModule::SendDM_DELETEDEALITEM_REQ, COMDAT
; _this$ = ecx

; 3976 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi

; 3977 : 	if(pPlayer->m_dealItem.m_vRecvItem.empty() &&
; 3978 : 		pPlayer->m_dealItem.m_vSendItem.empty())

  00017	8b 74 24 18	 mov	 esi, DWORD PTR _pPlayer$[esp+16]
  0001b	89 4c 24 04	 mov	 DWORD PTR _this$[esp+20], ecx
  0001f	8b 8e c4 02 01
	00		 mov	 ecx, DWORD PTR [esi+66244]
  00025	85 c9		 test	 ecx, ecx
  00027	74 0f		 je	 SHORT $L195368
  00029	8b 86 c8 02 01
	00		 mov	 eax, DWORD PTR [esi+66248]
  0002f	2b c1		 sub	 eax, ecx
  00031	c1 f8 02	 sar	 eax, 2
  00034	85 c0		 test	 eax, eax
  00036	75 21		 jne	 SHORT $L180570
$L195368:
  00038	8b 8e b4 02 01
	00		 mov	 ecx, DWORD PTR [esi+66228]
  0003e	85 c9		 test	 ecx, ecx
  00040	0f 84 26 01 00
	00		 je	 $L180569
  00046	8b 86 b8 02 01
	00		 mov	 eax, DWORD PTR [esi+66232]
  0004c	2b c1		 sub	 eax, ecx
  0004e	c1 f8 02	 sar	 eax, 2
  00051	85 c0		 test	 eax, eax
  00053	0f 84 13 01 00
	00		 je	 $L180569
$L180570:
  00059	53		 push	 ebx
  0005a	55		 push	 ebp
  0005b	57		 push	 edi

; 3979 : 		return;
; 3980 : 
; 3981 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0005c	6a 20		 push	 32			; 00000020H
  0005e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00063	8b f8		 mov	 edi, eax
  00065	83 c4 04	 add	 esp, 4
  00068	89 7c 24 24	 mov	 DWORD PTR $T195184[esp+28], edi
  0006c	85 ff		 test	 edi, edi
  0006e	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00076	74 12		 je	 SHORT $L195185
  00078	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0007b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00080	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00086	8b ef		 mov	 ebp, edi
  00088	eb 02		 jmp	 SHORT $L195186
$L195185:
  0008a	33 ed		 xor	 ebp, ebp
$L195186:

; 3982 : 
; 3983 : 	pBUF->m_packet.SetID(DM_DELETEDEALITEM_REQ)
; 3984 : 		<< BYTE(pPlayer->m_dealItem.m_vSendItem.size() + pPlayer->m_dealItem.m_vRecvItem.size());

  0008c	8b 8e b4 02 01
	00		 mov	 ecx, DWORD PTR [esi+66228]
  00092	85 c9		 test	 ecx, ecx
  00094	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0009c	75 04		 jne	 SHORT $L195227
  0009e	33 c0		 xor	 eax, eax
  000a0	eb 0b		 jmp	 SHORT $L195228
$L195227:
  000a2	8b 86 b8 02 01
	00		 mov	 eax, DWORD PTR [esi+66232]
  000a8	2b c1		 sub	 eax, ecx
  000aa	c1 f8 02	 sar	 eax, 2
$L195228:
  000ad	8b 96 c4 02 01
	00		 mov	 edx, DWORD PTR [esi+66244]
  000b3	85 d2		 test	 edx, edx
  000b5	75 04		 jne	 SHORT $L195235
  000b7	33 c9		 xor	 ecx, ecx
  000b9	eb 0b		 jmp	 SHORT $L195236
$L195235:
  000bb	8b 8e c8 02 01
	00		 mov	 ecx, DWORD PTR [esi+66248]
  000c1	2b ca		 sub	 ecx, edx
  000c3	c1 f9 02	 sar	 ecx, 2
$L195236:
  000c6	02 c1		 add	 al, cl
  000c8	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  000cb	8b cf		 mov	 ecx, edi
  000cd	50		 push	 eax
  000ce	68 6f 90 00 00	 push	 36975			; 0000906fH
  000d3	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000d8	8b c8		 mov	 ecx, eax
  000da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3985 : 
; 3986 : 	for(BYTE is=0; is<pPlayer->m_dealItem.m_vSendItem.size(); is++)

  000df	32 db		 xor	 bl, bl
$L180577:
  000e1	8b 8e b4 02 01
	00		 mov	 ecx, DWORD PTR [esi+66228]
  000e7	85 c9		 test	 ecx, ecx
  000e9	75 04		 jne	 SHORT $L195243
  000eb	33 c0		 xor	 eax, eax
  000ed	eb 0b		 jmp	 SHORT $L195244
$L195243:
  000ef	8b 86 b8 02 01
	00		 mov	 eax, DWORD PTR [esi+66232]
  000f5	2b c1		 sub	 eax, ecx
  000f7	c1 f8 02	 sar	 eax, 2
$L195244:
  000fa	0f b6 cb	 movzx	 ecx, bl
  000fd	3b c8		 cmp	 ecx, eax
  000ff	73 1e		 jae	 SHORT $L180579

; 3987 : 	{
; 3988 : 		pBUF->m_packet
; 3989 : 			<< pPlayer->m_dealItem.m_vSendItem[is]->m_dlID;

  00101	8b 86 b4 02 01
	00		 mov	 eax, DWORD PTR [esi+66228]
  00107	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0010a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010c	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0010f	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00112	52		 push	 edx
  00113	50		 push	 eax
  00114	8b cf		 mov	 ecx, edi
  00116	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0011b	fe c3		 inc	 bl
  0011d	eb c2		 jmp	 SHORT $L180577
$L180579:

; 3990 : 	}
; 3991 : 	for(BYTE ir=0; ir<pPlayer->m_dealItem.m_vRecvItem.size(); ir++)

  0011f	32 db		 xor	 bl, bl
$L180581:
  00121	8b 8e c4 02 01
	00		 mov	 ecx, DWORD PTR [esi+66244]
  00127	85 c9		 test	 ecx, ecx
  00129	75 04		 jne	 SHORT $L195306
  0012b	33 c0		 xor	 eax, eax
  0012d	eb 0b		 jmp	 SHORT $L195307
$L195306:
  0012f	8b 86 c8 02 01
	00		 mov	 eax, DWORD PTR [esi+66248]
  00135	2b c1		 sub	 eax, ecx
  00137	c1 f8 02	 sar	 eax, 2
$L195307:
  0013a	0f b6 cb	 movzx	 ecx, bl
  0013d	3b c8		 cmp	 ecx, eax
  0013f	73 1e		 jae	 SHORT $L180583

; 3992 : 	{
; 3993 : 		pBUF->m_packet
; 3994 : 			<< pPlayer->m_dealItem.m_vRecvItem[ir]->m_dlID;

  00141	8b 96 c4 02 01
	00		 mov	 edx, DWORD PTR [esi+66244]
  00147	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  0014a	8b 00		 mov	 eax, DWORD PTR [eax]
  0014c	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0014f	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00152	51		 push	 ecx
  00153	52		 push	 edx
  00154	8b cf		 mov	 ecx, edi
  00156	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0015b	fe c3		 inc	 bl
  0015d	eb c2		 jmp	 SHORT $L180581
$L180583:

; 3995 : 	}
; 3996 : 
; 3997 : 	SayToDB(pBUF);

  0015f	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+32]
  00163	55		 push	 ebp
  00164	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB
  00169	5f		 pop	 edi
  0016a	5d		 pop	 ebp
  0016b	5b		 pop	 ebx
$L180569:

; 3998 : }

  0016c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00170	5e		 pop	 esi
  00171	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00178	83 c4 10	 add	 esp, 16			; 00000010H
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L195187:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T195184[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T195365
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_DELETEDEALITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ENDP ; CTMapSvrModule::SendDM_DELETEDEALITEM_REQ
PUBLIC	?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z ; CTMapSvrModule::SendDM_QUESTSENDPOST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T195459 DD	0ffffffffH
	DD	FLAT:$L195380
$T195455 DD	019930520H
	DD	01H
	DD	FLAT:$T195459
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T195377 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwQuestID$ = 8						; size = 4
_dwCharID$ = 12						; size = 4
_pvItem$ = 16						; size = 4
?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z PROC NEAR ; CTMapSvrModule::SendDM_QUESTSENDPOST_REQ, COMDAT
; _this$ = ecx

; 4178 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 4179 : 	LPPACKETBUF pMSG = new PACKETBUF();

  0001c	6a 20		 push	 32			; 00000020H
  0001e	89 4c 24 14	 mov	 DWORD PTR _this$[esp+40], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	8b f0		 mov	 esi, eax
  00029	83 c4 04	 add	 esp, 4
  0002c	89 74 24 14	 mov	 DWORD PTR $T195377[esp+36], esi
  00030	85 f6		 test	 esi, esi
  00032	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 0
  0003a	74 12		 je	 SHORT $L195378
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	8b ee		 mov	 ebp, esi
  0004c	eb 02		 jmp	 SHORT $L195379
$L195378:
  0004e	33 ed		 xor	 ebp, ebp
$L195379:

; 4180 : 	pMSG->m_packet.SetID(DM_QUESTSENDPOST_REQ)
; 4181 : 		<< dwQuestID
; 4182 : 		<< dwCharID
; 4183 : 		<< BYTE(pvItem->size());

  00050	8b 7c 24 30	 mov	 edi, DWORD PTR _pvItem$[esp+32]
  00054	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00057	85 c9		 test	 ecx, ecx
  00059	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00061	75 04		 jne	 SHORT $L195390
  00063	33 c0		 xor	 eax, eax
  00065	eb 08		 jmp	 SHORT $L195391
$L195390:
  00067	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006a	2b c1		 sub	 eax, ecx
  0006c	c1 f8 02	 sar	 eax, 2
$L195391:
  0006f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwQuestID$[esp+32]
  00073	50		 push	 eax
  00074	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  00078	50		 push	 eax
  00079	51		 push	 ecx
  0007a	8d 5d 04	 lea	 ebx, DWORD PTR [ebp+4]
  0007d	68 80 90 00 00	 push	 36992			; 00009080H
  00082	8b cb		 mov	 ecx, ebx
  00084	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4184 : 
; 4185 : 	for(DWORD i = 0; i < pvItem->size(); i++)	

  0009e	33 f6		 xor	 esi, esi
$L180806:
  000a0	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000a3	85 c9		 test	 ecx, ecx
  000a5	74 18		 je	 SHORT $L195457
  000a7	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000aa	2b c1		 sub	 eax, ecx
  000ac	c1 f8 02	 sar	 eax, 2
  000af	3b f0		 cmp	 esi, eax
  000b1	73 0c		 jae	 SHORT $L195457

; 4186 : 		(*pvItem)[i]->WrapPacket(&(pMSG->m_packet));	

  000b3	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  000b6	53		 push	 ebx
  000b7	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket
  000bc	46		 inc	 esi
  000bd	eb e1		 jmp	 SHORT $L180806
$L195457:

; 4187 : 
; 4188 : 	SayToDB(pMSG);

  000bf	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  000c3	55		 push	 ebp
  000c4	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4189 : }

  000c9	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5d		 pop	 ebp
  000d0	5b		 pop	 ebx
  000d1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d8	83 c4 14	 add	 esp, 20			; 00000014H
  000db	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L195380:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T195377[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T195455
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_QUESTSENDPOST_REQ@CTMapSvrModule@@QAEXKKPAV?$vector@PAVCTItem@@V?$allocator@PAVCTItem@@@std@@@std@@@Z ENDP ; CTMapSvrModule::SendDM_QUESTSENDPOST_REQ
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T195468 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L195545
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L195544:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L195546
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L195547
$L195546:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L195547:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L195544
$L195545:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L195467
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L195467
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L195467:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T195468[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T195468[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L195637
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L195637:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
$T195646 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 1b		 jne	 SHORT $L195741
  00014	56		 push	 esi
  00015	66 8b 37	 mov	 si, WORD PTR [edi]
$L195740:
  00018	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  0001c	73 05		 jae	 SHORT $L195742
  0001e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00021	eb 04		 jmp	 SHORT $L195743
$L195742:
  00023	8b d0		 mov	 edx, eax
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$L195743:
  00027	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002a	84 db		 test	 bl, bl
  0002c	74 ea		 je	 SHORT $L195740
  0002e	5e		 pop	 esi
$L195741:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00032	3b d0		 cmp	 edx, eax
  00034	89 54 24 14	 mov	 DWORD PTR __Where$[esp+8], edx
  00038	74 1b		 je	 SHORT $L195645
  0003a	66 8b 0f	 mov	 cx, WORD PTR [edi]
  0003d	66 3b 4a 0c	 cmp	 cx, WORD PTR [edx+12]
  00041	72 12		 jb	 SHORT $L195645
  00043	8d 44 24 14	 lea	 eax, DWORD PTR __Where$[esp+8]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0004d	5f		 pop	 edi
  0004e	89 10		 mov	 DWORD PTR [eax], edx
  00050	5b		 pop	 ebx

; 791  : 		}

  00051	59		 pop	 ecx
  00052	c2 08 00	 ret	 8
$L195645:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00055	89 44 24 08	 mov	 DWORD PTR $T195646[esp+12], eax
  00059	8d 44 24 08	 lea	 eax, DWORD PTR $T195646[esp+12]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00063	5f		 pop	 edi
  00064	89 10		 mov	 DWORD PTR [eax], edx
  00066	5b		 pop	 ebx

; 791  : 		}

  00067	59		 pop	 ecx
  00068	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagCABINET@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagCABINET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCABINET *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCABINET *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagHOTKEYINVEN@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagHOTKEYINVEN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagHOTKEYINVEN *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagHOTKEYINVEN *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCQuest@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCQuest@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CQuest *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CQuest *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagPET@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagPET@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagPET *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagPET *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L196008
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L196008:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L196041
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L196041:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L196048
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L196048:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L148837

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L148837:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L148839

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L148839:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L148840

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L148840:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L196157
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L196157:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L196158
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L196245:
  0006b	76 6d		 jbe	 SHORT $L196244

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L196210
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L196211

; 599  : 		else if (_Grow(_Num))

$L196158:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L196245
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L196201
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L196201:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L196210:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L196211:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L196217
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L196218
$L196217:
  000b7	8b f8		 mov	 edi, eax
$L196218:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L196241
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L196241:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L196244:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L196267
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L196268
$L196267:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L196268:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L149761
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L196271
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L196272
$L196271:
  00029	8b c8		 mov	 ecx, eax
$L196272:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L149761

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L196284
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L196284:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L149761:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L196382
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L196382:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L196383
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L196463:
  00077	76 68		 jbe	 SHORT $L196460

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L196435
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L196436

; 611  : 
; 612  : 		if (_Grow(_Num))

$L196383:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L196463
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L196426
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L196426:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L196435:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L196436:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L196458
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L196458:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L196460:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ	; CTMapSvrModule::SendMW_CONNECT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T196576 DD	0ffffffffH
	DD	FLAT:$L196474
$T196572 DD	019930520H
	DD	01H
	DD	FLAT:$T196576
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ
_TEXT	SEGMENT
_itCH$ = -16						; size = 4
$T196468 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ PROC NEAR	; CTMapSvrModule::SendMW_CONNECT_ACK, COMDAT
; _this$ = ecx

; 211  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 212  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f1		 mov	 esi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T196468[esp+24], eax
  00028	33 ff		 xor	 edi, edi
  0002a	3b c7		 cmp	 eax, edi
  0002c	89 7c 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], edi
  00030	74 09		 je	 SHORT $L196470
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f8		 mov	 edi, eax
$L196470:

; 213  : 
; 214  : 	pMSG->SetID(MW_CONNECT_ACK)
; 215  : 		<< MAKEWORD( m_bServerID, BYTE(SVRGRP_MAPSVR))
; 216  : 		<< BYTE(m_mapTLOGCHANNEL.size());

  0003b	8b 86 5c 01 00
	00		 mov	 eax, DWORD PTR [esi+348]
  00041	50		 push	 eax
  00042	66 0f b6 86 82
	9e 00 00	 movzx	 ax, BYTE PTR [esi+40578]
  0004a	8b cf		 mov	 ecx, edi
  0004c	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00054	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00059	50		 push	 eax
  0005a	68 01 20 00 00	 push	 8193			; 00002001H
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 217  : 
; 218  : 	MAPTCHANNEL::iterator itCH;
; 219  : 	for( itCH = m_mapTLOGCHANNEL.begin(); itCH != m_mapTLOGCHANNEL.end(); itCH++)

  00072	8b 8e 58 01 00
	00		 mov	 ecx, DWORD PTR [esi+344]
  00078	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007a	3b c1		 cmp	 eax, ecx
  0007c	89 44 24 08	 mov	 DWORD PTR _itCH$[esp+24], eax
  00080	74 22		 je	 SHORT $L175450
$L196525:

; 220  : 		(*pMSG) << BYTE((*itCH).first);

  00082	33 c9		 xor	 ecx, ecx
  00084	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00087	51		 push	 ecx
  00088	8b cf		 mov	 ecx, edi
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008f	8d 4c 24 08	 lea	 ecx, DWORD PTR _itCH$[esp+24]
  00093	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTChannel@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTChannel@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTChannel *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTChannel *> >,0> >::const_iterator::_Inc
  00098	8b 44 24 08	 mov	 eax, DWORD PTR _itCH$[esp+24]
  0009c	3b 86 58 01 00
	00		 cmp	 eax, DWORD PTR [esi+344]
  000a2	75 de		 jne	 SHORT $L196525
$L175450:

; 221  : 
; 222  : 	m_world.Say(pMSG);

  000a4	8b 96 b8 a3 01
	00		 mov	 edx, DWORD PTR [esi+107448]
  000aa	8d 8e b8 a3 01
	00		 lea	 ecx, DWORD PTR [esi+107448]
  000b0	57		 push	 edi
  000b1	ff 12		 call	 DWORD PTR [edx]

; 223  : }

  000b3	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c0	83 c4 10	 add	 esp, 16			; 00000010H
  000c3	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196474:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T196468[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T196572
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CONNECT_ACK@CTMapSvrModule@@QAEXXZ ENDP		; CTMapSvrModule::SendMW_CONNECT_ACK
PUBLIC	?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ; CTMapSvrModule::SendMW_CHARDATA_ACK
EXTRN	?GetLifeTick@CTRecallMon@@QAEKK@Z:NEAR		; CTRecallMon::GetLifeTick
EXTRN	?GetBuffer@CPacket@@QAEPAEXZ:NEAR		; CPacket::GetBuffer
EXTRN	?GetSize@CPacket@@QAEGXZ:NEAR			; CPacket::GetSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T197159 DD	0ffffffffH
	DD	FLAT:$L196596
$T197144 DD	019930520H
	DD	01H
	DD	FLAT:$T197159
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
_bCount$ = -33						; size = 1
$T196582 = -32						; size = 4
tv782 = -28						; size = 4
tv784 = -24						; size = 4
_this$ = -20						; size = 4
_wSize$ = -16						; size = 2
$T196583 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPlayer$ = 8						; size = 4
?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CHARDATA_ACK, COMDAT
; _this$ = ecx

; 476  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 18	 sub	 esp, 24			; 00000018H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 477  : 	CPacket *pMSG = new CPacket();

  0001c	6a 1c		 push	 28			; 0000001cH
  0001e	89 4c 24 24	 mov	 DWORD PTR _this$[esp+56], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	89 44 24 24	 mov	 DWORD PTR $T196583[esp+52], eax
  0002e	33 ed		 xor	 ebp, ebp
  00030	3b c5		 cmp	 eax, ebp
  00032	89 6c 24 30	 mov	 DWORD PTR __$EHRec$[esp+60], ebp
  00036	74 0f		 je	 SHORT $L196584
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f8		 mov	 edi, eax
  00041	89 7c 24 14	 mov	 DWORD PTR $T196582[esp+52], edi
  00045	eb 06		 jmp	 SHORT $L196585
$L196584:
  00047	89 6c 24 14	 mov	 DWORD PTR $T196582[esp+52], ebp
  0004b	8b fd		 mov	 edi, ebp
$L196585:

; 478  : 
; 479  : 	pMSG->SetID(MW_CHARDATA_ACK)
; 480  : 		<< pPlayer->m_dwID
; 481  : 		<< pPlayer->m_dwKEY
; 482  : 		<< pPlayer->m_bStartAct
; 483  : 		<< pPlayer->m_bLevel
; 484  : 		<< pPlayer->GetMaxHP()
; 485  : 		<< pPlayer->m_dwHP
; 486  : 		<< pPlayer->GetMaxMP()
; 487  : 		<< pPlayer->m_dwMP
; 488  : 		<< pPlayer->m_bCountry
; 489  : 		<< pPlayer->m_bMode;

  0004d	8b 5c 24 38	 mov	 ebx, DWORD PTR _pPlayer$[esp+48]
  00051	8b 93 60 01 01
	00		 mov	 edx, DWORD PTR [ebx+65888]
  00057	33 c0		 xor	 eax, eax
  00059	8a 83 76 01 01
	00		 mov	 al, BYTE PTR [ebx+65910]
  0005f	33 c9		 xor	 ecx, ecx
  00061	8a 8b 9d 01 01
	00		 mov	 cl, BYTE PTR [ebx+65949]
  00067	8d b3 00 01 01
	00		 lea	 esi, DWORD PTR [ebx+65792]
  0006d	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00075	50		 push	 eax
  00076	8b 06		 mov	 eax, DWORD PTR [esi]
  00078	51		 push	 ecx
  00079	52		 push	 edx
  0007a	8b ce		 mov	 ecx, esi
  0007c	ff 50 74	 call	 DWORD PTR [eax+116]
  0007f	8b 8b 5c 01 01
	00		 mov	 ecx, DWORD PTR [ebx+65884]
  00085	8b 16		 mov	 edx, DWORD PTR [esi]
  00087	50		 push	 eax
  00088	51		 push	 ecx
  00089	8b ce		 mov	 ecx, esi
  0008b	ff 52 70	 call	 DWORD PTR [edx+112]
  0008e	8b 93 b0 03 01
	00		 mov	 edx, DWORD PTR [ebx+66480]
  00094	50		 push	 eax
  00095	33 c0		 xor	 eax, eax
  00097	8a 83 7b 01 01
	00		 mov	 al, BYTE PTR [ebx+65915]
  0009d	33 c9		 xor	 ecx, ecx
  0009f	8a 8b b4 03 01
	00		 mov	 cl, BYTE PTR [ebx+66484]
  000a5	50		 push	 eax
  000a6	8b 83 44 01 01
	00		 mov	 eax, DWORD PTR [ebx+65860]
  000ac	51		 push	 ecx
  000ad	52		 push	 edx
  000ae	50		 push	 eax
  000af	68 04 20 00 00	 push	 8196			; 00002004H
  000b4	8b cf		 mov	 ecx, edi
  000b6	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d0	8b c8		 mov	 ecx, eax
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d7	8b c8		 mov	 ecx, eax
  000d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ec	8b c8		 mov	 ecx, eax
  000ee	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f3	8b c8		 mov	 ecx, eax
  000f5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fa	8b c8		 mov	 ecx, eax
  000fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 490  : 
; 491  : 	WORD wSize = pMSG->GetSize();

  00101	8b cf		 mov	 ecx, edi
  00103	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 492  : 	BYTE bCount = 0;
; 493  : 	(*pMSG) << bCount;

  00108	55		 push	 ebp
  00109	8b cf		 mov	 ecx, edi
  0010b	c6 44 24 17 00	 mov	 BYTE PTR _bCount$[esp+56], 0
  00110	89 44 24 28	 mov	 DWORD PTR _wSize$[esp+56], eax
  00114	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 494  : 
; 495  : 	MAPTRECALLMON::iterator it;
; 496  : 	for(it=pPlayer->m_mapRecallMon.begin(); it!=pPlayer->m_mapRecallMon.end(); it++)

  00119	8b 83 10 02 01
	00		 mov	 eax, DWORD PTR [ebx+66064]
  0011f	8b 28		 mov	 ebp, DWORD PTR [eax]
  00121	3b e8		 cmp	 ebp, eax
  00123	0f 84 86 02 00
	00		 je	 $L175743
  00129	8d a4 24 00 00
	00 00		 npad	 7
$L196823:

; 497  : 	{
; 498  : 		CTRecallMon * pMon = (*it).second;
; 499  : 		DWORD dwTick = pMon->GetLifeTick(m_dwTick);

  00130	8b 4c 24 20	 mov	 ecx, DWORD PTR _this$[esp+52]
  00134	8b 91 48 a9 02
	00		 mov	 edx, DWORD PTR [ecx+174408]
  0013a	8b 75 10	 mov	 esi, DWORD PTR [ebp+16]
  0013d	52		 push	 edx
  0013e	8b ce		 mov	 ecx, esi
  00140	e8 00 00 00 00	 call	 ?GetLifeTick@CTRecallMon@@QAEKK@Z ; CTRecallMon::GetLifeTick

; 500  : 		if(pMon->m_dwDurationTick && !dwTick)

  00145	8b 8e 84 01 00
	00		 mov	 ecx, DWORD PTR [esi+388]
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 08		 je	 SHORT $L175764
  0014f	85 c0		 test	 eax, eax
  00151	0f 84 fa 01 00
	00		 je	 $L175742
$L175764:

; 501  : 			continue;
; 502  : 
; 503  : 		(*pMSG)
; 504  : 			<< pMon->m_dwID
; 505  : 			<< pMon->m_pMON->m_wID
; 506  : 			<< MAKELONG(pMon->m_pATTR->m_wID, pMon->m_bLevel)
; 507  : 			<< pMon->m_wPetID
; 508  : 			<< pMon->m_strName
; 509  : 			<< pMon->m_bLevel
; 510  : 			<< BYTE(pMon->m_pMON->m_wID ? pMon->m_pMON->m_bClass : pPlayer->m_bClass)
; 511  : 			<< BYTE(pMon->m_pMON->m_wID ? pMon->m_pMON->m_bRace : pPlayer->m_bRace)
; 512  : 			<< pMon->m_bAction
; 513  : 			<< pMon->m_bStatus
; 514  : 			<< pMon->m_bMode
; 515  : 			<< pMon->GetMaxHP()
; 516  : 			<< pMon->GetMaxMP()
; 517  : 			<< pMon->m_dwHP
; 518  : 			<< pMon->m_dwMP
; 519  : 			<< pMon->m_bHit
; 520  : 			<< pMon->m_bAtkSkillLevel
; 521  : 			<< pMon->m_fPosX
; 522  : 			<< pMon->m_fPosY
; 523  : 			<< pMon->m_fPosZ
; 524  : 			<< pMon->m_wDIR
; 525  : 			<< dwTick
; 526  : 			<< BYTE(pMon->m_mapTSKILL.size());

  00157	8b 8e ec 00 00
	00		 mov	 ecx, DWORD PTR [esi+236]
  0015d	66 8b 79 24	 mov	 di, WORD PTR [ecx+36]
  00161	66 85 ff	 test	 di, di
  00164	74 05		 je	 SHORT $L196591
  00166	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  00169	eb 06		 jmp	 SHORT $L197158
$L196591:
  0016b	8a 93 ba 03 01
	00		 mov	 dl, BYTE PTR [ebx+66490]
$L197158:
  00171	66 85 ff	 test	 di, di
  00174	88 54 24 18	 mov	 BYTE PTR tv782[esp+52], dl
  00178	74 09		 je	 SHORT $L196589
  0017a	8a 49 26	 mov	 cl, BYTE PTR [ecx+38]
  0017d	88 4c 24 1c	 mov	 BYTE PTR tv784[esp+52], cl
  00181	eb 0a		 jmp	 SHORT $L196590
$L196589:
  00183	8a 93 b8 03 01
	00		 mov	 dl, BYTE PTR [ebx+66488]
  00189	88 54 24 1c	 mov	 BYTE PTR tv784[esp+52], dl
$L196590:
  0018d	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00190	8b 96 80 00 00
	00		 mov	 edx, DWORD PTR [esi+128]
  00196	51		 push	 ecx
  00197	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  0019d	50		 push	 eax
  0019e	33 c0		 xor	 eax, eax
  001a0	66 8b 86 94 00
	00 00		 mov	 ax, WORD PTR [esi+148]
  001a7	8b be 78 01 00
	00		 mov	 edi, DWORD PTR [esi+376]
  001ad	8a 5e 7b	 mov	 bl, BYTE PTR [esi+123]
  001b0	50		 push	 eax
  001b1	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  001b4	51		 push	 ecx
  001b5	52		 push	 edx
  001b6	33 c9		 xor	 ecx, ecx
  001b8	8a 8e 99 01 00
	00		 mov	 cl, BYTE PTR [esi+409]
  001be	33 d2		 xor	 edx, edx
  001c0	8a 96 8c 01 00
	00		 mov	 dl, BYTE PTR [esi+396]
  001c6	50		 push	 eax
  001c7	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  001ca	51		 push	 ecx
  001cb	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  001ce	52		 push	 edx
  001cf	8b 16		 mov	 edx, DWORD PTR [esi]
  001d1	50		 push	 eax
  001d2	51		 push	 ecx
  001d3	8b ce		 mov	 ecx, esi
  001d5	ff 52 74	 call	 DWORD PTR [edx+116]
  001d8	50		 push	 eax
  001d9	8b 06		 mov	 eax, DWORD PTR [esi]
  001db	8b ce		 mov	 ecx, esi
  001dd	ff 50 70	 call	 DWORD PTR [eax+112]
  001e0	50		 push	 eax
  001e1	33 c9		 xor	 ecx, ecx
  001e3	8a 4e 76	 mov	 cl, BYTE PTR [esi+118]
  001e6	33 d2		 xor	 edx, edx
  001e8	8a 96 cc 00 00
	00		 mov	 dl, BYTE PTR [esi+204]
  001ee	33 c0		 xor	 eax, eax
  001f0	8a 46 75	 mov	 al, BYTE PTR [esi+117]
  001f3	51		 push	 ecx
  001f4	8b 4c 24 4c	 mov	 ecx, DWORD PTR tv782[esp+104]
  001f8	52		 push	 edx
  001f9	8b 54 24 54	 mov	 edx, DWORD PTR tv784[esp+108]
  001fd	50		 push	 eax
  001fe	51		 push	 ecx
  001ff	8b 8e f0 00 00
	00		 mov	 ecx, DWORD PTR [esi+240]
  00205	52		 push	 edx
  00206	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00209	8b 8e ec 00 00
	00		 mov	 ecx, DWORD PTR [esi+236]
  0020f	33 c0		 xor	 eax, eax
  00211	66 8b 86 7c 01
	00 00		 mov	 ax, WORD PTR [esi+380]
  00218	53		 push	 ebx
  00219	57		 push	 edi
  0021a	50		 push	 eax
  0021b	0f b6 c3	 movzx	 eax, bl
  0021e	8b 5c 24 64	 mov	 ebx, DWORD PTR $T196582[esp+132]
  00222	c1 e0 10	 shl	 eax, 16			; 00000010H
  00225	0b d0		 or	 edx, eax
  00227	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0022a	52		 push	 edx
  0022b	33 d2		 xor	 edx, edx
  0022d	66 8b 51 24	 mov	 dx, WORD PTR [ecx+36]
  00231	8b cb		 mov	 ecx, ebx
  00233	52		 push	 edx
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0023a	8b c8		 mov	 ecx, eax
  0023c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00241	8b c8		 mov	 ecx, eax
  00243	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@J@Z	; CPacket::operator<<
  00248	8b c8		 mov	 ecx, eax
  0024a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0024f	8b c8		 mov	 ecx, eax
  00251	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00256	8b c8		 mov	 ecx, eax
  00258	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0025d	8b c8		 mov	 ecx, eax
  0025f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00264	8b c8		 mov	 ecx, eax
  00266	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0026b	8b c8		 mov	 ecx, eax
  0026d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00272	8b c8		 mov	 ecx, eax
  00274	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00279	8b c8		 mov	 ecx, eax
  0027b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00280	8b c8		 mov	 ecx, eax
  00282	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00287	8b c8		 mov	 ecx, eax
  00289	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0028e	8b c8		 mov	 ecx, eax
  00290	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00295	8b c8		 mov	 ecx, eax
  00297	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0029c	8b c8		 mov	 ecx, eax
  0029e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002a3	8b c8		 mov	 ecx, eax
  002a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002aa	8b c8		 mov	 ecx, eax
  002ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002b1	8b c8		 mov	 ecx, eax
  002b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002b8	8b c8		 mov	 ecx, eax
  002ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002bf	8b c8		 mov	 ecx, eax
  002c1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002c6	8b c8		 mov	 ecx, eax
  002c8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002cd	8b c8		 mov	 ecx, eax
  002cf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 527  : 
; 528  : 		MAPTSKILL::iterator itS;
; 529  : 		for(itS=pMon->m_mapTSKILL.begin(); itS!=pMon->m_mapTSKILL.end(); itS++)

  002d4	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  002d7	8b 38		 mov	 edi, DWORD PTR [eax]
  002d9	3b f8		 cmp	 edi, eax
  002db	74 62		 je	 SHORT $L175854
  002dd	8d 49 00	 npad	 3
$L197098:

; 530  : 		{
; 531  : 			(*pMSG)
; 532  : 				<< (*itS).second->m_pTSKILL->m_wID;

  002e0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  002e3	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  002e6	33 c0		 xor	 eax, eax
  002e8	66 8b 02	 mov	 ax, WORD PTR [edx]
  002eb	8b cb		 mov	 ecx, ebx
  002ed	50		 push	 eax
  002ee	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002f3	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  002f6	84 c0		 test	 al, al
  002f8	75 40		 jne	 SHORT $L197092
  002fa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  002fd	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00300	84 c9		 test	 cl, cl
  00302	75 19		 jne	 SHORT $L197148
  00304	8b f8		 mov	 edi, eax
  00306	8b 07		 mov	 eax, DWORD PTR [edi]
  00308	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0030b	84 c9		 test	 cl, cl
  0030d	75 2b		 jne	 SHORT $L197092
  0030f	90		 npad	 1

; 527  : 
; 528  : 		MAPTSKILL::iterator itS;
; 529  : 		for(itS=pMon->m_mapTSKILL.begin(); itS!=pMon->m_mapTSKILL.end(); itS++)

$L197080:
  00310	8b f8		 mov	 edi, eax
  00312	8b 07		 mov	 eax, DWORD PTR [edi]
  00314	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00317	84 c9		 test	 cl, cl
  00319	74 f5		 je	 SHORT $L197080
  0031b	eb 1d		 jmp	 SHORT $L197092
$L197148:
  0031d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00320	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00323	84 c9		 test	 cl, cl
  00325	75 11		 jne	 SHORT $L197095
$L197094:
  00327	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0032a	75 0c		 jne	 SHORT $L197095
  0032c	8b f8		 mov	 edi, eax
  0032e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00331	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00334	84 c9		 test	 cl, cl
  00336	74 ef		 je	 SHORT $L197094
$L197095:
  00338	8b f8		 mov	 edi, eax
$L197092:
  0033a	3b 7e 18	 cmp	 edi, DWORD PTR [esi+24]
  0033d	75 a1		 jne	 SHORT $L197098
$L175854:

; 533  : 		}
; 534  : 		
; 535  : 		bCount++;

  0033f	8a 44 24 13	 mov	 al, BYTE PTR _bCount$[esp+52]
  00343	8b 7c 24 14	 mov	 edi, DWORD PTR $T196582[esp+52]
  00347	8b 5c 24 38	 mov	 ebx, DWORD PTR _pPlayer$[esp+48]
  0034b	fe c0		 inc	 al
  0034d	88 44 24 13	 mov	 BYTE PTR _bCount$[esp+52], al
$L175742:
  00351	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00354	84 c0		 test	 al, al
  00356	75 4b		 jne	 SHORT $L196817
  00358	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  0035b	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0035e	84 c0		 test	 al, al
  00360	75 1d		 jne	 SHORT $L197150
  00362	8b 01		 mov	 eax, DWORD PTR [ecx]
  00364	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00367	84 d2		 test	 dl, dl
  00369	75 10		 jne	 SHORT $L196806
  0036b	eb 03 8d 49 00	 npad	 5

; 494  : 
; 495  : 	MAPTRECALLMON::iterator it;
; 496  : 	for(it=pPlayer->m_mapRecallMon.begin(); it!=pPlayer->m_mapRecallMon.end(); it++)

$L196805:
  00370	8b c8		 mov	 ecx, eax
  00372	8b 01		 mov	 eax, DWORD PTR [ecx]
  00374	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00377	84 d2		 test	 dl, dl
  00379	74 f5		 je	 SHORT $L196805
$L196806:
  0037b	8b e9		 mov	 ebp, ecx
  0037d	eb 24		 jmp	 SHORT $L196817
$L197150:
  0037f	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00382	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00385	84 c9		 test	 cl, cl
  00387	75 18		 jne	 SHORT $L196820
  00389	8d a4 24 00 00
	00 00		 npad	 7
$L196819:
  00390	3b 68 08	 cmp	 ebp, DWORD PTR [eax+8]
  00393	75 0c		 jne	 SHORT $L196820
  00395	8b e8		 mov	 ebp, eax
  00397	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0039a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0039d	84 c9		 test	 cl, cl
  0039f	74 ef		 je	 SHORT $L196819
$L196820:
  003a1	8b e8		 mov	 ebp, eax
$L196817:
  003a3	3b ab 10 02 01
	00		 cmp	 ebp, DWORD PTR [ebx+66064]
  003a9	0f 85 81 fd ff
	ff		 jne	 $L196823
$L175743:

; 536  : 	}
; 537  : 
; 538  : 	memcpy(pMSG->GetBuffer()+wSize, &bCount, sizeof(bCount));

  003af	8b cf		 mov	 ecx, edi
  003b1	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  003b6	0f b7 4c 24 24	 movzx	 ecx, WORD PTR _wSize$[esp+52]
  003bb	8a 54 24 13	 mov	 dl, BYTE PTR _bCount$[esp+52]
  003bf	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 539  : 
; 540  : 	(*pMSG)
; 541  : 		<< pPlayer->m_strComment;

  003c2	8b 83 a8 03 01
	00		 mov	 eax, DWORD PTR [ebx+66472]
  003c8	50		 push	 eax
  003c9	8b cf		 mov	 ecx, edi
  003cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 542  : 
; 543  : 	m_world.Say(pMSG);

  003d0	8b 4c 24 20	 mov	 ecx, DWORD PTR _this$[esp+52]
  003d4	8b 91 b8 a3 01
	00		 mov	 edx, DWORD PTR [ecx+107448]
  003da	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  003e0	57		 push	 edi
  003e1	ff 12		 call	 DWORD PTR [edx]

; 544  : }

  003e3	8b 4c 24 28	 mov	 ecx, DWORD PTR __$EHRec$[esp+52]
  003e7	5f		 pop	 edi
  003e8	5e		 pop	 esi
  003e9	5d		 pop	 ebp
  003ea	5b		 pop	 ebx
  003eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003f2	83 c4 24	 add	 esp, 36			; 00000024H
  003f5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L196596:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T196583[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197144
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARDATA_ACK@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ENDP ; CTMapSvrModule::SendMW_CHARDATA_ACK
PUBLIC	?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ; CTMapSvrModule::SendDM_SAVECHARPOSITION_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T197298 DD	0ffffffffH
	DD	FLAT:$L197170
$T197296 DD	019930520H
	DD	01H
	DD	FLAT:$T197298
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT
_fPosY$ = -24						; size = 4
_fPosX$ = -20						; size = 4
$T197167 = -16						; size = 4
_itAr$176059 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fPosZ$ = 8						; size = 4
_pPlayer$ = 8						; size = 4
_wACKMsg$ = 12						; size = 2
?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z PROC NEAR ; CTMapSvrModule::SendDM_SAVECHARPOSITION_REQ, COMDAT
; _this$ = ecx

; 704  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi

; 705  : 	WORD wMapID = pPlayer->m_wMapID;

  0001b	8b 74 24 28	 mov	 esi, DWORD PTR _pPlayer$[esp+32]

; 706  : 	FLOAT fPosX = pPlayer->m_fPosX;
; 707  : 	FLOAT fPosY = pPlayer->m_fPosY;
; 708  : 	FLOAT fPosZ = pPlayer->m_fPosZ;
; 709  : 
; 710  : 	if(pPlayer->m_wArenaID)

  0001f	66 83 be 9a 04
	01 00 00	 cmp	 WORD PTR [esi+66714], 0
  00027	8b 86 7c 01 01
	00		 mov	 eax, DWORD PTR [esi+65916]
  0002d	8b 96 84 01 01
	00		 mov	 edx, DWORD PTR [esi+65924]
  00033	66 8b ae 90 01
	01 00		 mov	 bp, WORD PTR [esi+65936]
  0003a	89 44 24 10	 mov	 DWORD PTR _fPosX$[esp+36], eax
  0003e	8b d9		 mov	 ebx, ecx
  00040	8b 8e 80 01 01
	00		 mov	 ecx, DWORD PTR [esi+65920]
  00046	8d 86 9a 04 01
	00		 lea	 eax, DWORD PTR [esi+66714]
  0004c	57		 push	 edi
  0004d	89 4c 24 10	 mov	 DWORD PTR _fPosY$[esp+40], ecx
  00051	89 54 24 2c	 mov	 DWORD PTR _fPosZ$[esp+36], edx
  00055	74 3e		 je	 SHORT $L176062

; 711  : 	{
; 712  : 		MAPARENA::iterator itAr = m_mapArena.find(pPlayer->m_wArenaID);

  00057	50		 push	 eax
  00058	8d 44 24 1c	 lea	 eax, DWORD PTR _itAr$176059[esp+44]
  0005c	50		 push	 eax
  0005d	8d 8b 2c 8d 00
	00		 lea	 ecx, DWORD PTR [ebx+36140]
  00063	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::find

; 713  : 		if(itAr != m_mapArena.end())

  00068	8b 83 30 8d 00
	00		 mov	 eax, DWORD PTR [ebx+36144]
  0006e	8b 4c 24 18	 mov	 ecx, DWORD PTR _itAr$176059[esp+40]
  00072	3b c8		 cmp	 ecx, eax
  00074	74 1f		 je	 SHORT $L176062

; 714  : 		{
; 715  : 			wMapID = itAr->second->m_pOutPos->m_wMapID;

  00076	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00079	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 716  : 			fPosX = itAr->second->m_pOutPos->m_fPosX;

  0007c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 717  : 			fPosY = itAr->second->m_pOutPos->m_fPosY;

  0007f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00082	66 8b 68 02	 mov	 bp, WORD PTR [eax+2]
  00086	89 54 24 14	 mov	 DWORD PTR _fPosX$[esp+40], edx

; 718  : 			fPosZ = itAr->second->m_pOutPos->m_fPosZ;

  0008a	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0008d	89 4c 24 10	 mov	 DWORD PTR _fPosY$[esp+40], ecx
  00091	89 54 24 2c	 mov	 DWORD PTR _fPosZ$[esp+36], edx
$L176062:

; 719  : 		}
; 720  : 	}
; 721  : 
; 722  : 
; 723  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00095	6a 20		 push	 32			; 00000020H
  00097	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009c	8b f8		 mov	 edi, eax
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 7c 24 18	 mov	 DWORD PTR $T197167[esp+40], edi
  000a5	85 ff		 test	 edi, edi
  000a7	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  000af	74 10		 je	 SHORT $L197168
  000b1	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  000b4	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  000b9	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000bf	eb 02		 jmp	 SHORT $L197169
$L197168:
  000c1	33 ff		 xor	 edi, edi
$L197169:

; 724  : 	pBUF->m_packet.SetID(DM_SAVECHARPOSITION_REQ)
; 725  : 		<< pPlayer->m_dwID
; 726  : 		<< pPlayer->m_dwKEY
; 727  : 		<< wMapID
; 728  : 		<< fPosX
; 729  : 		<< fPosY
; 730  : 		<< fPosZ
; 731  : 		<< pPlayer->m_wDIR
; 732  : 		<< wACKMsg;

  000c3	8b 44 24 30	 mov	 eax, DWORD PTR _wACKMsg$[esp+36]
  000c7	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosZ$[esp+36]
  000cb	33 c9		 xor	 ecx, ecx
  000cd	66 8b 8e 94 01
	01 00		 mov	 cx, WORD PTR [esi+65940]
  000d4	50		 push	 eax
  000d5	8b 44 24 14	 mov	 eax, DWORD PTR _fPosY$[esp+44]
  000d9	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  000e1	51		 push	 ecx
  000e2	8b 4c 24 1c	 mov	 ecx, DWORD PTR _fPosX$[esp+48]
  000e6	52		 push	 edx
  000e7	8b 96 b0 03 01
	00		 mov	 edx, DWORD PTR [esi+66480]
  000ed	50		 push	 eax
  000ee	8b 86 44 01 01
	00		 mov	 eax, DWORD PTR [esi+65860]
  000f4	51		 push	 ecx
  000f5	55		 push	 ebp
  000f6	52		 push	 edx
  000f7	50		 push	 eax
  000f8	68 c0 90 00 00	 push	 37056			; 000090c0H
  000fd	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00100	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010c	8b c8		 mov	 ecx, eax
  0010e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0011a	8b c8		 mov	 ecx, eax
  0011c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00128	8b c8		 mov	 ecx, eax
  0012a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00136	8b c8		 mov	 ecx, eax
  00138	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 733  : 
; 734  : 	SayToDB(pBUF);

  0013d	57		 push	 edi
  0013e	8b cb		 mov	 ecx, ebx
  00140	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 735  : }

  00145	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi
  0014b	5d		 pop	 ebp
  0014c	5b		 pop	 ebx
  0014d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00154	83 c4 18	 add	 esp, 24			; 00000018H
  00157	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197170:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T197167[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197296
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVECHARPOSITION_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ENDP ; CTMapSvrModule::SendDM_SAVECHARPOSITION_REQ
PUBLIC	?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ; CTMapSvrModule::SendDM_SAVEITEM_REQ
EXTRN	?GenItemID@CTMapSvrModule@@QAE_JXZ:NEAR		; CTMapSvrModule::GenItemID
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T197535 DD	0ffffffffH
	DD	FLAT:$L197314
$T197529 DD	019930520H
	DD	01H
	DD	FLAT:$T197535
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
_itTITEM$177964 = -24					; size = 4
_itTINVEN$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T197305 = 8						; size = 4
$T197304 = 8						; size = 4
_pPlayer$ = 8						; size = 4
?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z PROC NEAR ; CTMapSvrModule::SendDM_SAVEITEM_REQ, COMDAT
; _this$ = ecx

; 1253 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp

; 1254 : 	//if(pPlayer->ProtectTutorial())
; 1255 : 	//	return;
; 1256 : 
; 1257 : 	if(!pPlayer->m_bMain || pPlayer->m_mapTINVEN.empty())

  0001a	8b 6c 24 24	 mov	 ebp, DWORD PTR _pPlayer$[esp+28]
  0001e	8a 85 a8 04 01
	00		 mov	 al, BYTE PTR [ebp+66728]
  00024	33 db		 xor	 ebx, ebx
  00026	3a c3		 cmp	 al, bl
  00028	89 4c 24 10	 mov	 DWORD PTR _this$[esp+32], ecx
  0002c	0f 84 42 01 00
	00		 je	 $L177949
  00032	39 9d 10 01 01
	00		 cmp	 DWORD PTR [ebp+65808], ebx
  00038	0f 84 36 01 00
	00		 je	 $L177949
  0003e	56		 push	 esi

; 1258 : 		return;
; 1259 : 
; 1260 : 	LPPACKETBUF pBUF = new PACKETBUF();

  0003f	6a 20		 push	 32			; 00000020H
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	8b f0		 mov	 esi, eax
  00048	83 c4 04	 add	 esp, 4
  0004b	89 74 24 28	 mov	 DWORD PTR $T197305[esp+32], esi
  0004f	3b f3		 cmp	 esi, ebx
  00051	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00055	74 10		 je	 SHORT $L197306
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0005f	89 1e		 mov	 DWORD PTR [esi], ebx
  00061	89 74 24 28	 mov	 DWORD PTR $T197304[esp+32], esi
  00065	eb 04		 jmp	 SHORT $L197307
$L197306:
  00067	89 5c 24 28	 mov	 DWORD PTR $T197304[esp+32], ebx
$L197307:

; 1261 : 	MAPTINVEN::iterator itTINVEN;
; 1262 : 	MAPTMAGIC::iterator itTMAGIC;
; 1263 : 
; 1264 : 	pBUF->m_packet.SetID(DM_SAVEITEM_REQ)
; 1265 : 		<< pPlayer->m_dwID
; 1266 : 		<< pPlayer->m_dwKEY
; 1267 : 		<< BYTE(pPlayer->m_mapTINVEN.size());

  0006b	8b 85 10 01 01
	00		 mov	 eax, DWORD PTR [ebp+65808]
  00071	8b 8d 44 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65860]
  00077	8b 5c 24 28	 mov	 ebx, DWORD PTR $T197304[esp+32]
  0007b	50		 push	 eax
  0007c	8b 85 b0 03 01
	00		 mov	 eax, DWORD PTR [ebp+66480]
  00082	50		 push	 eax
  00083	51		 push	 ecx
  00084	83 c3 04	 add	 ebx, 4
  00087	68 55 90 00 00	 push	 36949			; 00009055H
  0008c	8b cb		 mov	 ecx, ebx
  0008e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00096	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1268 : 
; 1269 : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  000b0	8b 8d 0c 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65804]
  000b6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b8	3b c1		 cmp	 eax, ecx
  000ba	89 44 24 10	 mov	 DWORD PTR _itTINVEN$[esp+36], eax
  000be	0f 84 a1 00 00
	00		 je	 $L177962
  000c4	57		 push	 edi
$L197386:

; 1270 : 	{
; 1271 : 		CTInven *pTINVEN = (*itTINVEN).second;

  000c5	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 1272 : 		MAPTITEM::iterator itTITEM;
; 1273 : 
; 1274 : 		pBUF->m_packet
; 1275 : 			<< pTINVEN->m_bInvenID
; 1276 : 			<< pTINVEN->m_wItemID
; 1277 : 			<< pTINVEN->m_dEndTime
; 1278 : 			<< pTINVEN->m_bELD
; 1279 : 			<< BYTE(pTINVEN->m_mapTITEM.size());

  000c8	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000cb	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000ce	33 d2		 xor	 edx, edx
  000d0	8a 56 28	 mov	 dl, BYTE PTR [esi+40]
  000d3	50		 push	 eax
  000d4	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000d7	52		 push	 edx
  000d8	50		 push	 eax
  000d9	33 d2		 xor	 edx, edx
  000db	66 8b 56 1a	 mov	 dx, WORD PTR [esi+26]
  000df	33 c0		 xor	 eax, eax
  000e1	8a 46 18	 mov	 al, BYTE PTR [esi+24]
  000e4	51		 push	 ecx
  000e5	8b cb		 mov	 ecx, ebx
  000e7	52		 push	 edx
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000fc	8b c8		 mov	 ecx, eax
  000fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00103	8b c8		 mov	 ecx, eax
  00105	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1280 : 
; 1281 : 		for( itTITEM = pTINVEN->m_mapTITEM.begin(); itTITEM != pTINVEN->m_mapTITEM.end(); itTITEM++)

  0010a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0010d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010f	3b c1		 cmp	 eax, ecx
  00111	89 44 24 10	 mov	 DWORD PTR _itTITEM$177964[esp+40], eax
  00115	74 34		 je	 SHORT $L177961
$L197482:

; 1282 : 		{
; 1283 : 			CTItem *pTITEM = (*itTITEM).second;

  00117	8b 78 10	 mov	 edi, DWORD PTR [eax+16]

; 1284 : 			if(!pTITEM->m_dlID)

  0011a	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0011d	0b 4f 24	 or	 ecx, DWORD PTR [edi+36]
  00120	75 0f		 jne	 SHORT $L177972

; 1285 : 				pTITEM->m_dlID = GenItemID();

  00122	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+40]
  00126	e8 00 00 00 00	 call	 ?GenItemID@CTMapSvrModule@@QAE_JXZ ; CTMapSvrModule::GenItemID
  0012b	89 47 20	 mov	 DWORD PTR [edi+32], eax
  0012e	89 57 24	 mov	 DWORD PTR [edi+36], edx
$L177972:

; 1286 : 
; 1287 : 			pTITEM->WrapPacket(&(pBUF->m_packet));

  00131	53		 push	 ebx
  00132	8b cf		 mov	 ecx, edi
  00134	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket
  00139	8d 4c 24 10	 lea	 ecx, DWORD PTR _itTITEM$177964[esp+40]
  0013d	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
  00142	8b 44 24 10	 mov	 eax, DWORD PTR _itTITEM$177964[esp+40]
  00146	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  00149	75 cc		 jne	 SHORT $L197482
$L177961:

; 1268 : 
; 1269 : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  0014b	8d 4c 24 14	 lea	 ecx, DWORD PTR _itTINVEN$[esp+40]
  0014f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
  00154	8b 44 24 14	 mov	 eax, DWORD PTR _itTINVEN$[esp+40]
  00158	3b 85 0c 01 01
	00		 cmp	 eax, DWORD PTR [ebp+65804]
  0015e	0f 85 61 ff ff
	ff		 jne	 $L197386
  00164	5f		 pop	 edi
$L177962:

; 1288 : 		}
; 1289 : 	}
; 1290 : 
; 1291 : 	SayToDB(pBUF);

  00165	8b 54 24 28	 mov	 edx, DWORD PTR $T197304[esp+32]
  00169	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+36]
  0016d	52		 push	 edx
  0016e	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB
  00173	5e		 pop	 esi
$L177949:

; 1292 : }

  00174	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00178	5d		 pop	 ebp
  00179	5b		 pop	 ebx
  0017a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00181	83 c4 18	 add	 esp, 24			; 00000018H
  00184	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197314:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T197305[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197529
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVEITEM_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@@Z ENDP ; CTMapSvrModule::SendDM_SAVEITEM_REQ
PUBLIC	?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ; CTMapSvrModule::SendMW_CONLIST_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T197650 DD	0ffffffffH
	DD	FLAT:$L197548
$T197646 DD	019930520H
	DD	01H
	DD	FLAT:$T197650
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT
$T197542 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_it$178723 = 12						; size = 4
_dwKEY$ = 12						; size = 4
_pSERVER$ = 16						; size = 4
?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CONLIST_ACK, COMDAT
; _this$ = ecx

; 1571 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1572 : 	CPacket *pMSG = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T197542[esp+28], eax
  00029	85 c0		 test	 eax, eax
  0002b	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00033	74 0b		 je	 SHORT $L197543
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003c	8b f0		 mov	 esi, eax
  0003e	eb 02		 jmp	 SHORT $L197544
$L197543:
  00040	33 f6		 xor	 esi, esi
$L197544:

; 1573 : 
; 1574 : 	pMSG->SetID(MW_CONLIST_ACK)
; 1575 : 		<< dwCharID
; 1576 : 		<< dwKEY;

  00042	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  00046	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0004a	50		 push	 eax
  0004b	51		 push	 ecx
  0004c	68 c0 20 00 00	 push	 8384			; 000020c0H
  00051	8b ce		 mov	 ecx, esi
  00053	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  0005b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1577 : 
; 1578 : 	if(pSERVER)

  0006e	8b 7c 24 28	 mov	 edi, DWORD PTR _pSERVER$[esp+24]
  00072	85 ff		 test	 edi, edi

; 1579 : 	{
; 1580 : 		(*pMSG) << BYTE(pSERVER->size());

  00074	8b ce		 mov	 ecx, esi
  00076	74 38		 je	 SHORT $L178165
  00078	33 d2		 xor	 edx, edx
  0007a	8a 57 08	 mov	 dl, BYTE PTR [edi+8]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1581 : 		MAPBYTE::iterator it;
; 1582 : 
; 1583 : 		for( it = pSERVER->begin(); it != pSERVER->end(); it++)

  00083	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00086	8b 01		 mov	 eax, DWORD PTR [ecx]
  00088	3b c1		 cmp	 eax, ecx
  0008a	89 44 24 24	 mov	 DWORD PTR _it$178723[esp+24], eax
  0008e	74 27		 je	 SHORT $L178748
$L197599:

; 1584 : 			(*pMSG) << (*it).second;

  00090	0f b6 40 0d	 movzx	 eax, BYTE PTR [eax+13]
  00094	50		 push	 eax
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009c	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$178723[esp+24]
  000a0	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
  000a5	8b 44 24 24	 mov	 eax, DWORD PTR _it$178723[esp+24]
  000a9	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000ac	75 e2		 jne	 SHORT $L197599

; 1585 : 	}
; 1586 : 	else

  000ae	eb 07		 jmp	 SHORT $L178748
$L178165:

; 1587 : 		(*pMSG) << BYTE(0);

  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L178748:

; 1588 : 
; 1589 : 	m_world.Say(pMSG);

  000b7	8b 93 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebx+107448]
  000bd	8d 8b b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebx+107448]
  000c3	56		 push	 esi
  000c4	ff 12		 call	 DWORD PTR [edx]

; 1590 : }

  000c6	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197548:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T197542[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197646
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CONLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ENDP ; CTMapSvrModule::SendMW_CONLIST_ACK
PUBLIC	?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ; CTMapSvrModule::SendMW_MAPSVRLIST_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T197765 DD	0ffffffffH
	DD	FLAT:$L197663
$T197761 DD	019930520H
	DD	01H
	DD	FLAT:$T197765
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT
$T197657 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_it$178761 = 12						; size = 4
_dwKEY$ = 12						; size = 4
_pSERVER$ = 16						; size = 4
?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z PROC NEAR ; CTMapSvrModule::SendMW_MAPSVRLIST_ACK, COMDAT
; _this$ = ecx

; 1595 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1596 : 	CPacket *pMSG = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T197657[esp+28], eax
  00029	85 c0		 test	 eax, eax
  0002b	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00033	74 0b		 je	 SHORT $L197658
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003c	8b f0		 mov	 esi, eax
  0003e	eb 02		 jmp	 SHORT $L197659
$L197658:
  00040	33 f6		 xor	 esi, esi
$L197659:

; 1597 : 
; 1598 : 	pMSG->SetID(MW_MAPSVRLIST_ACK)
; 1599 : 		<< dwCharID
; 1600 : 		<< dwKEY;

  00042	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  00046	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0004a	50		 push	 eax
  0004b	51		 push	 ecx
  0004c	68 13 20 00 00	 push	 8211			; 00002013H
  00051	8b ce		 mov	 ecx, esi
  00053	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  0005b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1601 : 
; 1602 : 	if(pSERVER)

  0006e	8b 7c 24 28	 mov	 edi, DWORD PTR _pSERVER$[esp+24]
  00072	85 ff		 test	 edi, edi

; 1603 : 	{
; 1604 : 		(*pMSG) << BYTE(pSERVER->size());

  00074	8b ce		 mov	 ecx, esi
  00076	74 38		 je	 SHORT $L178760
  00078	33 d2		 xor	 edx, edx
  0007a	8a 57 08	 mov	 dl, BYTE PTR [edi+8]
  0007d	52		 push	 edx
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1605 : 		MAPBYTE::iterator it;
; 1606 : 
; 1607 : 		for( it = pSERVER->begin(); it != pSERVER->end(); it++)

  00083	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00086	8b 01		 mov	 eax, DWORD PTR [ecx]
  00088	3b c1		 cmp	 eax, ecx
  0008a	89 44 24 24	 mov	 DWORD PTR _it$178761[esp+24], eax
  0008e	74 27		 je	 SHORT $L178768
$L197719:

; 1608 : 			(*pMSG) << (*it).second;

  00090	0f b6 40 0d	 movzx	 eax, BYTE PTR [eax+13]
  00094	50		 push	 eax
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009c	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$178761[esp+24]
  000a0	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
  000a5	8b 44 24 24	 mov	 eax, DWORD PTR _it$178761[esp+24]
  000a9	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000ac	75 e2		 jne	 SHORT $L197719

; 1609 : 	}
; 1610 : 	else

  000ae	eb 07		 jmp	 SHORT $L178768
$L178760:

; 1611 : 		(*pMSG) << BYTE(0);

  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L178768:

; 1612 : 
; 1613 : 	m_world.Say(pMSG);

  000b7	8b 93 b8 a3 01
	00		 mov	 edx, DWORD PTR [ebx+107448]
  000bd	8d 8b b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebx+107448]
  000c3	56		 push	 esi
  000c4	ff 12		 call	 DWORD PTR [edx]

; 1614 : }

  000c6	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197663:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T197657[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197761
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MAPSVRLIST_ACK@CTMapSvrModule@@QAEXKKPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ENDP ; CTMapSvrModule::SendMW_MAPSVRLIST_ACK
PUBLIC	?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ; CTMapSvrModule::SendMW_CHECKCONNECT_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T197880 DD	0ffffffffH
	DD	FLAT:$L197778
$T197876 DD	019930520H
	DD	01H
	DD	FLAT:$T197880
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
_TEXT	SEGMENT
$T197772 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_it$178786 = 32						; size = 4
_fPosZ$ = 32						; size = 4
_pSERVER$ = 36						; size = 4
?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CHECKCONNECT_ACK, COMDAT
; _this$ = ecx

; 1624 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1625 : 	CPacket *pMSG = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T197772[esp+28], eax
  00029	85 c0		 test	 eax, eax
  0002b	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00033	74 0b		 je	 SHORT $L197773
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003c	8b f0		 mov	 esi, eax
  0003e	eb 02		 jmp	 SHORT $L197774
$L197773:
  00040	33 f6		 xor	 esi, esi
$L197774:

; 1626 : 
; 1627 : 	pMSG->SetID(MW_CHECKCONNECT_ACK)
; 1628 : 		<< dwCharID
; 1629 : 		<< dwKEY
; 1630 : 		<< bChannel
; 1631 : 		<< wMapID
; 1632 : 		<< fPosX
; 1633 : 		<< fPosY
; 1634 : 		<< fPosZ;

  00042	8b 44 24 38	 mov	 eax, DWORD PTR _fPosZ$[esp+24]
  00046	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosY$[esp+24]
  0004a	8b 54 24 30	 mov	 edx, DWORD PTR _fPosX$[esp+24]
  0004e	50		 push	 eax
  0004f	8b 44 24 30	 mov	 eax, DWORD PTR _wMapID$[esp+28]
  00053	51		 push	 ecx
  00054	8b 4c 24 30	 mov	 ecx, DWORD PTR _bChannel$[esp+32]
  00058	52		 push	 edx
  00059	8b 54 24 30	 mov	 edx, DWORD PTR _dwKEY$[esp+36]
  0005d	50		 push	 eax
  0005e	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+40]
  00062	51		 push	 ecx
  00063	52		 push	 edx
  00064	50		 push	 eax
  00065	68 c9 20 00 00	 push	 8393			; 000020c9H
  0006a	8b ce		 mov	 ecx, esi
  0006c	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00074	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a3	8b c8		 mov	 ecx, eax
  000a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 1635 : 
; 1636 : 	if(pSERVER)

  000aa	8b 7c 24 3c	 mov	 edi, DWORD PTR _pSERVER$[esp+24]
  000ae	85 ff		 test	 edi, edi
  000b0	74 3f		 je	 SHORT $L178785

; 1637 : 	{
; 1638 : 		(*pMSG) << BYTE(pSERVER->size());

  000b2	33 c9		 xor	 ecx, ecx
  000b4	8a 4f 08	 mov	 cl, BYTE PTR [edi+8]
  000b7	51		 push	 ecx
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1639 : 		MAPBYTE::iterator it;
; 1640 : 
; 1641 : 		for( it = pSERVER->begin(); it != pSERVER->end(); it++)

  000bf	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000c2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000c4	3b c1		 cmp	 eax, ecx
  000c6	89 44 24 38	 mov	 DWORD PTR _it$178786[esp+24], eax
  000ca	74 2e		 je	 SHORT $L178793
  000cc	8d 64 24 00	 npad	 4
$L197834:

; 1642 : 			(*pMSG) << (*it).second;

  000d0	33 d2		 xor	 edx, edx
  000d2	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000d5	8b ce		 mov	 ecx, esi
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000dd	8d 4c 24 38	 lea	 ecx, DWORD PTR _it$178786[esp+24]
  000e1	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
  000e6	8b 44 24 38	 mov	 eax, DWORD PTR _it$178786[esp+24]
  000ea	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000ed	75 e1		 jne	 SHORT $L197834

; 1643 : 	}
; 1644 : 	else

  000ef	eb 09		 jmp	 SHORT $L178793
$L178785:

; 1645 : 		(*pMSG) << BYTE(0);

  000f1	6a 00		 push	 0
  000f3	8b ce		 mov	 ecx, esi
  000f5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L178793:

; 1646 : 
; 1647 : 	m_world.Say(pMSG);

  000fa	8b 83 b8 a3 01
	00		 mov	 eax, DWORD PTR [ebx+107448]
  00100	8d 8b b8 a3 01
	00		 lea	 ecx, DWORD PTR [ebx+107448]
  00106	56		 push	 esi
  00107	ff 10		 call	 DWORD PTR [eax]

; 1648 : }

  00109	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
  00110	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00117	83 c4 10	 add	 esp, 16			; 00000010H
  0011a	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197778:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T197772[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197876
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ENDP ; CTMapSvrModule::SendMW_CHECKCONNECT_ACK
PUBLIC	?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z ; CTMapSvrModule::SendMW_PARTYORDERTAKEITEM_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T197984 DD	0ffffffffH
	DD	FLAT:$L197890
	DD	00H
	DD	FLAT:$L197891
$T197981 DD	019930520H
	DD	02H
	DD	FLAT:$T197984
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T197887 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_wPartyID$ = 16						; size = 2
_bServerID$ = 20					; size = 1
_bChannel$ = 24						; size = 1
_wMapID$ = 28						; size = 2
_dwMonID$ = 32						; size = 4
_wTempMonID$ = 36					; size = 2
_vMember$ = 40						; size = 16
_pItem$ = 56						; size = 4
?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z PROC NEAR ; CTMapSvrModule::SendMW_PARTYORDERTAKEITEM_ACK, COMDAT
; _this$ = ecx

; 2939 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx

; 2940 : 	CPacket * pMsg = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 0
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 44 24 14	 mov	 DWORD PTR $T197887[esp+36], eax
  00036	85 c0		 test	 eax, eax
  00038	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003d	74 0b		 je	 SHORT $L197888
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00046	8b f8		 mov	 edi, eax
  00048	eb 02		 jmp	 SHORT $L197889
$L197888:
  0004a	33 ff		 xor	 edi, edi
$L197889:

; 2941 : 	pMsg->SetID(MW_PARTYORDERTAKEITEM_ACK)
; 2942 : 		<< dwCharID
; 2943 : 		<< dwKEY
; 2944 : 		<< wPartyID
; 2945 : 		<< bServerID
; 2946 : 		<< bChannel
; 2947 : 		<< wMapID
; 2948 : 		<< dwMonID
; 2949 : 		<< wTempMonID  
; 2950 : 		<< BYTE(vMember.size());

  0004c	8b 74 24 4c	 mov	 esi, DWORD PTR _vMember$[esp+36]
  00050	85 f6		 test	 esi, esi
  00052	8b 6c 24 50	 mov	 ebp, DWORD PTR _vMember$[esp+40]
  00056	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0005b	75 04		 jne	 SHORT $L197896
  0005d	33 c0		 xor	 eax, eax
  0005f	eb 07		 jmp	 SHORT $L197897
$L197896:
  00061	8b c5		 mov	 eax, ebp
  00063	2b c6		 sub	 eax, esi
  00065	c1 f8 02	 sar	 eax, 2
$L197897:
  00068	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwMonID$[esp+32]
  0006c	8b 54 24 3c	 mov	 edx, DWORD PTR _wMapID$[esp+32]
  00070	50		 push	 eax
  00071	8b 44 24 48	 mov	 eax, DWORD PTR _wTempMonID$[esp+36]
  00075	50		 push	 eax
  00076	8b 44 24 40	 mov	 eax, DWORD PTR _bChannel$[esp+40]
  0007a	51		 push	 ecx
  0007b	8b 4c 24 40	 mov	 ecx, DWORD PTR _bServerID$[esp+44]
  0007f	52		 push	 edx
  00080	8b 54 24 40	 mov	 edx, DWORD PTR _wPartyID$[esp+48]
  00084	50		 push	 eax
  00085	8b 44 24 40	 mov	 eax, DWORD PTR _dwKEY$[esp+52]
  00089	51		 push	 ecx
  0008a	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwCharID$[esp+56]
  0008e	52		 push	 edx
  0008f	50		 push	 eax
  00090	51		 push	 ecx
  00091	68 49 20 00 00	 push	 8265			; 00002049H
  00096	8b cf		 mov	 ecx, edi
  00098	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c7	8b c8		 mov	 ecx, eax
  000c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ce	8b c8		 mov	 ecx, eax
  000d0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000d5	8b c8		 mov	 ecx, eax
  000d7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2951 : 
; 2952 : 	for(BYTE i=0; i<vMember.size(); i++)

  000dc	32 db		 xor	 bl, bl
  000de	8b ff		 npad	 2
$L179681:
  000e0	85 f6		 test	 esi, esi
  000e2	75 04		 jne	 SHORT $L197903
  000e4	33 c0		 xor	 eax, eax
  000e6	eb 07		 jmp	 SHORT $L197904
$L197903:
  000e8	8b c5		 mov	 eax, ebp
  000ea	2b c6		 sub	 eax, esi
  000ec	c1 f8 02	 sar	 eax, 2
$L197904:
  000ef	0f b6 cb	 movzx	 ecx, bl
  000f2	3b c8		 cmp	 ecx, eax
  000f4	73 0f		 jae	 SHORT $L179683

; 2953 : 	{
; 2954 : 		(*pMsg)
; 2955 : 			<< vMember[i];

  000f6	8b 14 8e	 mov	 edx, DWORD PTR [esi+ecx*4]
  000f9	52		 push	 edx
  000fa	8b cf		 mov	 ecx, edi
  000fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00101	fe c3		 inc	 bl
  00103	eb db		 jmp	 SHORT $L179681
$L179683:

; 2956 : 	}
; 2957 : 
; 2958 : 	pItem->WrapPacket(pMsg);

  00105	8b 4c 24 58	 mov	 ecx, DWORD PTR _pItem$[esp+32]
  00109	57		 push	 edi
  0010a	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 2959 : 
; 2960 : 	m_world.Say(pMsg);

  0010f	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  00113	8b 81 b8 a3 01
	00		 mov	 eax, DWORD PTR [ecx+107448]
  00119	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  0011f	57		 push	 edi
  00120	ff 10		 call	 DWORD PTR [eax]

; 2961 : }

  00122	85 f6		 test	 esi, esi
  00124	74 09		 je	 SHORT $L197975
  00126	56		 push	 esi
  00127	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0012c	83 c4 04	 add	 esp, 4
$L197975:
  0012f	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00133	5f		 pop	 edi
  00134	5e		 pop	 esi
  00135	5d		 pop	 ebp
  00136	5b		 pop	 ebx
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0013e	83 c4 14	 add	 esp, 20			; 00000014H
  00141	c2 34 00	 ret	 52			; 00000034H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197890:
  00000	8d 4d 24	 lea	 ecx, DWORD PTR _vMember$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
$L197891:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T197887[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T197981
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYORDERTAKEITEM_ACK@CTMapSvrModule@@QAEXKKGEEGKGV?$vector@KV?$allocator@K@std@@@std@@PAVCTItem@@@Z ENDP ; CTMapSvrModule::SendMW_PARTYORDERTAKEITEM_ACK
PUBLIC	?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z ; CTMapSvrModule::SendMW_CASTLEWARINFO_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T198101 DD	0ffffffffH
	DD	FLAT:$L197997
$T198095 DD	019930520H
	DD	01H
	DD	FLAT:$T198101
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z
_TEXT	SEGMENT
tv181 = -24						; size = 4
_it$180510 = -20					; size = 4
$T197991 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCastle$ = 8						; size = 4
?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z PROC NEAR ; CTMapSvrModule::SendMW_CASTLEWARINFO_ACK, COMDAT
; _this$ = ecx

; 3898 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	55		 push	 ebp
  00019	56		 push	 esi

; 3899 : 	CPacket * pMsg = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	89 4c 24 14	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00025	83 c4 04	 add	 esp, 4
  00028	89 44 24 0c	 mov	 DWORD PTR $T197991[esp+32], eax
  0002c	85 c0		 test	 eax, eax
  0002e	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00036	74 0b		 je	 SHORT $L197992
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b e8		 mov	 ebp, eax
  00041	eb 02		 jmp	 SHORT $L197993
$L197992:
  00043	33 ed		 xor	 ebp, ebp
$L197993:

; 3900 : 
; 3901 : 	pMsg->SetID(MW_CASTLEWARINFO_ACK);

  00045	68 10 21 00 00	 push	 8464			; 00002110H
  0004a	8b cd		 mov	 ecx, ebp
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 3902 : 
; 3903 : 	if(!pCastle)

  00059	8b 74 24 24	 mov	 esi, DWORD PTR _pCastle$[esp+28]
  0005d	85 f6		 test	 esi, esi
  0005f	75 0d		 jne	 SHORT $L180430

; 3904 : 	{
; 3905 : 		(*pMsg)
; 3906 : 			<< WORD(0);

  00061	56		 push	 esi
  00062	8b cd		 mov	 ecx, ebp
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3907 : 	}
; 3908 : 	else

  00069	e9 d2 00 00 00	 jmp	 $L180516
$L180430:

; 3909 : 	{
; 3910 : 		if(!pCastle->m_bDay)

  0006e	8a 86 84 00 00
	00		 mov	 al, BYTE PTR [esi+132]
  00074	84 c0		 test	 al, al
  00076	0f 84 d7 00 00
	00		 je	 $L180424

; 3911 : 			return;
; 3912 : 
; 3913 : 		(*pMsg)
; 3914 : 			<< pCastle->m_wLocal
; 3915 : 			<< pCastle->m_dwGuild
; 3916 : 			<< BYTE(pCastle->m_mapLocal.size());

  0007c	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00082	33 c9		 xor	 ecx, ecx
  00084	66 8b 4e 02	 mov	 cx, WORD PTR [esi+2]
  00088	50		 push	 eax
  00089	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0008c	50		 push	 eax
  0008d	51		 push	 ecx
  0008e	8b cd		 mov	 ecx, ebp
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3917 : 
; 3918 : 		MAPTLOCAL::iterator it;
; 3919 : 		for(it=pCastle->m_mapLocal.begin(); it!=pCastle->m_mapLocal.end(); it++)

  000a3	8b b6 8c 00 00
	00		 mov	 esi, DWORD PTR [esi+140]
  000a9	8b 06		 mov	 eax, DWORD PTR [esi]
  000ab	3b c6		 cmp	 eax, esi
  000ad	89 44 24 0c	 mov	 DWORD PTR _it$180510[esp+32], eax
  000b1	0f 84 89 00 00
	00		 je	 $L180516
  000b7	53		 push	 ebx
  000b8	57		 push	 edi
  000b9	8d a4 24 00 00
	00 00		 npad	 7
$L198053:

; 3920 : 		{
; 3921 : 			LPTLOCAL pLocal = (*it).second;

  000c0	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 3922 : 			(*pMsg)
; 3923 : 				<< pLocal->m_wLocal;

  000c3	33 d2		 xor	 edx, edx
  000c5	66 8b 56 02	 mov	 dx, WORD PTR [esi+2]
  000c9	8b cd		 mov	 ecx, ebp
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000d1	8d 7e 54	 lea	 edi, DWORD PTR [esi+84]
  000d4	bb 01 00 00 00	 mov	 ebx, 1
  000d9	83 c6 38	 add	 esi, 56			; 00000038H
  000dc	c7 44 24 10 07
	00 00 00	 mov	 DWORD PTR tv181[esp+40], 7
  000e4	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$L180537:

; 3924 : 
; 3925 : 			for(BYTE i=0; i<7; i++)
; 3926 : 			{
; 3927 : 				if(i+1 != pCastle->m_bDay)

  000f0	8b 44 24 2c	 mov	 eax, DWORD PTR _pCastle$[esp+36]
  000f4	0f b6 88 84 00
	00 00		 movzx	 ecx, BYTE PTR [eax+132]
  000fb	3b d9		 cmp	 ebx, ecx
  000fd	74 16		 je	 SHORT $L180538

; 3928 : 				{
; 3929 : 					(*pMsg)
; 3930 : 						<< pLocal->m_occupyGuild[i]
; 3931 : 						<< pLocal->m_occupyType[i];

  000ff	8b 06		 mov	 eax, DWORD PTR [esi]
  00101	33 d2		 xor	 edx, edx
  00103	8a 17		 mov	 dl, BYTE PTR [edi]
  00105	8b cd		 mov	 ecx, ebp
  00107	52		 push	 edx
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L180538:
  00115	8b 44 24 10	 mov	 eax, DWORD PTR tv181[esp+40]
  00119	83 c6 04	 add	 esi, 4
  0011c	43		 inc	 ebx
  0011d	47		 inc	 edi
  0011e	48		 dec	 eax
  0011f	89 44 24 10	 mov	 DWORD PTR tv181[esp+40], eax
  00123	75 cb		 jne	 SHORT $L180537
  00125	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$180510[esp+40]
  00129	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagLOCAL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagLOCAL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagLOCAL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagLOCAL *> >,0> >::const_iterator::_Inc
  0012e	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pCastle$[esp+36]
  00132	8b 44 24 14	 mov	 eax, DWORD PTR _it$180510[esp+40]
  00136	3b 81 8c 00 00
	00		 cmp	 eax, DWORD PTR [ecx+140]
  0013c	75 82		 jne	 SHORT $L198053
  0013e	5f		 pop	 edi
  0013f	5b		 pop	 ebx
$L180516:

; 3932 : 				}
; 3933 : 			}
; 3934 : 		}
; 3935 : 	}
; 3936 : 
; 3937 : 	m_world.Say(pMsg);

  00140	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+32]
  00144	8b 91 b8 a3 01
	00		 mov	 edx, DWORD PTR [ecx+107448]
  0014a	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  00150	55		 push	 ebp
  00151	ff 12		 call	 DWORD PTR [edx]
$L180424:

; 3938 : }

  00153	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00157	5e		 pop	 esi
  00158	5d		 pop	 ebp
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	83 c4 18	 add	 esp, 24			; 00000018H
  00163	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L197997:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T197991[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198095
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEWARINFO_ACK@CTMapSvrModule@@QAEXPAUtagLOCAL@@@Z ENDP ; CTMapSvrModule::SendMW_CASTLEWARINFO_ACK
PUBLIC	?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z ; CTMapSvrModule::SendMW_RECALLMONDATA_ACK
EXTRN	?GetReuseRemainTick@CTSkill@@QAEKK@Z:NEAR	; CTSkill::GetReuseRemainTick
EXTRN	?GetID@CTSkill@@QAEGXZ:NEAR			; CTSkill::GetID
EXTRN	?GetRemainTick@CTSkill@@QAEKK@Z:NEAR		; CTSkill::GetRemainTick
EXTRN	?ClearMaintainSkill@CTObjBase@@QAEXXZ:NEAR	; CTObjBase::ClearMaintainSkill
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T198827 DD	0ffffffffH
	DD	FLAT:$L198115
$T198822 DD	019930520H
	DD	01H
	DD	FLAT:$T198827
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z
_TEXT	SEGMENT
_wCount$ = -24						; size = 2
_wSize$ = -20						; size = 2
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_is$180703 = 8						; size = 2
_it$ = 8						; size = 4
$T198109 = 8						; size = 4
_itChar$ = 8						; size = 4
_pRecall$ = 8						; size = 4
?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z PROC NEAR ; CTMapSvrModule::SendMW_RECALLMONDATA_ACK, COMDAT
; _this$ = ecx

; 4001 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	55		 push	 ebp
  00019	56		 push	 esi

; 4002 : 	MAPPLAYER::iterator itChar = m_mapPLAYER.find(pRecall->m_dwHostID);

  0001a	8b 74 24 24	 mov	 esi, DWORD PTR _pRecall$[esp+28]
  0001e	57		 push	 edi
  0001f	8b e9		 mov	 ebp, ecx
  00021	8d 86 f8 00 00
	00		 lea	 eax, DWORD PTR [esi+248]
  00027	50		 push	 eax
  00028	8d 4c 24 2c	 lea	 ecx, DWORD PTR _itChar$[esp+36]
  0002c	51		 push	 ecx
  0002d	8d 8d dc 8d 00
	00		 lea	 ecx, DWORD PTR [ebp+36316]
  00033	89 6c 24 1c	 mov	 DWORD PTR _this$[esp+44], ebp
  00037	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find

; 4003 : 	if(itChar==m_mapPLAYER.end())

  0003c	8b 85 e0 8d 00
	00		 mov	 eax, DWORD PTR [ebp+36320]
  00042	8b 7c 24 28	 mov	 edi, DWORD PTR _itChar$[esp+32]
  00046	3b f8		 cmp	 edi, eax
  00048	0f 84 1a 02 00
	00		 je	 $L180587
  0004e	53		 push	 ebx

; 4004 : 		return;
; 4005 : 
; 4006 : 	CPacket * pMsg = new CPacket();

  0004f	6a 1c		 push	 28			; 0000001cH
  00051	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00056	83 c4 04	 add	 esp, 4
  00059	89 44 24 2c	 mov	 DWORD PTR $T198109[esp+36], eax
  0005d	33 db		 xor	 ebx, ebx
  0005f	3b c3		 cmp	 eax, ebx
  00061	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  00065	74 09		 je	 SHORT $L198111
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0006e	8b d8		 mov	 ebx, eax
$L198111:

; 4007 : 
; 4008 : 	DWORD dwTick = m_dwTick;
; 4009 : 
; 4010 : 	pMsg->SetID(MW_RECALLMONDATA_ACK)
; 4011 : 		<< (*itChar).second->m_dwID
; 4012 : 		<< (*itChar).second->m_dwKEY
; 4013 : 		<< pRecall->m_dwID
; 4014 : 		<< pRecall->m_bChannel
; 4015 : 		<< pRecall->m_fPosX
; 4016 : 		<< pRecall->m_fPosZ
; 4017 : 		<< pRecall->m_bStatus
; 4018 : 		<< pRecall->m_bMode
; 4019 : 		<< pRecall->m_dwHP
; 4020 : 		<< pRecall->m_dwMP
; 4021 : 		<< BYTE(pRecall->m_mapTSKILL.size());

  00070	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00073	8b 56 60	 mov	 edx, DWORD PTR [esi+96]
  00076	51		 push	 ecx
  00077	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0007a	52		 push	 edx
  0007b	51		 push	 ecx
  0007c	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0007f	33 d2		 xor	 edx, edx
  00081	8a 56 76	 mov	 dl, BYTE PTR [esi+118]
  00084	33 c9		 xor	 ecx, ecx
  00086	8a 8e cc 00 00
	00		 mov	 cl, BYTE PTR [esi+204]
  0008c	8b ad 48 a9 02
	00		 mov	 ebp, DWORD PTR [ebp+174408]
  00092	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  0009a	52		 push	 edx
  0009b	8b 96 84 00 00
	00		 mov	 edx, DWORD PTR [esi+132]
  000a1	51		 push	 ecx
  000a2	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  000a5	52		 push	 edx
  000a6	33 d2		 xor	 edx, edx
  000a8	8a 56 74	 mov	 dl, BYTE PTR [esi+116]
  000ab	51		 push	 ecx
  000ac	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000af	52		 push	 edx
  000b0	8b 90 b0 03 01
	00		 mov	 edx, DWORD PTR [eax+66480]
  000b6	8b 80 44 01 01
	00		 mov	 eax, DWORD PTR [eax+65860]
  000bc	51		 push	 ecx
  000bd	52		 push	 edx
  000be	50		 push	 eax
  000bf	68 18 21 00 00	 push	 8472			; 00002118H
  000c4	8b cb		 mov	 ecx, ebx
  000c6	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e0	8b c8		 mov	 ecx, eax
  000e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e7	8b c8		 mov	 ecx, eax
  000e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fc	8b c8		 mov	 ecx, eax
  000fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00103	8b c8		 mov	 ecx, eax
  00105	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010a	8b c8		 mov	 ecx, eax
  0010c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00111	8b c8		 mov	 ecx, eax
  00113	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4022 : 
; 4023 : 	MAPTSKILL::iterator it;
; 4024 : 	for(it=pRecall->m_mapTSKILL.begin(); it!=pRecall->m_mapTSKILL.end(); it++)

  00118	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0011b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0011d	3b c1		 cmp	 eax, ecx
  0011f	89 44 24 2c	 mov	 DWORD PTR _it$[esp+36], eax
  00123	74 35		 je	 SHORT $L180699
$L198220:

; 4025 : 	{
; 4026 : 		CTSkill * pSkill = (*it).second;

  00125	8b 78 10	 mov	 edi, DWORD PTR [eax+16]

; 4027 : 		(*pMsg)
; 4028 : 			<< pSkill->m_pTSKILL->m_wID
; 4029 : 			<< pSkill->GetReuseRemainTick(dwTick);

  00128	55		 push	 ebp
  00129	8b cf		 mov	 ecx, edi
  0012b	e8 00 00 00 00	 call	 ?GetReuseRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetReuseRemainTick
  00130	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]
  00133	33 d2		 xor	 edx, edx
  00135	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00138	50		 push	 eax
  00139	8b cb		 mov	 ecx, ebx
  0013b	52		 push	 edx
  0013c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00141	8b c8		 mov	 ecx, eax
  00143	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00148	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+36]
  0014c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Inc
  00151	8b 44 24 2c	 mov	 eax, DWORD PTR _it$[esp+36]
  00155	3b 46 18	 cmp	 eax, DWORD PTR [esi+24]
  00158	75 cb		 jne	 SHORT $L198220
$L180699:

; 4030 : 	}
; 4031 : 
; 4032 : 	WORD wSize = pMsg->GetSize();

  0015a	8b cb		 mov	 ecx, ebx
  0015c	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 4033 : 	WORD wCount = 0;

  00161	33 ff		 xor	 edi, edi

; 4034 : 	(*pMsg) << wCount;

  00163	57		 push	 edi
  00164	8b cb		 mov	 ecx, ebx
  00166	89 7c 24 14	 mov	 DWORD PTR _wCount$[esp+44], edi
  0016a	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+44], eax
  0016e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 4035 : 
; 4036 : 	for(WORD is=0; is<pRecall->m_vMaintainSkill.size(); is++)

  00173	89 7c 24 2c	 mov	 DWORD PTR _is$180703[esp+36], edi
$L180704:
  00177	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  0017a	85 c9		 test	 ecx, ecx
  0017c	75 04		 jne	 SHORT $L198266
  0017e	33 c0		 xor	 eax, eax
  00180	eb 08		 jmp	 SHORT $L198267
$L198266:
  00182	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00185	2b c1		 sub	 eax, ecx
  00187	c1 f8 02	 sar	 eax, 2
$L198267:
  0018a	0f b7 7c 24 2c	 movzx	 edi, WORD PTR _is$180703[esp+36]
  0018f	3b f8		 cmp	 edi, eax
  00191	0f 83 a1 00 00
	00		 jae	 $L180706

; 4037 : 	{
; 4038 : 		if( !pRecall->m_vMaintainSkill[is]->m_dwStartTick || 
; 4039 : 			pRecall->m_vMaintainSkill[is]->GetRemainTick(dwTick))

  00197	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0019a	8b 0c b8	 mov	 ecx, DWORD PTR [eax+edi*4]
  0019d	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  001a0	85 d2		 test	 edx, edx
  001a2	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  001a5	74 0a		 je	 SHORT $L180708
  001a7	55		 push	 ebp
  001a8	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick
  001ad	85 c0		 test	 eax, eax
  001af	74 7e		 je	 SHORT $L180705
$L180708:

; 4040 : 		{
; 4041 : 			(*pMsg)
; 4042 : 				<< pRecall->m_vMaintainSkill[is]->GetID()
; 4043 : 				<< pRecall->m_vMaintainSkill[is]->m_bLevel
; 4044 : 				<< pRecall->m_vMaintainSkill[is]->GetRemainTick(dwTick)
; 4045 : 				<< pRecall->m_vMaintainSkill[is]->m_bAttackType
; 4046 : 				<< pRecall->m_vMaintainSkill[is]->m_dwAttackID
; 4047 : 				<< pRecall->m_vMaintainSkill[is]->m_bHostType
; 4048 : 				<< pRecall->m_vMaintainSkill[is]->m_dwHostID
; 4049 : 				<< pRecall->m_vMaintainSkill[is]->m_bAttackCountry;

  001b1	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  001b4	8b 04 ba	 mov	 eax, DWORD PTR [edx+edi*4]
  001b7	8d 3c ba	 lea	 edi, DWORD PTR [edx+edi*4]
  001ba	33 c9		 xor	 ecx, ecx
  001bc	8a 48 29	 mov	 cl, BYTE PTR [eax+41]
  001bf	8b d0		 mov	 edx, eax
  001c1	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001c4	51		 push	 ecx
  001c5	8b ca		 mov	 ecx, edx
  001c7	33 d2		 xor	 edx, edx
  001c9	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  001cc	50		 push	 eax
  001cd	8b c1		 mov	 eax, ecx
  001cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d2	52		 push	 edx
  001d3	8b d0		 mov	 edx, eax
  001d5	33 c0		 xor	 eax, eax
  001d7	8a 42 08	 mov	 al, BYTE PTR [edx+8]
  001da	51		 push	 ecx
  001db	8b ca		 mov	 ecx, edx
  001dd	50		 push	 eax
  001de	55		 push	 ebp
  001df	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick
  001e4	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001e6	33 d2		 xor	 edx, edx
  001e8	8a 51 50	 mov	 dl, BYTE PTR [ecx+80]
  001eb	50		 push	 eax
  001ec	52		 push	 edx
  001ed	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  001f2	8b cb		 mov	 ecx, ebx
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001fa	8b c8		 mov	 ecx, eax
  001fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00201	8b c8		 mov	 ecx, eax
  00203	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00208	8b c8		 mov	 ecx, eax
  0020a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0020f	8b c8		 mov	 ecx, eax
  00211	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00216	8b c8		 mov	 ecx, eax
  00218	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0021d	8b c8		 mov	 ecx, eax
  0021f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00224	8b c8		 mov	 ecx, eax
  00226	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4050 : 
; 4051 : 			wCount++;

  0022b	ff 44 24 10	 inc	 DWORD PTR _wCount$[esp+40]
$L180705:
  0022f	ff 44 24 2c	 inc	 DWORD PTR _is$180703[esp+36]
  00233	e9 3f ff ff ff	 jmp	 $L180704
$L180706:

; 4052 : 		}
; 4053 : 	}
; 4054 : 	memcpy(pMsg->GetBuffer()+wSize, &wCount, sizeof(wCount));

  00238	8b cb		 mov	 ecx, ebx
  0023a	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  0023f	0f b7 4c 24 14	 movzx	 ecx, WORD PTR _wSize$[esp+40]
  00244	66 8b 54 24 10	 mov	 dx, WORD PTR _wCount$[esp+40]
  00249	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx

; 4055 : 
; 4056 : 	pRecall->ClearMaintainSkill();

  0024d	8b ce		 mov	 ecx, esi
  0024f	e8 00 00 00 00	 call	 ?ClearMaintainSkill@CTObjBase@@QAEXXZ ; CTObjBase::ClearMaintainSkill

; 4057 : 
; 4058 : 	m_world.Say(pMsg);

  00254	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+40]
  00258	8b 81 b8 a3 01
	00		 mov	 eax, DWORD PTR [ecx+107448]
  0025e	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  00264	53		 push	 ebx
  00265	ff 10		 call	 DWORD PTR [eax]
  00267	5b		 pop	 ebx
$L180587:

; 4059 : }

  00268	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0026c	5f		 pop	 edi
  0026d	5e		 pop	 esi
  0026e	5d		 pop	 ebp
  0026f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00276	83 c4 18	 add	 esp, 24			; 00000018H
  00279	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198115:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T198109[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198822
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z ENDP ; CTMapSvrModule::SendMW_RECALLMONDATA_ACK
PUBLIC	?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z ; CTMapSvrModule::SendDM_POSTINVENITEM_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T198977 DD	0ffffffffH
	DD	FLAT:$L198840
	DD	00H
	DD	FLAT:$L198841
$T198973 DD	019930520H
	DD	02H
	DD	FLAT:$T198977
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T198834 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
_itTITEM$ = 20						; size = 4
_pInven$ = 20						; size = 4
?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z PROC NEAR ; CTMapSvrModule::SendDM_POSTINVENITEM_REQ, COMDAT
; _this$ = ecx

; 4065 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	33 db		 xor	 ebx, ebx

; 4066 : 	LPPACKETBUF pBUF = new PACKETBUF();

  00022	6a 20		 push	 32			; 00000020H
  00024	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	8b f0		 mov	 esi, eax
  0002f	83 c4 04	 add	 esp, 4
  00032	89 74 24 14	 mov	 DWORD PTR $T198834[esp+36], esi
  00036	3b f3		 cmp	 esi, ebx
  00038	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003d	74 0e		 je	 SHORT $L198835
  0003f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00042	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00047	89 1e		 mov	 DWORD PTR [esi], ebx
  00049	8b ee		 mov	 ebp, esi
  0004b	eb 02		 jmp	 SHORT $L198836
$L198835:
  0004d	33 ed		 xor	 ebp, ebp
$L198836:

; 4067 : 
; 4068 : 	pBUF->m_packet.SetID(DM_POSTINVENITEM_REQ)
; 4069 : 		<< dwID
; 4070 : 		<< dwKey
; 4071 : 		<< strName
; 4072 : 		<< pInven->m_bInvenID
; 4073 :         << BYTE(pInven->m_mapTITEM.size());

  0004f	8b 74 24 34	 mov	 esi, DWORD PTR _pInven$[esp+32]
  00053	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00056	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKey$[esp+32]
  0005a	8b 54 24 28	 mov	 edx, DWORD PTR _dwID$[esp+32]
  0005e	50		 push	 eax
  0005f	33 c0		 xor	 eax, eax
  00061	8a 46 18	 mov	 al, BYTE PTR [esi+24]
  00064	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  00068	8b 5c 24 34	 mov	 ebx, DWORD PTR _strName$[esp+36]
  0006c	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  0006f	50		 push	 eax
  00070	53		 push	 ebx
  00071	51		 push	 ecx
  00072	52		 push	 edx
  00073	68 70 90 00 00	 push	 36976			; 00009070H
  00078	8b cf		 mov	 ecx, edi
  0007a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 4074 : 
; 4075 : 	MAPTITEM::iterator itTITEM;
; 4076 : 	for( itTITEM = pInven->m_mapTITEM.begin(); itTITEM != pInven->m_mapTITEM.end(); itTITEM++)

  000a2	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000a5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a7	3b c1		 cmp	 eax, ecx
  000a9	89 44 24 34	 mov	 DWORD PTR _itTITEM$[esp+32], eax
  000ad	74 20		 je	 SHORT $L180727
  000af	90		 npad	 1
$L198904:

; 4077 : 	{
; 4078 : 		CTItem *pTITEM = (*itTITEM).second;

  000b0	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 4079 : 		pTITEM->WrapPacket(&(pBUF->m_packet));

  000b3	57		 push	 edi
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket
  000bb	8d 4c 24 34	 lea	 ecx, DWORD PTR _itTITEM$[esp+32]
  000bf	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
  000c4	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000c7	8b 44 24 34	 mov	 eax, DWORD PTR _itTITEM$[esp+32]
  000cb	3b c1		 cmp	 eax, ecx
  000cd	75 e1		 jne	 SHORT $L198904
$L180727:

; 4080 : 	}
; 4081 : 
; 4082 : 	SayToDB(pBUF);

  000cf	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  000d3	55		 push	 ebp
  000d4	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 4083 : }

  000d9	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000dc	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  000e4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e7	83 ca ff	 or	 edx, -1
  000ea	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ee	4a		 dec	 edx
  000ef	85 d2		 test	 edx, edx
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5d		 pop	 ebp
  000f4	5b		 pop	 ebx
  000f5	7f 08		 jg	 SHORT $L198969
  000f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	50		 push	 eax
  000fc	ff 52 04	 call	 DWORD PTR [edx+4]
$L198969:
  000ff	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00103	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010a	83 c4 14	 add	 esp, 20			; 00000014H
  0010d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L198840:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L198841:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T198834[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T198973
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_POSTINVENITEM_REQ@CTMapSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAVCTInven@@@Z ENDP ; CTMapSvrModule::SendDM_POSTINVENITEM_REQ
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L199052:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L199052
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L199127:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L199127
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T199230 DD	0ffffffffH
	DD	FLAT:$L199131
$T199228 DD	019930520H
	DD	01H
	DD	FLAT:$T199230
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199131:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199228
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L199240
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L199240:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L199334
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L199334:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
xdata$x	SEGMENT
$T199466 DD	0ffffffffH
	DD	FLAT:$L199352
$T199463 DD	019930520H
	DD	01H
	DD	FLAT:$T199466
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T199351 = -80						; size = 28
$T199350 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T199351[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T199351[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T199351[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T199351[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T199351[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T199350[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T199350[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T199350[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L199467:
$L199465:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199352:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T199351[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199463
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
;	COMDAT xdata$x
xdata$x	SEGMENT
$T199572 DD	0ffffffffH
	DD	FLAT:$L199473
$T199570 DD	019930520H
	DD	01H
	DD	FLAT:$T199572
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199473:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T199570
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L149145

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L149145:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L149147

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
$L199607:
$L149147:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L199606:
?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy
_TEXT	ENDS
PUBLIC	??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ; CTMapSvrModule::SendDM_SAVECHAR_REQ
PUBLIC	??_C@_0BD@NGMHGENG@Char?5Save?5Error?5?$CFd?$AA@ ; `string'
EXTRN	?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z:NEAR ; CTMap::GetNeighbor
EXTRN	?IsEmptyHotkey@CTPlayer@@QAEEPAUtagHOTKEYINVEN@@@Z:NEAR ; CTPlayer::IsEmptyHotkey
EXTRN	?ExpandIoBuffer@CPacket@@QAEKK@Z:NEAR		; CPacket::ExpandIoBuffer
EXTRN	?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z:NEAR	; CTPlayer::SendCS_SKILLEND_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T206213 DD	0ffffffffH
	DD	FLAT:$L199720
	DD	0ffffffffH
	DD	FLAT:$L199721
	DD	01H
	DD	FLAT:$L199722
$T206105 DD	019930520H
	DD	03H
	DD	FLAT:$T206213
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@NGMHGENG@Char?5Save?5Error?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@NGMHGENG@Char?5Save?5Error?5?$CFd?$AA@ DB 'Char Save Error %d', 00H ; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
CONST	ENDS
;	COMDAT ?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
_TEXT	SEGMENT
_is$177468 = -69					; size = 1
$T199670 = -68						; size = 4
_wSize$ = -64						; size = 2
_fPosX$ = -64						; size = 4
_wCount$ = -60						; size = 2
_fPosY$ = -60						; size = 4
_itCABINET$ = -60					; size = 4
_itTINVEN$ = -60					; size = 4
_this$ = -56						; size = 4
tv1555 = -52						; size = 4
_itCallMon$ = -52					; size = 4
_is$177157 = -52					; size = 4
_fPosZ$ = -52						; size = 4
_pHotkey$177297 = -48					; size = 4
_itAr$176977 = -48					; size = 4
$T199671 = -48						; size = 4
_vPlayer$177467 = -44					; size = 16
_vPlayer$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_itPTD$ = 8						; size = 4
_pPlayer$ = 8						; size = 4
_wACKMsg$ = 12						; size = 2
?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z PROC NEAR ; CTMapSvrModule::SendDM_SAVECHAR_REQ, COMDAT
; _this$ = ecx

; 739  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00018	53		 push	 ebx
  00019	8b d9		 mov	 ebx, ecx

; 740  : 	pPlayer->m_dwSaveTick = m_dwTick;

  0001b	8b 83 48 a9 02
	00		 mov	 eax, DWORD PTR [ebx+174408]
  00021	55		 push	 ebp
  00022	8b 6c 24 54	 mov	 ebp, DWORD PTR _pPlayer$[esp+76]
  00026	89 85 28 04 01
	00		 mov	 DWORD PTR [ebp+66600], eax

; 741  : /*
; 742  : 	if(pPlayer->ProtectTutorial()) 
; 743  : 	{
; 744  : 		if(wACKMsg)
; 745  : 		{
; 746  : 			LPPACKETBUF pMSG = new PACKETBUF();
; 747  : 
; 748  : 			pMSG->m_packet.SetID(wACKMsg)
; 749  : 				<< pPlayer->m_dwID
; 750  : 				<< pPlayer->m_dwKEY;
; 751  : 
; 752  : 			SayToBATCH(pMSG);
; 753  : 		}
; 754  : 
; 755  : 		return;
; 756  : 	}
; 757  : */
; 758  : 	if(pPlayer->m_mapTINVEN.empty())

  0002c	8b 85 10 01 01
	00		 mov	 eax, DWORD PTR [ebp+65808]
  00032	85 c0		 test	 eax, eax
  00034	89 5c 24 18	 mov	 DWORD PTR _this$[esp+80], ebx
  00038	75 28		 jne	 SHORT $L176091

; 759  : 	{
; 760  : 		LogEvent("Char Save Error %d",pPlayer->m_dwID);

  0003a	8b 8d 44 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65860]
  00040	51		 push	 ecx
  00041	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@NGMHGENG@Char?5Save?5Error?5?$CFd?$AA@
  00046	53		 push	 ebx
  00047	e8 00 00 00 00	 call	 ?LogEvent@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAAXPBDZZ ; ATL::CAtlServiceModuleT<CTMapSvrModule,100>::LogEvent
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	5d		 pop	 ebp
  00050	5b		 pop	 ebx

; 1250 : }

  00051	8b 4c 24 3c	 mov	 ecx, DWORD PTR __$EHRec$[esp+72]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	83 c4 48	 add	 esp, 72			; 00000048H
  0005f	c2 08 00	 ret	 8
$L176091:
  00062	56		 push	 esi
  00063	57		 push	 edi

; 761  : 		return;
; 762  : 	}
; 763  : 
; 764  : 	LPPACKETBUF pBUF = new PACKETBUF();

  00064	6a 20		 push	 32			; 00000020H
  00066	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006b	8b f0		 mov	 esi, eax
  0006d	83 c4 04	 add	 esp, 4
  00070	89 74 24 28	 mov	 DWORD PTR $T199671[esp+88], esi
  00074	85 f6		 test	 esi, esi
  00076	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 0
  0007e	74 10		 je	 SHORT $L199672
  00080	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00083	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00088	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0008e	eb 02		 jmp	 SHORT $L206210
$L199672:
  00090	33 f6		 xor	 esi, esi
$L206210:

; 765  : 	pBUF->m_packet.ExpandIoBuffer(MAX_PACKET_SIZE);

  00092	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00095	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0009a	8b cf		 mov	 ecx, edi
  0009c	89 74 24 18	 mov	 DWORD PTR $T199670[esp+92], esi
  000a0	c7 44 24 58 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+100], -1
  000a8	e8 00 00 00 00	 call	 ?ExpandIoBuffer@CPacket@@QAEKK@Z ; CPacket::ExpandIoBuffer

; 766  : 
; 767  : 	MAPTINVEN::iterator itTINVEN;
; 768  : 	MAPTSKILL::iterator itTSKILL;
; 769  : 	MAPTSKILL::iterator itExSkill;
; 770  : 	MAPTCABINET::iterator itCABINET;
; 771  : 	MAPTSTORAGEITEM::iterator itCABINETITEM;
; 772  : 	MAPTMAGIC::iterator itTMAGIC;
; 773  : 	MAPTHOTKEYINVEN::iterator itHOTKEY;
; 774  : 	MAPTDURINGITEM::iterator itDUITEM;
; 775  : 
; 776  : 	WORD wMapID = pPlayer->m_wMapID;
; 777  : 	FLOAT fPosX = pPlayer->m_fPosX;
; 778  : 	FLOAT fPosY = pPlayer->m_fPosY;
; 779  : 	FLOAT fPosZ = pPlayer->m_fPosZ;
; 780  : 	DWORD dwLastDestination = pPlayer->m_dwLastDestination;
; 781  : 
; 782  : 	if(pPlayer->m_wArenaID)

  000ad	66 83 bd 9a 04
	01 00 00	 cmp	 WORD PTR [ebp+66714], 0
  000b5	8b 85 80 01 01
	00		 mov	 eax, DWORD PTR [ebp+65920]
  000bb	8b 95 7c 01 01
	00		 mov	 edx, DWORD PTR [ebp+65916]
  000c1	8b 8d 84 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65924]
  000c7	66 8b b5 90 01
	01 00		 mov	 si, WORD PTR [ebp+65936]
  000ce	89 44 24 1c	 mov	 DWORD PTR _fPosY$[esp+88], eax
  000d2	8d 85 9a 04 01
	00		 lea	 eax, DWORD PTR [ebp+66714]
  000d8	89 54 24 18	 mov	 DWORD PTR _fPosX$[esp+88], edx
  000dc	89 4c 24 24	 mov	 DWORD PTR _fPosZ$[esp+88], ecx
  000e0	74 3e		 je	 SHORT $L176980

; 783  : 	{
; 784  : 		MAPARENA::iterator itAr = m_mapArena.find(pPlayer->m_wArenaID);

  000e2	50		 push	 eax
  000e3	8d 54 24 2c	 lea	 edx, DWORD PTR _itAr$176977[esp+92]
  000e7	52		 push	 edx
  000e8	8d 8b 2c 8d 00
	00		 lea	 ecx, DWORD PTR [ebx+36140]
  000ee	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagARENA@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagARENA@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagARENA *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagARENA *> >,0> >::find

; 785  : 		if(itAr != m_mapArena.end())

  000f3	8b 9b 30 8d 00
	00		 mov	 ebx, DWORD PTR [ebx+36144]
  000f9	8b 44 24 28	 mov	 eax, DWORD PTR _itAr$176977[esp+88]
  000fd	3b c3		 cmp	 eax, ebx
  000ff	74 1f		 je	 SHORT $L176980

; 786  : 		{
; 787  : 			wMapID = itAr->second->m_pOutPos->m_wMapID;

  00101	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00104	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 788  : 			fPosX = itAr->second->m_pOutPos->m_fPosX;

  00107	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 789  : 			fPosY = itAr->second->m_pOutPos->m_fPosY;

  0010a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0010d	66 8b 70 02	 mov	 si, WORD PTR [eax+2]

; 790  : 			fPosZ = itAr->second->m_pOutPos->m_fPosZ;

  00111	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00114	89 4c 24 18	 mov	 DWORD PTR _fPosX$[esp+88], ecx
  00118	89 54 24 1c	 mov	 DWORD PTR _fPosY$[esp+88], edx
  0011c	89 44 24 24	 mov	 DWORD PTR _fPosZ$[esp+88], eax
$L176980:

; 791  : 		}
; 792  : 	}
; 793  : 
; 794  : 	pBUF->m_packet.SetID(DM_SAVECHAR_REQ)
; 795  : 		<< pPlayer->m_dwID
; 796  : 		<< pPlayer->m_dwKEY
; 797  : 		<< pPlayer->m_bStartAct  
; 798  : 		<< pPlayer->m_bLevel
; 799  : 		<< pPlayer->m_bHelmetHide
; 800  : 		<< pPlayer->m_dwGold
; 801  : 		<< pPlayer->m_dwSilver
; 802  : 		<< pPlayer->m_dwCooper
; 803  : 		<< pPlayer->m_bGuildLeave
; 804  : 		<< pPlayer->m_dwGuildLeaveTime
; 805  : 		<< pPlayer->m_dwEXP
; 806  : 		<< pPlayer->m_dwHP
; 807  : 		<< pPlayer->m_dwMP
; 808  : 		<< pPlayer->m_wSkillPoint
; 809  : 		<< pPlayer->m_dwRegion
; 810  : 		<< wMapID
; 811  : 		<< pPlayer->m_wSpawnID
; 812  : 		<< pPlayer->m_wLastSpawnID
; 813  : 		<< dwLastDestination
; 814  : 		<< pPlayer->m_wTemptedMon
; 815  : 		<< pPlayer->m_aftermath.m_bStep
; 816  : 		<< fPosX
; 817  : 		<< fPosY
; 818  : 		<< fPosZ
; 819  : 		<< pPlayer->m_wDIR
; 820  : 		<< pPlayer->m_dwPcBangTime
; 821  : 		<< pPlayer->m_bPcBangItemCnt
; 822  : 		<< pPlayer->m_dwPvPUseablePoint
; 823  : 		<< pPlayer->m_dwPvPTotalPoint;

  00120	8b 8d dc 03 01
	00		 mov	 ecx, DWORD PTR [ebp+66524]
  00126	51		 push	 ecx
  00127	8b 95 d8 03 01
	00		 mov	 edx, DWORD PTR [ebp+66520]
  0012d	52		 push	 edx
  0012e	8b 8d 40 04 01
	00		 mov	 ecx, DWORD PTR [ebp+66624]
  00134	33 c0		 xor	 eax, eax
  00136	8a 85 50 04 01
	00		 mov	 al, BYTE PTR [ebp+66640]
  0013c	33 d2		 xor	 edx, edx
  0013e	66 8b 95 94 01
	01 00		 mov	 dx, WORD PTR [ebp+65940]
  00145	50		 push	 eax
  00146	51		 push	 ecx
  00147	52		 push	 edx
  00148	8b 44 24 38	 mov	 eax, DWORD PTR _fPosZ$[esp+108]
  0014c	50		 push	 eax
  0014d	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosY$[esp+112]
  00151	51		 push	 ecx
  00152	8b 54 24 34	 mov	 edx, DWORD PTR _fPosX$[esp+116]
  00156	52		 push	 edx
  00157	33 c0		 xor	 eax, eax
  00159	8a 85 d0 01 01
	00		 mov	 al, BYTE PTR [ebp+66000]
  0015f	33 c9		 xor	 ecx, ecx
  00161	66 8b 8d 8e 01
	01 00		 mov	 cx, WORD PTR [ebp+65934]
  00168	33 d2		 xor	 edx, edx
  0016a	66 8b 95 62 04
	01 00		 mov	 dx, WORD PTR [ebp+66658]
  00171	50		 push	 eax
  00172	8b 85 64 04 01
	00		 mov	 eax, DWORD PTR [ebp+66660]
  00178	51		 push	 ecx
  00179	50		 push	 eax
  0017a	8b 8d 64 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65892]
  00180	52		 push	 edx
  00181	33 c0		 xor	 eax, eax
  00183	66 8b 85 22 04
	01 00		 mov	 ax, WORD PTR [ebp+66594]
  0018a	33 d2		 xor	 edx, edx
  0018c	66 8b 95 20 04
	01 00		 mov	 dx, WORD PTR [ebp+66592]
  00193	50		 push	 eax
  00194	8b 85 60 01 01
	00		 mov	 eax, DWORD PTR [ebp+65888]
  0019a	56		 push	 esi
  0019b	51		 push	 ecx
  0019c	8b 8d 5c 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65884]
  001a2	52		 push	 edx
  001a3	8b 95 d4 03 01
	00		 mov	 edx, DWORD PTR [ebp+66516]
  001a9	50		 push	 eax
  001aa	8b 85 24 04 01
	00		 mov	 eax, DWORD PTR [ebp+66596]
  001b0	51		 push	 ecx
  001b1	52		 push	 edx
  001b2	8b 95 c8 03 01
	00		 mov	 edx, DWORD PTR [ebp+66504]
  001b8	50		 push	 eax
  001b9	8b 85 cc 03 01
	00		 mov	 eax, DWORD PTR [ebp+66508]
  001bf	33 c9		 xor	 ecx, ecx
  001c1	8a 8d 2c 04 01
	00		 mov	 cl, BYTE PTR [ebp+66604]
  001c7	51		 push	 ecx
  001c8	8b 8d d0 03 01
	00		 mov	 ecx, DWORD PTR [ebp+66512]
  001ce	52		 push	 edx
  001cf	50		 push	 eax
  001d0	51		 push	 ecx
  001d1	33 d2		 xor	 edx, edx
  001d3	8a 95 1c 04 01
	00		 mov	 dl, BYTE PTR [ebp+66588]
  001d9	33 c0		 xor	 eax, eax
  001db	8a 85 7b 01 01
	00		 mov	 al, BYTE PTR [ebp+65915]
  001e1	33 c9		 xor	 ecx, ecx
  001e3	8a 8d b4 03 01
	00		 mov	 cl, BYTE PTR [ebp+66484]
  001e9	52		 push	 edx
  001ea	8b 95 b0 03 01
	00		 mov	 edx, DWORD PTR [ebp+66480]
  001f0	50		 push	 eax
  001f1	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  001f7	51		 push	 ecx
  001f8	52		 push	 edx
  001f9	50		 push	 eax
  001fa	68 07 90 00 00	 push	 36871			; 00009007H
  001ff	8b cf		 mov	 ecx, edi
  00201	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00206	8b c8		 mov	 ecx, eax
  00208	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0020d	8b c8		 mov	 ecx, eax
  0020f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0021b	8b c8		 mov	 ecx, eax
  0021d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00222	8b c8		 mov	 ecx, eax
  00224	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00229	8b c8		 mov	 ecx, eax
  0022b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00230	8b c8		 mov	 ecx, eax
  00232	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00237	8b c8		 mov	 ecx, eax
  00239	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0023e	8b c8		 mov	 ecx, eax
  00240	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00245	8b c8		 mov	 ecx, eax
  00247	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0024c	8b c8		 mov	 ecx, eax
  0024e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00253	8b c8		 mov	 ecx, eax
  00255	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0025a	8b c8		 mov	 ecx, eax
  0025c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00261	8b c8		 mov	 ecx, eax
  00263	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00268	8b c8		 mov	 ecx, eax
  0026a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0026f	8b c8		 mov	 ecx, eax
  00271	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00276	8b c8		 mov	 ecx, eax
  00278	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0027d	8b c8		 mov	 ecx, eax
  0027f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00284	8b c8		 mov	 ecx, eax
  00286	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0028b	8b c8		 mov	 ecx, eax
  0028d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00292	8b c8		 mov	 ecx, eax
  00294	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00299	8b c8		 mov	 ecx, eax
  0029b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002a0	8b c8		 mov	 ecx, eax
  002a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002a7	8b c8		 mov	 ecx, eax
  002a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  002ae	8b c8		 mov	 ecx, eax
  002b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002b5	8b c8		 mov	 ecx, eax
  002b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002bc	8b c8		 mov	 ecx, eax
  002be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002c3	8b c8		 mov	 ecx, eax
  002c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002ca	8b c8		 mov	 ecx, eax
  002cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002d1	8d b5 e0 02 01
	00		 lea	 esi, DWORD PTR [ebp+66272]
  002d7	bb 06 00 00 00	 mov	 ebx, 6
  002dc	8d 64 24 00	 npad	 4
$L176982:

; 824  : 
; 825  : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)
; 826  : 	{
; 827  : 		pBUF->m_packet
; 828  : 			<< pPlayer->m_aPvPRecord[cr][0]
; 829  : 			<< pPlayer->m_aPvPRecord[cr][1];

  002e0	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  002e3	8b 16		 mov	 edx, DWORD PTR [esi]
  002e5	51		 push	 ecx
  002e6	52		 push	 edx
  002e7	8b cf		 mov	 ecx, edi
  002e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002ee	8b c8		 mov	 ecx, eax
  002f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002f5	83 c6 08	 add	 esi, 8
  002f8	4b		 dec	 ebx
  002f9	75 e5		 jne	 SHORT $L176982

; 830  : 	}
; 831  : 
; 832  : 	pBUF->m_packet
; 833  : 		<< BYTE(pPlayer->m_mapTINVEN.size());

  002fb	8b 85 10 01 01
	00		 mov	 eax, DWORD PTR [ebp+65808]
  00301	50		 push	 eax
  00302	8b cf		 mov	 ecx, edi
  00304	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 834  : 
; 835  : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  00309	8b 85 0c 01 01
	00		 mov	 eax, DWORD PTR [ebp+65804]
  0030f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00311	3b c8		 cmp	 ecx, eax
  00313	89 4c 24 1c	 mov	 DWORD PTR _itTINVEN$[esp+88], ecx
  00317	0f 84 2d 01 00
	00		 je	 $L176990
  0031d	8d 49 00	 npad	 3
$L200142:

; 836  : 	{
; 837  : 		CTInven *pTINVEN = (*itTINVEN).second;

  00320	8b 44 24 1c	 mov	 eax, DWORD PTR _itTINVEN$[esp+88]
  00324	8b 78 10	 mov	 edi, DWORD PTR [eax+16]

; 838  : 		MAPTITEM::iterator itTITEM;
; 839  : 
; 840  : 		pBUF->m_packet
; 841  : 			<< pTINVEN->m_bInvenID
; 842  : 			<< pTINVEN->m_wItemID
; 843  : 			<< pTINVEN->m_dEndTime
; 844  : 			<< pTINVEN->m_bELD
; 845  : 			<< BYTE(pTINVEN->m_mapTITEM.size());

  00327	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0032a	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  0032d	33 c9		 xor	 ecx, ecx
  0032f	8a 4f 28	 mov	 cl, BYTE PTR [edi+40]
  00332	50		 push	 eax
  00333	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00336	51		 push	 ecx
  00337	33 c9		 xor	 ecx, ecx
  00339	66 8b 4f 1a	 mov	 cx, WORD PTR [edi+26]
  0033d	52		 push	 edx
  0033e	33 d2		 xor	 edx, edx
  00340	8a 57 18	 mov	 dl, BYTE PTR [edi+24]
  00343	50		 push	 eax
  00344	51		 push	 ecx
  00345	8b 4c 24 28	 mov	 ecx, DWORD PTR $T199670[esp+108]
  00349	83 c1 04	 add	 ecx, 4
  0034c	52		 push	 edx
  0034d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00352	8b c8		 mov	 ecx, eax
  00354	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00359	8b c8		 mov	 ecx, eax
  0035b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00360	8b c8		 mov	 ecx, eax
  00362	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00367	8b c8		 mov	 ecx, eax
  00369	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 846  : 
; 847  : 		for( itTITEM = pTINVEN->m_mapTITEM.begin(); itTITEM != pTINVEN->m_mapTITEM.end(); itTITEM++)

  0036e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00371	8b 30		 mov	 esi, DWORD PTR [eax]
  00373	3b f0		 cmp	 esi, eax
  00375	74 78		 je	 SHORT $L176989
$L200413:

; 848  : 		{
; 849  : 			CTItem *pTITEM = (*itTITEM).second;

  00377	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]

; 850  : 			if(!pTITEM->m_dlID)

  0037a	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  0037d	0b 43 24	 or	 eax, DWORD PTR [ebx+36]
  00380	75 0f		 jne	 SHORT $L177113

; 851  : 				pTITEM->m_dlID = GenItemID();

  00382	8b 4c 24 20	 mov	 ecx, DWORD PTR _this$[esp+88]
  00386	e8 00 00 00 00	 call	 ?GenItemID@CTMapSvrModule@@QAE_JXZ ; CTMapSvrModule::GenItemID
  0038b	89 43 20	 mov	 DWORD PTR [ebx+32], eax
  0038e	89 53 24	 mov	 DWORD PTR [ebx+36], edx
$L177113:

; 852  : 
; 853  : 			pTITEM->WrapPacket(&(pBUF->m_packet));

  00391	8b 44 24 14	 mov	 eax, DWORD PTR $T199670[esp+88]
  00395	83 c0 04	 add	 eax, 4
  00398	50		 push	 eax
  00399	8b cb		 mov	 ecx, ebx
  0039b	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket
  003a0	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  003a3	84 c0		 test	 al, al
  003a5	75 43		 jne	 SHORT $L200409
  003a7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  003aa	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  003ad	84 c9		 test	 cl, cl
  003af	75 1c		 jne	 SHORT $L206110
  003b1	8b f0		 mov	 esi, eax
  003b3	8b 06		 mov	 eax, DWORD PTR [esi]
  003b5	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  003b8	84 c9		 test	 cl, cl
  003ba	75 2e		 jne	 SHORT $L200409
  003bc	8d 64 24 00	 npad	 4

; 846  : 
; 847  : 		for( itTITEM = pTINVEN->m_mapTITEM.begin(); itTITEM != pTINVEN->m_mapTITEM.end(); itTITEM++)

$L200397:
  003c0	8b f0		 mov	 esi, eax
  003c2	8b 06		 mov	 eax, DWORD PTR [esi]
  003c4	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  003c7	84 c9		 test	 cl, cl
  003c9	74 f5		 je	 SHORT $L200397
  003cb	eb 1d		 jmp	 SHORT $L200409
$L206110:
  003cd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  003d0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  003d3	84 c9		 test	 cl, cl
  003d5	75 11		 jne	 SHORT $L200412
$L200411:
  003d7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  003da	75 0c		 jne	 SHORT $L200412
  003dc	8b f0		 mov	 esi, eax
  003de	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  003e1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  003e4	84 c9		 test	 cl, cl
  003e6	74 ef		 je	 SHORT $L200411
$L200412:
  003e8	8b f0		 mov	 esi, eax
$L200409:
  003ea	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  003ed	75 88		 jne	 SHORT $L200413
$L176989:

; 834  : 
; 835  : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  003ef	8b 4c 24 1c	 mov	 ecx, DWORD PTR _itTINVEN$[esp+88]
  003f3	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  003f6	84 c0		 test	 al, al
  003f8	75 44		 jne	 SHORT $L200136
  003fa	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  003fd	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00400	84 d2		 test	 dl, dl
  00402	75 19		 jne	 SHORT $L206112
  00404	8b c8		 mov	 ecx, eax
  00406	8b 01		 mov	 eax, DWORD PTR [ecx]
  00408	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0040b	84 d2		 test	 dl, dl
  0040d	75 2b		 jne	 SHORT $L200125
  0040f	90		 npad	 1
$L200124:
  00410	8b c8		 mov	 ecx, eax
  00412	8b 01		 mov	 eax, DWORD PTR [ecx]
  00414	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00417	84 d2		 test	 dl, dl
  00419	74 f5		 je	 SHORT $L200124
  0041b	eb 1d		 jmp	 SHORT $L200125
$L206112:
  0041d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00420	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00423	84 d2		 test	 dl, dl
  00425	75 11		 jne	 SHORT $L200139
$L200138:
  00427	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0042a	75 0c		 jne	 SHORT $L200139
  0042c	8b c8		 mov	 ecx, eax
  0042e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00431	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00434	84 d2		 test	 dl, dl
  00436	74 ef		 je	 SHORT $L200138
$L200139:
  00438	8b c8		 mov	 ecx, eax
$L200125:
  0043a	89 4c 24 1c	 mov	 DWORD PTR _itTINVEN$[esp+88], ecx
$L200136:
  0043e	3b 8d 0c 01 01
	00		 cmp	 ecx, DWORD PTR [ebp+65804]
  00444	0f 85 d6 fe ff
	ff		 jne	 $L200142
$L176990:

; 854  : 		}
; 855  : 	}
; 856  : 
; 857  : 	pBUF->m_packet
; 858  : 		<< BYTE(pPlayer->m_mapCabinet.size());

  0044a	8b 85 fc 01 01
	00		 mov	 eax, DWORD PTR [ebp+66044]
  00450	8b 4c 24 14	 mov	 ecx, DWORD PTR $T199670[esp+88]
  00454	50		 push	 eax
  00455	83 c1 04	 add	 ecx, 4
  00458	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 859  : 	
; 860  : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

  0045d	8b 85 f8 01 01
	00		 mov	 eax, DWORD PTR [ebp+66040]
  00463	8b 08		 mov	 ecx, DWORD PTR [eax]
  00465	3b c8		 cmp	 ecx, eax
  00467	89 4c 24 1c	 mov	 DWORD PTR _itCABINET$[esp+88], ecx
  0046b	0f 84 29 01 00
	00		 je	 $L177119
$L200638:

; 861  : 	{
; 862  : 		pBUF->m_packet
; 863  : 			<< (*itCABINET).second->m_bCabinetID
; 864  : 			<< (*itCABINET).second->m_bUse
; 865  : 			<< WORD((*itCABINET).second->m_mapCabinetItem.size());

  00471	8b 74 24 1c	 mov	 esi, DWORD PTR _itCABINET$[esp+88]
  00475	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00478	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0047b	51		 push	 ecx
  0047c	33 c9		 xor	 ecx, ecx
  0047e	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00481	33 d2		 xor	 edx, edx
  00483	8a 10		 mov	 dl, BYTE PTR [eax]
  00485	51		 push	 ecx
  00486	8b 4c 24 1c	 mov	 ecx, DWORD PTR $T199670[esp+96]
  0048a	52		 push	 edx
  0048b	83 c1 04	 add	 ecx, 4
  0048e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00493	8b c8		 mov	 ecx, eax
  00495	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0049a	8b c8		 mov	 ecx, eax
  0049c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 866  : 
; 867  : 		for(itCABINETITEM=(*itCABINET).second->m_mapCabinetItem.begin(); itCABINETITEM!=(*itCABINET).second->m_mapCabinetItem.end(); itCABINETITEM++)

  004a1	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  004a4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  004a7	8b 31		 mov	 esi, DWORD PTR [ecx]
  004a9	3b f1		 cmp	 esi, ecx
  004ab	0f 84 8f 00 00
	00		 je	 $L177118
$L200985:

; 868  : 		{
; 869  : 			CTItem *pTITEM = (*itCABINETITEM).second;

  004b1	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]

; 870  : 			if(!pTITEM->m_dlID)

  004b4	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  004b7	0b 43 24	 or	 eax, DWORD PTR [ebx+36]
  004ba	75 0f		 jne	 SHORT $L177145

; 871  : 				pTITEM->m_dlID = GenItemID();

  004bc	8b 4c 24 20	 mov	 ecx, DWORD PTR _this$[esp+88]
  004c0	e8 00 00 00 00	 call	 ?GenItemID@CTMapSvrModule@@QAE_JXZ ; CTMapSvrModule::GenItemID
  004c5	89 43 20	 mov	 DWORD PTR [ebx+32], eax
  004c8	89 53 24	 mov	 DWORD PTR [ebx+36], edx
$L177145:

; 872  : 
; 873  : 			pBUF->m_packet
; 874  : 				<< pTITEM->m_dwStItemID;

  004cb	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  004ce	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  004d2	51		 push	 ecx
  004d3	83 c7 04	 add	 edi, 4
  004d6	8b cf		 mov	 ecx, edi
  004d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 875  : 
; 876  : 			pTITEM->WrapPacket(&(pBUF->m_packet));

  004dd	57		 push	 edi
  004de	8b cb		 mov	 ecx, ebx
  004e0	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket
  004e5	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  004e8	84 c0		 test	 al, al
  004ea	75 3f		 jne	 SHORT $L200979
  004ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  004ef	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  004f2	84 c9		 test	 cl, cl
  004f4	75 18		 jne	 SHORT $L206116
  004f6	8b f0		 mov	 esi, eax
  004f8	8b 06		 mov	 eax, DWORD PTR [esi]
  004fa	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  004fd	84 c9		 test	 cl, cl
  004ff	75 2a		 jne	 SHORT $L200979

; 866  : 
; 867  : 		for(itCABINETITEM=(*itCABINET).second->m_mapCabinetItem.begin(); itCABINETITEM!=(*itCABINET).second->m_mapCabinetItem.end(); itCABINETITEM++)

$L200967:
  00501	8b f0		 mov	 esi, eax
  00503	8b 06		 mov	 eax, DWORD PTR [esi]
  00505	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00508	84 c9		 test	 cl, cl
  0050a	74 f5		 je	 SHORT $L200967
  0050c	eb 1d		 jmp	 SHORT $L200979
$L206116:
  0050e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00511	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00514	84 c9		 test	 cl, cl
  00516	75 11		 jne	 SHORT $L200982
$L200981:
  00518	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0051b	75 0c		 jne	 SHORT $L200982
  0051d	8b f0		 mov	 esi, eax
  0051f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00522	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00525	84 c9		 test	 cl, cl
  00527	74 ef		 je	 SHORT $L200981
$L200982:
  00529	8b f0		 mov	 esi, eax
$L200979:
  0052b	8b 54 24 1c	 mov	 edx, DWORD PTR _itCABINET$[esp+88]
  0052f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00532	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00535	83 c0 04	 add	 eax, 4
  00538	3b f1		 cmp	 esi, ecx
  0053a	0f 85 71 ff ff
	ff		 jne	 $L200985
$L177118:

; 859  : 	
; 860  : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

  00540	8b 4c 24 1c	 mov	 ecx, DWORD PTR _itCABINET$[esp+88]
  00544	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00547	84 c0		 test	 al, al
  00549	75 43		 jne	 SHORT $L200648
  0054b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0054e	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00551	84 d2		 test	 dl, dl
  00553	75 18		 jne	 SHORT $L206118
  00555	8b c8		 mov	 ecx, eax
  00557	8b 01		 mov	 eax, DWORD PTR [ecx]
  00559	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0055c	84 d2		 test	 dl, dl
  0055e	75 2a		 jne	 SHORT $L200663
$L200662:
  00560	8b c8		 mov	 ecx, eax
  00562	8b 01		 mov	 eax, DWORD PTR [ecx]
  00564	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00567	84 d2		 test	 dl, dl
  00569	74 f5		 je	 SHORT $L200662
  0056b	eb 1d		 jmp	 SHORT $L200663
$L206118:
  0056d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00570	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00573	84 d2		 test	 dl, dl
  00575	75 11		 jne	 SHORT $L200651
$L200650:
  00577	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0057a	75 0c		 jne	 SHORT $L200651
  0057c	8b c8		 mov	 ecx, eax
  0057e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00581	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00584	84 d2		 test	 dl, dl
  00586	74 ef		 je	 SHORT $L200650
$L200651:
  00588	8b c8		 mov	 ecx, eax
$L200663:
  0058a	89 4c 24 1c	 mov	 DWORD PTR _itCABINET$[esp+88], ecx
$L200648:
  0058e	3b 8d f8 01 01
	00		 cmp	 ecx, DWORD PTR [ebp+66040]
  00594	0f 85 d7 fe ff
	ff		 jne	 $L200638
$L177119:

; 877  : 		}
; 878  : 	}
; 879  : 
; 880  : 	pBUF->m_packet << (BYTE)pPlayer->m_mapTSKILL.size();

  0059a	8b 85 1c 01 01
	00		 mov	 eax, DWORD PTR [ebp+65820]
  005a0	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  005a4	50		 push	 eax
  005a5	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  005a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 881  : 	for(itTSKILL = pPlayer->m_mapTSKILL.begin(); itTSKILL != pPlayer->m_mapTSKILL.end(); itTSKILL++)

  005ad	8b 85 18 01 01
	00		 mov	 eax, DWORD PTR [ebp+65816]
  005b3	8b 30		 mov	 esi, DWORD PTR [eax]
  005b5	3b f0		 cmp	 esi, eax
  005b7	0f 84 92 00 00
	00		 je	 $L177152
  005bd	8d 49 00	 npad	 3
$L201264:

; 882  : 	{
; 883  : 		CTSkill * pSkill = (*itTSKILL).second;

  005c0	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]

; 884  : 		pBUF->m_packet
; 885  : 			<< pSkill->m_pTSKILL->m_wID
; 886  : 			<< pSkill->m_bLevel
; 887  : 			<< pSkill->GetReuseRemainTick(pPlayer->m_dwSaveTick);

  005c3	8b 85 28 04 01
	00		 mov	 eax, DWORD PTR [ebp+66600]
  005c9	50		 push	 eax
  005ca	8b cb		 mov	 ecx, ebx
  005cc	e8 00 00 00 00	 call	 ?GetReuseRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetReuseRemainTick
  005d1	8b 53 54	 mov	 edx, DWORD PTR [ebx+84]
  005d4	50		 push	 eax
  005d5	33 c9		 xor	 ecx, ecx
  005d7	8a 4b 50	 mov	 cl, BYTE PTR [ebx+80]
  005da	33 c0		 xor	 eax, eax
  005dc	66 8b 02	 mov	 ax, WORD PTR [edx]
  005df	51		 push	 ecx
  005e0	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  005e3	50		 push	 eax
  005e4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  005e9	8b c8		 mov	 ecx, eax
  005eb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  005f0	8b c8		 mov	 ecx, eax
  005f2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  005f7	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  005fa	84 c0		 test	 al, al
  005fc	75 45		 jne	 SHORT $L201258
  005fe	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00601	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00604	84 c9		 test	 cl, cl
  00606	75 18		 jne	 SHORT $L206121
  00608	8b f0		 mov	 esi, eax
  0060a	8b 06		 mov	 eax, DWORD PTR [esi]
  0060c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0060f	84 c9		 test	 cl, cl
  00611	75 30		 jne	 SHORT $L201258

; 881  : 	for(itTSKILL = pPlayer->m_mapTSKILL.begin(); itTSKILL != pPlayer->m_mapTSKILL.end(); itTSKILL++)

$L201246:
  00613	8b f0		 mov	 esi, eax
  00615	8b 06		 mov	 eax, DWORD PTR [esi]
  00617	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0061a	84 c9		 test	 cl, cl
  0061c	74 f5		 je	 SHORT $L201246
  0061e	eb 23		 jmp	 SHORT $L201258
$L206121:
  00620	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00623	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00626	84 c9		 test	 cl, cl
  00628	75 17		 jne	 SHORT $L201261
  0062a	8d 9b 00 00 00
	00		 npad	 6
$L201260:
  00630	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00633	75 0c		 jne	 SHORT $L201261
  00635	8b f0		 mov	 esi, eax
  00637	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0063a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0063d	84 c9		 test	 cl, cl
  0063f	74 ef		 je	 SHORT $L201260
$L201261:
  00641	8b f0		 mov	 esi, eax
$L201258:
  00643	3b b5 18 01 01
	00		 cmp	 esi, DWORD PTR [ebp+65816]
  00649	0f 85 71 ff ff
	ff		 jne	 $L201264
$L177152:

; 888  : 	}
; 889  : 
; 890  : 	WORD wSize = pBUF->m_packet.GetSize();

  0064f	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00652	8b ce		 mov	 ecx, esi
  00654	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 891  : 	WORD wCount = 0;

  00659	33 db		 xor	 ebx, ebx

; 892  : 	pBUF->m_packet << wCount;

  0065b	53		 push	 ebx
  0065c	8b ce		 mov	 ecx, esi
  0065e	89 5c 24 20	 mov	 DWORD PTR _wCount$[esp+92], ebx
  00662	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  00666	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 893  : 
; 894  : 	VPLAYER vPlayer;

  0066b	c7 44 24 54 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 1

; 895  : 	vPlayer.clear();

  00673	89 5c 24 40	 mov	 DWORD PTR _vPlayer$[esp+92], ebx
  00677	89 5c 24 44	 mov	 DWORD PTR _vPlayer$[esp+96], ebx
  0067b	89 5c 24 48	 mov	 DWORD PTR _vPlayer$[esp+100], ebx

; 896  : 
; 897  : 	for(int is = 0; is<(BYTE)pPlayer->m_vMaintainSkill.size(); is++)

  0067f	89 5c 24 24	 mov	 DWORD PTR _is$177157[esp+88], ebx
$L177159:
  00683	8b 8d 24 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65828]
  00689	3b cb		 cmp	 ecx, ebx
  0068b	75 04		 jne	 SHORT $L201413
  0068d	33 c0		 xor	 eax, eax
  0068f	eb 0b		 jmp	 SHORT $L201414
$L201413:
  00691	8b 85 28 01 01
	00		 mov	 eax, DWORD PTR [ebp+65832]
  00697	2b c1		 sub	 eax, ecx
  00699	c1 f8 02	 sar	 eax, 2
$L201414:
  0069c	0f b6 c8	 movzx	 ecx, al
  0069f	8b 44 24 24	 mov	 eax, DWORD PTR _is$177157[esp+88]
  006a3	3b c1		 cmp	 eax, ecx
  006a5	0f 8d cc 01 00
	00		 jge	 $L177161
  006ab	8b 95 24 01 01
	00		 mov	 edx, DWORD PTR [ebp+65828]
  006b1	8b f8		 mov	 edi, eax
  006b3	c1 e7 02	 shl	 edi, 2

; 898  : 	{
; 899  : 		if(pPlayer->m_vMaintainSkill[is]->m_pTSKILL->m_wID == TSTORE_SKILL)

  006b6	8b 0c 17	 mov	 ecx, DWORD PTR [edi+edx]
  006b9	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  006bc	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  006bf	66 81 3a 24 03	 cmp	 WORD PTR [edx], 804	; 00000324H
  006c4	0f 84 99 01 00
	00		 je	 $L177160

; 900  : 			continue;
; 901  : 
; 902  : 		if(pPlayer->m_pLocal &&
; 903  : 			(pPlayer->m_pLocal->m_pZone->m_wSkill1 == pPlayer->m_vMaintainSkill[is]->m_pTSKILL->m_wID ||
; 904  : 			 pPlayer->m_pLocal->m_pZone->m_wSkill2 == pPlayer->m_vMaintainSkill[is]->m_pTSKILL->m_wID))

  006ca	8b 8d 58 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65880]
  006d0	85 c9		 test	 ecx, ecx
  006d2	74 27		 je	 SHORT $L177164
  006d4	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  006d7	8b 10		 mov	 edx, DWORD PTR [eax]
  006d9	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  006dc	66 8b 71 22	 mov	 si, WORD PTR [ecx+34]
  006e0	66 3b 32	 cmp	 si, WORD PTR [edx]
  006e3	0f 84 7a 01 00
	00		 je	 $L177160
  006e9	8b 10		 mov	 edx, DWORD PTR [eax]
  006eb	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  006ee	66 8b 49 24	 mov	 cx, WORD PTR [ecx+36]
  006f2	66 3b 0a	 cmp	 cx, WORD PTR [edx]

; 905  : 			 continue;

  006f5	0f 84 68 01 00
	00		 je	 $L177160
$L177164:

; 906  : 
; 907  : 		DWORD dwRemain = pPlayer->m_vMaintainSkill[is]->GetRemainTick(pPlayer->m_dwSaveTick);

  006fb	8b 95 28 04 01
	00		 mov	 edx, DWORD PTR [ebp+66600]
  00701	8b 08		 mov	 ecx, DWORD PTR [eax]
  00703	52		 push	 edx
  00704	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick
  00709	8b 8d 24 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65828]
  0070f	8d 14 0f	 lea	 edx, DWORD PTR [edi+ecx]

; 908  : 		if( !pPlayer->m_vMaintainSkill[is]->m_dwStartTick || 
; 909  : 			dwRemain)

  00712	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00714	8b 71 48	 mov	 esi, DWORD PTR [ecx+72]
  00717	85 f6		 test	 esi, esi
  00719	0f 84 d1 00 00
	00		 je	 $L177168
  0071f	85 c0		 test	 eax, eax
  00721	0f 85 c9 00 00
	00		 jne	 $L177168

; 922  : 		}
; 923  : 		else if(wACKMsg)

  00727	66 39 44 24 60	 cmp	 WORD PTR _wACKMsg$[esp+84], ax
  0072c	0f 84 31 01 00
	00		 je	 $L177160

; 924  : 		{
; 925  : 			if(pPlayer->m_pMAP)

  00732	8b 8d 40 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65856]
  00738	85 c9		 test	 ecx, ecx
  0073a	0f 84 84 00 00
	00		 je	 $L177171

; 926  : 			{
; 927  : 				if(vPlayer.empty())

  00740	8b 54 24 40	 mov	 edx, DWORD PTR _vPlayer$[esp+92]
  00744	85 d2		 test	 edx, edx
  00746	74 0f		 je	 SHORT $L206196
  00748	8b 44 24 44	 mov	 eax, DWORD PTR _vPlayer$[esp+96]
  0074c	8b f0		 mov	 esi, eax
  0074e	2b f2		 sub	 esi, edx
  00750	c1 fe 02	 sar	 esi, 2
  00753	85 f6		 test	 esi, esi
  00755	75 20		 jne	 SHORT $L177172
$L206196:

; 928  : 					pPlayer->m_pMAP->GetNeighbor(&vPlayer, pPlayer->m_fPosX, pPlayer->m_fPosZ);

  00757	8b 95 84 01 01
	00		 mov	 edx, DWORD PTR [ebp+65924]
  0075d	8b 85 7c 01 01
	00		 mov	 eax, DWORD PTR [ebp+65916]
  00763	52		 push	 edx
  00764	50		 push	 eax
  00765	8d 54 24 44	 lea	 edx, DWORD PTR _vPlayer$[esp+96]
  00769	52		 push	 edx
  0076a	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
  0076f	8b 44 24 44	 mov	 eax, DWORD PTR _vPlayer$[esp+96]
  00773	8b 54 24 40	 mov	 edx, DWORD PTR _vPlayer$[esp+92]
$L177172:

; 929  : 
; 930  : 				for(DWORD i=0; i<vPlayer.size(); i++)

  00777	33 f6		 xor	 esi, esi
  00779	8d a4 24 00 00
	00 00		 npad	 7
$L177174:
  00780	85 d2		 test	 edx, edx
  00782	0f 84 db 00 00
	00		 je	 $L177160
  00788	2b c2		 sub	 eax, edx
  0078a	c1 f8 02	 sar	 eax, 2
  0078d	3b f0		 cmp	 esi, eax
  0078f	0f 83 ce 00 00
	00		 jae	 $L177160

; 931  : 					vPlayer[i]->SendCS_SKILLEND_ACK(pPlayer->m_dwID, OT_PC, pPlayer->m_vMaintainSkill[is]->GetID());

  00795	8b 85 24 01 01
	00		 mov	 eax, DWORD PTR [ebp+65828]
  0079b	8b 0c 38	 mov	 ecx, DWORD PTR [eax+edi]
  0079e	03 c7		 add	 eax, edi
  007a0	8d 1c b2	 lea	 ebx, DWORD PTR [edx+esi*4]
  007a3	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  007a8	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  007aa	50		 push	 eax
  007ab	8b 85 44 01 01
	00		 mov	 eax, DWORD PTR [ebp+65860]
  007b1	6a 01		 push	 1
  007b3	50		 push	 eax
  007b4	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  007b9	8b 44 24 44	 mov	 eax, DWORD PTR _vPlayer$[esp+96]
  007bd	8b 54 24 40	 mov	 edx, DWORD PTR _vPlayer$[esp+92]
  007c1	46		 inc	 esi
  007c2	eb bc		 jmp	 SHORT $L177174
$L177171:

; 932  : 			}
; 933  : 			else
; 934  : 				pPlayer->SendCS_SKILLEND_ACK(pPlayer->m_dwID, OT_PC, pPlayer->m_vMaintainSkill[is]->GetID());

  007c4	8b 0a		 mov	 ecx, DWORD PTR [edx]
  007c6	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  007cb	8b 8d 44 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65860]
  007d1	50		 push	 eax
  007d2	6a 01		 push	 1
  007d4	51		 push	 ecx
  007d5	8b cd		 mov	 ecx, ebp
  007d7	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  007dc	8b 44 24 24	 mov	 eax, DWORD PTR _is$177157[esp+88]
  007e0	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  007e4	40		 inc	 eax
  007e5	89 44 24 24	 mov	 DWORD PTR _is$177157[esp+88], eax
  007e9	33 db		 xor	 ebx, ebx
  007eb	e9 93 fe ff ff	 jmp	 $L177159
$L177168:

; 910  : 		{
; 911  : 			pBUF->m_packet
; 912  : 				<< pPlayer->m_vMaintainSkill[is]->GetID()
; 913  : 				<< pPlayer->m_vMaintainSkill[is]->m_bLevel
; 914  : 				<< dwRemain
; 915  : 				<< pPlayer->m_vMaintainSkill[is]->m_bAttackType
; 916  : 				<< pPlayer->m_vMaintainSkill[is]->m_dwAttackID
; 917  : 				<< pPlayer->m_vMaintainSkill[is]->m_bHostType
; 918  : 				<< pPlayer->m_vMaintainSkill[is]->m_dwHostID
; 919  : 				<< pPlayer->m_vMaintainSkill[is]->m_bAttackCountry;

  007f0	8b 0a		 mov	 ecx, DWORD PTR [edx]
  007f2	0f b6 49 29	 movzx	 ecx, BYTE PTR [ecx+41]
  007f6	51		 push	 ecx
  007f7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  007f9	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  007fc	51		 push	 ecx
  007fd	8b 0a		 mov	 ecx, DWORD PTR [edx]
  007ff	0f b6 49 10	 movzx	 ecx, BYTE PTR [ecx+16]
  00803	51		 push	 ecx
  00804	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00806	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00809	51		 push	 ecx
  0080a	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0080c	0f b6 49 08	 movzx	 ecx, BYTE PTR [ecx+8]
  00810	51		 push	 ecx
  00811	50		 push	 eax
  00812	8b 02		 mov	 eax, DWORD PTR [edx]
  00814	33 c9		 xor	 ecx, ecx
  00816	8a 48 50	 mov	 cl, BYTE PTR [eax+80]
  00819	51		 push	 ecx
  0081a	8b c8		 mov	 ecx, eax
  0081c	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  00821	8b 4c 24 30	 mov	 ecx, DWORD PTR $T199670[esp+116]
  00825	83 c1 04	 add	 ecx, 4
  00828	50		 push	 eax
  00829	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0082e	8b c8		 mov	 ecx, eax
  00830	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00835	8b c8		 mov	 ecx, eax
  00837	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0083c	8b c8		 mov	 ecx, eax
  0083e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00843	8b c8		 mov	 ecx, eax
  00845	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0084a	8b c8		 mov	 ecx, eax
  0084c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00851	8b c8		 mov	 ecx, eax
  00853	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00858	8b c8		 mov	 ecx, eax
  0085a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 920  : 
; 921  : 			wCount++;

  0085f	ff 44 24 1c	 inc	 DWORD PTR _wCount$[esp+88]
$L177160:
  00863	8b 44 24 24	 mov	 eax, DWORD PTR _is$177157[esp+88]
  00867	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  0086b	40		 inc	 eax
  0086c	89 44 24 24	 mov	 DWORD PTR _is$177157[esp+88], eax
  00870	33 db		 xor	 ebx, ebx
  00872	e9 0c fe ff ff	 jmp	 $L177159
$L177161:

; 935  : 		}
; 936  : 	}
; 937  : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  00877	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0087a	8b ce		 mov	 ecx, esi
  0087c	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00881	0f b7 54 24 18	 movzx	 edx, WORD PTR _wSize$[esp+88]
  00886	66 8b 4c 24 1c	 mov	 cx, WORD PTR _wCount$[esp+88]
  0088b	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 938  : 	vPlayer.clear();

  0088f	8b 44 24 40	 mov	 eax, DWORD PTR _vPlayer$[esp+92]
  00893	3b c3		 cmp	 eax, ebx
  00895	74 09		 je	 SHORT $L202277
  00897	50		 push	 eax
  00898	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0089d	83 c4 04	 add	 esp, 4
$L202277:

; 939  : 
; 940  : 	wSize = pBUF->m_packet.GetSize();

  008a0	8b ce		 mov	 ecx, esi
  008a2	89 5c 24 40	 mov	 DWORD PTR _vPlayer$[esp+92], ebx
  008a6	89 5c 24 44	 mov	 DWORD PTR _vPlayer$[esp+96], ebx
  008aa	89 5c 24 48	 mov	 DWORD PTR _vPlayer$[esp+100], ebx
  008ae	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 941  : 	wCount = 0;
; 942  : 	pBUF->m_packet << wCount;

  008b3	53		 push	 ebx
  008b4	8b ce		 mov	 ecx, esi
  008b6	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  008ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 943  : 
; 944  : 	if(pPlayer->m_diPremium.m_bType)

  008bf	8a 85 34 02 01
	00		 mov	 al, BYTE PTR [ebp+66100]
  008c5	84 c0		 test	 al, al

; 945  : 	{
; 946  : 		if(!((pPlayer->m_diPremium.m_bType == DURINGTYPE_DAY && pPlayer->m_diPremium.m_tEndTime <= m_timeCurrent) ||
; 947  : 			(pPlayer->m_diPremium.m_bType == DURINGTYPE_TIME && pPlayer->m_diPremium.m_dwRemainTime == 0)))

  008c7	8b 7c 24 20	 mov	 edi, DWORD PTR _this$[esp+88]
  008cb	0f 84 7c 00 00
	00		 je	 $L177179
  008d1	3c 02		 cmp	 al, 2
  008d3	75 1e		 jne	 SHORT $L206200
  008d5	8b 95 44 02 01
	00		 mov	 edx, DWORD PTR [ebp+66116]
  008db	3b 97 54 a9 02
	00		 cmp	 edx, DWORD PTR [edi+174420]
  008e1	7c 6a		 jl	 SHORT $L177179
  008e3	7f 0e		 jg	 SHORT $L206200
  008e5	8b 8d 40 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66112]
  008eb	3b 8f 50 a9 02
	00		 cmp	 ecx, DWORD PTR [edi+174416]
  008f1	76 5a		 jbe	 SHORT $L177179
$L206200:
  008f3	3c 01		 cmp	 al, 1
  008f5	75 0a		 jne	 SHORT $L177181
  008f7	8b 8d 38 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66104]
  008fd	85 c9		 test	 ecx, ecx
  008ff	74 4c		 je	 SHORT $L177179
$L177181:

; 948  : 		{
; 949  : 			pBUF->m_packet
; 950  : 				<< BYTE(IK_GOLDPREMIUM)
; 951  : 				<< pPlayer->m_diPremium.m_pTITEM->m_wItemID
; 952  : 				<< pPlayer->m_diPremium.m_bType
; 953  : 				<< pPlayer->m_diPremium.m_dwRemainTime
; 954  : 				<< pPlayer->m_diPremium.m_tEndTime;

  00901	8b 95 44 02 01
	00		 mov	 edx, DWORD PTR [ebp+66116]
  00907	8b 8d 40 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66112]
  0090d	52		 push	 edx
  0090e	8b 95 38 02 01
	00		 mov	 edx, DWORD PTR [ebp+66104]
  00914	51		 push	 ecx
  00915	52		 push	 edx
  00916	50		 push	 eax
  00917	8b 85 30 02 01
	00		 mov	 eax, DWORD PTR [ebp+66096]
  0091d	33 c9		 xor	 ecx, ecx
  0091f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00922	51		 push	 ecx
  00923	6a 28		 push	 40			; 00000028H
  00925	8b ce		 mov	 ecx, esi
  00927	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0092c	8b c8		 mov	 ecx, eax
  0092e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00933	8b c8		 mov	 ecx, eax
  00935	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0093a	8b c8		 mov	 ecx, eax
  0093c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00941	8b c8		 mov	 ecx, eax
  00943	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 955  : 
; 956  : 			wCount++;

  00948	bb 01 00 00 00	 mov	 ebx, 1
$L177179:

; 957  : 		}
; 958  : 	}
; 959  : 	if(pPlayer->m_diExp.m_bType)

  0094d	8a 85 4c 02 01
	00		 mov	 al, BYTE PTR [ebp+66124]
  00953	84 c0		 test	 al, al
  00955	74 78		 je	 SHORT $L177183

; 960  : 	{
; 961  : 		if(!((pPlayer->m_diExp.m_bType == DURINGTYPE_DAY && pPlayer->m_diExp.m_tEndTime <= m_timeCurrent) ||
; 962  : 			(pPlayer->m_diExp.m_bType == DURINGTYPE_TIME && pPlayer->m_diExp.m_dwRemainTime == 0)))

  00957	3c 02		 cmp	 al, 2
  00959	75 1e		 jne	 SHORT $L206201
  0095b	8b 95 5c 02 01
	00		 mov	 edx, DWORD PTR [ebp+66140]
  00961	3b 97 54 a9 02
	00		 cmp	 edx, DWORD PTR [edi+174420]
  00967	7c 66		 jl	 SHORT $L177183
  00969	7f 0e		 jg	 SHORT $L206201
  0096b	8b 8d 58 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66136]
  00971	3b 8f 50 a9 02
	00		 cmp	 ecx, DWORD PTR [edi+174416]
  00977	76 56		 jbe	 SHORT $L177183
$L206201:
  00979	3c 01		 cmp	 al, 1
  0097b	75 0a		 jne	 SHORT $L177185
  0097d	8b 8d 50 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66128]
  00983	85 c9		 test	 ecx, ecx
  00985	74 48		 je	 SHORT $L177183
$L177185:

; 963  : 		{
; 964  : 			pBUF->m_packet
; 965  : 				<< BYTE(IK_EXPBONUS)
; 966  : 				<< pPlayer->m_diExp.m_pTITEM->m_wItemID
; 967  : 				<< pPlayer->m_diExp.m_bType
; 968  : 				<< pPlayer->m_diExp.m_dwRemainTime
; 969  : 				<< pPlayer->m_diExp.m_tEndTime;

  00987	8b 95 5c 02 01
	00		 mov	 edx, DWORD PTR [ebp+66140]
  0098d	8b 8d 58 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66136]
  00993	52		 push	 edx
  00994	8b 95 50 02 01
	00		 mov	 edx, DWORD PTR [ebp+66128]
  0099a	51		 push	 ecx
  0099b	52		 push	 edx
  0099c	50		 push	 eax
  0099d	8b 85 48 02 01
	00		 mov	 eax, DWORD PTR [ebp+66120]
  009a3	33 c9		 xor	 ecx, ecx
  009a5	66 8b 08	 mov	 cx, WORD PTR [eax]
  009a8	51		 push	 ecx
  009a9	6a 38		 push	 56			; 00000038H
  009ab	8b ce		 mov	 ecx, esi
  009ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  009b2	8b c8		 mov	 ecx, eax
  009b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  009b9	8b c8		 mov	 ecx, eax
  009bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  009c0	8b c8		 mov	 ecx, eax
  009c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  009c7	8b c8		 mov	 ecx, eax
  009c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 970  : 
; 971  : 			wCount++;

  009ce	43		 inc	 ebx
$L177183:

; 972  : 		}
; 973  : 	}
; 974  : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  009cf	8b ce		 mov	 ecx, esi
  009d1	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  009d6	0f b7 54 24 18	 movzx	 edx, WORD PTR _wSize$[esp+88]

; 975  : 
; 976  : 	wSize = pBUF->m_packet.GetSize();

  009db	8b ce		 mov	 ecx, esi
  009dd	66 89 1c 10	 mov	 WORD PTR [eax+edx], bx
  009e1	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 977  : 	wCount = 0;

  009e6	33 db		 xor	 ebx, ebx

; 978  : 	pBUF->m_packet << wCount;

  009e8	53		 push	 ebx
  009e9	8b ce		 mov	 ecx, esi
  009eb	8b f8		 mov	 edi, eax
  009ed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 979  : 	MAPDWORD::iterator itIU;
; 980  : 	WORD wDelayGroupID;
; 981  : 	DWORD dwTick;
; 982  : 	for(itIU=pPlayer->m_mapItemCoolTime.begin(); itIU!=pPlayer->m_mapItemCoolTime.end(); itIU++)

  009f2	8b 85 74 02 01
	00		 mov	 eax, DWORD PTR [ebp+66164]
  009f8	8b 30		 mov	 esi, DWORD PTR [eax]
  009fa	3b f0		 cmp	 esi, eax
  009fc	0f 84 80 00 00
	00		 je	 $L206207
$L202499:

; 983  : 	{
; 984  : 		wDelayGroupID = WORD((*itIU).first);
; 985  : 		dwTick = (*itIU).second;

  00a02	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 986  : 		if(dwTick > pPlayer->m_dwSaveTick)

  00a05	8b 8d 28 04 01
	00		 mov	 ecx, DWORD PTR [ebp+66600]

; 987  : 		{
; 988  : 			pBUF->m_packet
; 989  : 				<< wDelayGroupID
; 990  : 				<< dwTick - pPlayer->m_dwSaveTick;

  00a0b	33 d2		 xor	 edx, edx
  00a0d	3b c1		 cmp	 eax, ecx
  00a0f	66 8b 56 0c	 mov	 dx, WORD PTR [esi+12]
  00a13	76 18		 jbe	 SHORT $L177270
  00a15	2b c1		 sub	 eax, ecx
  00a17	8b 4c 24 14	 mov	 ecx, DWORD PTR $T199670[esp+88]
  00a1b	50		 push	 eax
  00a1c	52		 push	 edx
  00a1d	83 c1 04	 add	 ecx, 4
  00a20	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00a25	8b c8		 mov	 ecx, eax
  00a27	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 991  : 			wCount++;

  00a2c	43		 inc	 ebx
$L177270:
  00a2d	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00a30	84 c0		 test	 al, al
  00a32	75 46		 jne	 SHORT $L202506
  00a34	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00a37	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a3a	84 c9		 test	 cl, cl
  00a3c	75 1f		 jne	 SHORT $L206126
  00a3e	8b f0		 mov	 esi, eax
  00a40	8b 06		 mov	 eax, DWORD PTR [esi]
  00a42	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a45	84 c9		 test	 cl, cl
  00a47	75 31		 jne	 SHORT $L202506
  00a49	8d a4 24 00 00
	00 00		 npad	 7

; 979  : 	MAPDWORD::iterator itIU;
; 980  : 	WORD wDelayGroupID;
; 981  : 	DWORD dwTick;
; 982  : 	for(itIU=pPlayer->m_mapItemCoolTime.begin(); itIU!=pPlayer->m_mapItemCoolTime.end(); itIU++)

$L202492:
  00a50	8b f0		 mov	 esi, eax
  00a52	8b 06		 mov	 eax, DWORD PTR [esi]
  00a54	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a57	84 c9		 test	 cl, cl
  00a59	74 f5		 je	 SHORT $L202492
  00a5b	eb 1d		 jmp	 SHORT $L202506
$L206126:
  00a5d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00a60	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a63	84 c9		 test	 cl, cl
  00a65	75 11		 jne	 SHORT $L202509
$L202508:
  00a67	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00a6a	75 0c		 jne	 SHORT $L202509
  00a6c	8b f0		 mov	 esi, eax
  00a6e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00a71	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a74	84 c9		 test	 cl, cl
  00a76	74 ef		 je	 SHORT $L202508
$L202509:
  00a78	8b f0		 mov	 esi, eax
$L202506:
  00a7a	3b b5 74 02 01
	00		 cmp	 esi, DWORD PTR [ebp+66164]
  00a80	75 80		 jne	 SHORT $L202499
$L206207:

; 992  : 		}
; 993  : 	}
; 994  : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  00a82	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  00a86	83 c6 04	 add	 esi, 4
  00a89	8b ce		 mov	 ecx, esi
  00a8b	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00a90	0f b7 cf	 movzx	 ecx, di
  00a93	66 89 1c 08	 mov	 WORD PTR [eax+ecx], bx

; 995  : 
; 996  : 	wSize = pBUF->m_packet.GetSize();

  00a97	8b ce		 mov	 ecx, esi
  00a99	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 997  : 	wCount = 0;
; 998  : 
; 999  : 	pBUF->m_packet << wCount;

  00a9e	6a 00		 push	 0
  00aa0	8b ce		 mov	 ecx, esi
  00aa2	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _wCount$[esp+92], 0
  00aaa	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  00aae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1000 : 	for(itHOTKEY=pPlayer->m_mapHotkeyInven.begin(); itHOTKEY!=pPlayer->m_mapHotkeyInven.end(); itHOTKEY++)

  00ab3	8b 85 ec 01 01
	00		 mov	 eax, DWORD PTR [ebp+66028]
  00ab9	8b 30		 mov	 esi, DWORD PTR [eax]
  00abb	3b f0		 cmp	 esi, eax
  00abd	0f 84 dc 00 00
	00		 je	 $L177296
$L202744:

; 1001 : 	{
; 1002 : 		LPTHOTKEYINVEN pHotkey = (*itHOTKEY).second;

  00ac3	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]

; 1003 : 		if(pPlayer->IsEmptyHotkey(pHotkey))

  00ac6	53		 push	 ebx
  00ac7	8b cd		 mov	 ecx, ebp
  00ac9	89 5c 24 2c	 mov	 DWORD PTR _pHotkey$177297[esp+92], ebx
  00acd	e8 00 00 00 00	 call	 ?IsEmptyHotkey@CTPlayer@@QAEEPAUtagHOTKEYINVEN@@@Z ; CTPlayer::IsEmptyHotkey
  00ad2	84 c0		 test	 al, al
  00ad4	74 04		 je	 SHORT $L177316

; 1004 : 			pBUF->m_packet << BYTE(1);

  00ad6	6a 01		 push	 1

; 1005 : 		else if( pHotkey->m_bSave & ITEM_SAVE_INSERT)

  00ad8	eb 10		 jmp	 SHORT $L206211
$L177316:
  00ada	8a 03		 mov	 al, BYTE PTR [ebx]
  00adc	a8 04		 test	 al, 4
  00ade	74 04		 je	 SHORT $L177318

; 1006 : 			pBUF->m_packet << BYTE(2);

  00ae0	6a 02		 push	 2

; 1007 : 		else if( pHotkey->m_bSave & ITEM_SAVE_UPDATE)

  00ae2	eb 06		 jmp	 SHORT $L206211
$L177318:
  00ae4	a8 02		 test	 al, 2
  00ae6	74 64		 je	 SHORT $L177295

; 1008 : 			pBUF->m_packet << BYTE(3);

  00ae8	6a 03		 push	 3
$L206211:
  00aea	8b 7c 24 18	 mov	 edi, DWORD PTR $T199670[esp+92]
  00aee	83 c7 04	 add	 edi, 4
  00af1	8b cf		 mov	 ecx, edi
  00af3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1009 : 		else
; 1010 : 			continue;
; 1011 : 		
; 1012 : 		pBUF->m_packet << BYTE((*itHOTKEY).first);

  00af8	33 d2		 xor	 edx, edx
  00afa	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
  00afd	8b cf		 mov	 ecx, edi
  00aff	52		 push	 edx
  00b00	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00b05	8b 5c 24 28	 mov	 ebx, DWORD PTR _pHotkey$177297[esp+88]
  00b09	83 c3 03	 add	 ebx, 3
  00b0c	c7 44 24 24 0c
	00 00 00	 mov	 DWORD PTR tv1555[esp+88], 12 ; 0000000cH
$L177324:

; 1013 : 		for(BYTE hk=0; hk<MAX_HOTKEY_POS; hk++)
; 1014 : 		{
; 1015 : 			pBUF->m_packet
; 1016 : 				<< pHotkey->m_hotkey[hk].m_bType
; 1017 : 				<< pHotkey->m_hotkey[hk].m_wID;

  00b14	33 c0		 xor	 eax, eax
  00b16	66 8b 43 01	 mov	 ax, WORD PTR [ebx+1]
  00b1a	33 c9		 xor	 ecx, ecx
  00b1c	8a 0b		 mov	 cl, BYTE PTR [ebx]
  00b1e	50		 push	 eax
  00b1f	51		 push	 ecx
  00b20	8b cf		 mov	 ecx, edi
  00b22	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00b27	8b c8		 mov	 ecx, eax
  00b29	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00b2e	8b 44 24 24	 mov	 eax, DWORD PTR tv1555[esp+88]
  00b32	83 c3 04	 add	 ebx, 4
  00b35	48		 dec	 eax
  00b36	89 44 24 24	 mov	 DWORD PTR tv1555[esp+88], eax
  00b3a	75 d8		 jne	 SHORT $L177324

; 1018 : 		}
; 1019 : 
; 1020 : 		pHotkey->m_bSave = ITEM_SAVE_LOAD;
; 1021 : 
; 1022 : 		wCount++;

  00b3c	8b 44 24 1c	 mov	 eax, DWORD PTR _wCount$[esp+88]
  00b40	8b 54 24 28	 mov	 edx, DWORD PTR _pHotkey$177297[esp+88]
  00b44	40		 inc	 eax
  00b45	c6 02 10	 mov	 BYTE PTR [edx], 16	; 00000010H
  00b48	89 44 24 1c	 mov	 DWORD PTR _wCount$[esp+88], eax
$L177295:
  00b4c	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00b4f	84 c0		 test	 al, al
  00b51	75 40		 jne	 SHORT $L202754
  00b53	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00b56	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b59	84 c9		 test	 cl, cl
  00b5b	75 18		 jne	 SHORT $L206130
  00b5d	8b f0		 mov	 esi, eax
  00b5f	8b 06		 mov	 eax, DWORD PTR [esi]
  00b61	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b64	84 c9		 test	 cl, cl
  00b66	75 2b		 jne	 SHORT $L202754

; 1000 : 	for(itHOTKEY=pPlayer->m_mapHotkeyInven.begin(); itHOTKEY!=pPlayer->m_mapHotkeyInven.end(); itHOTKEY++)

$L202768:
  00b68	8b f0		 mov	 esi, eax
  00b6a	8b 06		 mov	 eax, DWORD PTR [esi]
  00b6c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b6f	84 c9		 test	 cl, cl
  00b71	74 f5		 je	 SHORT $L202768
  00b73	eb 1e		 jmp	 SHORT $L202754
$L206130:
  00b75	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00b78	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b7b	84 c9		 test	 cl, cl
  00b7d	75 12		 jne	 SHORT $L202757
  00b7f	90		 npad	 1
$L202756:
  00b80	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00b83	75 0c		 jne	 SHORT $L202757
  00b85	8b f0		 mov	 esi, eax
  00b87	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00b8a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b8d	84 c9		 test	 cl, cl
  00b8f	74 ef		 je	 SHORT $L202756
$L202757:
  00b91	8b f0		 mov	 esi, eax
$L202754:
  00b93	3b b5 ec 01 01
	00		 cmp	 esi, DWORD PTR [ebp+66028]
  00b99	0f 85 24 ff ff
	ff		 jne	 $L202744
$L177296:

; 1023 : 	}
; 1024 : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  00b9f	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  00ba3	83 c6 04	 add	 esi, 4
  00ba6	8b ce		 mov	 ecx, esi
  00ba8	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00bad	0f b7 4c 24 18	 movzx	 ecx, WORD PTR _wSize$[esp+88]
  00bb2	66 8b 54 24 1c	 mov	 dx, WORD PTR _wCount$[esp+88]
  00bb7	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx

; 1025 : 
; 1026 : 	wSize = pBUF->m_packet.GetSize();

  00bbb	8b ce		 mov	 ecx, esi
  00bbd	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1027 : 	WORD wQuestCount = 0; 
; 1028 : 	WORD wTermCount = 0;

  00bc2	33 db		 xor	 ebx, ebx

; 1029 : 	MAPQUEST::iterator itQUEST;
; 1030 : 
; 1031 : 	pBUF->m_packet
; 1032 : 		<< wQuestCount;

  00bc4	53		 push	 ebx
  00bc5	8b ce		 mov	 ecx, esi
  00bc7	33 ff		 xor	 edi, edi
  00bc9	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  00bcd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1033 : 
; 1034 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  00bd2	8b 85 8c 02 01
	00		 mov	 eax, DWORD PTR [ebp+66188]
  00bd8	8b 30		 mov	 esi, DWORD PTR [eax]
  00bda	3b f0		 cmp	 esi, eax
  00bdc	0f 84 d4 00 00
	00		 je	 $L206205
$L203064:

; 1035 : 	{
; 1036 : 		DWORD dwTick = 0;
; 1037 : 
; 1038 : 		if( (*itQUEST).second->m_bTriggerCount > (*itQUEST).second->m_bCompleteCount )

  00be2	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00be5	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  00be8	33 c9		 xor	 ecx, ecx
  00bea	3a 50 20	 cmp	 dl, BYTE PTR [eax+32]
  00bed	76 1a		 jbe	 SHORT $L177435

; 1039 : 		{
; 1040 : 			DWORD dwPassTick = pPlayer->m_dwSaveTick - (*itQUEST).second->m_dwBeginTick;

  00bef	8b c8		 mov	 ecx, eax
  00bf1	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00bf4	8b 85 28 04 01
	00		 mov	 eax, DWORD PTR [ebp+66600]

; 1041 : 
; 1042 : 			dwTick = (*itQUEST).second->m_dwTick;

  00bfa	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00bfd	2b c2		 sub	 eax, edx

; 1043 : 			if( dwTick > dwPassTick )

  00bff	3b c8		 cmp	 ecx, eax
  00c01	76 04		 jbe	 SHORT $L177434

; 1044 : 				dwTick -= dwPassTick;

  00c03	2b c8		 sub	 ecx, eax

; 1045 : 			else

  00c05	eb 02		 jmp	 SHORT $L177435
$L177434:

; 1046 : 				dwTick = 0;

  00c07	33 c9		 xor	 ecx, ecx
$L177435:

; 1047 : 		}
; 1048 : 
; 1049 : 		if( (*itQUEST).second->m_bSave == TRUE)  

  00c09	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00c0c	80 78 28 01	 cmp	 BYTE PTR [eax+40], 1
  00c10	75 51		 jne	 SHORT $L177411

; 1050 : 		{
; 1051 : 			pBUF->m_packet
; 1052 : 				<< (*itQUEST).second->m_pQUEST->m_dwQuestID
; 1053 : 				<< dwTick
; 1054 : 				<< (*itQUEST).second->m_bCompleteCount
; 1055 : 				<< (*itQUEST).second->m_bTriggerCount;

  00c12	33 d2		 xor	 edx, edx
  00c14	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  00c17	52		 push	 edx
  00c18	33 d2		 xor	 edx, edx
  00c1a	8a 50 20	 mov	 dl, BYTE PTR [eax+32]
  00c1d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00c20	52		 push	 edx
  00c21	51		 push	 ecx
  00c22	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00c25	51		 push	 ecx
  00c26	8b 4c 24 24	 mov	 ecx, DWORD PTR $T199670[esp+104]
  00c2a	83 c1 04	 add	 ecx, 4
  00c2d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00c32	8b c8		 mov	 ecx, eax
  00c34	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00c39	8b c8		 mov	 ecx, eax
  00c3b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00c40	8b c8		 mov	 ecx, eax
  00c42	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1056 : 
; 1057 : 			wQuestCount += 1;
; 1058 : 			wTermCount += INT((*itQUEST).second->m_vTERM.size());			

  00c47	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00c4a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00c4d	83 c0 08	 add	 eax, 8
  00c50	47		 inc	 edi
  00c51	85 c9		 test	 ecx, ecx
  00c53	75 04		 jne	 SHORT $L203229
  00c55	33 c0		 xor	 eax, eax
  00c57	eb 08		 jmp	 SHORT $L203230
$L203229:
  00c59	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00c5c	2b c1		 sub	 eax, ecx
  00c5e	c1 f8 02	 sar	 eax, 2
$L203230:
  00c61	03 d8		 add	 ebx, eax
$L177411:

; 1033 : 
; 1034 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  00c63	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00c66	84 c0		 test	 al, al
  00c68	75 40		 jne	 SHORT $L203059
  00c6a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00c6d	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c70	84 c9		 test	 cl, cl
  00c72	75 19		 jne	 SHORT $L206133
  00c74	8b f0		 mov	 esi, eax
  00c76	8b 06		 mov	 eax, DWORD PTR [esi]
  00c78	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c7b	84 c9		 test	 cl, cl
  00c7d	75 2b		 jne	 SHORT $L203059
  00c7f	90		 npad	 1
$L203047:
  00c80	8b f0		 mov	 esi, eax
  00c82	8b 06		 mov	 eax, DWORD PTR [esi]
  00c84	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c87	84 c9		 test	 cl, cl
  00c89	74 f5		 je	 SHORT $L203047
  00c8b	eb 1d		 jmp	 SHORT $L203059
$L206133:
  00c8d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00c90	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c93	84 c9		 test	 cl, cl
  00c95	75 11		 jne	 SHORT $L203062
$L203061:
  00c97	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00c9a	75 0c		 jne	 SHORT $L203062
  00c9c	8b f0		 mov	 esi, eax
  00c9e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00ca1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ca4	84 c9		 test	 cl, cl
  00ca6	74 ef		 je	 SHORT $L203061
$L203062:
  00ca8	8b f0		 mov	 esi, eax
$L203059:
  00caa	3b b5 8c 02 01
	00		 cmp	 esi, DWORD PTR [ebp+66188]
  00cb0	0f 85 2c ff ff
	ff		 jne	 $L203064
$L206205:

; 1059 : 		}
; 1060 : 	}
; 1061 : 
; 1062 : 	memcpy(pBUF->m_packet.GetBuffer() + wSize,&wQuestCount,sizeof(wQuestCount) );	

  00cb6	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  00cba	83 c6 04	 add	 esi, 4
  00cbd	8b ce		 mov	 ecx, esi
  00cbf	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00cc4	0f b7 54 24 18	 movzx	 edx, WORD PTR _wSize$[esp+88]

; 1063 : 
; 1064 : 	pBUF->m_packet
; 1065 : 		<< wTermCount;

  00cc9	53		 push	 ebx
  00cca	8b ce		 mov	 ecx, esi
  00ccc	66 89 3c 10	 mov	 WORD PTR [eax+edx], di
  00cd0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1066 : 
; 1067 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  00cd5	8b 85 8c 02 01
	00		 mov	 eax, DWORD PTR [ebp+66188]
  00cdb	8b 30		 mov	 esi, DWORD PTR [eax]
  00cdd	3b f0		 cmp	 esi, eax
  00cdf	0f 84 da 00 00
	00		 je	 $L177442
  00ce5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$L203451:

; 1068 : 	{
; 1069 : 		if( (*itQUEST).second->m_bSave == TRUE)

  00cf0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00cf3	80 78 28 01	 cmp	 BYTE PTR [eax+40], 1
  00cf7	0f 85 69 00 00
	00		 jne	 $L177441

; 1070 : 		{
; 1071 : 			for( int i=0; i<INT((*itQUEST).second->m_vTERM.size()); i++)

  00cfd	33 ff		 xor	 edi, edi
  00cff	90		 npad	 1
$L177445:
  00d00	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00d03	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00d06	85 d2		 test	 edx, edx
  00d08	75 04		 jne	 SHORT $L203511
  00d0a	33 c9		 xor	 ecx, ecx
  00d0c	eb 08		 jmp	 SHORT $L203512
$L203511:
  00d0e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00d11	2b ca		 sub	 ecx, edx
  00d13	c1 f9 02	 sar	 ecx, 2
$L203512:
  00d16	3b f9		 cmp	 edi, ecx
  00d18	7d 45		 jge	 SHORT $L177447
  00d1a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]

; 1072 : 			{			
; 1073 : 				pBUF->m_packet
; 1074 : 					<< (*itQUEST).second->m_pQUEST->m_dwQuestID
; 1075 : 					<< (*itQUEST).second->m_vTERM[i]->m_dwTermID
; 1076 : 					<< (*itQUEST).second->m_vTERM[i]->m_bTermType
; 1077 : 					<< (*itQUEST).second->m_vTERM[i]->m_bCount;

  00d1d	8b 14 b9	 mov	 edx, DWORD PTR [ecx+edi*4]
  00d20	0f b6 52 05	 movzx	 edx, BYTE PTR [edx+5]
  00d24	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00d27	8d 0c b9	 lea	 ecx, DWORD PTR [ecx+edi*4]
  00d2a	52		 push	 edx
  00d2b	8b 11		 mov	 edx, DWORD PTR [ecx]
  00d2d	0f b6 52 04	 movzx	 edx, BYTE PTR [edx+4]
  00d31	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00d33	52		 push	 edx
  00d34	8b 11		 mov	 edx, DWORD PTR [ecx]
  00d36	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00d39	52		 push	 edx
  00d3a	51		 push	 ecx
  00d3b	8b 4c 24 24	 mov	 ecx, DWORD PTR $T199670[esp+104]
  00d3f	83 c1 04	 add	 ecx, 4
  00d42	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00d47	8b c8		 mov	 ecx, eax
  00d49	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00d4e	8b c8		 mov	 ecx, eax
  00d50	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00d55	8b c8		 mov	 ecx, eax
  00d57	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00d5c	47		 inc	 edi
  00d5d	eb a1		 jmp	 SHORT $L177445
$L177447:

; 1078 : 			}
; 1079 : 
; 1080 : 			(*itQUEST).second->m_bSave = FALSE;

  00d5f	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00d62	c6 42 28 00	 mov	 BYTE PTR [edx+40], 0
$L177441:
  00d66	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00d69	84 c0		 test	 al, al
  00d6b	75 46		 jne	 SHORT $L203447
  00d6d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00d70	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d73	84 c9		 test	 cl, cl
  00d75	75 18		 jne	 SHORT $L206137
  00d77	8b f0		 mov	 esi, eax
  00d79	8b 06		 mov	 eax, DWORD PTR [esi]
  00d7b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d7e	84 c9		 test	 cl, cl
  00d80	75 31		 jne	 SHORT $L203447

; 1066 : 
; 1067 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

$L203435:
  00d82	8b f0		 mov	 esi, eax
  00d84	8b 06		 mov	 eax, DWORD PTR [esi]
  00d86	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d89	84 c9		 test	 cl, cl
  00d8b	74 f5		 je	 SHORT $L203435
  00d8d	eb 24		 jmp	 SHORT $L203447
$L206137:
  00d8f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00d92	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d95	84 c9		 test	 cl, cl
  00d97	75 18		 jne	 SHORT $L203450
  00d99	8d a4 24 00 00
	00 00		 npad	 7
$L203449:
  00da0	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00da3	75 0c		 jne	 SHORT $L203450
  00da5	8b f0		 mov	 esi, eax
  00da7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00daa	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00dad	84 c9		 test	 cl, cl
  00daf	74 ef		 je	 SHORT $L203449
$L203450:
  00db1	8b f0		 mov	 esi, eax
$L203447:
  00db3	3b b5 8c 02 01
	00		 cmp	 esi, DWORD PTR [ebp+66188]
  00db9	0f 85 31 ff ff
	ff		 jne	 $L203451
$L177442:

; 1081 : 		}
; 1082 : 	}
; 1083 : 
; 1084 : 	wSize = pBUF->m_packet.GetSize();

  00dbf	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  00dc3	83 c6 04	 add	 esi, 4
  00dc6	8b ce		 mov	 ecx, esi
  00dc8	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1085 : 	wCount = 0;

  00dcd	33 ff		 xor	 edi, edi

; 1086 : 	pBUF->m_packet << wCount;

  00dcf	57		 push	 edi
  00dd0	8b ce		 mov	 ecx, esi
  00dd2	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  00dd6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1087 : 
; 1088 : 	MAPTRECALLMON::iterator itCallMon;
; 1089 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

  00ddb	8b 85 10 02 01
	00		 mov	 eax, DWORD PTR [ebp+66064]
  00de1	8b 18		 mov	 ebx, DWORD PTR [eax]
  00de3	3b d8		 cmp	 ebx, eax
  00de5	0f 84 34 01 00
	00		 je	 $L177454
  00deb	eb 03 8d 49 00	 npad	 5
$L203984:

; 1090 : 	{
; 1091 : 		CTRecallMon * pMon = (*itCallMon).second;

  00df0	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]

; 1092 : 		DWORD dwTick = pMon->GetLifeTick(pPlayer->m_dwSaveTick);

  00df3	8b 85 28 04 01
	00		 mov	 eax, DWORD PTR [ebp+66600]
  00df9	50		 push	 eax
  00dfa	8b ce		 mov	 ecx, esi
  00dfc	e8 00 00 00 00	 call	 ?GetLifeTick@CTRecallMon@@QAEKK@Z ; CTRecallMon::GetLifeTick

; 1093 : 		if(pMon->m_dwDurationTick && !dwTick)

  00e01	8b 8e 84 01 00
	00		 mov	 ecx, DWORD PTR [esi+388]
  00e07	85 c9		 test	 ecx, ecx
  00e09	74 08		 je	 SHORT $L177457
  00e0b	85 c0		 test	 eax, eax
  00e0d	0f 84 b8 00 00
	00		 je	 $L177453
$L177457:

; 1094 : 			continue;
; 1095 : 
; 1096 : 		pBUF->m_packet
; 1097 : 			<< pMon->m_dwID
; 1098 : 			<< pMon->m_pMON->m_wID
; 1099 : 			<< pMon->m_wPetID
; 1100 : 			<< pMon->m_pATTR->m_dwAttr
; 1101 : 			<< pMon->m_bLevel
; 1102 : 			<< pMon->m_dwHP
; 1103 : 			<< pMon->m_dwMP
; 1104 : 			<< pMon->m_bAtkSkillLevel
; 1105 : 			<< WORD(pMon->m_fPosX)
; 1106 : 			<< WORD(pMon->m_fPosY)
; 1107 : 			<< WORD(pMon->m_fPosZ)
; 1108 : 			<< dwTick;

  00e13	d9 86 84 00 00
	00		 fld	 DWORD PTR [esi+132]
  00e19	50		 push	 eax
  00e1a	e8 00 00 00 00	 call	 __ftol2
  00e1f	d9 86 80 00 00
	00		 fld	 DWORD PTR [esi+128]
  00e25	50		 push	 eax
  00e26	e8 00 00 00 00	 call	 __ftol2
  00e2b	d9 46 7c	 fld	 DWORD PTR [esi+124]
  00e2e	50		 push	 eax
  00e2f	e8 00 00 00 00	 call	 __ftol2
  00e34	8b 56 60	 mov	 edx, DWORD PTR [esi+96]
  00e37	33 c9		 xor	 ecx, ecx
  00e39	8a 8e 99 01 00
	00		 mov	 cl, BYTE PTR [esi+409]
  00e3f	50		 push	 eax
  00e40	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00e43	51		 push	 ecx
  00e44	33 c9		 xor	 ecx, ecx
  00e46	8a 4e 7b	 mov	 cl, BYTE PTR [esi+123]
  00e49	52		 push	 edx
  00e4a	8b 96 f0 00 00
	00		 mov	 edx, DWORD PTR [esi+240]
  00e50	50		 push	 eax
  00e51	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00e54	8b 96 ec 00 00
	00		 mov	 edx, DWORD PTR [esi+236]
  00e5a	51		 push	 ecx
  00e5b	33 c9		 xor	 ecx, ecx
  00e5d	66 8b 8e 7c 01
	00 00		 mov	 cx, WORD PTR [esi+380]
  00e64	50		 push	 eax
  00e65	33 c0		 xor	 eax, eax
  00e67	66 8b 42 24	 mov	 ax, WORD PTR [edx+36]
  00e6b	51		 push	 ecx
  00e6c	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00e6f	50		 push	 eax
  00e70	51		 push	 ecx
  00e71	8b 4c 24 44	 mov	 ecx, DWORD PTR $T199670[esp+136]
  00e75	83 c1 04	 add	 ecx, 4
  00e78	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00e7d	8b c8		 mov	 ecx, eax
  00e7f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00e84	8b c8		 mov	 ecx, eax
  00e86	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00e8b	8b c8		 mov	 ecx, eax
  00e8d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00e92	8b c8		 mov	 ecx, eax
  00e94	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00e99	8b c8		 mov	 ecx, eax
  00e9b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00ea0	8b c8		 mov	 ecx, eax
  00ea2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00ea7	8b c8		 mov	 ecx, eax
  00ea9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00eae	8b c8		 mov	 ecx, eax
  00eb0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00eb5	8b c8		 mov	 ecx, eax
  00eb7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00ebc	8b c8		 mov	 ecx, eax
  00ebe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00ec3	8b c8		 mov	 ecx, eax
  00ec5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1109 : 
; 1110 : 		wCount++;

  00eca	47		 inc	 edi
$L177453:
  00ecb	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00ece	84 c0		 test	 al, al
  00ed0	75 41		 jne	 SHORT $L203978
  00ed2	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00ed5	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ed8	84 c9		 test	 cl, cl
  00eda	75 18		 jne	 SHORT $L206140
  00edc	8b d8		 mov	 ebx, eax
  00ede	8b 03		 mov	 eax, DWORD PTR [ebx]
  00ee0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ee3	84 c9		 test	 cl, cl
  00ee5	75 2c		 jne	 SHORT $L203978

; 1087 : 
; 1088 : 	MAPTRECALLMON::iterator itCallMon;
; 1089 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

$L203966:
  00ee7	8b d8		 mov	 ebx, eax
  00ee9	8b 03		 mov	 eax, DWORD PTR [ebx]
  00eeb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00eee	84 c9		 test	 cl, cl
  00ef0	74 f5		 je	 SHORT $L203966
  00ef2	eb 1f		 jmp	 SHORT $L203978
$L206140:
  00ef4	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00ef7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00efa	84 c9		 test	 cl, cl
  00efc	75 13		 jne	 SHORT $L203981
  00efe	8b ff		 npad	 2
$L203980:
  00f00	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  00f03	75 0c		 jne	 SHORT $L203981
  00f05	8b d8		 mov	 ebx, eax
  00f07	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00f0a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00f0d	84 c9		 test	 cl, cl
  00f0f	74 ef		 je	 SHORT $L203980
$L203981:
  00f11	8b d8		 mov	 ebx, eax
$L203978:
  00f13	3b 9d 10 02 01
	00		 cmp	 ebx, DWORD PTR [ebp+66064]
  00f19	0f 85 d1 fe ff
	ff		 jne	 $L203984
$L177454:

; 1111 : 	}
; 1112 : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  00f1f	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  00f23	83 c6 04	 add	 esi, 4
  00f26	8b ce		 mov	 ecx, esi
  00f28	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00f2d	0f b7 54 24 18	 movzx	 edx, WORD PTR _wSize$[esp+88]

; 1113 : 
; 1114 : 	wSize = pBUF->m_packet.GetSize();

  00f32	8b ce		 mov	 ecx, esi
  00f34	66 89 3c 10	 mov	 WORD PTR [eax+edx], di
  00f38	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1115 : 	wCount = 0;

  00f3d	33 db		 xor	 ebx, ebx

; 1116 : 	pBUF->m_packet << wCount;

  00f3f	53		 push	 ebx
  00f40	8b ce		 mov	 ecx, esi
  00f42	89 5c 24 20	 mov	 DWORD PTR _wCount$[esp+92], ebx
  00f46	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  00f4a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1117 : 
; 1118 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

  00f4f	8b 85 10 02 01
	00		 mov	 eax, DWORD PTR [ebp+66064]
  00f55	8b 38		 mov	 edi, DWORD PTR [eax]
  00f57	3b f8		 cmp	 edi, eax
  00f59	89 7c 24 24	 mov	 DWORD PTR _itCallMon$[esp+88], edi
  00f5d	0f 84 40 02 00
	00		 je	 $L206206
$L204243:

; 1119 : 	{
; 1120 : 		CTRecallMon * pMon = (*itCallMon).second;

  00f63	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 1121 : 		DWORD dwTick = pMon->GetLifeTick(pPlayer->m_dwSaveTick);

  00f66	8b 85 28 04 01
	00		 mov	 eax, DWORD PTR [ebp+66600]
  00f6c	50		 push	 eax
  00f6d	8b ce		 mov	 ecx, esi
  00f6f	e8 00 00 00 00	 call	 ?GetLifeTick@CTRecallMon@@QAEKK@Z ; CTRecallMon::GetLifeTick

; 1122 : 		if(pMon->m_dwDurationTick && !dwTick)

  00f74	39 9e 84 01 00
	00		 cmp	 DWORD PTR [esi+388], ebx
  00f7a	74 08		 je	 SHORT $L177466
  00f7c	3b c3		 cmp	 eax, ebx
  00f7e	0f 84 be 01 00
	00		 je	 $L177462
$L177466:

; 1123 : 			continue;
; 1124 : 
; 1125 : 		VPLAYER vPlayer;
; 1126 : 		vPlayer.clear();

  00f84	33 c9		 xor	 ecx, ecx
  00f86	c6 44 24 54 02	 mov	 BYTE PTR __$EHRec$[esp+96], 2
  00f8b	89 4c 24 30	 mov	 DWORD PTR _vPlayer$177467[esp+92], ecx
  00f8f	89 5c 24 34	 mov	 DWORD PTR _vPlayer$177467[esp+96], ebx
  00f93	89 5c 24 38	 mov	 DWORD PTR _vPlayer$177467[esp+100], ebx

; 1127 : 
; 1128 : 		for(BYTE is=0; is<pMon->m_vMaintainSkill.size(); is++)

  00f97	88 4c 24 13	 mov	 BYTE PTR _is$177468[esp+88], cl
  00f9b	eb 03 8d 49 00	 npad	 5
$L177469:
  00fa0	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  00fa3	3b d3		 cmp	 edx, ebx
  00fa5	75 04		 jne	 SHORT $L204391
  00fa7	33 c0		 xor	 eax, eax
  00fa9	eb 08		 jmp	 SHORT $L204392
$L204391:
  00fab	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00fae	2b c2		 sub	 eax, edx
  00fb0	c1 f8 02	 sar	 eax, 2
$L204392:
  00fb3	0f b6 54 24 13	 movzx	 edx, BYTE PTR _is$177468[esp+88]
  00fb8	3b d0		 cmp	 edx, eax
  00fba	0f 83 64 01 00
	00		 jae	 $L177471

; 1129 : 		{
; 1130 : 			DWORD dwRemain = pMon->m_vMaintainSkill[is]->GetRemainTick(pPlayer->m_dwSaveTick);

  00fc0	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00fc3	8b 8d 28 04 01
	00		 mov	 ecx, DWORD PTR [ebp+66600]
  00fc9	8d 1c 95 00 00
	00 00		 lea	 ebx, DWORD PTR [edx*4]
  00fd0	03 c3		 add	 eax, ebx
  00fd2	51		 push	 ecx
  00fd3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fd5	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick

; 1131 : 			if( !pMon->m_vMaintainSkill[is]->m_dwStartTick || 
; 1132 : 				dwRemain)

  00fda	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  00fdd	8d 0c 13	 lea	 ecx, DWORD PTR [ebx+edx]
  00fe0	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fe2	8b 7a 48	 mov	 edi, DWORD PTR [edx+72]
  00fe5	85 ff		 test	 edi, edi
  00fe7	0f 84 a0 00 00
	00		 je	 $L177474
  00fed	85 c0		 test	 eax, eax
  00fef	0f 85 98 00 00
	00		 jne	 $L177474

; 1146 : 			}
; 1147 : 			else if(wACKMsg && pMon->m_pMAP)

  00ff5	66 39 44 24 60	 cmp	 WORD PTR _wACKMsg$[esp+84], ax
  00ffa	0f 84 0b 01 00
	00		 je	 $L206202
  01000	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  01003	85 c0		 test	 eax, eax
  01005	0f 84 00 01 00
	00		 je	 $L206202

; 1148 : 			{
; 1149 : 				if(wACKMsg)
; 1150 : 				{
; 1151 : 					if(vPlayer.empty())

  0100b	8b 4c 24 30	 mov	 ecx, DWORD PTR _vPlayer$177467[esp+92]
  0100f	85 c9		 test	 ecx, ecx
  01011	74 0f		 je	 SHORT $L206197
  01013	8b 44 24 34	 mov	 eax, DWORD PTR _vPlayer$177467[esp+96]
  01017	8b d0		 mov	 edx, eax
  01019	2b d1		 sub	 edx, ecx
  0101b	c1 fa 02	 sar	 edx, 2
  0101e	85 d2		 test	 edx, edx
  01020	75 23		 jne	 SHORT $L177478
$L206197:

; 1152 : 						pPlayer->m_pMAP->GetNeighbor(&vPlayer, pMon->m_fPosX, pMon->m_fPosZ);

  01022	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  01028	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  0102b	50		 push	 eax
  0102c	51		 push	 ecx
  0102d	8b 8d 40 01 01
	00		 mov	 ecx, DWORD PTR [ebp+65856]
  01033	8d 54 24 34	 lea	 edx, DWORD PTR _vPlayer$177467[esp+96]
  01037	52		 push	 edx
  01038	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
  0103d	8b 44 24 34	 mov	 eax, DWORD PTR _vPlayer$177467[esp+96]
  01041	8b 4c 24 30	 mov	 ecx, DWORD PTR _vPlayer$177467[esp+92]
$L177478:

; 1153 : 
; 1154 : 					for(DWORD i=0; i<vPlayer.size(); i++)

  01045	33 ff		 xor	 edi, edi
$L177480:
  01047	85 c9		 test	 ecx, ecx
  01049	0f 84 c0 00 00
	00		 je	 $L177470
  0104f	2b c1		 sub	 eax, ecx
  01051	c1 f8 02	 sar	 eax, 2
  01054	3b f8		 cmp	 edi, eax
  01056	0f 83 b3 00 00
	00		 jae	 $L177470

; 1155 : 						vPlayer[i]->SendCS_SKILLEND_ACK(pMon->m_dwID, pMon->m_bType, pMon->m_vMaintainSkill[is]->GetID());

  0105c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0105f	03 c3		 add	 eax, ebx
  01061	8d 2c b9	 lea	 ebp, DWORD PTR [ecx+edi*4]
  01064	8b 08		 mov	 ecx, DWORD PTR [eax]
  01066	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  0106b	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  0106e	50		 push	 eax
  0106f	33 c0		 xor	 eax, eax
  01071	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  01074	50		 push	 eax
  01075	51		 push	 ecx
  01076	8b 4d 00	 mov	 ecx, DWORD PTR [ebp]
  01079	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  0107e	8b 44 24 34	 mov	 eax, DWORD PTR _vPlayer$177467[esp+96]
  01082	8b 4c 24 30	 mov	 ecx, DWORD PTR _vPlayer$177467[esp+92]
  01086	8b 6c 24 5c	 mov	 ebp, DWORD PTR _pPlayer$[esp+84]
  0108a	47		 inc	 edi
  0108b	eb ba		 jmp	 SHORT $L177480
$L177474:

; 1133 : 			{
; 1134 : 				pBUF->m_packet
; 1135 : 					<< pMon->m_dwID
; 1136 : 					<< pMon->m_vMaintainSkill[is]->GetID()
; 1137 : 					<< pMon->m_vMaintainSkill[is]->m_bLevel
; 1138 : 					<< dwRemain
; 1139 : 					<< pMon->m_vMaintainSkill[is]->m_bAttackType
; 1140 : 					<< pMon->m_vMaintainSkill[is]->m_dwAttackID
; 1141 : 					<< pMon->m_vMaintainSkill[is]->m_bHostType
; 1142 : 					<< pMon->m_vMaintainSkill[is]->m_dwHostID
; 1143 : 					<< pMon->m_vMaintainSkill[is]->m_bAttackCountry;

  0108d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0108f	0f b6 52 29	 movzx	 edx, BYTE PTR [edx+41]
  01093	52		 push	 edx
  01094	8b 11		 mov	 edx, DWORD PTR [ecx]
  01096	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  01099	52		 push	 edx
  0109a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0109c	0f b6 52 10	 movzx	 edx, BYTE PTR [edx+16]
  010a0	52		 push	 edx
  010a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  010a3	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  010a6	52		 push	 edx
  010a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  010a9	0f b6 52 08	 movzx	 edx, BYTE PTR [edx+8]
  010ad	52		 push	 edx
  010ae	50		 push	 eax
  010af	8b 01		 mov	 eax, DWORD PTR [ecx]
  010b1	33 d2		 xor	 edx, edx
  010b3	8a 50 50	 mov	 dl, BYTE PTR [eax+80]
  010b6	8b c8		 mov	 ecx, eax
  010b8	52		 push	 edx
  010b9	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  010be	8b 4c 24 30	 mov	 ecx, DWORD PTR $T199670[esp+116]
  010c2	83 c1 04	 add	 ecx, 4
  010c5	50		 push	 eax
  010c6	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  010c9	50		 push	 eax
  010ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  010cf	8b c8		 mov	 ecx, eax
  010d1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  010d6	8b c8		 mov	 ecx, eax
  010d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  010dd	8b c8		 mov	 ecx, eax
  010df	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  010e4	8b c8		 mov	 ecx, eax
  010e6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  010eb	8b c8		 mov	 ecx, eax
  010ed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  010f2	8b c8		 mov	 ecx, eax
  010f4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  010f9	8b c8		 mov	 ecx, eax
  010fb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01100	8b c8		 mov	 ecx, eax
  01102	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1144 : 
; 1145 : 				wCount++;

  01107	ff 44 24 1c	 inc	 DWORD PTR _wCount$[esp+88]
$L206202:
  0110b	8b 4c 24 30	 mov	 ecx, DWORD PTR _vPlayer$177467[esp+92]
$L177470:

; 1127 : 
; 1128 : 		for(BYTE is=0; is<pMon->m_vMaintainSkill.size(); is++)

  0110f	8a 44 24 13	 mov	 al, BYTE PTR _is$177468[esp+88]
  01113	8b 7c 24 24	 mov	 edi, DWORD PTR _itCallMon$[esp+88]
  01117	fe c0		 inc	 al
  01119	88 44 24 13	 mov	 BYTE PTR _is$177468[esp+88], al
  0111d	33 db		 xor	 ebx, ebx
  0111f	e9 7c fe ff ff	 jmp	 $L177469
$L177471:

; 1156 : 				}
; 1157 : 				else
; 1158 : 					pPlayer->SendCS_SKILLEND_ACK(pMon->m_dwID, pMon->m_bType, pMon->m_vMaintainSkill[is]->GetID());
; 1159 : 			}
; 1160 : 		}
; 1161 : 		vPlayer.clear();

  01124	3b cb		 cmp	 ecx, ebx
  01126	74 09		 je	 SHORT $L205091
  01128	51		 push	 ecx
  01129	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0112e	83 c4 04	 add	 esp, 4
$L205091:

; 1162 : 	}

  01131	c6 44 24 54 01	 mov	 BYTE PTR __$EHRec$[esp+96], 1
  01136	89 5c 24 30	 mov	 DWORD PTR _vPlayer$177467[esp+92], ebx
  0113a	89 5c 24 34	 mov	 DWORD PTR _vPlayer$177467[esp+96], ebx
  0113e	89 5c 24 38	 mov	 DWORD PTR _vPlayer$177467[esp+100], ebx
$L177462:
  01142	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  01145	84 c0		 test	 al, al
  01147	75 4e		 jne	 SHORT $L204237
  01149	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0114c	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0114f	84 c0		 test	 al, al
  01151	75 1c		 jne	 SHORT $L206145
  01153	8b 01		 mov	 eax, DWORD PTR [ecx]
  01155	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  01158	84 d2		 test	 dl, dl
  0115a	75 0f		 jne	 SHORT $L204226
  0115c	8d 64 24 00	 npad	 4

; 1117 : 
; 1118 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

$L204225:
  01160	8b c8		 mov	 ecx, eax
  01162	8b 01		 mov	 eax, DWORD PTR [ecx]
  01164	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  01167	84 d2		 test	 dl, dl
  01169	74 f5		 je	 SHORT $L204225
$L204226:
  0116b	8b f9		 mov	 edi, ecx
  0116d	eb 24		 jmp	 SHORT $L206212
$L206145:
  0116f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  01172	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01175	84 c9		 test	 cl, cl
  01177	75 18		 jne	 SHORT $L204240
  01179	8d a4 24 00 00
	00 00		 npad	 7
$L204239:
  01180	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  01183	75 0c		 jne	 SHORT $L204240
  01185	8b f8		 mov	 edi, eax
  01187	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0118a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0118d	84 c9		 test	 cl, cl
  0118f	74 ef		 je	 SHORT $L204239
$L204240:
  01191	8b f8		 mov	 edi, eax
$L206212:
  01193	89 7c 24 24	 mov	 DWORD PTR _itCallMon$[esp+88], edi
$L204237:
  01197	3b bd 10 02 01
	00		 cmp	 edi, DWORD PTR [ebp+66064]
  0119d	0f 85 c0 fd ff
	ff		 jne	 $L204243
$L206206:

; 1163 : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  011a3	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  011a7	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  011aa	8b ce		 mov	 ecx, esi
  011ac	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  011b1	0f b7 4c 24 18	 movzx	 ecx, WORD PTR _wSize$[esp+88]
  011b6	66 8b 54 24 1c	 mov	 dx, WORD PTR _wCount$[esp+88]
  011bb	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx

; 1164 : 
; 1165 : 	pBUF->m_packet
; 1166 : 		<< BYTE(pPlayer->m_mapTPET.size());

  011bf	33 c0		 xor	 eax, eax
  011c1	8a 85 2c 02 01
	00		 mov	 al, BYTE PTR [ebp+66092]
  011c7	8b ce		 mov	 ecx, esi
  011c9	50		 push	 eax
  011ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1167 : 
; 1168 : 	MAPTPET::iterator itPet;
; 1169 : 	for(itPet=pPlayer->m_mapTPET.begin(); itPet!=pPlayer->m_mapTPET.end(); itPet++)

  011cf	8b 85 28 02 01
	00		 mov	 eax, DWORD PTR [ebp+66088]
  011d5	8b 30		 mov	 esi, DWORD PTR [eax]
  011d7	3b f0		 cmp	 esi, eax
  011d9	0f 84 87 00 00
	00		 je	 $L177567
  011df	90		 npad	 1
$L205344:

; 1170 : 	{
; 1171 : 		pBUF->m_packet
; 1172 : 			<< WORD((*itPet).second->m_pTPET->m_bPetType)
; 1173 : 			<< (*itPet).second->m_strName
; 1174 : 			<< (*itPet).second->m_ldwTime;

  011e0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  011e3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  011e6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  011e9	52		 push	 edx
  011ea	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  011ed	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  011f0	52		 push	 edx
  011f1	51		 push	 ecx
  011f2	66 0f b6 48 02	 movzx	 cx, BYTE PTR [eax+2]
  011f7	51		 push	 ecx
  011f8	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  011fb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  01200	8b c8		 mov	 ecx, eax
  01202	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  01207	8b c8		 mov	 ecx, eax
  01209	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0120e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  01211	84 c0		 test	 al, al
  01213	75 45		 jne	 SHORT $L205339
  01215	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  01218	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0121b	84 c9		 test	 cl, cl
  0121d	75 1e		 jne	 SHORT $L206148
  0121f	8b f0		 mov	 esi, eax
  01221	8b 06		 mov	 eax, DWORD PTR [esi]
  01223	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01226	84 c9		 test	 cl, cl
  01228	75 30		 jne	 SHORT $L205339
  0122a	8d 9b 00 00 00
	00		 npad	 6

; 1167 : 
; 1168 : 	MAPTPET::iterator itPet;
; 1169 : 	for(itPet=pPlayer->m_mapTPET.begin(); itPet!=pPlayer->m_mapTPET.end(); itPet++)

$L205327:
  01230	8b f0		 mov	 esi, eax
  01232	8b 06		 mov	 eax, DWORD PTR [esi]
  01234	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01237	84 c9		 test	 cl, cl
  01239	74 f5		 je	 SHORT $L205327
  0123b	eb 1d		 jmp	 SHORT $L205339
$L206148:
  0123d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  01240	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01243	84 c9		 test	 cl, cl
  01245	75 11		 jne	 SHORT $L205342
$L205341:
  01247	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0124a	75 0c		 jne	 SHORT $L205342
  0124c	8b f0		 mov	 esi, eax
  0124e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01251	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01254	84 c9		 test	 cl, cl
  01256	74 ef		 je	 SHORT $L205341
$L205342:
  01258	8b f0		 mov	 esi, eax
$L205339:
  0125a	3b b5 28 02 01
	00		 cmp	 esi, DWORD PTR [ebp+66088]
  01260	0f 85 7a ff ff
	ff		 jne	 $L205344
$L177567:

; 1175 : 	}
; 1176 : 
; 1177 : 	pBUF->m_packet << WORD(pPlayer->m_vPvPRecent.size());

  01266	8b 85 d4 02 01
	00		 mov	 eax, DWORD PTR [ebp+66260]
  0126c	3b c3		 cmp	 eax, ebx
  0126e	75 04		 jne	 SHORT $L205424
  01270	33 c0		 xor	 eax, eax
  01272	eb 19		 jmp	 SHORT $L205425
$L205424:
  01274	8b 8d d8 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66264]
  0127a	2b c8		 sub	 ecx, eax
  0127c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01281	f7 e9		 imul	 ecx
  01283	c1 fa 02	 sar	 edx, 2
  01286	8b c2		 mov	 eax, edx
  01288	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0128b	03 c2		 add	 eax, edx
$L205425:
  0128d	8b 7c 24 14	 mov	 edi, DWORD PTR $T199670[esp+88]
  01291	83 c7 04	 add	 edi, 4
  01294	50		 push	 eax
  01295	8b cf		 mov	 ecx, edi
  01297	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1178 : 	for(WORD pr=0; pr<pPlayer->m_vPvPRecent.size(); pr++)

  0129c	33 f6		 xor	 esi, esi
  0129e	8b ff		 npad	 2
$L177587:
  012a0	8b 85 d4 02 01
	00		 mov	 eax, DWORD PTR [ebp+66260]
  012a6	3b c3		 cmp	 eax, ebx
  012a8	75 04		 jne	 SHORT $L205432
  012aa	33 c0		 xor	 eax, eax
  012ac	eb 19		 jmp	 SHORT $L205433
$L205432:
  012ae	8b 8d d8 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66264]
  012b4	2b c8		 sub	 ecx, eax
  012b6	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  012bb	f7 e9		 imul	 ecx
  012bd	c1 fa 02	 sar	 edx, 2
  012c0	8b c2		 mov	 eax, edx
  012c2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  012c5	03 c2		 add	 eax, edx
$L205433:
  012c7	0f b7 ce	 movzx	 ecx, si
  012ca	3b c8		 cmp	 ecx, eax
  012cc	73 5c		 jae	 SHORT $L177589

; 1179 : 	{
; 1180 : 		pBUF->m_packet
; 1181 : 			<< pPlayer->m_vPvPRecent[pr].m_strName
; 1182 : 			<< pPlayer->m_vPvPRecent[pr].m_bClass
; 1183 : 			<< pPlayer->m_vPvPRecent[pr].m_bLevel
; 1184 : 			<< pPlayer->m_vPvPRecent[pr].m_bWin
; 1185 : 			<< pPlayer->m_vPvPRecent[pr].m_dwPoint
; 1186 : 			<< pPlayer->m_vPvPRecent[pr].m_dTime;

  012ce	8b 85 d4 02 01
	00		 mov	 eax, DWORD PTR [ebp+66260]
  012d4	8d 14 49	 lea	 edx, DWORD PTR [ecx+ecx*2]
  012d7	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]
  012da	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  012dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  012df	52		 push	 edx
  012e0	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  012e3	52		 push	 edx
  012e4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  012e7	52		 push	 edx
  012e8	33 d2		 xor	 edx, edx
  012ea	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  012ed	52		 push	 edx
  012ee	33 d2		 xor	 edx, edx
  012f0	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  012f3	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  012f7	52		 push	 edx
  012f8	50		 push	 eax
  012f9	51		 push	 ecx
  012fa	8b cf		 mov	 ecx, edi
  012fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  01301	8b c8		 mov	 ecx, eax
  01303	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01308	8b c8		 mov	 ecx, eax
  0130a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0130f	8b c8		 mov	 ecx, eax
  01311	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01316	8b c8		 mov	 ecx, eax
  01318	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0131d	8b c8		 mov	 ecx, eax
  0131f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  01324	46		 inc	 esi
  01325	e9 76 ff ff ff	 jmp	 $L177587
$L177589:

; 1187 : 	}
; 1188 : 
; 1189 : 	pBUF->m_packet
; 1190 : 		<< WORD(pPlayer->m_vDuelRecordSet.size());

  0132a	8b 85 14 03 01
	00		 mov	 eax, DWORD PTR [ebp+66324]
  01330	3b c3		 cmp	 eax, ebx
  01332	75 04		 jne	 SHORT $L205774
  01334	33 c0		 xor	 eax, eax
  01336	eb 19		 jmp	 SHORT $L205775
$L205774:
  01338	8b 8d 18 03 01
	00		 mov	 ecx, DWORD PTR [ebp+66328]
  0133e	2b c8		 sub	 ecx, eax
  01340	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01345	f7 e9		 imul	 ecx
  01347	c1 fa 02	 sar	 edx, 2
  0134a	8b c2		 mov	 eax, edx
  0134c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0134f	03 c2		 add	 eax, edx
$L205775:
  01351	50		 push	 eax
  01352	8b cf		 mov	 ecx, edi
  01354	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1191 : 
; 1192 : 	VTRECORDSET::iterator itD;
; 1193 : 	for(itD = pPlayer->m_vDuelRecordSet.begin(); itD != pPlayer->m_vDuelRecordSet.end(); itD++)

  01359	8b b5 14 03 01
	00		 mov	 esi, DWORD PTR [ebp+66324]
  0135f	3b b5 18 03 01
	00		 cmp	 esi, DWORD PTR [ebp+66328]
  01365	74 58		 je	 SHORT $L177712
$L205805:

; 1194 : 	{		
; 1195 : 		pBUF->m_packet
; 1196 : 			<< (*itD).m_strName
; 1197 : 			<< (*itD).m_bClass
; 1198 : 			<< (*itD).m_bLevel
; 1199 : 			<< (*itD).m_bWin
; 1200 : 			<< (*itD).m_dwPoint
; 1201 : 			<< (*itD).m_dTime;

  01367	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0136a	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0136d	8b 06		 mov	 eax, DWORD PTR [esi]
  0136f	51		 push	 ecx
  01370	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  01373	52		 push	 edx
  01374	33 d2		 xor	 edx, edx
  01376	8a 56 06	 mov	 dl, BYTE PTR [esi+6]
  01379	51		 push	 ecx
  0137a	33 c9		 xor	 ecx, ecx
  0137c	8a 4e 05	 mov	 cl, BYTE PTR [esi+5]
  0137f	52		 push	 edx
  01380	33 d2		 xor	 edx, edx
  01382	8a 56 04	 mov	 dl, BYTE PTR [esi+4]
  01385	51		 push	 ecx
  01386	8b cf		 mov	 ecx, edi
  01388	52		 push	 edx
  01389	50		 push	 eax
  0138a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0138f	8b c8		 mov	 ecx, eax
  01391	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01396	8b c8		 mov	 ecx, eax
  01398	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0139d	8b c8		 mov	 ecx, eax
  0139f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  013a4	8b c8		 mov	 ecx, eax
  013a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  013ab	8b c8		 mov	 ecx, eax
  013ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  013b2	8b 85 18 03 01
	00		 mov	 eax, DWORD PTR [ebp+66328]
  013b8	83 c6 18	 add	 esi, 24			; 00000018H
  013bb	3b f0		 cmp	 esi, eax
  013bd	75 a8		 jne	 SHORT $L205805
$L177712:

; 1202 : 	}
; 1203 : 
; 1204 : 	for(WORD di = 0; di < TCLASS_COUNT; di++)

  013bf	8d b5 20 03 01
	00		 lea	 esi, DWORD PTR [ebp+66336]
  013c5	bb 06 00 00 00	 mov	 ebx, 6
  013ca	8d 9b 00 00 00
	00		 npad	 6
$L177714:

; 1205 : 	{
; 1206 : 		pBUF->m_packet
; 1207 : 			<< pPlayer->m_aDuelScore[di][0]
; 1208 : 			<< pPlayer->m_aDuelScore[di][1];

  013d0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  013d3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  013d5	50		 push	 eax
  013d6	51		 push	 ecx
  013d7	8b cf		 mov	 ecx, edi
  013d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  013de	8b c8		 mov	 ecx, eax
  013e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  013e5	83 c6 08	 add	 esi, 8
  013e8	4b		 dec	 ebx
  013e9	75 e5		 jne	 SHORT $L177714

; 1209 : 	}
; 1210 : 
; 1211 : 	wSize = pBUF->m_packet.GetSize();

  013eb	8b cf		 mov	 ecx, edi
  013ed	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1212 : 	wCount = 0;

  013f2	33 db		 xor	 ebx, ebx

; 1213 : 	pBUF->m_packet << wCount;

  013f4	53		 push	 ebx
  013f5	8b cf		 mov	 ecx, edi
  013f7	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+92], eax
  013fb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1214 : 
; 1215 : 	MAPTPROTECTED::iterator itPTD;
; 1216 : 	for(itPTD=pPlayer->m_mapTPROTECTED.begin(); itPTD != pPlayer->m_mapTPROTECTED.end(); itPTD++)

  01400	8b 8d 64 02 01
	00		 mov	 ecx, DWORD PTR [ebp+66148]
  01406	8b 01		 mov	 eax, DWORD PTR [ecx]
  01408	3b c1		 cmp	 eax, ecx
  0140a	89 44 24 5c	 mov	 DWORD PTR _itPTD$[esp+84], eax
  0140e	74 3e		 je	 SHORT $L177800
  01410	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
$L205937:

; 1217 : 	{
; 1218 : 		if((*itPTD).second->m_bChanged)

  01414	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  01417	8a 4a 09	 mov	 cl, BYTE PTR [edx+9]
  0141a	84 c9		 test	 cl, cl
  0141c	74 1b		 je	 SHORT $L177799

; 1219 : 		{
; 1220 : 			pBUF->m_packet
; 1221 : 				<< (*itPTD).second->m_dwCharID
; 1222 : 				<< (*itPTD).second->m_bOption;

  0141e	8b c2		 mov	 eax, edx
  01420	8b 10		 mov	 edx, DWORD PTR [eax]
  01422	33 c9		 xor	 ecx, ecx
  01424	8a 48 08	 mov	 cl, BYTE PTR [eax+8]
  01427	51		 push	 ecx
  01428	52		 push	 edx
  01429	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0142c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01431	8b c8		 mov	 ecx, eax
  01433	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1223 : 
; 1224 : 			wCount++;

  01438	43		 inc	 ebx
$L177799:
  01439	8d 4c 24 5c	 lea	 ecx, DWORD PTR _itPTD$[esp+84]
  0143d	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagPROTECTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagPROTECTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagPROTECTED *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagPROTECTED *> >,0> >::const_iterator::_Inc
  01442	8b 44 24 5c	 mov	 eax, DWORD PTR _itPTD$[esp+84]
  01446	3b 85 64 02 01
	00		 cmp	 eax, DWORD PTR [ebp+66148]
  0144c	75 c6		 jne	 SHORT $L205937
$L177800:

; 1225 : 		}
; 1226 : 	}
; 1227 : 	memcpy(pBUF->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  0144e	8b 74 24 14	 mov	 esi, DWORD PTR $T199670[esp+88]
  01452	83 c6 04	 add	 esi, 4
  01455	8b ce		 mov	 ecx, esi
  01457	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  0145c	0f b7 4c 24 18	 movzx	 ecx, WORD PTR _wSize$[esp+88]
  01461	66 89 1c 08	 mov	 WORD PTR [eax+ecx], bx

; 1228 : 
; 1229 : 		
; 1230 : 	pBUF->m_packet 
; 1231 : 		<< (WORD)pPlayer->m_vAuctionInterest.size();

  01465	8b 8d 54 03 01
	00		 mov	 ecx, DWORD PTR [ebp+66388]
  0146b	85 c9		 test	 ecx, ecx
  0146d	75 04		 jne	 SHORT $L206012
  0146f	33 c0		 xor	 eax, eax
  01471	eb 0b		 jmp	 SHORT $L206013
$L206012:
  01473	8b 85 58 03 01
	00		 mov	 eax, DWORD PTR [ebp+66392]
  01479	2b c1		 sub	 eax, ecx
  0147b	c1 f8 02	 sar	 eax, 2
$L206013:
  0147e	50		 push	 eax
  0147f	8b ce		 mov	 ecx, esi
  01481	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1232 : 	VDWORD::iterator itAI;
; 1233 : 	for( itAI = pPlayer->m_vAuctionInterest.begin(); itAI != pPlayer->m_vAuctionInterest.end(); itAI++)

  01486	8b bd 54 03 01
	00		 mov	 edi, DWORD PTR [ebp+66388]
  0148c	3b bd 58 03 01
	00		 cmp	 edi, DWORD PTR [ebp+66392]
  01492	74 17		 je	 SHORT $L177943
$L206047:

; 1234 : 	{
; 1235 : 		pBUF->m_packet
; 1236 : 			<< (*itAI);

  01494	8b 17		 mov	 edx, DWORD PTR [edi]
  01496	52		 push	 edx
  01497	8b ce		 mov	 ecx, esi
  01499	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0149e	8b 85 58 03 01
	00		 mov	 eax, DWORD PTR [ebp+66392]
  014a4	83 c7 04	 add	 edi, 4
  014a7	3b f8		 cmp	 edi, eax
  014a9	75 e9		 jne	 SHORT $L206047
$L177943:

; 1237 : 	}
; 1238 : 
; 1239 : 	pBUF->m_packet
; 1240 : 		<< pPlayer->m_dwMonthPvPoint
; 1241 : 		<< pPlayer->m_wMonthWin
; 1242 : 		<< pPlayer->m_wMonthLose
; 1243 : 		<< pPlayer->m_strMonthSay
; 1244 : 		<< pPlayer->m_bCountry;

  014ab	8b 85 00 04 01
	00		 mov	 eax, DWORD PTR [ebp+66560]
  014b1	33 c9		 xor	 ecx, ecx
  014b3	8a 8d 9d 01 01
	00		 mov	 cl, BYTE PTR [ebp+65949]
  014b9	33 d2		 xor	 edx, edx
  014bb	66 8b 95 f4 03
	01 00		 mov	 dx, WORD PTR [ebp+66548]
  014c2	51		 push	 ecx
  014c3	8b 8d e8 03 01
	00		 mov	 ecx, DWORD PTR [ebp+66536]
  014c9	50		 push	 eax
  014ca	33 c0		 xor	 eax, eax
  014cc	66 8b 85 f2 03
	01 00		 mov	 ax, WORD PTR [ebp+66546]
  014d3	52		 push	 edx
  014d4	50		 push	 eax
  014d5	51		 push	 ecx
  014d6	8b ce		 mov	 ecx, esi
  014d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  014dd	8b c8		 mov	 ecx, eax
  014df	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  014e4	8b c8		 mov	 ecx, eax
  014e6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  014eb	8b c8		 mov	 ecx, eax
  014ed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  014f2	8b c8		 mov	 ecx, eax
  014f4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1245 : 
; 1246 : 	pBUF->m_packet
; 1247 : 		<< wACKMsg;

  014f9	8b 54 24 60	 mov	 edx, DWORD PTR _wACKMsg$[esp+84]
  014fd	52		 push	 edx
  014fe	8b ce		 mov	 ecx, esi
  01500	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1248 : 
; 1249 : 	SayToDB(pBUF);

  01505	8b 44 24 14	 mov	 eax, DWORD PTR $T199670[esp+88]
  01509	8b 4c 24 20	 mov	 ecx, DWORD PTR _this$[esp+88]
  0150d	50		 push	 eax
  0150e	e8 00 00 00 00	 call	 ?SayToDB@CTMapSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTMapSvrModule::SayToDB

; 1250 : }

  01513	8b 44 24 40	 mov	 eax, DWORD PTR _vPlayer$[esp+92]
  01517	85 c0		 test	 eax, eax
  01519	5f		 pop	 edi
  0151a	5e		 pop	 esi
  0151b	74 09		 je	 SHORT $L206100
  0151d	50		 push	 eax
  0151e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  01523	83 c4 04	 add	 esp, 4
$L206100:
  01526	8b 4c 24 44	 mov	 ecx, DWORD PTR __$EHRec$[esp+80]
  0152a	5d		 pop	 ebp
  0152b	5b		 pop	 ebx
  0152c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01533	83 c4 48	 add	 esp, 72			; 00000048H
  01536	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L199720:
  00000	8b 45 d0	 mov	 eax, DWORD PTR $T199671[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L199721:
  0000b	8d 4d e4	 lea	 ecx, DWORD PTR _vPlayer$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
$L199722:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR _vPlayer$177467[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
__ehhandler$?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T206105
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SAVECHAR_REQ@CTMapSvrModule@@QAEXPAVCTPlayer@@G@Z ENDP ; CTMapSvrModule::SendDM_SAVECHAR_REQ
PUBLIC	?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z ; CTMapSvrModule::SendMW_RELEASEMAIN_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T212966 DD	0ffffffffH
	DD	FLAT:$L206280
	DD	0ffffffffH
	DD	FLAT:$L206281
$T212838 DD	019930520H
	DD	02H
	DD	FLAT:$T212966
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z
_TEXT	SEGMENT
$T206219 = -52						; size = 4
_wSize$ = -48						; size = 2
_dwTick$ = -44						; size = 4
_this$ = -40						; size = 4
_itCallMon$ = -36					; size = 4
_pTINVEN$178838 = -36					; size = 4
__Tmp$211764 = -32					; size = 4
_vPlayer$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_bDBLoad$ = 8						; size = 1
_wCount$ = 8						; size = 2
_is$178964 = 12						; size = 1
_is$178871 = 12						; size = 4
_itTINVEN$ = 12						; size = 4
$T206220 = 12						; size = 4
_pPlayer$ = 12						; size = 4
?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z PROC NEAR ; CTMapSvrModule::SendMW_RELEASEMAIN_ACK, COMDAT
; _this$ = ecx

; 1652 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 28	 sub	 esp, 40			; 00000028H
  00018	53		 push	 ebx
  00019	56		 push	 esi

; 1653 : 	if(pPlayer->m_mapTINVEN.empty())

  0001a	8b 74 24 44	 mov	 esi, DWORD PTR _pPlayer$[esp+56]
  0001e	8b 86 10 01 01
	00		 mov	 eax, DWORD PTR [esi+65808]
  00024	33 db		 xor	 ebx, ebx
  00026	3b c3		 cmp	 eax, ebx
  00028	89 4c 24 14	 mov	 DWORD PTR _this$[esp+60], ecx
  0002c	0f 84 69 16 00
	00		 je	 $L212835
  00032	55		 push	 ebp
  00033	57		 push	 edi

; 1654 : 		return;
; 1655 : 
; 1656 : 	DWORD dwTick = m_dwTick;

  00034	8b b9 48 a9 02
	00		 mov	 edi, DWORD PTR [ecx+174408]

; 1657 : 
; 1658 : 	CPacket *pMSG = new CPacket();

  0003a	6a 1c		 push	 28			; 0000001cH
  0003c	89 7c 24 1c	 mov	 DWORD PTR _dwTick$[esp+72], edi
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4
  00048	89 44 24 4c	 mov	 DWORD PTR $T206220[esp+64], eax
  0004c	3b c3		 cmp	 eax, ebx
  0004e	89 5c 24 40	 mov	 DWORD PTR __$EHRec$[esp+76], ebx
  00052	74 0b		 je	 SHORT $L206221
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0005b	8b e8		 mov	 ebp, eax
  0005d	eb 02		 jmp	 SHORT $L212962
$L206221:
  0005f	33 ed		 xor	 ebp, ebp
$L212962:

; 1659 : 	pMSG->ExpandIoBuffer(MAX_PACKET_SIZE);

  00061	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00066	8b cd		 mov	 ecx, ebp
  00068	89 6c 24 14	 mov	 DWORD PTR $T206219[esp+72], ebp
  0006c	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+80], -1
  00074	e8 00 00 00 00	 call	 ?ExpandIoBuffer@CPacket@@QAEKK@Z ; CPacket::ExpandIoBuffer

; 1660 : 
; 1661 : 	pMSG->SetID(MW_RELEASEMAIN_ACK)
; 1662 : 		<< bDBLoad
; 1663 : 		<< pPlayer->m_dwID
; 1664 : 		<< pPlayer->m_dwKEY
; 1665 : 		<< (BYTE) CN_SUCCESS
; 1666 : 		<< pPlayer->m_strNAME
; 1667 : 		<< pPlayer->m_bStartAct
; 1668 : 		<< pPlayer->m_bRealSex
; 1669 : 		<< pPlayer->m_bClass
; 1670 : 		<< pPlayer->m_bLevel
; 1671 : 		<< pPlayer->m_bRace
; 1672 : 		<< pPlayer->m_bCountry
; 1673 : 		<< pPlayer->m_bOriCountry
; 1674 : 		<< pPlayer->m_bSex
; 1675 : 		<< pPlayer->m_bHair
; 1676 : 		<< pPlayer->m_bFace
; 1677 : 		<< pPlayer->m_bBody
; 1678 : 		<< pPlayer->m_bPants
; 1679 : 		<< pPlayer->m_bHand
; 1680 : 		<< pPlayer->m_bFoot
; 1681 : 		<< pPlayer->m_bHelmetHide
; 1682 : 		<< pPlayer->m_dwGold
; 1683 : 		<< pPlayer->m_dwSilver
; 1684 : 		<< pPlayer->m_dwCooper
; 1685 : 		<< pPlayer->m_dwEXP
; 1686 : 		<< pPlayer->m_dwHP
; 1687 : 		<< pPlayer->m_dwMP
; 1688 : 		<< pPlayer->m_wSkillPoint
; 1689 : 		<< pPlayer->m_dwRegion
; 1690 : 		<< pPlayer->m_bGuildLeave
; 1691 : 		<< pPlayer->m_dwGuildLeaveTime
; 1692 : 		<< pPlayer->m_wMapID
; 1693 : 		<< pPlayer->m_wSpawnID
; 1694 : 		<< pPlayer->m_wLastSpawnID
; 1695 : 		<< pPlayer->m_dwLastDestination
; 1696 : 		<< pPlayer->m_wTemptedMon
; 1697 : 		<< pPlayer->m_aftermath.m_bStep
; 1698 : 		<< pPlayer->m_fPosX
; 1699 : 		<< pPlayer->m_fPosY
; 1700 : 		<< pPlayer->m_fPosZ
; 1701 : 		<< pPlayer->m_wDIR
; 1702 : 		<< (dwTick - pPlayer->m_dwSaveTick)
; 1703 : 		<< pPlayer->m_wLocalID
; 1704 : 		<< pPlayer->m_bAidCountry
; 1705 : 		<< pPlayer->m_dlAidDate
; 1706 : 		<< pPlayer->m_bInPcBang
; 1707 : 		<< pPlayer->m_dwPcBangTime
; 1708 : 		<< pPlayer->m_bPcBangItemCnt
; 1709 : 		<< pPlayer->m_bLuckyNumber
; 1710 : 		<< pPlayer->m_wPostTotal
; 1711 : 		<< pPlayer->m_wPostRead;

  00079	33 c9		 xor	 ecx, ecx
  0007b	66 8b 8e 92 04
	01 00		 mov	 cx, WORD PTR [esi+66706]
  00082	33 d2		 xor	 edx, edx
  00084	66 8b 96 90 04
	01 00		 mov	 dx, WORD PTR [esi+66704]
  0008b	8b 86 a4 03 01
	00		 mov	 eax, DWORD PTR [esi+66468]
  00091	51		 push	 ecx
  00092	33 c9		 xor	 ecx, ecx
  00094	52		 push	 edx
  00095	8a 8e 51 04 01
	00		 mov	 cl, BYTE PTR [esi+66641]
  0009b	33 d2		 xor	 edx, edx
  0009d	8a 96 50 04 01
	00		 mov	 dl, BYTE PTR [esi+66640]
  000a3	51		 push	 ecx
  000a4	8b 8e 40 04 01
	00		 mov	 ecx, DWORD PTR [esi+66624]
  000aa	52		 push	 edx
  000ab	51		 push	 ecx
  000ac	8b 8e ac 01 01
	00		 mov	 ecx, DWORD PTR [esi+65964]
  000b2	33 d2		 xor	 edx, edx
  000b4	8a 96 3c 04 01
	00		 mov	 dl, BYTE PTR [esi+66620]
  000ba	52		 push	 edx
  000bb	51		 push	 ecx
  000bc	8b 96 a8 01 01
	00		 mov	 edx, DWORD PTR [esi+65960]
  000c2	52		 push	 edx
  000c3	33 c9		 xor	 ecx, ecx
  000c5	8a 8e 9e 01 01
	00		 mov	 cl, BYTE PTR [esi+65950]
  000cb	33 d2		 xor	 edx, edx
  000cd	66 8b 96 96 01
	01 00		 mov	 dx, WORD PTR [esi+65942]
  000d4	51		 push	 ecx
  000d5	33 c9		 xor	 ecx, ecx
  000d7	66 8b 8e 94 01
	01 00		 mov	 cx, WORD PTR [esi+65940]
  000de	52		 push	 edx
  000df	2b be 28 04 01
	00		 sub	 edi, DWORD PTR [esi+66600]
  000e5	8b 96 84 01 01
	00		 mov	 edx, DWORD PTR [esi+65924]
  000eb	57		 push	 edi
  000ec	51		 push	 ecx
  000ed	8b 8e 80 01 01
	00		 mov	 ecx, DWORD PTR [esi+65920]
  000f3	52		 push	 edx
  000f4	8b 96 7c 01 01
	00		 mov	 edx, DWORD PTR [esi+65916]
  000fa	51		 push	 ecx
  000fb	52		 push	 edx
  000fc	33 c9		 xor	 ecx, ecx
  000fe	8a 8e d0 01 01
	00		 mov	 cl, BYTE PTR [esi+66000]
  00104	33 d2		 xor	 edx, edx
  00106	66 8b 96 8e 01
	01 00		 mov	 dx, WORD PTR [esi+65934]
  0010d	51		 push	 ecx
  0010e	8b 8e 64 04 01
	00		 mov	 ecx, DWORD PTR [esi+66660]
  00114	52		 push	 edx
  00115	51		 push	 ecx
  00116	33 d2		 xor	 edx, edx
  00118	66 8b 96 62 04
	01 00		 mov	 dx, WORD PTR [esi+66658]
  0011f	33 c9		 xor	 ecx, ecx
  00121	66 8b 8e 22 04
	01 00		 mov	 cx, WORD PTR [esi+66594]
  00128	52		 push	 edx
  00129	33 d2		 xor	 edx, edx
  0012b	66 8b 96 90 01
	01 00		 mov	 dx, WORD PTR [esi+65936]
  00132	51		 push	 ecx
  00133	8b 8e 24 04 01
	00		 mov	 ecx, DWORD PTR [esi+66596]
  00139	52		 push	 edx
  0013a	33 d2		 xor	 edx, edx
  0013c	8a 96 2c 04 01
	00		 mov	 dl, BYTE PTR [esi+66604]
  00142	51		 push	 ecx
  00143	8b 8e 64 01 01
	00		 mov	 ecx, DWORD PTR [esi+65892]
  00149	52		 push	 edx
  0014a	33 d2		 xor	 edx, edx
  0014c	66 8b 96 20 04
	01 00		 mov	 dx, WORD PTR [esi+66592]
  00153	51		 push	 ecx
  00154	8b 8e 60 01 01
	00		 mov	 ecx, DWORD PTR [esi+65888]
  0015a	52		 push	 edx
  0015b	8b 96 5c 01 01
	00		 mov	 edx, DWORD PTR [esi+65884]
  00161	51		 push	 ecx
  00162	8b 8e d4 03 01
	00		 mov	 ecx, DWORD PTR [esi+66516]
  00168	52		 push	 edx
  00169	8b 96 c8 03 01
	00		 mov	 edx, DWORD PTR [esi+66504]
  0016f	51		 push	 ecx
  00170	8b 8e cc 03 01
	00		 mov	 ecx, DWORD PTR [esi+66508]
  00176	52		 push	 edx
  00177	51		 push	 ecx
  00178	8b 96 d0 03 01
	00		 mov	 edx, DWORD PTR [esi+66512]
  0017e	52		 push	 edx
  0017f	33 c9		 xor	 ecx, ecx
  00181	8a 8e 1c 04 01
	00		 mov	 cl, BYTE PTR [esi+66588]
  00187	33 d2		 xor	 edx, edx
  00189	8a 96 bf 03 01
	00		 mov	 dl, BYTE PTR [esi+66495]
  0018f	51		 push	 ecx
  00190	33 c9		 xor	 ecx, ecx
  00192	8a 8e be 03 01
	00		 mov	 cl, BYTE PTR [esi+66494]
  00198	52		 push	 edx
  00199	33 d2		 xor	 edx, edx
  0019b	8a 96 b9 03 01
	00		 mov	 dl, BYTE PTR [esi+66489]
  001a1	51		 push	 ecx
  001a2	33 c9		 xor	 ecx, ecx
  001a4	8a 8e bd 03 01
	00		 mov	 cl, BYTE PTR [esi+66493]
  001aa	52		 push	 edx
  001ab	33 d2		 xor	 edx, edx
  001ad	8a 96 bc 03 01
	00		 mov	 dl, BYTE PTR [esi+66492]
  001b3	51		 push	 ecx
  001b4	33 c9		 xor	 ecx, ecx
  001b6	8a 8e bb 03 01
	00		 mov	 cl, BYTE PTR [esi+66491]
  001bc	52		 push	 edx
  001bd	33 d2		 xor	 edx, edx
  001bf	8a 96 c0 03 01
	00		 mov	 dl, BYTE PTR [esi+66496]
  001c5	51		 push	 ecx
  001c6	33 c9		 xor	 ecx, ecx
  001c8	8a 8e 9f 01 01
	00		 mov	 cl, BYTE PTR [esi+65951]
  001ce	52		 push	 edx
  001cf	33 d2		 xor	 edx, edx
  001d1	8a 96 9d 01 01
	00		 mov	 dl, BYTE PTR [esi+65949]
  001d7	51		 push	 ecx
  001d8	33 c9		 xor	 ecx, ecx
  001da	8a 8e ba 03 01
	00		 mov	 cl, BYTE PTR [esi+66490]
  001e0	52		 push	 edx
  001e1	33 d2		 xor	 edx, edx
  001e3	8a 96 7b 01 01
	00		 mov	 dl, BYTE PTR [esi+65915]
  001e9	51		 push	 ecx
  001ea	33 c9		 xor	 ecx, ecx
  001ec	8a 8e b8 03 01
	00		 mov	 cl, BYTE PTR [esi+66488]
  001f2	52		 push	 edx
  001f3	33 d2		 xor	 edx, edx
  001f5	8a 96 b5 03 01
	00		 mov	 dl, BYTE PTR [esi+66485]
  001fb	51		 push	 ecx
  001fc	33 c9		 xor	 ecx, ecx
  001fe	8a 8e b4 03 01
	00		 mov	 cl, BYTE PTR [esi+66484]
  00204	52		 push	 edx
  00205	8b 96 b0 03 01
	00		 mov	 edx, DWORD PTR [esi+66480]
  0020b	51		 push	 ecx
  0020c	8b 8c 24 00 01
	00 00		 mov	 ecx, DWORD PTR _bDBLoad$[esp+248]
  00213	50		 push	 eax
  00214	8b 86 44 01 01
	00		 mov	 eax, DWORD PTR [esi+65860]
  0021a	53		 push	 ebx
  0021b	52		 push	 edx
  0021c	50		 push	 eax
  0021d	51		 push	 ecx
  0021e	68 17 20 00 00	 push	 8215			; 00002017H
  00223	8b cd		 mov	 ecx, ebp
  00225	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0022a	8b c8		 mov	 ecx, eax
  0022c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00231	8b c8		 mov	 ecx, eax
  00233	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00238	8b c8		 mov	 ecx, eax
  0023a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0023f	8b c8		 mov	 ecx, eax
  00241	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00246	8b c8		 mov	 ecx, eax
  00248	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0024d	8b c8		 mov	 ecx, eax
  0024f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00254	8b c8		 mov	 ecx, eax
  00256	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0025b	8b c8		 mov	 ecx, eax
  0025d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00262	8b c8		 mov	 ecx, eax
  00264	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00269	8b c8		 mov	 ecx, eax
  0026b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00270	8b c8		 mov	 ecx, eax
  00272	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00277	8b c8		 mov	 ecx, eax
  00279	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0027e	8b c8		 mov	 ecx, eax
  00280	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00285	8b c8		 mov	 ecx, eax
  00287	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0028c	8b c8		 mov	 ecx, eax
  0028e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00293	8b c8		 mov	 ecx, eax
  00295	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0029a	8b c8		 mov	 ecx, eax
  0029c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002a1	8b c8		 mov	 ecx, eax
  002a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002a8	8b c8		 mov	 ecx, eax
  002aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002af	8b c8		 mov	 ecx, eax
  002b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002b6	8b c8		 mov	 ecx, eax
  002b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002bd	8b c8		 mov	 ecx, eax
  002bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002c4	8b c8		 mov	 ecx, eax
  002c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002cb	8b c8		 mov	 ecx, eax
  002cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002d2	8b c8		 mov	 ecx, eax
  002d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002d9	8b c8		 mov	 ecx, eax
  002db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002e0	8b c8		 mov	 ecx, eax
  002e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002e7	8b c8		 mov	 ecx, eax
  002e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002ee	8b c8		 mov	 ecx, eax
  002f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002f5	8b c8		 mov	 ecx, eax
  002f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  002fc	8b c8		 mov	 ecx, eax
  002fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00303	8b c8		 mov	 ecx, eax
  00305	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0030a	8b c8		 mov	 ecx, eax
  0030c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00311	8b c8		 mov	 ecx, eax
  00313	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00318	8b c8		 mov	 ecx, eax
  0031a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0031f	8b c8		 mov	 ecx, eax
  00321	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00326	8b c8		 mov	 ecx, eax
  00328	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0032d	8b c8		 mov	 ecx, eax
  0032f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00334	8b c8		 mov	 ecx, eax
  00336	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0033b	8b c8		 mov	 ecx, eax
  0033d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00342	8b c8		 mov	 ecx, eax
  00344	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00349	8b c8		 mov	 ecx, eax
  0034b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00350	8b c8		 mov	 ecx, eax
  00352	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00357	8b c8		 mov	 ecx, eax
  00359	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0035e	8b c8		 mov	 ecx, eax
  00360	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00365	8b c8		 mov	 ecx, eax
  00367	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0036c	8b c8		 mov	 ecx, eax
  0036e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00373	8b c8		 mov	 ecx, eax
  00375	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0037a	8b c8		 mov	 ecx, eax
  0037c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00381	8b c8		 mov	 ecx, eax
  00383	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1712 : 
; 1713 : 	MAPTINVEN::iterator itTINVEN;
; 1714 : 	MAPTSKILL::iterator itTSKILL;
; 1715 : 	MAPTSKILL::iterator itExSkill;
; 1716 : 	MAPTCABINET::iterator itCABINET;
; 1717 : 	MAPTSTORAGEITEM::iterator itCABINETITEM;
; 1718 : 	MAPTMAGIC::iterator itTMAGIC;
; 1719 : 	MAPTHOTKEYINVEN::iterator itHOTKEY;
; 1720 : 	MAPTDURINGITEM::iterator itDUITEM;
; 1721 : 	MAPQUEST::iterator itQUEST;
; 1722 : 
; 1723 : 	(*pMSG)
; 1724 : 		<< WORD(pPlayer->m_mapTINVEN.size());

  00388	8b 86 10 01 01
	00		 mov	 eax, DWORD PTR [esi+65808]
  0038e	50		 push	 eax
  0038f	8b cd		 mov	 ecx, ebp
  00391	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1725 : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  00396	8b 8e 0c 01 01
	00		 mov	 ecx, DWORD PTR [esi+65804]
  0039c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0039e	3b c1		 cmp	 eax, ecx
  003a0	89 44 24 4c	 mov	 DWORD PTR _itTINVEN$[esp+64], eax
  003a4	74 51		 je	 SHORT $L178821
$L206414:

; 1726 : 	{
; 1727 : 		CTInven *pTINVEN = (*itTINVEN).second;

  003a6	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 1728 : 		MAPTITEM::iterator itTITEM;
; 1729 : 
; 1730 : 		(*pMSG)
; 1731 : 			<< pTINVEN->m_bInvenID
; 1732 : 			<< pTINVEN->m_wItemID
; 1733 : 			<< pTINVEN->m_dEndTime
; 1734 : 			<< pTINVEN->m_bELD;

  003a9	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  003ac	33 d2		 xor	 edx, edx
  003ae	8a 50 28	 mov	 dl, BYTE PTR [eax+40]
  003b1	52		 push	 edx
  003b2	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  003b5	51		 push	 ecx
  003b6	52		 push	 edx
  003b7	33 c9		 xor	 ecx, ecx
  003b9	66 8b 48 1a	 mov	 cx, WORD PTR [eax+26]
  003bd	33 d2		 xor	 edx, edx
  003bf	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  003c2	51		 push	 ecx
  003c3	8b cd		 mov	 ecx, ebp
  003c5	52		 push	 edx
  003c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  003cb	8b c8		 mov	 ecx, eax
  003cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  003d2	8b c8		 mov	 ecx, eax
  003d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  003d9	8b c8		 mov	 ecx, eax
  003db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  003e0	8d 4c 24 4c	 lea	 ecx, DWORD PTR _itTINVEN$[esp+64]
  003e4	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
  003e9	8b 8e 0c 01 01
	00		 mov	 ecx, DWORD PTR [esi+65804]
  003ef	8b 44 24 4c	 mov	 eax, DWORD PTR _itTINVEN$[esp+64]
  003f3	3b c1		 cmp	 eax, ecx
  003f5	75 af		 jne	 SHORT $L206414
$L178821:

; 1735 : 	}
; 1736 : 
; 1737 : 	(*pMSG)
; 1738 : 		<< WORD(pPlayer->m_mapCabinet.size());

  003f7	8b 86 fc 01 01
	00		 mov	 eax, DWORD PTR [esi+66044]
  003fd	50		 push	 eax
  003fe	8b cd		 mov	 ecx, ebp
  00400	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1739 : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

  00405	8b 86 f8 01 01
	00		 mov	 eax, DWORD PTR [esi+66040]
  0040b	8b 38		 mov	 edi, DWORD PTR [eax]
  0040d	3b f8		 cmp	 edi, eax
  0040f	74 71		 je	 SHORT $L178829
$L206648:

; 1740 : 	{
; 1741 : 		(*pMSG)
; 1742 : 			<< (*itCABINET).second->m_bCabinetID
; 1743 : 			<< (*itCABINET).second->m_bUse;

  00411	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00414	33 c9		 xor	 ecx, ecx
  00416	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00419	33 d2		 xor	 edx, edx
  0041b	8a 10		 mov	 dl, BYTE PTR [eax]
  0041d	51		 push	 ecx
  0041e	8b cd		 mov	 ecx, ebp
  00420	52		 push	 edx
  00421	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00426	8b c8		 mov	 ecx, eax
  00428	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0042d	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00430	84 c0		 test	 al, al
  00432	75 46		 jne	 SHORT $L206657
  00434	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00437	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0043a	84 c9		 test	 cl, cl
  0043c	75 1f		 jne	 SHORT $L212842
  0043e	8b f8		 mov	 edi, eax
  00440	8b 07		 mov	 eax, DWORD PTR [edi]
  00442	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00445	84 c9		 test	 cl, cl
  00447	75 31		 jne	 SHORT $L206657
  00449	8d a4 24 00 00
	00 00		 npad	 7

; 1739 : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

$L206678:
  00450	8b f8		 mov	 edi, eax
  00452	8b 07		 mov	 eax, DWORD PTR [edi]
  00454	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00457	84 c9		 test	 cl, cl
  00459	74 f5		 je	 SHORT $L206678
  0045b	eb 1d		 jmp	 SHORT $L206657
$L212842:
  0045d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00460	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00463	84 c9		 test	 cl, cl
  00465	75 11		 jne	 SHORT $L206660
$L206659:
  00467	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0046a	75 0c		 jne	 SHORT $L206660
  0046c	8b f8		 mov	 edi, eax
  0046e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00471	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00474	84 c9		 test	 cl, cl
  00476	74 ef		 je	 SHORT $L206659
$L206660:
  00478	8b f8		 mov	 edi, eax
$L206657:
  0047a	3b be f8 01 01
	00		 cmp	 edi, DWORD PTR [esi+66040]
  00480	75 8f		 jne	 SHORT $L206648
$L178829:

; 1744 : 	}
; 1745 : 
; 1746 : 	WORD wSize = pMSG->GetSize();

  00482	8b cd		 mov	 ecx, ebp
  00484	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1747 : 	WORD wCount = 0;
; 1748 : 	(*pMSG)
; 1749 : 		<< wCount;

  00489	53		 push	 ebx
  0048a	8b cd		 mov	 ecx, ebp
  0048c	89 5c 24 4c	 mov	 DWORD PTR _wCount$[esp+68], ebx
  00490	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  00494	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1750 : 
; 1751 : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  00499	8b 86 0c 01 01
	00		 mov	 eax, DWORD PTR [esi+65804]
  0049f	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a1	3b c8		 cmp	 ecx, eax
  004a3	89 4c 24 4c	 mov	 DWORD PTR _itTINVEN$[esp+64], ecx
  004a7	0f 84 26 01 00
	00		 je	 $L178837
  004ad	eb 04		 jmp	 SHORT $L206958
$L212958:
  004af	8b 4c 24 4c	 mov	 ecx, DWORD PTR _itTINVEN$[esp+64]
$L206958:

; 1752 : 	{
; 1753 : 		CTInven *pTINVEN = (*itTINVEN).second;

  004b3	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]

; 1754 : 		MAPTITEM::iterator itTITEM;
; 1755 : 
; 1756 : 		for( itTITEM = pTINVEN->m_mapTITEM.begin(); itTITEM != pTINVEN->m_mapTITEM.end(); itTITEM++)

  004b6	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  004b9	8b 38		 mov	 edi, DWORD PTR [eax]
  004bb	3b f8		 cmp	 edi, eax
  004bd	89 4c 24 20	 mov	 DWORD PTR _pTINVEN$178838[esp+68], ecx
  004c1	0f 84 b0 00 00
	00		 je	 $L178836
$L207226:

; 1757 : 		{
; 1758 : 			CTItem *pTITEM = (*itTITEM).second;

  004c7	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 1759 : 			if(!pTITEM->m_dlID)

  004ca	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]
  004cd	0b 43 24	 or	 eax, DWORD PTR [ebx+36]
  004d0	75 0f		 jne	 SHORT $L178847

; 1760 : 				pTITEM->m_dlID = GenItemID();

  004d2	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+68]
  004d6	e8 00 00 00 00	 call	 ?GenItemID@CTMapSvrModule@@QAE_JXZ ; CTMapSvrModule::GenItemID
  004db	89 43 20	 mov	 DWORD PTR [ebx+32], eax
  004de	89 53 24	 mov	 DWORD PTR [ebx+36], edx
$L178847:

; 1761 : 
; 1762 : 			(*pMSG)
; 1763 : 				<< BYTE(STORAGE_INVEN)
; 1764 : 				<< DWORD(pTINVEN->m_bInvenID)
; 1765 : 				<< BYTE(TOWNER_CHAR)
; 1766 : 				<< pPlayer->m_dwID;

  004e1	8b 8e 44 01 01
	00		 mov	 ecx, DWORD PTR [esi+65860]
  004e7	8b 54 24 20	 mov	 edx, DWORD PTR _pTINVEN$178838[esp+68]
  004eb	0f b6 42 18	 movzx	 eax, BYTE PTR [edx+24]
  004ef	51		 push	 ecx
  004f0	6a 00		 push	 0
  004f2	50		 push	 eax
  004f3	6a 00		 push	 0
  004f5	8b cd		 mov	 ecx, ebp
  004f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  004fc	8b c8		 mov	 ecx, eax
  004fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00503	8b c8		 mov	 ecx, eax
  00505	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0050a	8b c8		 mov	 ecx, eax
  0050c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1767 : 
; 1768 : 			pTITEM->WrapPacket(pMSG);

  00511	55		 push	 ebp
  00512	8b cb		 mov	 ecx, ebx
  00514	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 1769 : 			wCount++;

  00519	8b 4c 24 48	 mov	 ecx, DWORD PTR _wCount$[esp+64]
  0051d	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00520	41		 inc	 ecx
  00521	84 c0		 test	 al, al
  00523	89 4c 24 48	 mov	 DWORD PTR _wCount$[esp+64], ecx
  00527	75 41		 jne	 SHORT $L207221
  00529	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0052c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0052f	84 c9		 test	 cl, cl
  00531	75 1a		 jne	 SHORT $L212846
  00533	8b f8		 mov	 edi, eax
  00535	8b 07		 mov	 eax, DWORD PTR [edi]
  00537	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0053a	84 c9		 test	 cl, cl
  0053c	75 2c		 jne	 SHORT $L207221
  0053e	8b ff		 npad	 2

; 1754 : 		MAPTITEM::iterator itTITEM;
; 1755 : 
; 1756 : 		for( itTITEM = pTINVEN->m_mapTITEM.begin(); itTITEM != pTINVEN->m_mapTITEM.end(); itTITEM++)

$L207209:
  00540	8b f8		 mov	 edi, eax
  00542	8b 07		 mov	 eax, DWORD PTR [edi]
  00544	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00547	84 c9		 test	 cl, cl
  00549	74 f5		 je	 SHORT $L207209
  0054b	eb 1d		 jmp	 SHORT $L207221
$L212846:
  0054d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00550	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00553	84 c9		 test	 cl, cl
  00555	75 11		 jne	 SHORT $L207224
$L207223:
  00557	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0055a	75 0c		 jne	 SHORT $L207224
  0055c	8b f8		 mov	 edi, eax
  0055e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00561	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00564	84 c9		 test	 cl, cl
  00566	74 ef		 je	 SHORT $L207223
$L207224:
  00568	8b f8		 mov	 edi, eax
$L207221:
  0056a	8b 4c 24 20	 mov	 ecx, DWORD PTR _pTINVEN$178838[esp+68]
  0056e	3b 79 0c	 cmp	 edi, DWORD PTR [ecx+12]
  00571	0f 85 50 ff ff
	ff		 jne	 $L207226
$L178836:

; 1750 : 
; 1751 : 	for( itTINVEN = pPlayer->m_mapTINVEN.begin(); itTINVEN != pPlayer->m_mapTINVEN.end(); itTINVEN++)

  00577	8b 54 24 4c	 mov	 edx, DWORD PTR _itTINVEN$[esp+64]
  0057b	8a 42 15	 mov	 al, BYTE PTR [edx+21]
  0057e	84 c0		 test	 al, al
  00580	75 45		 jne	 SHORT $L206928
  00582	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00585	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00588	84 c0		 test	 al, al
  0058a	75 18		 jne	 SHORT $L212848
  0058c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0058e	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00591	84 d2		 test	 dl, dl
  00593	75 0b		 jne	 SHORT $L206943
$L206942:
  00595	8b c8		 mov	 ecx, eax
  00597	8b 01		 mov	 eax, DWORD PTR [ecx]
  00599	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0059c	84 d2		 test	 dl, dl
  0059e	74 f5		 je	 SHORT $L206942
$L206943:
  005a0	8b d1		 mov	 edx, ecx
  005a2	eb 1f		 jmp	 SHORT $L212963
$L212848:
  005a4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  005a7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  005aa	84 c9		 test	 cl, cl
  005ac	75 13		 jne	 SHORT $L206931
  005ae	8b ff		 npad	 2
$L206930:
  005b0	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  005b3	75 0c		 jne	 SHORT $L206931
  005b5	8b d0		 mov	 edx, eax
  005b7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  005ba	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  005bd	84 c9		 test	 cl, cl
  005bf	74 ef		 je	 SHORT $L206930
$L206931:
  005c1	8b d0		 mov	 edx, eax
$L212963:
  005c3	89 54 24 4c	 mov	 DWORD PTR _itTINVEN$[esp+64], edx
$L206928:
  005c7	3b 96 0c 01 01
	00		 cmp	 edx, DWORD PTR [esi+65804]
  005cd	0f 85 dc fe ff
	ff		 jne	 $L212958
$L178837:

; 1770 : 		}
; 1771 : 	}
; 1772 : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

  005d3	8b 86 f8 01 01
	00		 mov	 eax, DWORD PTR [esi+66040]
  005d9	8b 28		 mov	 ebp, DWORD PTR [eax]
  005db	3b e8		 cmp	 ebp, eax
  005dd	0f 84 1c 01 00
	00		 je	 $L178853
$L207485:

; 1773 : 	{
; 1774 : 		for(itCABINETITEM=(*itCABINET).second->m_mapCabinetItem.begin(); itCABINETITEM!=(*itCABINET).second->m_mapCabinetItem.end(); itCABINETITEM++)

  005e3	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  005e6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  005e9	8b 39		 mov	 edi, DWORD PTR [ecx]
  005eb	3b f9		 cmp	 edi, ecx
  005ed	0f 84 b8 00 00
	00		 je	 $L178852
$L207707:

; 1775 : 		{
; 1776 : 			CTItem *pTITEM = (*itCABINETITEM).second;

  005f3	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 1777 : 			if(!pTITEM->m_dlID)

  005f6	8b 53 20	 mov	 edx, DWORD PTR [ebx+32]
  005f9	0b 53 24	 or	 edx, DWORD PTR [ebx+36]
  005fc	75 0f		 jne	 SHORT $L178861

; 1778 : 				pTITEM->m_dlID = GenItemID();

  005fe	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+68]
  00602	e8 00 00 00 00	 call	 ?GenItemID@CTMapSvrModule@@QAE_JXZ ; CTMapSvrModule::GenItemID
  00607	89 43 20	 mov	 DWORD PTR [ebx+32], eax
  0060a	89 53 24	 mov	 DWORD PTR [ebx+36], edx
$L178861:

; 1779 : 
; 1780 : 			(*pMSG)
; 1781 : 				<< BYTE(STORAGE_CABINET)
; 1782 : 				<< pTITEM->m_dwStItemID
; 1783 : 				<< BYTE(TOWNER_CHAR)
; 1784 : 				<< pPlayer->m_dwID;

  0060d	8b 86 44 01 01
	00		 mov	 eax, DWORD PTR [esi+65860]
  00613	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  00616	50		 push	 eax
  00617	6a 00		 push	 0
  00619	51		 push	 ecx
  0061a	8b 4c 24 1c	 mov	 ecx, DWORD PTR $T206219[esp+80]
  0061e	6a 01		 push	 1
  00620	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00625	8b c8		 mov	 ecx, eax
  00627	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0062c	8b c8		 mov	 ecx, eax
  0062e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00633	8b c8		 mov	 ecx, eax
  00635	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1785 : 
; 1786 : 			pTITEM->WrapPacket(pMSG);

  0063a	8b 54 24 10	 mov	 edx, DWORD PTR $T206219[esp+68]
  0063e	52		 push	 edx
  0063f	8b cb		 mov	 ecx, ebx
  00641	e8 00 00 00 00	 call	 ?WrapPacket@CTItem@@QAEXPAVCPacket@@@Z ; CTItem::WrapPacket

; 1787 : 			wCount++;

  00646	8b 4c 24 48	 mov	 ecx, DWORD PTR _wCount$[esp+64]
  0064a	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0064d	41		 inc	 ecx
  0064e	84 c0		 test	 al, al
  00650	89 4c 24 48	 mov	 DWORD PTR _wCount$[esp+64], ecx
  00654	75 44		 jne	 SHORT $L207718
  00656	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00659	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0065c	84 c9		 test	 cl, cl
  0065e	75 1d		 jne	 SHORT $L212852
  00660	8b f8		 mov	 edi, eax
  00662	8b 07		 mov	 eax, DWORD PTR [edi]
  00664	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00667	84 c9		 test	 cl, cl
  00669	75 2f		 jne	 SHORT $L207718
  0066b	eb 03 8d 49 00	 npad	 5

; 1773 : 	{
; 1774 : 		for(itCABINETITEM=(*itCABINET).second->m_mapCabinetItem.begin(); itCABINETITEM!=(*itCABINET).second->m_mapCabinetItem.end(); itCABINETITEM++)

$L207732:
  00670	8b f8		 mov	 edi, eax
  00672	8b 07		 mov	 eax, DWORD PTR [edi]
  00674	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00677	84 c9		 test	 cl, cl
  00679	74 f5		 je	 SHORT $L207732
  0067b	eb 1d		 jmp	 SHORT $L207718
$L212852:
  0067d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00680	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00683	84 c9		 test	 cl, cl
  00685	75 11		 jne	 SHORT $L207721
$L207720:
  00687	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0068a	75 0c		 jne	 SHORT $L207721
  0068c	8b f8		 mov	 edi, eax
  0068e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00691	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00694	84 c9		 test	 cl, cl
  00696	74 ef		 je	 SHORT $L207720
$L207721:
  00698	8b f8		 mov	 edi, eax
$L207718:
  0069a	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  0069d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  006a0	83 c0 04	 add	 eax, 4
  006a3	3b f9		 cmp	 edi, ecx
  006a5	0f 85 48 ff ff
	ff		 jne	 $L207707
$L178852:

; 1770 : 		}
; 1771 : 	}
; 1772 : 	for(itCABINET=pPlayer->m_mapCabinet.begin(); itCABINET!=pPlayer->m_mapCabinet.end(); itCABINET++)

  006ab	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  006ae	84 c0		 test	 al, al
  006b0	75 41		 jne	 SHORT $L207480
  006b2	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  006b5	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  006b8	84 c0		 test	 al, al
  006ba	75 18		 jne	 SHORT $L212854
  006bc	8b 01		 mov	 eax, DWORD PTR [ecx]
  006be	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  006c1	84 d2		 test	 dl, dl
  006c3	75 0b		 jne	 SHORT $L207469
$L207468:
  006c5	8b c8		 mov	 ecx, eax
  006c7	8b 01		 mov	 eax, DWORD PTR [ecx]
  006c9	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  006cc	84 d2		 test	 dl, dl
  006ce	74 f5		 je	 SHORT $L207468
$L207469:
  006d0	8b e9		 mov	 ebp, ecx
  006d2	eb 1f		 jmp	 SHORT $L207480
$L212854:
  006d4	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  006d7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  006da	84 c9		 test	 cl, cl
  006dc	75 13		 jne	 SHORT $L207483
  006de	8b ff		 npad	 2
$L207482:
  006e0	3b 68 08	 cmp	 ebp, DWORD PTR [eax+8]
  006e3	75 0c		 jne	 SHORT $L207483
  006e5	8b e8		 mov	 ebp, eax
  006e7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  006ea	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  006ed	84 c9		 test	 cl, cl
  006ef	74 ef		 je	 SHORT $L207482
$L207483:
  006f1	8b e8		 mov	 ebp, eax
$L207480:
  006f3	3b ae f8 01 01
	00		 cmp	 ebp, DWORD PTR [esi+66040]
  006f9	0f 85 e4 fe ff
	ff		 jne	 $L207485
$L178853:

; 1788 : 		}
; 1789 : 	}
; 1790 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  006ff	8b 7c 24 10	 mov	 edi, DWORD PTR $T206219[esp+68]
  00703	8b cf		 mov	 ecx, edi
  00705	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  0070a	0f b7 4c 24 14	 movzx	 ecx, WORD PTR _wSize$[esp+68]
  0070f	66 8b 54 24 48	 mov	 dx, WORD PTR _wCount$[esp+64]
  00714	66 89 14 08	 mov	 WORD PTR [eax+ecx], dx

; 1791 : 
; 1792 : 	(*pMSG)
; 1793 : 		<< (WORD)pPlayer->m_mapTSKILL.size();

  00718	8b 86 1c 01 01
	00		 mov	 eax, DWORD PTR [esi+65820]
  0071e	50		 push	 eax
  0071f	8b cf		 mov	 ecx, edi
  00721	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1794 : 	for(itTSKILL = pPlayer->m_mapTSKILL.begin(); itTSKILL != pPlayer->m_mapTSKILL.end(); itTSKILL++)

  00726	8b 86 18 01 01
	00		 mov	 eax, DWORD PTR [esi+65816]
  0072c	8b 38		 mov	 edi, DWORD PTR [eax]
  0072e	3b f8		 cmp	 edi, eax
  00730	0f 84 90 00 00
	00		 je	 $L178868
  00736	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  0073a	8d 9b 00 00 00
	00		 npad	 6
$L208023:

; 1795 : 	{
; 1796 : 		CTSkill * pSkill = (*itTSKILL).second;

  00740	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 1797 : 		(*pMSG)
; 1798 : 			<< pSkill->m_bLevel
; 1799 : 			<< pSkill->m_pTSKILL->m_wID
; 1800 : 			<< pSkill->GetReuseRemainTick(dwTick);

  00743	8b 44 24 18	 mov	 eax, DWORD PTR _dwTick$[esp+68]
  00747	50		 push	 eax
  00748	8b cb		 mov	 ecx, ebx
  0074a	e8 00 00 00 00	 call	 ?GetReuseRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetReuseRemainTick
  0074f	8b 4b 54	 mov	 ecx, DWORD PTR [ebx+84]
  00752	50		 push	 eax
  00753	33 d2		 xor	 edx, edx
  00755	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00758	33 c0		 xor	 eax, eax
  0075a	8a 43 50	 mov	 al, BYTE PTR [ebx+80]
  0075d	8b cd		 mov	 ecx, ebp
  0075f	52		 push	 edx
  00760	50		 push	 eax
  00761	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00766	8b c8		 mov	 ecx, eax
  00768	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0076d	8b c8		 mov	 ecx, eax
  0076f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00774	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00777	84 c0		 test	 al, al
  00779	75 3f		 jne	 SHORT $L207996
  0077b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0077e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00781	84 c9		 test	 cl, cl
  00783	75 18		 jne	 SHORT $L212857
  00785	8b f8		 mov	 edi, eax
  00787	8b 07		 mov	 eax, DWORD PTR [edi]
  00789	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0078c	84 c9		 test	 cl, cl
  0078e	75 2a		 jne	 SHORT $L207996

; 1794 : 	for(itTSKILL = pPlayer->m_mapTSKILL.begin(); itTSKILL != pPlayer->m_mapTSKILL.end(); itTSKILL++)

$L208010:
  00790	8b f8		 mov	 edi, eax
  00792	8b 07		 mov	 eax, DWORD PTR [edi]
  00794	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00797	84 c9		 test	 cl, cl
  00799	74 f5		 je	 SHORT $L208010
  0079b	eb 1d		 jmp	 SHORT $L207996
$L212857:
  0079d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  007a0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  007a3	84 c9		 test	 cl, cl
  007a5	75 11		 jne	 SHORT $L207999
$L207998:
  007a7	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  007aa	75 0c		 jne	 SHORT $L207999
  007ac	8b f8		 mov	 edi, eax
  007ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  007b1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  007b4	84 c9		 test	 cl, cl
  007b6	74 ef		 je	 SHORT $L207998
$L207999:
  007b8	8b f8		 mov	 edi, eax
$L207996:
  007ba	3b be 18 01 01
	00		 cmp	 edi, DWORD PTR [esi+65816]
  007c0	0f 85 7a ff ff
	ff		 jne	 $L208023
$L178868:

; 1801 : 	}
; 1802 : 
; 1803 : 	VPLAYER vPlayer;
; 1804 : 	vPlayer.clear();
; 1805 : 
; 1806 : 	wSize = pMSG->GetSize();

  007c6	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  007ca	33 db		 xor	 ebx, ebx
  007cc	8b cd		 mov	 ecx, ebp
  007ce	c7 44 24 40 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+76], 1
  007d6	89 5c 24 2c	 mov	 DWORD PTR _vPlayer$[esp+72], ebx
  007da	89 5c 24 30	 mov	 DWORD PTR _vPlayer$[esp+76], ebx
  007de	89 5c 24 34	 mov	 DWORD PTR _vPlayer$[esp+80], ebx
  007e2	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1807 : 	wCount = 0;
; 1808 : 	(*pMSG)
; 1809 : 		<< wCount;

  007e7	53		 push	 ebx
  007e8	8b cd		 mov	 ecx, ebp
  007ea	89 5c 24 4c	 mov	 DWORD PTR _wCount$[esp+68], ebx
  007ee	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  007f2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1810 : 
; 1811 : 	for(int is = 0; is<(BYTE)pPlayer->m_vMaintainSkill.size(); is++)

  007f7	8b 54 24 2c	 mov	 edx, DWORD PTR _vPlayer$[esp+72]
  007fb	89 5c 24 4c	 mov	 DWORD PTR _is$178871[esp+64], ebx
  007ff	90		 npad	 1
$L178873:
  00800	8b 8e 24 01 01
	00		 mov	 ecx, DWORD PTR [esi+65828]
  00806	3b cb		 cmp	 ecx, ebx
  00808	75 04		 jne	 SHORT $L208172
  0080a	33 c0		 xor	 eax, eax
  0080c	eb 0b		 jmp	 SHORT $L208173
$L208172:
  0080e	8b 86 28 01 01
	00		 mov	 eax, DWORD PTR [esi+65832]
  00814	2b c1		 sub	 eax, ecx
  00816	c1 f8 02	 sar	 eax, 2
$L208173:
  00819	0f b6 c8	 movzx	 ecx, al
  0081c	8b 44 24 4c	 mov	 eax, DWORD PTR _is$178871[esp+64]
  00820	3b c1		 cmp	 eax, ecx
  00822	0f 8d 62 01 00
	00		 jge	 $L178875

; 1812 : 	{
; 1813 : 		DWORD dwRemain = pPlayer->m_vMaintainSkill[is]->GetRemainTick(dwTick);

  00828	8b 54 24 18	 mov	 edx, DWORD PTR _dwTick$[esp+68]
  0082c	8b e8		 mov	 ebp, eax
  0082e	8b 86 24 01 01
	00		 mov	 eax, DWORD PTR [esi+65828]
  00834	c1 e5 02	 shl	 ebp, 2
  00837	8b 0c 28	 mov	 ecx, DWORD PTR [eax+ebp]
  0083a	03 c5		 add	 eax, ebp
  0083c	52		 push	 edx
  0083d	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick
  00842	8b 8e 24 01 01
	00		 mov	 ecx, DWORD PTR [esi+65828]

; 1814 : 		if( !pPlayer->m_vMaintainSkill[is]->m_dwStartTick || 
; 1815 : 			dwRemain)

  00848	8b 14 29	 mov	 edx, DWORD PTR [ecx+ebp]
  0084b	8d 3c 29	 lea	 edi, DWORD PTR [ecx+ebp]
  0084e	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00851	85 c9		 test	 ecx, ecx
  00853	0f 84 b0 00 00
	00		 je	 $L178878
  00859	85 c0		 test	 eax, eax
  0085b	0f 85 a8 00 00
	00		 jne	 $L178878

; 1828 : 		}
; 1829 : 		else if(pPlayer->m_pMAP)

  00861	8b 8e 40 01 01
	00		 mov	 ecx, DWORD PTR [esi+65856]
  00867	85 c9		 test	 ecx, ecx
  00869	0f 84 7d 00 00
	00		 je	 $L178880

; 1830 : 		{
; 1831 : 			if(vPlayer.empty())

  0086f	8b 54 24 2c	 mov	 edx, DWORD PTR _vPlayer$[esp+72]
  00873	85 d2		 test	 edx, edx
  00875	74 0f		 je	 SHORT $L212945
  00877	8b 44 24 30	 mov	 eax, DWORD PTR _vPlayer$[esp+76]
  0087b	8b f8		 mov	 edi, eax
  0087d	2b fa		 sub	 edi, edx
  0087f	c1 ff 02	 sar	 edi, 2
  00882	85 ff		 test	 edi, edi
  00884	75 20		 jne	 SHORT $L178881
$L212945:

; 1832 : 				pPlayer->m_pMAP->GetNeighbor(&vPlayer, pPlayer->m_fPosX, pPlayer->m_fPosZ);

  00886	8b 86 84 01 01
	00		 mov	 eax, DWORD PTR [esi+65924]
  0088c	8b 96 7c 01 01
	00		 mov	 edx, DWORD PTR [esi+65916]
  00892	50		 push	 eax
  00893	52		 push	 edx
  00894	8d 44 24 30	 lea	 eax, DWORD PTR _vPlayer$[esp+76]
  00898	50		 push	 eax
  00899	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
  0089e	8b 44 24 30	 mov	 eax, DWORD PTR _vPlayer$[esp+76]
  008a2	8b 54 24 2c	 mov	 edx, DWORD PTR _vPlayer$[esp+72]
$L178881:

; 1833 : 
; 1834 : 			for(DWORD i=0; i<vPlayer.size(); i++)

  008a6	33 ff		 xor	 edi, edi
$L178883:
  008a8	85 d2		 test	 edx, edx
  008aa	0f 84 c6 00 00
	00		 je	 $L178874
  008b0	2b c2		 sub	 eax, edx
  008b2	c1 f8 02	 sar	 eax, 2
  008b5	3b f8		 cmp	 edi, eax
  008b7	0f 83 b9 00 00
	00		 jae	 $L178874

; 1835 : 				vPlayer[i]->SendCS_SKILLEND_ACK(pPlayer->m_dwID, OT_PC, pPlayer->m_vMaintainSkill[is]->GetID());

  008bd	8b 86 24 01 01
	00		 mov	 eax, DWORD PTR [esi+65828]
  008c3	8b 0c 28	 mov	 ecx, DWORD PTR [eax+ebp]
  008c6	03 c5		 add	 eax, ebp
  008c8	8d 1c ba	 lea	 ebx, DWORD PTR [edx+edi*4]
  008cb	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  008d0	8b 8e 44 01 01
	00		 mov	 ecx, DWORD PTR [esi+65860]
  008d6	50		 push	 eax
  008d7	6a 01		 push	 1
  008d9	51		 push	 ecx
  008da	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  008dc	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  008e1	8b 44 24 30	 mov	 eax, DWORD PTR _vPlayer$[esp+76]
  008e5	8b 54 24 2c	 mov	 edx, DWORD PTR _vPlayer$[esp+72]
  008e9	47		 inc	 edi
  008ea	eb bc		 jmp	 SHORT $L178883
$L178880:

; 1836 : 		}
; 1837 : 		else
; 1838 : 			pPlayer->SendCS_SKILLEND_ACK(pPlayer->m_dwID, OT_PC, pPlayer->m_vMaintainSkill[is]->GetID());

  008ec	8b 0f		 mov	 ecx, DWORD PTR [edi]
  008ee	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  008f3	8b 96 44 01 01
	00		 mov	 edx, DWORD PTR [esi+65860]
  008f9	8b ce		 mov	 ecx, esi
  008fb	50		 push	 eax
  008fc	6a 01		 push	 1
  008fe	52		 push	 edx
  008ff	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  00904	e9 69 00 00 00	 jmp	 $L212964
$L178878:

; 1816 : 		{
; 1817 : 			(*pMSG)
; 1818 : 				<< pPlayer->m_vMaintainSkill[is]->m_bLevel
; 1819 : 				<< pPlayer->m_vMaintainSkill[is]->GetID()
; 1820 : 				<< dwRemain
; 1821 : 				<< pPlayer->m_vMaintainSkill[is]->m_bAttackType
; 1822 : 				<< pPlayer->m_vMaintainSkill[is]->m_dwAttackID
; 1823 : 				<< pPlayer->m_vMaintainSkill[is]->m_bHostType
; 1824 : 				<< pPlayer->m_vMaintainSkill[is]->m_dwHostID
; 1825 : 				<< pPlayer->m_vMaintainSkill[is]->m_bAttackCountry;

  00909	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0090b	33 d2		 xor	 edx, edx
  0090d	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  00910	52		 push	 edx
  00911	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00914	52		 push	 edx
  00915	33 d2		 xor	 edx, edx
  00917	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  0091a	52		 push	 edx
  0091b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0091e	52		 push	 edx
  0091f	33 d2		 xor	 edx, edx
  00921	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00924	52		 push	 edx
  00925	50		 push	 eax
  00926	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  0092b	33 c9		 xor	 ecx, ecx
  0092d	50		 push	 eax
  0092e	8b 07		 mov	 eax, DWORD PTR [edi]
  00930	8a 48 50	 mov	 cl, BYTE PTR [eax+80]
  00933	51		 push	 ecx
  00934	8b 4c 24 30	 mov	 ecx, DWORD PTR $T206219[esp+100]
  00938	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0093d	8b c8		 mov	 ecx, eax
  0093f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00944	8b c8		 mov	 ecx, eax
  00946	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0094b	8b c8		 mov	 ecx, eax
  0094d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00952	8b c8		 mov	 ecx, eax
  00954	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00959	8b c8		 mov	 ecx, eax
  0095b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00960	8b c8		 mov	 ecx, eax
  00962	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00967	8b c8		 mov	 ecx, eax
  00969	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1826 : 
; 1827 : 			wCount++;

  0096e	ff 44 24 48	 inc	 DWORD PTR _wCount$[esp+64]
$L212964:
  00972	8b 54 24 2c	 mov	 edx, DWORD PTR _vPlayer$[esp+72]
$L178874:

; 1810 : 
; 1811 : 	for(int is = 0; is<(BYTE)pPlayer->m_vMaintainSkill.size(); is++)

  00976	8b 44 24 4c	 mov	 eax, DWORD PTR _is$178871[esp+64]
  0097a	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  0097e	40		 inc	 eax
  0097f	89 44 24 4c	 mov	 DWORD PTR _is$178871[esp+64], eax
  00983	33 db		 xor	 ebx, ebx
  00985	e9 76 fe ff ff	 jmp	 $L178873
$L178875:

; 1839 : 	}
; 1840 : 	vPlayer.clear();

  0098a	3b d3		 cmp	 edx, ebx
  0098c	74 09		 je	 SHORT $L208876
  0098e	52		 push	 edx
  0098f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00994	83 c4 04	 add	 esp, 4
$L208876:

; 1841 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  00997	8b cd		 mov	 ecx, ebp
  00999	89 5c 24 2c	 mov	 DWORD PTR _vPlayer$[esp+72], ebx
  0099d	89 5c 24 30	 mov	 DWORD PTR _vPlayer$[esp+76], ebx
  009a1	89 5c 24 34	 mov	 DWORD PTR _vPlayer$[esp+80], ebx
  009a5	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  009aa	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]
  009af	66 8b 4c 24 48	 mov	 cx, WORD PTR _wCount$[esp+64]
  009b4	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 1842 : 
; 1843 : 	(*pMSG)
; 1844 : 		<< WORD(pPlayer->m_mapQUEST.size());

  009b8	33 d2		 xor	 edx, edx
  009ba	66 8b 96 90 02
	01 00		 mov	 dx, WORD PTR [esi+66192]
  009c1	8b cd		 mov	 ecx, ebp
  009c3	52		 push	 edx
  009c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1845 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  009c9	8b 86 8c 02 01
	00		 mov	 eax, DWORD PTR [esi+66188]
  009cf	8b 38		 mov	 edi, DWORD PTR [eax]
  009d1	3b f8		 cmp	 edi, eax
  009d3	0f 84 bd 00 00
	00		 je	 $L178892
  009d9	8d a4 24 00 00
	00 00		 npad	 7
$L209100:

; 1846 : 	{
; 1847 : 		DWORD dwTick = 0;
; 1848 : 
; 1849 : 		if( (*itQUEST).second->m_bTriggerCount > (*itQUEST).second->m_bCompleteCount )

  009e0	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  009e3	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  009e6	33 c9		 xor	 ecx, ecx
  009e8	3a 50 20	 cmp	 dl, BYTE PTR [eax+32]
  009eb	76 14		 jbe	 SHORT $L178897

; 1850 : 		{
; 1851 : 			DWORD dwPassTick = dwTick - (*itQUEST).second->m_dwBeginTick;

  009ed	8b c8		 mov	 ecx, eax
  009ef	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 1852 : 
; 1853 : 			dwTick = (*itQUEST).second->m_dwTick;

  009f2	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  009f5	f7 d8		 neg	 eax

; 1854 : 			if( dwTick > dwPassTick )

  009f7	3b c8		 cmp	 ecx, eax
  009f9	76 04		 jbe	 SHORT $L178896

; 1855 : 				dwTick -= dwPassTick;

  009fb	2b c8		 sub	 ecx, eax

; 1856 : 			else

  009fd	eb 02		 jmp	 SHORT $L178897
$L178896:

; 1857 : 				dwTick = 0;

  009ff	33 c9		 xor	 ecx, ecx
$L178897:

; 1858 : 		}
; 1859 : 
; 1860 : 		(*pMSG)
; 1861 : 			<< (*itQUEST).second->m_pQUEST->m_dwQuestID
; 1862 : 			<< dwTick
; 1863 : 			<< (*itQUEST).second->m_bCompleteCount
; 1864 : 			<< (*itQUEST).second->m_bTriggerCount
; 1865 : 			<< (*itQUEST).second->m_bSave;

  00a01	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00a04	33 d2		 xor	 edx, edx
  00a06	8a 50 28	 mov	 dl, BYTE PTR [eax+40]
  00a09	52		 push	 edx
  00a0a	33 d2		 xor	 edx, edx
  00a0c	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  00a0f	52		 push	 edx
  00a10	33 d2		 xor	 edx, edx
  00a12	8a 50 20	 mov	 dl, BYTE PTR [eax+32]
  00a15	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00a18	52		 push	 edx
  00a19	51		 push	 ecx
  00a1a	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00a1d	51		 push	 ecx
  00a1e	8b cd		 mov	 ecx, ebp
  00a20	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00a25	8b c8		 mov	 ecx, eax
  00a27	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00a2c	8b c8		 mov	 ecx, eax
  00a2e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00a33	8b c8		 mov	 ecx, eax
  00a35	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00a3a	8b c8		 mov	 ecx, eax
  00a3c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00a41	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00a44	84 c0		 test	 al, al
  00a46	75 42		 jne	 SHORT $L209095
  00a48	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00a4b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a4e	84 c9		 test	 cl, cl
  00a50	75 1b		 jne	 SHORT $L212862
  00a52	8b f8		 mov	 edi, eax
  00a54	8b 07		 mov	 eax, DWORD PTR [edi]
  00a56	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a59	84 c9		 test	 cl, cl
  00a5b	75 2d		 jne	 SHORT $L209095
  00a5d	8d 49 00	 npad	 3

; 1845 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

$L209083:
  00a60	8b f8		 mov	 edi, eax
  00a62	8b 07		 mov	 eax, DWORD PTR [edi]
  00a64	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a67	84 c9		 test	 cl, cl
  00a69	74 f5		 je	 SHORT $L209083
  00a6b	eb 1d		 jmp	 SHORT $L209095
$L212862:
  00a6d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00a70	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a73	84 c9		 test	 cl, cl
  00a75	75 11		 jne	 SHORT $L209098
$L209097:
  00a77	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00a7a	75 0c		 jne	 SHORT $L209098
  00a7c	8b f8		 mov	 edi, eax
  00a7e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00a81	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a84	84 c9		 test	 cl, cl
  00a86	74 ef		 je	 SHORT $L209097
$L209098:
  00a88	8b f8		 mov	 edi, eax
$L209095:
  00a8a	3b be 8c 02 01
	00		 cmp	 edi, DWORD PTR [esi+66188]
  00a90	0f 85 4a ff ff
	ff		 jne	 $L209100
$L178892:

; 1866 : 	}
; 1867 : 
; 1868 : 	wSize = pMSG->GetSize();

  00a96	8b cd		 mov	 ecx, ebp
  00a98	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1869 : 	wCount = 0;
; 1870 : 	(*pMSG)
; 1871 : 		<< wCount;

  00a9d	53		 push	 ebx
  00a9e	8b cd		 mov	 ecx, ebp
  00aa0	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  00aa4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1872 : 
; 1873 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  00aa9	8b 86 8c 02 01
	00		 mov	 eax, DWORD PTR [esi+66188]
  00aaf	8b 38		 mov	 edi, DWORD PTR [eax]
  00ab1	3b f8		 cmp	 edi, eax
  00ab3	0f 84 bd 00 00
	00		 je	 $L178903
  00ab9	8d a4 24 00 00
	00 00		 npad	 7
$L209464:

; 1874 : 	{
; 1875 : 		for( int i=0; i<INT((*itQUEST).second->m_vTERM.size()); i++)

  00ac0	33 ed		 xor	 ebp, ebp
$L178905:
  00ac2	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00ac5	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00ac8	85 d2		 test	 edx, edx
  00aca	75 04		 jne	 SHORT $L209509
  00acc	33 c0		 xor	 eax, eax
  00ace	eb 08		 jmp	 SHORT $L209510
$L209509:
  00ad0	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00ad3	2b c2		 sub	 eax, edx
  00ad5	c1 f8 02	 sar	 eax, 2
$L209510:
  00ad8	3b e8		 cmp	 ebp, eax
  00ada	7d 42		 jge	 SHORT $L178902
  00adc	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00adf	8d 04 aa	 lea	 eax, DWORD PTR [edx+ebp*4]

; 1876 : 		{			
; 1877 : 			(*pMSG)
; 1878 : 				<< (*itQUEST).second->m_pQUEST->m_dwQuestID
; 1879 : 				<< (*itQUEST).second->m_vTERM[i]->m_dwTermID
; 1880 : 				<< (*itQUEST).second->m_vTERM[i]->m_bTermType
; 1881 : 				<< (*itQUEST).second->m_vTERM[i]->m_bCount;

  00ae2	8b 10		 mov	 edx, DWORD PTR [eax]
  00ae4	0f b6 52 05	 movzx	 edx, BYTE PTR [edx+5]
  00ae8	52		 push	 edx
  00ae9	8b 10		 mov	 edx, DWORD PTR [eax]
  00aeb	0f b6 52 04	 movzx	 edx, BYTE PTR [edx+4]
  00aef	8b 00		 mov	 eax, DWORD PTR [eax]
  00af1	52		 push	 edx
  00af2	8b 10		 mov	 edx, DWORD PTR [eax]
  00af4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00af7	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00afa	52		 push	 edx
  00afb	51		 push	 ecx
  00afc	8b 4c 24 20	 mov	 ecx, DWORD PTR $T206219[esp+84]
  00b00	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00b05	8b c8		 mov	 ecx, eax
  00b07	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00b0c	8b c8		 mov	 ecx, eax
  00b0e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00b13	8b c8		 mov	 ecx, eax
  00b15	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1882 : 
; 1883 : 			wCount++;

  00b1a	43		 inc	 ebx
  00b1b	45		 inc	 ebp
  00b1c	eb a4		 jmp	 SHORT $L178905
$L178902:

; 1872 : 
; 1873 : 	for( itQUEST = pPlayer->m_mapQUEST.begin(); itQUEST != pPlayer->m_mapQUEST.end(); itQUEST++)

  00b1e	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00b21	84 c0		 test	 al, al
  00b23	75 45		 jne	 SHORT $L209459
  00b25	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00b28	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b2b	84 c9		 test	 cl, cl
  00b2d	75 1e		 jne	 SHORT $L212866
  00b2f	8b f8		 mov	 edi, eax
  00b31	8b 07		 mov	 eax, DWORD PTR [edi]
  00b33	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b36	84 c9		 test	 cl, cl
  00b38	75 30		 jne	 SHORT $L209459
  00b3a	8d 9b 00 00 00
	00		 npad	 6
$L209447:
  00b40	8b f8		 mov	 edi, eax
  00b42	8b 07		 mov	 eax, DWORD PTR [edi]
  00b44	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b47	84 c9		 test	 cl, cl
  00b49	74 f5		 je	 SHORT $L209447
  00b4b	eb 1d		 jmp	 SHORT $L209459
$L212866:
  00b4d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00b50	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b53	84 c9		 test	 cl, cl
  00b55	75 11		 jne	 SHORT $L209462
$L209461:
  00b57	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00b5a	75 0c		 jne	 SHORT $L209462
  00b5c	8b f8		 mov	 edi, eax
  00b5e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00b61	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b64	84 c9		 test	 cl, cl
  00b66	74 ef		 je	 SHORT $L209461
$L209462:
  00b68	8b f8		 mov	 edi, eax
$L209459:
  00b6a	3b be 8c 02 01
	00		 cmp	 edi, DWORD PTR [esi+66188]
  00b70	0f 85 4a ff ff
	ff		 jne	 $L209464
$L178903:

; 1884 : 		}
; 1885 : 	}
; 1886 : 	memcpy(pMSG->GetBuffer() + wSize,&wCount,sizeof(wCount) );	

  00b76	8b 7c 24 10	 mov	 edi, DWORD PTR $T206219[esp+68]
  00b7a	8b cf		 mov	 ecx, edi
  00b7c	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00b81	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]
  00b86	66 89 1c 10	 mov	 WORD PTR [eax+edx], bx

; 1887 : 
; 1888 : 	(*pMSG)
; 1889 : 		<< WORD(pPlayer->m_mapHotkeyInven.size());

  00b8a	33 c0		 xor	 eax, eax
  00b8c	66 8b 86 f0 01
	01 00		 mov	 ax, WORD PTR [esi+66032]
  00b93	8b cf		 mov	 ecx, edi
  00b95	50		 push	 eax
  00b96	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1890 : 
; 1891 : 	for(itHOTKEY=pPlayer->m_mapHotkeyInven.begin(); itHOTKEY!=pPlayer->m_mapHotkeyInven.end(); itHOTKEY++)

  00b9b	8b 86 ec 01 01
	00		 mov	 eax, DWORD PTR [esi+66028]
  00ba1	8b 38		 mov	 edi, DWORD PTR [eax]
  00ba3	3b f8		 cmp	 edi, eax
  00ba5	0f 84 a4 00 00
	00		 je	 $L178913
  00bab	eb 03 8d 49 00	 npad	 5
$L209930:

; 1892 : 	{
; 1893 : 		LPTHOTKEYINVEN pHotkey = (*itHOTKEY).second;

  00bb0	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 1894 : 	
; 1895 : 		(*pMSG)
; 1896 : 			<< BYTE((*itHOTKEY).first)
; 1897 : 			<< pHotkey->m_bSave;

  00bb3	33 c9		 xor	 ecx, ecx
  00bb5	8a 0b		 mov	 cl, BYTE PTR [ebx]
  00bb7	33 d2		 xor	 edx, edx
  00bb9	8a 57 0c	 mov	 dl, BYTE PTR [edi+12]
  00bbc	51		 push	 ecx
  00bbd	8b 4c 24 14	 mov	 ecx, DWORD PTR $T206219[esp+72]
  00bc1	52		 push	 edx
  00bc2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00bc7	8b c8		 mov	 ecx, eax
  00bc9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00bce	83 c3 03	 add	 ebx, 3
  00bd1	bd 0c 00 00 00	 mov	 ebp, 12			; 0000000cH
$L178917:

; 1898 : 
; 1899 : 		for(BYTE hk=0; hk<MAX_HOTKEY_POS; hk++)
; 1900 : 		{
; 1901 : 			(*pMSG)
; 1902 : 				<< pHotkey->m_hotkey[hk].m_bType
; 1903 : 				<< pHotkey->m_hotkey[hk].m_wID;

  00bd6	33 c0		 xor	 eax, eax
  00bd8	66 8b 43 01	 mov	 ax, WORD PTR [ebx+1]
  00bdc	33 c9		 xor	 ecx, ecx
  00bde	8a 0b		 mov	 cl, BYTE PTR [ebx]
  00be0	50		 push	 eax
  00be1	51		 push	 ecx
  00be2	8b 4c 24 18	 mov	 ecx, DWORD PTR $T206219[esp+76]
  00be6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00beb	8b c8		 mov	 ecx, eax
  00bed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00bf2	83 c3 04	 add	 ebx, 4
  00bf5	4d		 dec	 ebp
  00bf6	75 de		 jne	 SHORT $L178917
  00bf8	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00bfb	84 c0		 test	 al, al
  00bfd	75 44		 jne	 SHORT $L209940
  00bff	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00c02	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c05	84 c9		 test	 cl, cl
  00c07	75 18		 jne	 SHORT $L212870
  00c09	8b f8		 mov	 edi, eax
  00c0b	8b 07		 mov	 eax, DWORD PTR [edi]
  00c0d	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c10	84 c9		 test	 cl, cl
  00c12	75 2f		 jne	 SHORT $L209940

; 1890 : 
; 1891 : 	for(itHOTKEY=pPlayer->m_mapHotkeyInven.begin(); itHOTKEY!=pPlayer->m_mapHotkeyInven.end(); itHOTKEY++)

$L209954:
  00c14	8b f8		 mov	 edi, eax
  00c16	8b 07		 mov	 eax, DWORD PTR [edi]
  00c18	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c1b	84 c9		 test	 cl, cl
  00c1d	74 f5		 je	 SHORT $L209954
  00c1f	eb 22		 jmp	 SHORT $L209940
$L212870:
  00c21	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00c24	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c27	84 c9		 test	 cl, cl
  00c29	75 16		 jne	 SHORT $L209943
  00c2b	eb 03 8d 49 00	 npad	 5
$L209942:
  00c30	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00c33	75 0c		 jne	 SHORT $L209943
  00c35	8b f8		 mov	 edi, eax
  00c37	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00c3a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c3d	84 c9		 test	 cl, cl
  00c3f	74 ef		 je	 SHORT $L209942
$L209943:
  00c41	8b f8		 mov	 edi, eax
$L209940:
  00c43	3b be ec 01 01
	00		 cmp	 edi, DWORD PTR [esi+66028]
  00c49	0f 85 61 ff ff
	ff		 jne	 $L209930
$L178913:

; 1904 : 		}
; 1905 : 	}
; 1906 : 
; 1907 : 	wSize = pMSG->GetSize();

  00c4f	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  00c53	8b cd		 mov	 ecx, ebp
  00c55	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1908 : 	wCount = 0;
; 1909 : 	(*pMSG)
; 1910 : 		<< wCount;

  00c5a	6a 00		 push	 0
  00c5c	8b cd		 mov	 ecx, ebp
  00c5e	c7 44 24 4c 00
	00 00 00	 mov	 DWORD PTR _wCount$[esp+68], 0
  00c66	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  00c6a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1911 : 
; 1912 : 	MAPDWORD::iterator itIU;
; 1913 : 	WORD wDelayGroupID;
; 1914 : 	DWORD dwEndTick;
; 1915 : 	for(itIU=pPlayer->m_mapItemCoolTime.begin(); itIU!=pPlayer->m_mapItemCoolTime.end(); itIU++)

  00c6f	8b 86 74 02 01
	00		 mov	 eax, DWORD PTR [esi+66164]
  00c75	8b 38		 mov	 edi, DWORD PTR [eax]
  00c77	3b f8		 cmp	 edi, eax
  00c79	0f 84 7c 00 00
	00		 je	 $L212950
  00c7f	8b 5c 24 18	 mov	 ebx, DWORD PTR _dwTick$[esp+68]
$L210245:

; 1916 : 	{
; 1917 : 		wDelayGroupID = WORD((*itIU).first);
; 1918 : 		dwEndTick = (*itIU).second;

  00c83	8b 47 10	 mov	 eax, DWORD PTR [edi+16]

; 1919 : 		if(dwEndTick > dwTick)
; 1920 : 		{
; 1921 : 			(*pMSG)
; 1922 : 				<< wDelayGroupID
; 1923 : 				<< dwEndTick - dwTick;

  00c86	33 c9		 xor	 ecx, ecx
  00c88	3b c3		 cmp	 eax, ebx
  00c8a	66 8b 4f 0c	 mov	 cx, WORD PTR [edi+12]
  00c8e	76 16		 jbe	 SHORT $L178927
  00c90	2b c3		 sub	 eax, ebx
  00c92	50		 push	 eax
  00c93	51		 push	 ecx
  00c94	8b cd		 mov	 ecx, ebp
  00c96	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00c9b	8b c8		 mov	 ecx, eax
  00c9d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1924 : 			wCount++;

  00ca2	ff 44 24 48	 inc	 DWORD PTR _wCount$[esp+64]
$L178927:
  00ca6	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00ca9	84 c0		 test	 al, al
  00cab	75 46		 jne	 SHORT $L210240
  00cad	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00cb0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00cb3	84 c9		 test	 cl, cl
  00cb5	75 18		 jne	 SHORT $L212873
  00cb7	8b f8		 mov	 edi, eax
  00cb9	8b 07		 mov	 eax, DWORD PTR [edi]
  00cbb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00cbe	84 c9		 test	 cl, cl
  00cc0	75 31		 jne	 SHORT $L210240

; 1911 : 
; 1912 : 	MAPDWORD::iterator itIU;
; 1913 : 	WORD wDelayGroupID;
; 1914 : 	DWORD dwEndTick;
; 1915 : 	for(itIU=pPlayer->m_mapItemCoolTime.begin(); itIU!=pPlayer->m_mapItemCoolTime.end(); itIU++)

$L210228:
  00cc2	8b f8		 mov	 edi, eax
  00cc4	8b 07		 mov	 eax, DWORD PTR [edi]
  00cc6	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00cc9	84 c9		 test	 cl, cl
  00ccb	74 f5		 je	 SHORT $L210228
  00ccd	eb 24		 jmp	 SHORT $L210240
$L212873:
  00ccf	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00cd2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00cd5	84 c9		 test	 cl, cl
  00cd7	75 18		 jne	 SHORT $L210243
  00cd9	8d a4 24 00 00
	00 00		 npad	 7
$L210242:
  00ce0	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00ce3	75 0c		 jne	 SHORT $L210243
  00ce5	8b f8		 mov	 edi, eax
  00ce7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00cea	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ced	84 c9		 test	 cl, cl
  00cef	74 ef		 je	 SHORT $L210242
$L210243:
  00cf1	8b f8		 mov	 edi, eax
$L210240:
  00cf3	3b be 74 02 01
	00		 cmp	 edi, DWORD PTR [esi+66164]
  00cf9	75 88		 jne	 SHORT $L210245
$L212950:

; 1925 : 		}
; 1926 : 	}
; 1927 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  00cfb	8b cd		 mov	 ecx, ebp
  00cfd	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00d02	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]
  00d07	66 8b 4c 24 48	 mov	 cx, WORD PTR _wCount$[esp+64]
  00d0c	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 1928 : 
; 1929 : 	(*pMSG)
; 1930 : 		<< WORD(pPlayer->m_mapTPET.size());

  00d10	33 d2		 xor	 edx, edx
  00d12	66 8b 96 2c 02
	01 00		 mov	 dx, WORD PTR [esi+66092]
  00d19	8b cd		 mov	 ecx, ebp
  00d1b	52		 push	 edx
  00d1c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1931 : 
; 1932 : 	MAPTPET::iterator itPet;
; 1933 : 	for(itPet=pPlayer->m_mapTPET.begin(); itPet!=pPlayer->m_mapTPET.end(); itPet++)

  00d21	8b 86 28 02 01
	00		 mov	 eax, DWORD PTR [esi+66088]
  00d27	8b 38		 mov	 edi, DWORD PTR [eax]
  00d29	3b f8		 cmp	 edi, eax
  00d2b	0f 84 85 00 00
	00		 je	 $L178936
$L210531:

; 1934 : 	{
; 1935 : 		(*pMSG)
; 1936 : 			<< WORD((*itPet).second->m_pTPET->m_bPetType)
; 1937 : 			<< (*itPet).second->m_strName
; 1938 : 			<< (*itPet).second->m_ldwTime;

  00d31	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00d34	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00d37	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d3a	52		 push	 edx
  00d3b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00d3e	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00d41	52		 push	 edx
  00d42	51		 push	 ecx
  00d43	66 0f b6 48 02	 movzx	 cx, BYTE PTR [eax+2]
  00d48	51		 push	 ecx
  00d49	8b cd		 mov	 ecx, ebp
  00d4b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00d50	8b c8		 mov	 ecx, eax
  00d52	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00d57	8b c8		 mov	 ecx, eax
  00d59	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00d5e	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00d61	84 c0		 test	 al, al
  00d63	75 45		 jne	 SHORT $L210527
  00d65	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00d68	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d6b	84 c9		 test	 cl, cl
  00d6d	75 1e		 jne	 SHORT $L212876
  00d6f	8b f8		 mov	 edi, eax
  00d71	8b 07		 mov	 eax, DWORD PTR [edi]
  00d73	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d76	84 c9		 test	 cl, cl
  00d78	75 30		 jne	 SHORT $L210527
  00d7a	8d 9b 00 00 00
	00		 npad	 6

; 1931 : 
; 1932 : 	MAPTPET::iterator itPet;
; 1933 : 	for(itPet=pPlayer->m_mapTPET.begin(); itPet!=pPlayer->m_mapTPET.end(); itPet++)

$L210514:
  00d80	8b f8		 mov	 edi, eax
  00d82	8b 07		 mov	 eax, DWORD PTR [edi]
  00d84	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d87	84 c9		 test	 cl, cl
  00d89	74 f5		 je	 SHORT $L210514
  00d8b	eb 1d		 jmp	 SHORT $L210527
$L212876:
  00d8d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00d90	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00d93	84 c9		 test	 cl, cl
  00d95	75 11		 jne	 SHORT $L210530
$L210529:
  00d97	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00d9a	75 0c		 jne	 SHORT $L210530
  00d9c	8b f8		 mov	 edi, eax
  00d9e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00da1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00da4	84 c9		 test	 cl, cl
  00da6	74 ef		 je	 SHORT $L210529
$L210530:
  00da8	8b f8		 mov	 edi, eax
$L210527:
  00daa	3b be 28 02 01
	00		 cmp	 edi, DWORD PTR [esi+66088]
  00db0	0f 85 7b ff ff
	ff		 jne	 $L210531
$L178936:

; 1939 : 	}
; 1940 : 
; 1941 : 	wSize = pMSG->GetSize();

  00db6	8b cd		 mov	 ecx, ebp
  00db8	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1942 : 	wCount = 0;

  00dbd	33 ff		 xor	 edi, edi

; 1943 : 	(*pMSG) << wCount;

  00dbf	57		 push	 edi
  00dc0	8b cd		 mov	 ecx, ebp
  00dc2	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  00dc6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1944 : 
; 1945 : 	if(pPlayer->m_diPremium.m_bType)

  00dcb	8a 86 34 02 01
	00		 mov	 al, BYTE PTR [esi+66100]
  00dd1	84 c0		 test	 al, al

; 1946 : 	{
; 1947 : 		if(!((pPlayer->m_diPremium.m_bType == DURINGTYPE_DAY && pPlayer->m_diPremium.m_tEndTime <= m_timeCurrent) ||
; 1948 : 			(pPlayer->m_diPremium.m_bType == DURINGTYPE_TIME && pPlayer->m_diPremium.m_dwRemainTime == 0)))

  00dd3	8b 5c 24 1c	 mov	 ebx, DWORD PTR _this$[esp+68]
  00dd7	74 73		 je	 SHORT $L212954
  00dd9	3c 02		 cmp	 al, 2
  00ddb	75 1e		 jne	 SHORT $L212948
  00ddd	8b 96 44 02 01
	00		 mov	 edx, DWORD PTR [esi+66116]
  00de3	3b 93 54 a9 02
	00		 cmp	 edx, DWORD PTR [ebx+174420]
  00de9	7c 61		 jl	 SHORT $L212954
  00deb	7f 0e		 jg	 SHORT $L212948
  00ded	8b 8e 40 02 01
	00		 mov	 ecx, DWORD PTR [esi+66112]
  00df3	3b 8b 50 a9 02
	00		 cmp	 ecx, DWORD PTR [ebx+174416]
  00df9	76 51		 jbe	 SHORT $L212954
$L212948:
  00dfb	3c 01		 cmp	 al, 1
  00dfd	75 0a		 jne	 SHORT $L178940
  00dff	8b 8e 38 02 01
	00		 mov	 ecx, DWORD PTR [esi+66104]
  00e05	85 c9		 test	 ecx, ecx
  00e07	74 43		 je	 SHORT $L212954
$L178940:

; 1949 : 		{
; 1950 : 			(*pMSG)
; 1951 : 				<< pPlayer->m_diPremium.m_pTITEM->m_wItemID
; 1952 : 				<< pPlayer->m_diPremium.m_bType
; 1953 : 				<< pPlayer->m_diPremium.m_dwRemainTime
; 1954 : 				<< pPlayer->m_diPremium.m_tEndTime;

  00e09	8b 96 44 02 01
	00		 mov	 edx, DWORD PTR [esi+66116]
  00e0f	8b 8e 40 02 01
	00		 mov	 ecx, DWORD PTR [esi+66112]
  00e15	52		 push	 edx
  00e16	8b 96 38 02 01
	00		 mov	 edx, DWORD PTR [esi+66104]
  00e1c	51		 push	 ecx
  00e1d	52		 push	 edx
  00e1e	50		 push	 eax
  00e1f	8b 86 30 02 01
	00		 mov	 eax, DWORD PTR [esi+66096]
  00e25	33 c9		 xor	 ecx, ecx
  00e27	66 8b 08	 mov	 cx, WORD PTR [eax]
  00e2a	51		 push	 ecx
  00e2b	8b cd		 mov	 ecx, ebp
  00e2d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00e32	8b c8		 mov	 ecx, eax
  00e34	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00e39	8b c8		 mov	 ecx, eax
  00e3b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00e40	8b c8		 mov	 ecx, eax
  00e42	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 1955 : 
; 1956 : 			wCount++;

  00e47	bf 01 00 00 00	 mov	 edi, 1
$L212954:

; 1957 : 		}
; 1958 : 	}
; 1959 : 	if(pPlayer->m_diExp.m_bType)

  00e4c	8a 86 4c 02 01
	00		 mov	 al, BYTE PTR [esi+66124]
  00e52	84 c0		 test	 al, al
  00e54	74 6f		 je	 SHORT $L178942

; 1960 : 	{
; 1961 : 		if(!((pPlayer->m_diExp.m_bType == DURINGTYPE_DAY && pPlayer->m_diExp.m_tEndTime <= m_timeCurrent) ||
; 1962 : 			(pPlayer->m_diExp.m_bType == DURINGTYPE_TIME && pPlayer->m_diExp.m_dwRemainTime == 0)))

  00e56	3c 02		 cmp	 al, 2
  00e58	75 1e		 jne	 SHORT $L212949
  00e5a	8b 96 5c 02 01
	00		 mov	 edx, DWORD PTR [esi+66140]
  00e60	3b 93 54 a9 02
	00		 cmp	 edx, DWORD PTR [ebx+174420]
  00e66	7c 5d		 jl	 SHORT $L178942
  00e68	7f 0e		 jg	 SHORT $L212949
  00e6a	8b 8e 58 02 01
	00		 mov	 ecx, DWORD PTR [esi+66136]
  00e70	3b 8b 50 a9 02
	00		 cmp	 ecx, DWORD PTR [ebx+174416]
  00e76	76 4d		 jbe	 SHORT $L178942
$L212949:
  00e78	3c 01		 cmp	 al, 1
  00e7a	75 0a		 jne	 SHORT $L178944
  00e7c	8b 8e 50 02 01
	00		 mov	 ecx, DWORD PTR [esi+66128]
  00e82	85 c9		 test	 ecx, ecx
  00e84	74 3f		 je	 SHORT $L178942
$L178944:

; 1963 : 		{
; 1964 : 			(*pMSG)
; 1965 : 				<< pPlayer->m_diExp.m_pTITEM->m_wItemID
; 1966 : 				<< pPlayer->m_diExp.m_bType
; 1967 : 				<< pPlayer->m_diExp.m_dwRemainTime
; 1968 : 				<< pPlayer->m_diExp.m_tEndTime;

  00e86	8b 96 5c 02 01
	00		 mov	 edx, DWORD PTR [esi+66140]
  00e8c	8b 8e 58 02 01
	00		 mov	 ecx, DWORD PTR [esi+66136]
  00e92	52		 push	 edx
  00e93	8b 96 50 02 01
	00		 mov	 edx, DWORD PTR [esi+66128]
  00e99	51		 push	 ecx
  00e9a	52		 push	 edx
  00e9b	50		 push	 eax
  00e9c	8b 86 48 02 01
	00		 mov	 eax, DWORD PTR [esi+66120]
  00ea2	33 c9		 xor	 ecx, ecx
  00ea4	66 8b 08	 mov	 cx, WORD PTR [eax]
  00ea7	51		 push	 ecx
  00ea8	8b cd		 mov	 ecx, ebp
  00eaa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00eaf	8b c8		 mov	 ecx, eax
  00eb1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00eb6	8b c8		 mov	 ecx, eax
  00eb8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00ebd	8b c8		 mov	 ecx, eax
  00ebf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 1969 : 
; 1970 : 			wCount++;

  00ec4	47		 inc	 edi
$L178942:

; 1971 : 		}
; 1972 : 	}
; 1973 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  00ec5	8b cd		 mov	 ecx, ebp
  00ec7	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00ecc	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]

; 1974 : 
; 1975 : 	wSize = pMSG->GetSize();

  00ed1	8b cd		 mov	 ecx, ebp
  00ed3	66 89 3c 10	 mov	 WORD PTR [eax+edx], di
  00ed7	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1976 : 	wCount = 0;
; 1977 : 	(*pMSG) << wCount;

  00edc	6a 00		 push	 0
  00ede	8b cd		 mov	 ecx, ebp
  00ee0	c7 44 24 4c 00
	00 00 00	 mov	 DWORD PTR _wCount$[esp+68], 0
  00ee8	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  00eec	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1978 : 
; 1979 : 	MAPTRECALLMON::iterator itCallMon;
; 1980 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

  00ef1	8b 86 10 02 01
	00		 mov	 eax, DWORD PTR [esi+66064]
  00ef7	8b 18		 mov	 ebx, DWORD PTR [eax]
  00ef9	3b d8		 cmp	 ebx, eax
  00efb	0f 84 2e 01 00
	00		 je	 $L178951
$L210794:

; 1981 : 	{
; 1982 : 		CTRecallMon * pMon = (*itCallMon).second;

  00f01	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]

; 1983 : 		DWORD dwLiveTick = pMon->GetLifeTick(dwTick);

  00f04	8b 44 24 18	 mov	 eax, DWORD PTR _dwTick$[esp+68]
  00f08	50		 push	 eax
  00f09	8b cf		 mov	 ecx, edi
  00f0b	e8 00 00 00 00	 call	 ?GetLifeTick@CTRecallMon@@QAEKK@Z ; CTRecallMon::GetLifeTick

; 1984 : 		if(pMon->m_dwDurationTick && !dwLiveTick)

  00f10	8b 8f 84 01 00
	00		 mov	 ecx, DWORD PTR [edi+388]
  00f16	85 c9		 test	 ecx, ecx
  00f18	74 08		 je	 SHORT $L178954
  00f1a	85 c0		 test	 eax, eax
  00f1c	0f 84 b6 00 00
	00		 je	 $L178950
$L178954:

; 1985 : 			continue;
; 1986 : 
; 1987 : 		(*pMSG)
; 1988 : 			<< pMon->m_dwID
; 1989 : 			<< pMon->m_pMON->m_wID
; 1990 : 			<< pMon->m_wPetID
; 1991 : 			<< pMon->m_pATTR->m_dwAttr
; 1992 : 			<< pMon->m_bLevel
; 1993 : 			<< pMon->m_dwHP
; 1994 : 			<< pMon->m_dwMP
; 1995 : 			<< pMon->m_bAtkSkillLevel
; 1996 : 			<< WORD(pMon->m_fPosX)
; 1997 : 			<< WORD(pMon->m_fPosY)
; 1998 : 			<< WORD(pMon->m_fPosZ)
; 1999 : 			<< dwLiveTick;

  00f22	d9 87 84 00 00
	00		 fld	 DWORD PTR [edi+132]
  00f28	50		 push	 eax
  00f29	e8 00 00 00 00	 call	 __ftol2
  00f2e	d9 87 80 00 00
	00		 fld	 DWORD PTR [edi+128]
  00f34	50		 push	 eax
  00f35	e8 00 00 00 00	 call	 __ftol2
  00f3a	d9 47 7c	 fld	 DWORD PTR [edi+124]
  00f3d	50		 push	 eax
  00f3e	e8 00 00 00 00	 call	 __ftol2
  00f43	8b 57 60	 mov	 edx, DWORD PTR [edi+96]
  00f46	33 c9		 xor	 ecx, ecx
  00f48	8a 8f 99 01 00
	00		 mov	 cl, BYTE PTR [edi+409]
  00f4e	50		 push	 eax
  00f4f	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  00f52	51		 push	 ecx
  00f53	33 c9		 xor	 ecx, ecx
  00f55	8a 4f 7b	 mov	 cl, BYTE PTR [edi+123]
  00f58	52		 push	 edx
  00f59	8b 97 f0 00 00
	00		 mov	 edx, DWORD PTR [edi+240]
  00f5f	50		 push	 eax
  00f60	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00f63	8b 97 ec 00 00
	00		 mov	 edx, DWORD PTR [edi+236]
  00f69	51		 push	 ecx
  00f6a	50		 push	 eax
  00f6b	33 c9		 xor	 ecx, ecx
  00f6d	66 8b 8f 7c 01
	00 00		 mov	 cx, WORD PTR [edi+380]
  00f74	33 c0		 xor	 eax, eax
  00f76	66 8b 42 24	 mov	 ax, WORD PTR [edx+36]
  00f7a	51		 push	 ecx
  00f7b	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00f7e	50		 push	 eax
  00f7f	51		 push	 ecx
  00f80	8b cd		 mov	 ecx, ebp
  00f82	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00f87	8b c8		 mov	 ecx, eax
  00f89	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00f8e	8b c8		 mov	 ecx, eax
  00f90	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00f95	8b c8		 mov	 ecx, eax
  00f97	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00f9c	8b c8		 mov	 ecx, eax
  00f9e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00fa3	8b c8		 mov	 ecx, eax
  00fa5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00faa	8b c8		 mov	 ecx, eax
  00fac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00fb1	8b c8		 mov	 ecx, eax
  00fb3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00fb8	8b c8		 mov	 ecx, eax
  00fba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00fbf	8b c8		 mov	 ecx, eax
  00fc1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00fc6	8b c8		 mov	 ecx, eax
  00fc8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00fcd	8b c8		 mov	 ecx, eax
  00fcf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2000 : 
; 2001 : 		wCount++;

  00fd4	ff 44 24 48	 inc	 DWORD PTR _wCount$[esp+64]
$L178950:
  00fd8	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00fdb	84 c0		 test	 al, al
  00fdd	75 44		 jne	 SHORT $L210804
  00fdf	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00fe2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00fe5	84 c9		 test	 cl, cl
  00fe7	75 18		 jne	 SHORT $L212879
  00fe9	8b d8		 mov	 ebx, eax
  00feb	8b 03		 mov	 eax, DWORD PTR [ebx]
  00fed	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ff0	84 c9		 test	 cl, cl
  00ff2	75 2f		 jne	 SHORT $L210804

; 1978 : 
; 1979 : 	MAPTRECALLMON::iterator itCallMon;
; 1980 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

$L210825:
  00ff4	8b d8		 mov	 ebx, eax
  00ff6	8b 03		 mov	 eax, DWORD PTR [ebx]
  00ff8	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00ffb	84 c9		 test	 cl, cl
  00ffd	74 f5		 je	 SHORT $L210825
  00fff	eb 22		 jmp	 SHORT $L210804
$L212879:
  01001	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  01004	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01007	84 c9		 test	 cl, cl
  01009	75 16		 jne	 SHORT $L210807
  0100b	eb 03 8d 49 00	 npad	 5
$L210806:
  01010	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  01013	75 0c		 jne	 SHORT $L210807
  01015	8b d8		 mov	 ebx, eax
  01017	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0101a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0101d	84 c9		 test	 cl, cl
  0101f	74 ef		 je	 SHORT $L210806
$L210807:
  01021	8b d8		 mov	 ebx, eax
$L210804:
  01023	3b 9e 10 02 01
	00		 cmp	 ebx, DWORD PTR [esi+66064]
  01029	0f 85 d2 fe ff
	ff		 jne	 $L210794
$L178951:

; 2002 : 	}
; 2003 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  0102f	8b cd		 mov	 ecx, ebp
  01031	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  01036	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]
  0103b	66 8b 4c 24 48	 mov	 cx, WORD PTR _wCount$[esp+64]
  01040	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 2004 : 
; 2005 : 	wSize = pMSG->GetSize();

  01044	8b cd		 mov	 ecx, ebp
  01046	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 2006 : 	wCount = 0;
; 2007 : 	(*pMSG) << wCount;

  0104b	6a 00		 push	 0
  0104d	8b cd		 mov	 ecx, ebp
  0104f	c7 44 24 4c 00
	00 00 00	 mov	 DWORD PTR _wCount$[esp+68], 0
  01057	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+72], eax
  0105b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2008 : 
; 2009 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

  01060	8b 86 10 02 01
	00		 mov	 eax, DWORD PTR [esi+66064]
  01066	8b 18		 mov	 ebx, DWORD PTR [eax]
  01068	3b d8		 cmp	 ebx, eax
  0106a	89 5c 24 20	 mov	 DWORD PTR _itCallMon$[esp+68], ebx
  0106e	0f 84 2f 02 00
	00		 je	 $L212955
$L211090:

; 2010 : 	{
; 2011 : 		CTRecallMon * pMon = (*itCallMon).second;

  01074	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]

; 2012 : 		DWORD dwLifeTick = pMon->GetLifeTick(dwTick);

  01077	8b 54 24 18	 mov	 edx, DWORD PTR _dwTick$[esp+68]
  0107b	52		 push	 edx
  0107c	8b cf		 mov	 ecx, edi
  0107e	e8 00 00 00 00	 call	 ?GetLifeTick@CTRecallMon@@QAEKK@Z ; CTRecallMon::GetLifeTick

; 2013 : 		if(pMon->m_dwDurationTick && !dwLifeTick)

  01083	8b 8f 84 01 00
	00		 mov	 ecx, DWORD PTR [edi+388]
  01089	85 c9		 test	 ecx, ecx
  0108b	74 08		 je	 SHORT $L212956
  0108d	85 c0		 test	 eax, eax
  0108f	0f 84 b4 01 00
	00		 je	 $L178959
$L212956:

; 2014 : 			continue;
; 2015 : 
; 2016 : 		for(BYTE is=0; is<pMon->m_vMaintainSkill.size(); is++)

  01095	c6 44 24 4c 00	 mov	 BYTE PTR _is$178964[esp+64], 0
  0109a	8d 9b 00 00 00
	00		 npad	 6
$L178965:
  010a0	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  010a3	85 c9		 test	 ecx, ecx
  010a5	75 04		 jne	 SHORT $L211136
  010a7	33 c0		 xor	 eax, eax
  010a9	eb 08		 jmp	 SHORT $L211137
$L211136:
  010ab	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  010ae	2b c1		 sub	 eax, ecx
  010b0	c1 f8 02	 sar	 eax, 2
$L211137:
  010b3	0f b6 4c 24 4c	 movzx	 ecx, BYTE PTR _is$178964[esp+64]
  010b8	3b c8		 cmp	 ecx, eax
  010ba	0f 83 89 01 00
	00		 jae	 $L178959

; 2017 : 		{
; 2018 : 			DWORD dwRemain = pMon->m_vMaintainSkill[is]->GetRemainTick(dwTick);

  010c0	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  010c3	8d 1c 8d 00 00
	00 00		 lea	 ebx, DWORD PTR [ecx*4]
  010ca	8b 4c 24 18	 mov	 ecx, DWORD PTR _dwTick$[esp+68]
  010ce	03 c3		 add	 eax, ebx
  010d0	51		 push	 ecx
  010d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  010d3	e8 00 00 00 00	 call	 ?GetRemainTick@CTSkill@@QAEKK@Z ; CTSkill::GetRemainTick

; 2019 : 			if( !pMon->m_vMaintainSkill[is]->m_dwStartTick || 
; 2020 : 				dwRemain)

  010d8	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  010db	8b 0c 1a	 mov	 ecx, DWORD PTR [edx+ebx]
  010de	8d 2c 1a	 lea	 ebp, DWORD PTR [edx+ebx]
  010e1	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  010e4	85 d2		 test	 edx, edx
  010e6	0f 84 ce 00 00
	00		 je	 $L178970
  010ec	85 c0		 test	 eax, eax
  010ee	0f 85 c6 00 00
	00		 jne	 $L178970

; 2034 : 			}
; 2035 : 			else if(pMon->m_pMAP)

  010f4	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  010f7	85 c0		 test	 eax, eax
  010f9	0f 84 8a 00 00
	00		 je	 $L178972

; 2036 : 			{
; 2037 : 				vPlayer.clear();

  010ff	8b 44 24 2c	 mov	 eax, DWORD PTR _vPlayer$[esp+72]
  01103	85 c0		 test	 eax, eax
  01105	74 09		 je	 SHORT $L211652
  01107	50		 push	 eax
  01108	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0110d	83 c4 04	 add	 esp, 4
$L211652:
  01110	33 ed		 xor	 ebp, ebp
  01112	89 6c 24 2c	 mov	 DWORD PTR _vPlayer$[esp+72], ebp
  01116	89 6c 24 30	 mov	 DWORD PTR _vPlayer$[esp+76], ebp
  0111a	89 6c 24 34	 mov	 DWORD PTR _vPlayer$[esp+80], ebp

; 2038 : 				pPlayer->m_pMAP->GetNeighbor(&vPlayer, pMon->m_fPosX, pMon->m_fPosZ);

  0111e	8b 97 84 00 00
	00		 mov	 edx, DWORD PTR [edi+132]
  01124	8b 47 7c	 mov	 eax, DWORD PTR [edi+124]
  01127	52		 push	 edx
  01128	50		 push	 eax
  01129	8d 4c 24 30	 lea	 ecx, DWORD PTR _vPlayer$[esp+76]
  0112d	51		 push	 ecx
  0112e	8b 8e 40 01 01
	00		 mov	 ecx, DWORD PTR [esi+65856]
  01134	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
  01139	8d a4 24 00 00
	00 00		 npad	 7
$L178974:

; 2039 : 
; 2040 : 				for(DWORD i=0; i<vPlayer.size(); i++)

  01140	8b 4c 24 2c	 mov	 ecx, DWORD PTR _vPlayer$[esp+72]
  01144	85 c9		 test	 ecx, ecx
  01146	0f 84 e6 00 00
	00		 je	 $L178966
  0114c	8b 44 24 30	 mov	 eax, DWORD PTR _vPlayer$[esp+76]
  01150	2b c1		 sub	 eax, ecx
  01152	c1 f8 02	 sar	 eax, 2
  01155	3b e8		 cmp	 ebp, eax
  01157	0f 83 d5 00 00
	00		 jae	 $L178966

; 2041 : 					vPlayer[i]->SendCS_SKILLEND_ACK(pMon->m_dwID, pMon->m_bType, pMon->m_vMaintainSkill[is]->GetID());

  0115d	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  01160	03 c3		 add	 eax, ebx
  01162	8d 14 a9	 lea	 edx, DWORD PTR [ecx+ebp*4]
  01165	8b 08		 mov	 ecx, DWORD PTR [eax]
  01167	89 54 24 24	 mov	 DWORD PTR __Tmp$211764[esp+68], edx
  0116b	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  01170	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  01173	8b 54 24 24	 mov	 edx, DWORD PTR __Tmp$211764[esp+68]
  01177	50		 push	 eax
  01178	33 c0		 xor	 eax, eax
  0117a	8a 47 77	 mov	 al, BYTE PTR [edi+119]
  0117d	50		 push	 eax
  0117e	51		 push	 ecx
  0117f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  01181	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  01186	45		 inc	 ebp
  01187	eb b7		 jmp	 SHORT $L178974
$L178972:

; 2042 : 			}
; 2043 : 			else
; 2044 : 				pPlayer->SendCS_SKILLEND_ACK(pMon->m_dwID, pMon->m_bType, pMon->m_vMaintainSkill[is]->GetID());

  01189	8b 4d 00	 mov	 ecx, DWORD PTR [ebp]
  0118c	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  01191	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  01194	50		 push	 eax
  01195	33 c0		 xor	 eax, eax
  01197	8a 47 77	 mov	 al, BYTE PTR [edi+119]
  0119a	50		 push	 eax
  0119b	51		 push	 ecx
  0119c	8b ce		 mov	 ecx, esi
  0119e	e8 00 00 00 00	 call	 ?SendCS_SKILLEND_ACK@CTPlayer@@QAEXKEG@Z ; CTPlayer::SendCS_SKILLEND_ACK
  011a3	8a 44 24 4c	 mov	 al, BYTE PTR _is$178964[esp+64]
  011a7	8b 5c 24 20	 mov	 ebx, DWORD PTR _itCallMon$[esp+68]
  011ab	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  011af	fe c0		 inc	 al
  011b1	88 44 24 4c	 mov	 BYTE PTR _is$178964[esp+64], al
  011b5	e9 e6 fe ff ff	 jmp	 $L178965
$L178970:

; 2021 : 			{
; 2022 : 				(*pMSG)
; 2023 : 					<< pMon->m_dwID
; 2024 : 					<< pMon->m_vMaintainSkill[is]->m_bLevel
; 2025 : 					<< pMon->m_vMaintainSkill[is]->GetID()
; 2026 : 					<< dwRemain
; 2027 : 					<< pMon->m_vMaintainSkill[is]->m_bAttackType
; 2028 : 					<< pMon->m_vMaintainSkill[is]->m_dwAttackID
; 2029 : 					<< pMon->m_vMaintainSkill[is]->m_bHostType
; 2030 : 					<< pMon->m_vMaintainSkill[is]->m_dwHostID
; 2031 : 					<< pMon->m_vMaintainSkill[is]->m_bAttackCountry;

  011ba	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  011bd	33 c9		 xor	 ecx, ecx
  011bf	8a 4a 29	 mov	 cl, BYTE PTR [edx+41]
  011c2	51		 push	 ecx
  011c3	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  011c6	51		 push	 ecx
  011c7	33 c9		 xor	 ecx, ecx
  011c9	8a 4a 10	 mov	 cl, BYTE PTR [edx+16]
  011cc	51		 push	 ecx
  011cd	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  011d0	51		 push	 ecx
  011d1	33 c9		 xor	 ecx, ecx
  011d3	8a 4a 08	 mov	 cl, BYTE PTR [edx+8]
  011d6	51		 push	 ecx
  011d7	50		 push	 eax
  011d8	8b ca		 mov	 ecx, edx
  011da	e8 00 00 00 00	 call	 ?GetID@CTSkill@@QAEGXZ	; CTSkill::GetID
  011df	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  011e2	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  011e5	50		 push	 eax
  011e6	33 c0		 xor	 eax, eax
  011e8	8a 42 50	 mov	 al, BYTE PTR [edx+80]
  011eb	50		 push	 eax
  011ec	51		 push	 ecx
  011ed	8b 4c 24 34	 mov	 ecx, DWORD PTR $T206219[esp+104]
  011f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  011f6	8b c8		 mov	 ecx, eax
  011f8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  011fd	8b c8		 mov	 ecx, eax
  011ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  01204	8b c8		 mov	 ecx, eax
  01206	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0120b	8b c8		 mov	 ecx, eax
  0120d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01212	8b c8		 mov	 ecx, eax
  01214	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01219	8b c8		 mov	 ecx, eax
  0121b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01220	8b c8		 mov	 ecx, eax
  01222	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01227	8b c8		 mov	 ecx, eax
  01229	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2032 : 
; 2033 : 				wCount++;

  0122e	ff 44 24 48	 inc	 DWORD PTR _wCount$[esp+64]
$L178966:
  01232	8a 44 24 4c	 mov	 al, BYTE PTR _is$178964[esp+64]
  01236	8b 5c 24 20	 mov	 ebx, DWORD PTR _itCallMon$[esp+68]
  0123a	8b 6c 24 10	 mov	 ebp, DWORD PTR $T206219[esp+68]
  0123e	fe c0		 inc	 al
  01240	88 44 24 4c	 mov	 BYTE PTR _is$178964[esp+64], al
  01244	e9 57 fe ff ff	 jmp	 $L178965
$L178959:

; 2008 : 
; 2009 : 	for(itCallMon=pPlayer->m_mapRecallMon.begin(); itCallMon !=pPlayer->m_mapRecallMon.end(); itCallMon++)

  01249	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  0124c	84 c0		 test	 al, al
  0124e	75 47		 jne	 SHORT $L211060
  01250	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  01253	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  01256	84 c0		 test	 al, al
  01258	75 18		 jne	 SHORT $L212884
  0125a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0125c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0125f	84 d2		 test	 dl, dl
  01261	75 0b		 jne	 SHORT $L211075
$L211074:
  01263	8b c8		 mov	 ecx, eax
  01265	8b 01		 mov	 eax, DWORD PTR [ecx]
  01267	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0126a	84 d2		 test	 dl, dl
  0126c	74 f5		 je	 SHORT $L211074
$L211075:
  0126e	8b d9		 mov	 ebx, ecx
  01270	eb 21		 jmp	 SHORT $L212965
$L212884:
  01272	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  01275	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01278	84 c9		 test	 cl, cl
  0127a	75 15		 jne	 SHORT $L211063
  0127c	8d 64 24 00	 npad	 4
$L211062:
  01280	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  01283	75 0c		 jne	 SHORT $L211063
  01285	8b d8		 mov	 ebx, eax
  01287	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0128a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0128d	84 c9		 test	 cl, cl
  0128f	74 ef		 je	 SHORT $L211062
$L211063:
  01291	8b d8		 mov	 ebx, eax
$L212965:
  01293	89 5c 24 20	 mov	 DWORD PTR _itCallMon$[esp+68], ebx
$L211060:
  01297	3b 9e 10 02 01
	00		 cmp	 ebx, DWORD PTR [esi+66064]
  0129d	0f 85 d1 fd ff
	ff		 jne	 $L211090
$L212955:

; 2045 : 		}
; 2046 : 	}
; 2047 : 	memcpy(pMSG->GetBuffer()+wSize, &wCount, sizeof(wCount));

  012a3	8b cd		 mov	 ecx, ebp
  012a5	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  012aa	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+68]
  012af	66 8b 4c 24 48	 mov	 cx, WORD PTR _wCount$[esp+64]
  012b4	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 2048 : 
; 2049 : 	(*pMSG)
; 2050 : 		<< WORD(pPlayer->m_mapTPROTECTED.size());

  012b8	33 d2		 xor	 edx, edx
  012ba	66 8b 96 68 02
	01 00		 mov	 dx, WORD PTR [esi+66152]
  012c1	8b cd		 mov	 ecx, ebp
  012c3	52		 push	 edx
  012c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2051 : 
; 2052 : 	MAPTPROTECTED::iterator itPTD;
; 2053 : 	for(itPTD=pPlayer->m_mapTPROTECTED.begin(); itPTD != pPlayer->m_mapTPROTECTED.end(); itPTD++)

  012c9	8b 86 64 02 01
	00		 mov	 eax, DWORD PTR [esi+66148]
  012cf	8b 38		 mov	 edi, DWORD PTR [eax]
  012d1	3b f8		 cmp	 edi, eax
  012d3	0f 84 8d 00 00
	00		 je	 $L178984
  012d9	8d a4 24 00 00
	00 00		 npad	 7
$L212057:

; 2054 : 	{
; 2055 : 		(*pMSG)
; 2056 : 			<< (*itPTD).second->m_dwCharID
; 2057 : 			<< (*itPTD).second->m_strName
; 2058 : 			<< (*itPTD).second->m_bOption
; 2059 : 			<< (*itPTD).second->m_bChanged;

  012e0	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  012e3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  012e6	33 d2		 xor	 edx, edx
  012e8	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  012eb	52		 push	 edx
  012ec	33 d2		 xor	 edx, edx
  012ee	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  012f1	8b 00		 mov	 eax, DWORD PTR [eax]
  012f3	52		 push	 edx
  012f4	51		 push	 ecx
  012f5	50		 push	 eax
  012f6	8b cd		 mov	 ecx, ebp
  012f8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  012fd	8b c8		 mov	 ecx, eax
  012ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  01304	8b c8		 mov	 ecx, eax
  01306	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0130b	8b c8		 mov	 ecx, eax
  0130d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01312	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  01315	84 c0		 test	 al, al
  01317	75 41		 jne	 SHORT $L212043
  01319	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0131c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0131f	84 c9		 test	 cl, cl
  01321	75 1a		 jne	 SHORT $L212887
  01323	8b f8		 mov	 edi, eax
  01325	8b 07		 mov	 eax, DWORD PTR [edi]
  01327	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0132a	84 c9		 test	 cl, cl
  0132c	75 2c		 jne	 SHORT $L212043
  0132e	8b ff		 npad	 2

; 2051 : 
; 2052 : 	MAPTPROTECTED::iterator itPTD;
; 2053 : 	for(itPTD=pPlayer->m_mapTPROTECTED.begin(); itPTD != pPlayer->m_mapTPROTECTED.end(); itPTD++)

$L212020:
  01330	8b f8		 mov	 edi, eax
  01332	8b 07		 mov	 eax, DWORD PTR [edi]
  01334	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01337	84 c9		 test	 cl, cl
  01339	74 f5		 je	 SHORT $L212020
  0133b	eb 1d		 jmp	 SHORT $L212043
$L212887:
  0133d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  01340	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01343	84 c9		 test	 cl, cl
  01345	75 11		 jne	 SHORT $L212046
$L212045:
  01347	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0134a	75 0c		 jne	 SHORT $L212046
  0134c	8b f8		 mov	 edi, eax
  0134e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  01351	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  01354	84 c9		 test	 cl, cl
  01356	74 ef		 je	 SHORT $L212045
$L212046:
  01358	8b f8		 mov	 edi, eax
$L212043:
  0135a	3b be 64 02 01
	00		 cmp	 edi, DWORD PTR [esi+66148]
  01360	0f 85 7a ff ff
	ff		 jne	 $L212057
$L178984:

; 2060 : 	}
; 2061 : 
; 2062 : 	(*pMSG)
; 2063 : 		<< pPlayer->m_dwPvPUseablePoint
; 2064 : 		<< pPlayer->m_dwPvPTotalPoint
; 2065 : 		<< pPlayer->m_dwPvPRankOrder
; 2066 : 		<< pPlayer->m_bPvPRankPercent;

  01366	8b 96 e0 03 01
	00		 mov	 edx, DWORD PTR [esi+66528]
  0136c	8b 86 dc 03 01
	00		 mov	 eax, DWORD PTR [esi+66524]
  01372	33 c9		 xor	 ecx, ecx
  01374	8a 8e e4 03 01
	00		 mov	 cl, BYTE PTR [esi+66532]
  0137a	51		 push	 ecx
  0137b	8b 8e d8 03 01
	00		 mov	 ecx, DWORD PTR [esi+66520]
  01381	52		 push	 edx
  01382	50		 push	 eax
  01383	51		 push	 ecx
  01384	8b cd		 mov	 ecx, ebp
  01386	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0138b	8b c8		 mov	 ecx, eax
  0138d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01392	8b c8		 mov	 ecx, eax
  01394	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01399	8b c8		 mov	 ecx, eax
  0139b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  013a0	8d be e0 02 01
	00		 lea	 edi, DWORD PTR [esi+66272]
  013a6	bb 06 00 00 00	 mov	 ebx, 6
  013ab	eb 03 8d 49 00	 npad	 5
$L178986:

; 2067 : 
; 2068 : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)
; 2069 : 	{
; 2070 : 		(*pMSG)
; 2071 : 			<< pPlayer->m_aPvPRecord[cr][0]
; 2072 : 			<< pPlayer->m_aPvPRecord[cr][1];

  013b0	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  013b3	8b 07		 mov	 eax, DWORD PTR [edi]
  013b5	52		 push	 edx
  013b6	50		 push	 eax
  013b7	8b cd		 mov	 ecx, ebp
  013b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  013be	8b c8		 mov	 ecx, eax
  013c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  013c5	83 c7 08	 add	 edi, 8
  013c8	4b		 dec	 ebx
  013c9	75 e5		 jne	 SHORT $L178986

; 2073 : 	}
; 2074 : 
; 2075 : 	(*pMSG) << WORD(pPlayer->m_vPvPRecent.size());

  013cb	8b 86 d4 02 01
	00		 mov	 eax, DWORD PTR [esi+66260]
  013d1	85 c0		 test	 eax, eax
  013d3	74 19		 je	 SHORT $L212153
$L212152:
  013d5	8b 8e d8 02 01
	00		 mov	 ecx, DWORD PTR [esi+66264]
  013db	2b c8		 sub	 ecx, eax
  013dd	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  013e2	f7 e9		 imul	 ecx
  013e4	c1 fa 02	 sar	 edx, 2
  013e7	8b c2		 mov	 eax, edx
  013e9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  013ec	03 c2		 add	 eax, edx
$L212153:
  013ee	50		 push	 eax
  013ef	8b cd		 mov	 ecx, ebp
  013f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2076 : 	for(WORD pr=0; pr<pPlayer->m_vPvPRecent.size(); pr++)

  013f6	33 ff		 xor	 edi, edi
  013f8	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L178990:
  01400	8b 86 d4 02 01
	00		 mov	 eax, DWORD PTR [esi+66260]
  01406	85 c0		 test	 eax, eax
  01408	74 19		 je	 SHORT $L212161
$L212160:
  0140a	8b 8e d8 02 01
	00		 mov	 ecx, DWORD PTR [esi+66264]
  01410	2b c8		 sub	 ecx, eax
  01412	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01417	f7 e9		 imul	 ecx
  01419	c1 fa 02	 sar	 edx, 2
  0141c	8b c2		 mov	 eax, edx
  0141e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01421	03 c2		 add	 eax, edx
$L212161:
  01423	0f b7 cf	 movzx	 ecx, di
  01426	3b c8		 cmp	 ecx, eax
  01428	73 5c		 jae	 SHORT $L178992

; 2077 : 	{
; 2078 : 		(*pMSG)
; 2079 : 			<< pPlayer->m_vPvPRecent[pr].m_strName
; 2080 : 			<< pPlayer->m_vPvPRecent[pr].m_bClass
; 2081 : 			<< pPlayer->m_vPvPRecent[pr].m_bLevel
; 2082 : 			<< pPlayer->m_vPvPRecent[pr].m_bWin
; 2083 : 			<< pPlayer->m_vPvPRecent[pr].m_dwPoint
; 2084 : 			<< pPlayer->m_vPvPRecent[pr].m_dTime;

  0142a	8b 96 d4 02 01
	00		 mov	 edx, DWORD PTR [esi+66260]
  01430	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  01433	8d 04 ca	 lea	 eax, DWORD PTR [edx+ecx*8]
  01436	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  01439	8b 08		 mov	 ecx, DWORD PTR [eax]
  0143b	52		 push	 edx
  0143c	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0143f	52		 push	 edx
  01440	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  01443	52		 push	 edx
  01444	33 d2		 xor	 edx, edx
  01446	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  01449	52		 push	 edx
  0144a	33 d2		 xor	 edx, edx
  0144c	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0144f	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  01453	52		 push	 edx
  01454	50		 push	 eax
  01455	51		 push	 ecx
  01456	8b cd		 mov	 ecx, ebp
  01458	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0145d	8b c8		 mov	 ecx, eax
  0145f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01464	8b c8		 mov	 ecx, eax
  01466	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0146b	8b c8		 mov	 ecx, eax
  0146d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  01472	8b c8		 mov	 ecx, eax
  01474	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01479	8b c8		 mov	 ecx, eax
  0147b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  01480	47		 inc	 edi
  01481	e9 7a ff ff ff	 jmp	 $L178990
$L178992:

; 2085 : 	}
; 2086 : 
; 2087 : 	(*pMSG)
; 2088 : 		<< WORD(pPlayer->m_vDuelRecordSet.size());

  01486	8b 86 14 03 01
	00		 mov	 eax, DWORD PTR [esi+66324]
  0148c	85 c0		 test	 eax, eax
  0148e	74 19		 je	 SHORT $L212504
$L212503:
  01490	8b 8e 18 03 01
	00		 mov	 ecx, DWORD PTR [esi+66328]
  01496	2b c8		 sub	 ecx, eax
  01498	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0149d	f7 e9		 imul	 ecx
  0149f	c1 fa 02	 sar	 edx, 2
  014a2	8b c2		 mov	 eax, edx
  014a4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  014a7	03 c2		 add	 eax, edx
$L212504:
  014a9	50		 push	 eax
  014aa	8b cd		 mov	 ecx, ebp
  014ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2089 : 
; 2090 : 	VTRECORDSET::iterator itD;
; 2091 : 	for(itD = pPlayer->m_vDuelRecordSet.begin(); itD != pPlayer->m_vDuelRecordSet.end(); itD++)

  014b1	8b be 14 03 01
	00		 mov	 edi, DWORD PTR [esi+66324]
  014b7	3b be 18 03 01
	00		 cmp	 edi, DWORD PTR [esi+66328]
  014bd	74 59		 je	 SHORT $L178999
  014bf	90		 npad	 1
$L212537:

; 2092 : 	{		
; 2093 : 		(*pMSG)
; 2094 : 			<< (*itD).m_strName
; 2095 : 			<< (*itD).m_bClass
; 2096 : 			<< (*itD).m_bLevel
; 2097 : 			<< (*itD).m_bWin
; 2098 : 			<< (*itD).m_dwPoint
; 2099 : 			<< (*itD).m_dTime;

  014c0	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  014c3	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  014c6	8b 07		 mov	 eax, DWORD PTR [edi]
  014c8	51		 push	 ecx
  014c9	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  014cc	52		 push	 edx
  014cd	33 d2		 xor	 edx, edx
  014cf	8a 57 06	 mov	 dl, BYTE PTR [edi+6]
  014d2	51		 push	 ecx
  014d3	33 c9		 xor	 ecx, ecx
  014d5	8a 4f 05	 mov	 cl, BYTE PTR [edi+5]
  014d8	52		 push	 edx
  014d9	33 d2		 xor	 edx, edx
  014db	8a 57 04	 mov	 dl, BYTE PTR [edi+4]
  014de	51		 push	 ecx
  014df	8b cd		 mov	 ecx, ebp
  014e1	52		 push	 edx
  014e2	50		 push	 eax
  014e3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  014e8	8b c8		 mov	 ecx, eax
  014ea	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  014ef	8b c8		 mov	 ecx, eax
  014f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  014f6	8b c8		 mov	 ecx, eax
  014f8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  014fd	8b c8		 mov	 ecx, eax
  014ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01504	8b c8		 mov	 ecx, eax
  01506	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0150b	8b 86 18 03 01
	00		 mov	 eax, DWORD PTR [esi+66328]
  01511	83 c7 18	 add	 edi, 24			; 00000018H
  01514	3b f8		 cmp	 edi, eax
  01516	75 a8		 jne	 SHORT $L212537
$L178999:

; 2100 : 	}
; 2101 : 
; 2102 : 	(*pMSG)
; 2103 : 		<< WORD(1);

  01518	6a 01		 push	 1
  0151a	8b cd		 mov	 ecx, ebp
  0151c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  01521	8d be 20 03 01
	00		 lea	 edi, DWORD PTR [esi+66336]
  01527	bb 06 00 00 00	 mov	 ebx, 6
  0152c	8d 64 24 00	 npad	 4
$L179001:

; 2104 : 
; 2105 : 	for(WORD di = 0; di < TCLASS_COUNT; di++)
; 2106 : 	{
; 2107 : 		(*pMSG)
; 2108 : 			<< pPlayer->m_aDuelScore[di][0]
; 2109 : 			<< pPlayer->m_aDuelScore[di][1];

  01530	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  01533	8b 0f		 mov	 ecx, DWORD PTR [edi]
  01535	50		 push	 eax
  01536	51		 push	 ecx
  01537	8b cd		 mov	 ecx, ebp
  01539	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0153e	8b c8		 mov	 ecx, eax
  01540	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01545	83 c7 08	 add	 edi, 8
  01548	4b		 dec	 ebx
  01549	75 e5		 jne	 SHORT $L179001

; 2110 : 	}
; 2111 : 
; 2112 : 	(*pMSG)
; 2113 : 		<< WORD(pPlayer->m_vAuctionBid.size());

  0154b	8b 8e 64 03 01
	00		 mov	 ecx, DWORD PTR [esi+66404]
  01551	85 c9		 test	 ecx, ecx
  01553	75 04		 jne	 SHORT $L212620
  01555	33 c0		 xor	 eax, eax
  01557	eb 0b		 jmp	 SHORT $L212621
$L212620:
  01559	8b 86 68 03 01
	00		 mov	 eax, DWORD PTR [esi+66408]
  0155f	2b c1		 sub	 eax, ecx
  01561	c1 f8 02	 sar	 eax, 2
$L212621:
  01564	50		 push	 eax
  01565	8b cd		 mov	 ecx, ebp
  01567	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2114 : 
; 2115 : 	VDWORD::iterator itDA;
; 2116 : 	for(itDA = pPlayer->m_vAuctionBid.begin(); itDA != pPlayer->m_vAuctionBid.end(); itDA++)

  0156c	8b be 64 03 01
	00		 mov	 edi, DWORD PTR [esi+66404]
  01572	3b be 68 03 01
	00		 cmp	 edi, DWORD PTR [esi+66408]
  01578	74 1d		 je	 SHORT $L212957
  0157a	8d 9b 00 00 00
	00		 npad	 6
$L212654:

; 2117 : 	{
; 2118 : 		(*pMSG)
; 2119 : 			<< (*itDA);

  01580	8b 17		 mov	 edx, DWORD PTR [edi]
  01582	52		 push	 edx
  01583	8b cd		 mov	 ecx, ebp
  01585	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0158a	8b 86 68 03 01
	00		 mov	 eax, DWORD PTR [esi+66408]
  01590	83 c7 04	 add	 edi, 4
  01593	3b f8		 cmp	 edi, eax
  01595	75 e9		 jne	 SHORT $L212654
$L212957:

; 2120 : 	}
; 2121 : 
; 2122 : 	(*pMSG)
; 2123 : 		<< WORD(pPlayer->m_vAuctionInterest.size());

  01597	8b 8e 54 03 01
	00		 mov	 ecx, DWORD PTR [esi+66388]
  0159d	85 c9		 test	 ecx, ecx
  0159f	75 04		 jne	 SHORT $L212693
  015a1	33 c0		 xor	 eax, eax
  015a3	eb 0b		 jmp	 SHORT $L212694
$L212693:
  015a5	8b 86 58 03 01
	00		 mov	 eax, DWORD PTR [esi+66392]
  015ab	2b c1		 sub	 eax, ecx
  015ad	c1 f8 02	 sar	 eax, 2
$L212694:
  015b0	50		 push	 eax
  015b1	8b cd		 mov	 ecx, ebp
  015b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2124 : 	for( itDA = pPlayer->m_vAuctionInterest.begin(); itDA != pPlayer->m_vAuctionInterest.end(); itDA++)

  015b8	8b be 54 03 01
	00		 mov	 edi, DWORD PTR [esi+66388]
  015be	3b be 58 03 01
	00		 cmp	 edi, DWORD PTR [esi+66392]
  015c4	74 17		 je	 SHORT $L212960
$L212719:

; 2125 : 	{
; 2126 : 		(*pMSG)
; 2127 : 			<< (*itDA);

  015c6	8b 07		 mov	 eax, DWORD PTR [edi]
  015c8	50		 push	 eax
  015c9	8b cd		 mov	 ecx, ebp
  015cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  015d0	8b 86 58 03 01
	00		 mov	 eax, DWORD PTR [esi+66392]
  015d6	83 c7 04	 add	 edi, 4
  015d9	3b f8		 cmp	 edi, eax
  015db	75 e9		 jne	 SHORT $L212719
$L212960:

; 2128 : 	}
; 2129 : 
; 2130 : 	(*pMSG)
; 2131 : 		<< WORD(pPlayer->m_vAuctionReg.size());

  015dd	8b 8e 74 03 01
	00		 mov	 ecx, DWORD PTR [esi+66420]
  015e3	85 c9		 test	 ecx, ecx
  015e5	75 04		 jne	 SHORT $L212758
  015e7	33 c0		 xor	 eax, eax
  015e9	eb 0b		 jmp	 SHORT $L212759
$L212758:
  015eb	8b 86 78 03 01
	00		 mov	 eax, DWORD PTR [esi+66424]
  015f1	2b c1		 sub	 eax, ecx
  015f3	c1 f8 02	 sar	 eax, 2
$L212759:
  015f6	50		 push	 eax
  015f7	8b cd		 mov	 ecx, ebp
  015f9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2132 : 	for( itDA = pPlayer->m_vAuctionReg.begin(); itDA != pPlayer->m_vAuctionReg.end(); itDA++)

  015fe	8b be 74 03 01
	00		 mov	 edi, DWORD PTR [esi+66420]
  01604	3b be 78 03 01
	00		 cmp	 edi, DWORD PTR [esi+66424]
  0160a	74 1b		 je	 SHORT $L179022
  0160c	8d 64 24 00	 npad	 4
$L212781:

; 2133 : 	{
; 2134 : 		(*pMSG)
; 2135 : 			<< (*itDA);

  01610	8b 0f		 mov	 ecx, DWORD PTR [edi]
  01612	51		 push	 ecx
  01613	8b cd		 mov	 ecx, ebp
  01615	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0161a	8b 86 78 03 01
	00		 mov	 eax, DWORD PTR [esi+66424]
  01620	83 c7 04	 add	 edi, 4
  01623	3b f8		 cmp	 edi, eax
  01625	75 e9		 jne	 SHORT $L212781
$L179022:

; 2136 : 	}
; 2137 : 
; 2138 : 	(*pMSG)
; 2139 : 		<< pPlayer->m_dwMonthPvPoint
; 2140 : 		<< pPlayer->m_wMonthWin
; 2141 : 		<< pPlayer->m_wMonthLose
; 2142 : 		<< pPlayer->m_dwMonthRankOrder
; 2143 : 		<< pPlayer->m_bMonthRankPercent;

  01627	8b 86 ec 03 01
	00		 mov	 eax, DWORD PTR [esi+66540]
  0162d	33 d2		 xor	 edx, edx
  0162f	8a 96 f0 03 01
	00		 mov	 dl, BYTE PTR [esi+66544]
  01635	33 c9		 xor	 ecx, ecx
  01637	66 8b 8e f4 03
	01 00		 mov	 cx, WORD PTR [esi+66548]
  0163e	52		 push	 edx
  0163f	33 d2		 xor	 edx, edx
  01641	66 8b 96 f2 03
	01 00		 mov	 dx, WORD PTR [esi+66546]
  01648	50		 push	 eax
  01649	8b 86 e8 03 01
	00		 mov	 eax, DWORD PTR [esi+66536]
  0164f	51		 push	 ecx
  01650	8b cd		 mov	 ecx, ebp
  01652	52		 push	 edx
  01653	50		 push	 eax
  01654	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  01659	8b c8		 mov	 ecx, eax
  0165b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  01660	8b c8		 mov	 ecx, eax
  01662	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  01667	8b c8		 mov	 ecx, eax
  01669	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0166e	8b c8		 mov	 ecx, eax
  01670	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2144 : 
; 2145 : 	m_world.Say(pMSG);

  01675	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+68]
  01679	8b 91 b8 a3 01
	00		 mov	 edx, DWORD PTR [ecx+107448]
  0167f	81 c1 b8 a3 01
	00		 add	 ecx, 107448		; 0001a3b8H
  01685	55		 push	 ebp
  01686	ff 12		 call	 DWORD PTR [edx]

; 2146 : }

  01688	8b 44 24 2c	 mov	 eax, DWORD PTR _vPlayer$[esp+72]
  0168c	85 c0		 test	 eax, eax
  0168e	5f		 pop	 edi
  0168f	5d		 pop	 ebp
  01690	74 09		 je	 SHORT $L212835
  01692	50		 push	 eax
  01693	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  01698	83 c4 04	 add	 esp, 4
$L212835:
  0169b	8b 4c 24 30	 mov	 ecx, DWORD PTR __$EHRec$[esp+60]
  0169f	5e		 pop	 esi
  016a0	5b		 pop	 ebx
  016a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016a8	83 c4 34	 add	 esp, 52			; 00000034H
  016ab	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L206280:
  00000	8b 45 08	 mov	 eax, DWORD PTR $T206220[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L206281:
  0000b	8d 4d e4	 lea	 ecx, DWORD PTR _vPlayer$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
__ehhandler$?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T212838
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RELEASEMAIN_ACK@CTMapSvrModule@@QAEXEPAVCTPlayer@@@Z ENDP ; CTMapSvrModule::SendMW_RELEASEMAIN_ACK
END
