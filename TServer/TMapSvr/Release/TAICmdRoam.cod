; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TAICmdRoam.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTAICmdRoam@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTAICmdRoam@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTAICmdRoam@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTAICmdRoam@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z	; CTAICmdRoam::GetDelay
PUBLIC	?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdRoam::CanRun
PUBLIC	?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdRoam::ExecAI
PUBLIC	??0CTAICmdRoam@@QAE@XZ				; CTAICmdRoam::CTAICmdRoam
PUBLIC	??_7CTAICmdRoam@@6B@				; CTAICmdRoam::`vftable'
PUBLIC	??_GCTAICmdRoam@@UAEPAXI@Z			; CTAICmdRoam::`scalar deleting destructor'
EXTRN	?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CheckCondition
EXTRN	??0CTAICommand@@QAE@XZ:NEAR			; CTAICommand::CTAICommand
EXTRN	??_ECTAICmdRoam@@UAEPAXI@Z:NEAR			; CTAICmdRoam::`vector deleting destructor'
;	COMDAT ??_7CTAICmdRoam@@6B@
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicmdroam.cpp
CONST	SEGMENT
??_7CTAICmdRoam@@6B@ DD FLAT:?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdRoam::`vftable'
	DD	FLAT:?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
	DD	FLAT:??_ECTAICmdRoam@@UAEPAXI@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CTAICmdRoam@@QAE@XZ
_TEXT	SEGMENT
??0CTAICmdRoam@@QAE@XZ PROC NEAR			; CTAICmdRoam::CTAICmdRoam, COMDAT
; _this$ = ecx

; 5    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CTAICommand@@QAE@XZ	; CTAICommand::CTAICommand
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTAICmdRoam@@6B@

; 6    : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CTAICmdRoam@@QAE@XZ ENDP				; CTAICmdRoam::CTAICmdRoam
_TEXT	ENDS
PUBLIC	??1CTAICmdRoam@@UAE@XZ				; CTAICmdRoam::~CTAICmdRoam
EXTRN	??1CTAICommand@@UAE@XZ:NEAR			; CTAICommand::~CTAICommand
; Function compile flags: /Ogty
;	COMDAT ??1CTAICmdRoam@@UAE@XZ
_TEXT	SEGMENT
??1CTAICmdRoam@@UAE@XZ PROC NEAR			; CTAICmdRoam::~CTAICmdRoam, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTAICmdRoam@@6B@

; 10   : }

  00006	e9 00 00 00 00	 jmp	 ??1CTAICommand@@UAE@XZ	; CTAICommand::~CTAICommand
??1CTAICmdRoam@@UAE@XZ ENDP				; CTAICmdRoam::~CTAICmdRoam
_TEXT	ENDS
EXTRN	_rand:NEAR
; Function compile flags: /Ogty
;	COMDAT ?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdRoam::GetDelay, COMDAT
; _this$ = ecx

; 14   : 	if(!m_dwDelay)

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	85 c0		 test	 eax, eax
  00005	75 05		 jne	 SHORT $L152242

; 15   : 		return 0;

  00007	33 c0		 xor	 eax, eax

; 18   : }

  00009	c2 10 00	 ret	 16			; 00000010H
$L152242:
  0000c	56		 push	 esi

; 16   : 
; 17   : 	return m_dwDelay + rand() % (ROAM_DELAY_BOUND * m_dwDelay);

  0000d	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00010	e8 00 00 00 00	 call	 _rand
  00015	8d 0c b5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*4]
  0001c	33 d2		 xor	 edx, edx
  0001e	f7 f1		 div	 ecx
  00020	8b c2		 mov	 eax, edx
  00022	03 c6		 add	 eax, esi
  00024	5e		 pop	 esi

; 18   : }

  00025	c2 10 00	 ret	 16			; 00000010H
?GetDelay@CTAICmdRoam@@UAEKPAVCTMonster@@KKE@Z ENDP	; CTAICmdRoam::GetDelay
_TEXT	ENDS
EXTRN	?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CanRun
; Function compile flags: /Ogty
;	COMDAT ?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z PROC NEAR	; CTAICmdRoam::CanRun, COMDAT
; _this$ = ecx

; 22   : 	if( pMON->m_bStatus != OS_WAKEUP ||
; 23   : 		pMON->m_bMode == MT_BATTLE ||
; 24   : 		pMON->m_pMON->m_bIsSelf)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pMON$[esp-4]
  00004	53		 push	 ebx
  00005	8a 98 cc 00 00
	00		 mov	 bl, BYTE PTR [eax+204]
  0000b	b2 01		 mov	 dl, 1
  0000d	3a da		 cmp	 bl, dl
  0000f	75 1c		 jne	 SHORT $L152251
  00011	38 50 76	 cmp	 BYTE PTR [eax+118], dl
  00014	74 17		 je	 SHORT $L152251
  00016	8b 90 ec 00 00
	00		 mov	 edx, DWORD PTR [eax+236]
  0001c	8a 5a 3a	 mov	 bl, BYTE PTR [edx+58]
  0001f	84 db		 test	 bl, bl
  00021	75 0a		 jne	 SHORT $L152251
  00023	5b		 pop	 ebx

; 26   : 
; 27   : 	return CTAICommand::CanRun( pMON, dwEventHost, dwRHId, bRHType);

  00024	89 44 24 04	 mov	 DWORD PTR _pMON$[esp-4], eax
  00028	e9 00 00 00 00	 jmp	 ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::CanRun
$L152251:

; 25   : 		return FALSE;

  0002d	32 c0		 xor	 al, al
  0002f	5b		 pop	 ebx

; 28   : }

  00030	c2 10 00	 ret	 16			; 00000010H
?CanRun@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdRoam::CanRun
_TEXT	ENDS
EXTRN	__fltused:NEAR
EXTRN	?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::ExecAI
EXTRN	?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z:NEAR	; CTMonster::FindHost
EXTRN	?MoveFollower@CTMonster@@QAEXMMM@Z:NEAR		; CTMonster::MoveFollower
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
EXTRN	?MoveNext@CTMonster@@QAEEAAM00AAEPAVCTPlayer@@@Z:NEAR ; CTMonster::MoveNext
EXTRN	?SendCS_MONACTION_ACK@CTPlayer@@QAEXKEMMMKE@Z:NEAR ; CTPlayer::SendCS_MONACTION_ACK
; Function compile flags: /Ogty
;	COMDAT ?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_fPosY$ = -12						; size = 4
_fPosX$ = -8						; size = 4
_bAction$ = -4						; size = 1
_fPosZ$ = 8						; size = 4
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z PROC NEAR	; CTAICmdRoam::ExecAI, COMDAT
; _this$ = ecx

; 31   : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 32   : 	CTPlayer *pHOST = pMON->FindHost(pMON->m_dwHostID);

  00005	8b 74 24 18	 mov	 esi, DWORD PTR _pMON$[esp+16]
  00009	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  0000f	57		 push	 edi
  00010	8b d9		 mov	 ebx, ecx
  00012	50		 push	 eax
  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z ; CTMonster::FindHost

; 33   : 
; 34   : 	BYTE bAction = pMON->m_bAction;

  0001a	8a 4e 75	 mov	 cl, BYTE PTR [esi+117]

; 35   : 	FLOAT fPosX = pMON->m_fPosX;

  0001d	8b 56 7c	 mov	 edx, DWORD PTR [esi+124]
  00020	8b f8		 mov	 edi, eax

; 36   : 	FLOAT fPosY = pMON->m_fPosY;
; 37   : 	FLOAT fPosZ = pMON->m_fPosZ;
; 38   : 
; 39   : 	if(!pHOST)

  00022	85 ff		 test	 edi, edi
  00024	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  0002a	88 4c 24 14	 mov	 BYTE PTR _bAction$[esp+24], cl
  0002e	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  00034	89 54 24 10	 mov	 DWORD PTR _fPosX$[esp+24], edx
  00038	89 44 24 0c	 mov	 DWORD PTR _fPosY$[esp+24], eax
  0003c	89 4c 24 1c	 mov	 DWORD PTR _fPosZ$[esp+20], ecx
  00040	75 25		 jne	 SHORT $L152264

; 40   : 	{
; 41   : 		pMON->m_dwHostKEY++;

  00042	8b 86 f4 00 00
	00		 mov	 eax, DWORD PTR [esi+244]

; 42   : 		pMON->OnEvent(AT_LEAVE, 0, 0, 0, 0);

  00048	57		 push	 edi
  00049	57		 push	 edi
  0004a	57		 push	 edi
  0004b	57		 push	 edi
  0004c	40		 inc	 eax
  0004d	6a 08		 push	 8
  0004f	8b ce		 mov	 ecx, esi
  00051	89 86 f4 00 00
	00		 mov	 DWORD PTR [esi+244], eax
  00057	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi

; 43   : 		return FALSE;

  0005e	32 c0		 xor	 al, al
  00060	5b		 pop	 ebx

; 64   : }

  00061	83 c4 0c	 add	 esp, 12			; 0000000cH
  00064	c2 10 00	 ret	 16			; 00000010H
$L152264:

; 44   : 	}
; 45   : 
; 46   : 	if(pMON->MoveNext(fPosX, fPosY, fPosZ, bAction, pHOST))

  00067	57		 push	 edi
  00068	8d 54 24 18	 lea	 edx, DWORD PTR _bAction$[esp+28]
  0006c	52		 push	 edx
  0006d	8d 44 24 24	 lea	 eax, DWORD PTR _fPosZ$[esp+28]
  00071	50		 push	 eax
  00072	8d 4c 24 18	 lea	 ecx, DWORD PTR _fPosY$[esp+36]
  00076	51		 push	 ecx
  00077	8d 54 24 20	 lea	 edx, DWORD PTR _fPosX$[esp+40]
  0007b	52		 push	 edx
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?MoveNext@CTMonster@@QAEEAAM00AAEPAVCTPlayer@@@Z ; CTMonster::MoveNext
  00083	84 c0		 test	 al, al
  00085	74 5f		 je	 SHORT $L152266

; 47   : 	{
; 48   : 		pMON->m_fNextX = fPosX;

  00087	8b 44 24 10	 mov	 eax, DWORD PTR _fPosX$[esp+24]

; 49   : 		pMON->m_fNextY = fPosY;
; 50   : 		pMON->m_fNextZ = fPosZ;

  0008b	8b 54 24 1c	 mov	 edx, DWORD PTR _fPosZ$[esp+20]
  0008f	8b 4c 24 0c	 mov	 ecx, DWORD PTR _fPosY$[esp+24]

; 51   : 
; 52   : 		pHOST->SendCS_MONACTION_ACK(
; 53   : 			pMON->m_dwID,
; 54   : 			bAction,
; 55   : 			fPosX,
; 56   : 			fPosY,
; 57   : 			fPosZ);

  00093	6a 00		 push	 0
  00095	6a 00		 push	 0
  00097	89 86 28 01 00
	00		 mov	 DWORD PTR [esi+296], eax
  0009d	8b c2		 mov	 eax, edx
  0009f	50		 push	 eax
  000a0	8b 44 24 20	 mov	 eax, DWORD PTR _bAction$[esp+36]
  000a4	51		 push	 ecx
  000a5	89 96 30 01 00
	00		 mov	 DWORD PTR [esi+304], edx
  000ab	8b 54 24 20	 mov	 edx, DWORD PTR _fPosX$[esp+40]
  000af	52		 push	 edx
  000b0	89 8e 2c 01 00
	00		 mov	 DWORD PTR [esi+300], ecx
  000b6	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  000b9	50		 push	 eax
  000ba	51		 push	 ecx
  000bb	8b cf		 mov	 ecx, edi
  000bd	e8 00 00 00 00	 call	 ?SendCS_MONACTION_ACK@CTPlayer@@QAEXKEMMMKE@Z ; CTPlayer::SendCS_MONACTION_ACK

; 58   : 
; 59   : 		if(pMON->m_pSPAWN->m_dwLeader == pMON->m_dwID )

  000c2	8b 96 e8 00 00
	00		 mov	 edx, DWORD PTR [esi+232]
  000c8	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000cb	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  000ce	75 16		 jne	 SHORT $L152266

; 60   : 			pMON->MoveFollower(fPosX, fPosY, fPosZ);

  000d0	8b 4c 24 1c	 mov	 ecx, DWORD PTR _fPosZ$[esp+20]
  000d4	8b 54 24 0c	 mov	 edx, DWORD PTR _fPosY$[esp+24]
  000d8	8b 44 24 10	 mov	 eax, DWORD PTR _fPosX$[esp+24]
  000dc	51		 push	 ecx
  000dd	52		 push	 edx
  000de	50		 push	 eax
  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?MoveFollower@CTMonster@@QAEXMMM@Z ; CTMonster::MoveFollower
$L152266:

; 61   : 	}
; 62   : 
; 63   : 	return CTAICommand::ExecAI( pMON, dwEventHost, dwRHId, bRHType);

  000e6	8b 4c 24 28	 mov	 ecx, DWORD PTR _bRHType$[esp+20]
  000ea	8b 54 24 24	 mov	 edx, DWORD PTR _dwRHId$[esp+20]
  000ee	8b 44 24 20	 mov	 eax, DWORD PTR _dwEventHost$[esp+20]
  000f2	51		 push	 ecx
  000f3	52		 push	 edx
  000f4	50		 push	 eax
  000f5	56		 push	 esi
  000f6	8b cb		 mov	 ecx, ebx
  000f8	e8 00 00 00 00	 call	 ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::ExecAI
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx

; 64   : }

  00100	83 c4 0c	 add	 esp, 12			; 0000000cH
  00103	c2 10 00	 ret	 16			; 00000010H
?ExecAI@CTAICmdRoam@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdRoam::ExecAI
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCTAICmdRoam@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTAICmdRoam@@UAEPAXI@Z PROC NEAR			; CTAICmdRoam::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTAICmdRoam@@UAE@XZ	; CTAICmdRoam::~CTAICmdRoam
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L152714
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L152714:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTAICmdRoam@@UAEPAXI@Z ENDP				; CTAICmdRoam::`scalar deleting destructor'
_TEXT	ENDS
END
