; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TMap.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_1EO@BGAEGJFB@?$AA?$HL?$AA5?$AA1?$AAA?$AAB?$AA7?$AAA?$AA3?$AA0?$AA?9?$AA9?$AA9?$AA5?$AAA?$AA?9?$AA4?$AA4?$AAA?$AAB?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@JJOAEHDK@?$HL51AB7A30?9995A?944AB?9B869?97D79E92@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGFEPDED@LocalService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CCDHMLDD@?9?1?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MIGBKCMN@UnregServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LJBJJPCG@RegServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNHNHBAB@Install?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LAEJNBCE@UnInstall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBFDLFJJ@?$CFs?5?9Name?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GECJKCAK@Could?5not?5open?5Service?5Manager?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCEGMCNE@RPCSS?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDJFCBEP@Could?5not?5start?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMOCNDDL@Could?5not?5open?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKJBBOLK@Could?5not?5stop?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMBIIKKI@Could?5not?5delete?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetAppId@CTMapSvrModule@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppIdT@CTMapSvrModule@@SAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryAppId@CTMapSvrModule@@SGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterAppId@CTMapSvrModule@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Install@CTMapSvrModule@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E5
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E6
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ??0CTMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTMap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTMap@@QAE@PAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagSWITCH@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagGATE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagGODTOWER@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagGODBALL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTMap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagSWITCH@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagGATE@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagGODBALL@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagGODTOWER@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagSWITCH@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagGATE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagGODBALL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagGODTOWER@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitMap@CTMap@@QAEXPAVCSqlDatabase@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitExtCell@CTMap@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindMonSpawn@CTMap@@QAEPAVCTMonSpawn@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindNeighbor@CTMap@@QAEPAVCTObjBase@@EKMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNeerPlayer@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNeerMonster@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGODTOWER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindMonster@CTMap@@QAEPAVCTMonster@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindSwitch@CTMap@@QAEPAUtagSWITCH@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindMapGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindGodTower@CTMap@@QAEPAUtagGODTOWER@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitGodBall@CTMap@@QAEXEKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveTempGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResetTempGodBall@CTMap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckPower@CTMap@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUnitPlayer@CTMap@@QAEXPAV?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLocalBonus@CTMap@@QAEGEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartWar@CTMap@@QAEXGEKGKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndWar@CTMap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCastle@CTMap@@QAEXPAUtagLOCAL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearMonster@CTMap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTNMTPlayer@CTMap@@QAEXPAUtagTOURNAMENTPLAYER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndTournament@CTMap@@QAEEAAEAAK1E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResetTournament@CTMap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanDoTournament@CTMap@@QAEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectWinner@CTMap@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHideTick@CTMap@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Tokenize@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@PBDAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEXABQAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAPAUtagGATE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEXABQAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXABQAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAPAUtagTMAPMON@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXABQAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterAppId@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsInstalled@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Uninstall@?$CAtlServiceModuleT@VCTMapSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCTMapSvrModule@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTCell@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODBALL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGG@std@@QAE@ABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@QAE@ABGABQAUtagTSPAWNPOS@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTCell@@@std@@QAE@ABKABQAVCTCell@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGPAUtagGODTOWER@@@std@@QAE@ABGABQAUtagGODTOWER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGPAUtagGODBALL@@@std@@QAE@ABGABQAUtagGODBALL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGPAVCTMonSpawn@@@std@@QAE@ABGABQAVCTMonSpawn@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBEPAVCTInven@@@std@@QAE@ABEABQAVCTInven@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGPAVCTSkill@@@std@@QAE@ABGABQAVCTSkill@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBEE@std@@QAE@ABE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@QAE@ABKABQAUtagTOURNAMENTPLAYER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCTMapSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanIncluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanExcluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE@V?$allocator@PAUtagSWITCH@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagSWITCH@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE@V?$allocator@PAUtagGATE@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagGATE@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@E@std@@QBE_NABE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@E@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXPAPAVCTMonster@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@SAABEABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@EV?$allocator@E@std@@@std@@IAE@V?$allocator@E@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UninitializeCom@?$CAtlExeModuleT@VCTMapSvrModule@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTCell@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODBALL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@E@1@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEAAPAUtagSWITCH@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEAAPAUtagGATE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEAAPAVCTMonster@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@EV?$allocator@E@std@@@std@@QBEAAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@EV?$allocator@E@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEAAPAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXPAPAUtagSWITCH@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagSWITCH@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagSWITCH@@@std@@QAEXPAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAUtagSWITCH@@@std@@QAEPAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXPAPAUtagGATE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagGATE@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagGATE@@@std@@QAEXPAPAUtagGATE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAUtagGATE@@@std@@QAEPAPAUtagGATE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@E@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTMonSpawn@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTCell@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODBALL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODTOWER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEABQAUtagSWITCH@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEABQAUtagGATE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEABQAVCTMonster@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEABQAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUtagSWITCH@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUtagGATE@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCTMonster@@@std@@QAEXPAPAVCTMonster@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVCTMonster@@@std@@QAEPAPAVCTMonster@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBEE@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEE@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVCTMonster@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTMONSPAWN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTMONSPAWN@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@QAE@U?$less@E@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagSWITCH@@IPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagGATE@@IPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAPAVCTPlayer@@IPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAPAVCTMonster@@IPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAUtagSWITCH@@@std@@YAPAPAUtagSWITCH@@IPAPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAUtagGATE@@@std@@YAPAPAUtagGATE@@IPAPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVCTMonster@@@std@@YAPAPAVCTMonster@@IPAPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGG@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBEE@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGG@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBEE@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagSWITCH@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagSWITCH@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagGATE@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagGATE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTMonster@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTMonster@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAPAUtagSWITCH@@PAPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAPAUtagGATE@@PAPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAPAVCTPlayer@@PAPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAPAVCTMonster@@PAPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAPAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAPAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAPAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAPAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagSWITCH@@PAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagGATE@@PAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAVCTPlayer@@PAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAVCTMonster@@PAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEAAPAUtagTMAPMON@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEABQAUtagTMAPMON@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDistance@@YAMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?nCELL@?1??InitExtCell@CTMap@@QAEXG@Z@4PAY01HA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?nCELL@?1??InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z@4PAY01HA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@GV?$allocator@G@std@@@std@@IAE@V?$allocator@G@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@G@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@G@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@GV?$allocator@G@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@G@std@@YAPAGIPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AtlLoadString@ATL@@YAHIPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WordCmpI@CAtlModule@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L189912

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L189912
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L189913
$L189912:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L189913:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _hr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 41   : 	}

  00008	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T189934 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	68 00 00 00 00	 push	 OFFSET FLAT:__TI1?AVCAtlException@ATL@@
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR $T189934[esp]
  0000d	51		 push	 ecx
  0000e	89 44 24 0c	 mov	 DWORD PTR $T189934[esp+4], eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$L189941:
$L189940:
  00017	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?GetLocalBonus@CTMap@@QAEGEGG@Z			; CTMap::GetLocalBonus
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
;	COMDAT ?GetLocalBonus@CTMap@@QAEGEGG@Z
_TEXT	SEGMENT
_bDefCountry$ = 8					; size = 1
_wDPoint$ = 12						; size = 2
_wCPoint$ = 16						; size = 2
?GetLocalBonus@CTMap@@QAEGEGG@Z PROC NEAR		; CTMap::GetLocalBonus, COMDAT
; _this$ = ecx

; 1657 : 	WORD wDefPoint = 0;
; 1658 : 	WORD wAtkPoint = 0;
; 1659 : 
; 1660 : 	if(bDefCountry == TCONTRY_D)

  00000	8a 44 24 04	 mov	 al, BYTE PTR _bDefCountry$[esp-4]
  00004	84 c0		 test	 al, al
  00006	75 0a		 jne	 SHORT $L179249

; 1661 : 	{
; 1662 : 		wDefPoint = wDPoint;

  00008	8b 44 24 08	 mov	 eax, DWORD PTR _wDPoint$[esp-4]

; 1663 : 		wAtkPoint = wCPoint;

  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR _wCPoint$[esp-4]

; 1664 : 	}
; 1665 : 	else

  00010	eb 08		 jmp	 SHORT $L179250
$L179249:

; 1666 : 	{
; 1667 : 		wDefPoint = wCPoint;

  00012	8b 44 24 0c	 mov	 eax, DWORD PTR _wCPoint$[esp-4]

; 1668 : 		wAtkPoint = wDPoint;

  00016	8b 4c 24 08	 mov	 ecx, DWORD PTR _wDPoint$[esp-4]
$L179250:
  0001a	56		 push	 esi

; 1669 : 	}
; 1670 : 
; 1671 : 	if(wDefPoint+wAtkPoint == 0)

  0001b	0f b7 f0	 movzx	 esi, ax
  0001e	0f b7 d1	 movzx	 edx, cx
  00021	03 d6		 add	 edx, esi
  00023	5e		 pop	 esi
  00024	75 07		 jne	 SHORT $L179251

; 1672 : 		wDefPoint = wAtkPoint = TLOCALBONUS_POINT;

  00026	b9 20 03 00 00	 mov	 ecx, 800		; 00000320H
  0002b	8b c1		 mov	 eax, ecx
$L179251:

; 1673 : 
; 1674 : 	return WORD(DWORD(wDefPoint) * TLOCALBONUS_POINT / (wDefPoint+wAtkPoint));

  0002d	0f b7 c0	 movzx	 eax, ax
  00030	0f b7 c9	 movzx	 ecx, cx
  00033	03 c8		 add	 ecx, eax
  00035	69 c0 20 03 00
	00		 imul	 eax, 800		; 00000320H
  0003b	33 d2		 xor	 edx, edx
  0003d	f7 f1		 div	 ecx

; 1675 : }

  0003f	c2 0c 00	 ret	 12			; 0000000cH
?GetLocalBonus@CTMap@@QAEGEGG@Z ENDP			; CTMap::GetLocalBonus
_TEXT	ENDS
PUBLIC	?SetCastle@CTMap@@QAEXPAUtagLOCAL@@@Z		; CTMap::SetCastle
; Function compile flags: /Ogty
;	COMDAT ?SetCastle@CTMap@@QAEXPAUtagLOCAL@@@Z
_TEXT	SEGMENT
_pCastle$ = 8						; size = 4
?SetCastle@CTMap@@QAEXPAUtagLOCAL@@@Z PROC NEAR		; CTMap::SetCastle, COMDAT
; _this$ = ecx

; 1798 : 	m_pCastle = pCastle;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pCastle$[esp-4]
  00004	89 81 90 00 00
	00		 mov	 DWORD PTR [ecx+144], eax

; 1799 : }

  0000a	c2 04 00	 ret	 4
?SetCastle@CTMap@@QAEXPAUtagLOCAL@@@Z ENDP		; CTMap::SetCastle
_TEXT	ENDS
PUBLIC	?SelectWinner@CTMap@@QAEXXZ			; CTMap::SelectWinner
EXTRN	_rand:NEAR
; Function compile flags: /Ogty
;	COMDAT ?SelectWinner@CTMap@@QAEXXZ
_TEXT	SEGMENT
?SelectWinner@CTMap@@QAEXXZ PROC NEAR			; CTMap::SelectWinner, COMDAT
; _this$ = ecx

; 1975 : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1976 : 	while(m_wDefKillPoint == m_wAtkKillPoint)

  00003	66 8b 86 a2 00
	00 00		 mov	 ax, WORD PTR [esi+162]
  0000a	66 3b 86 a4 00
	00 00		 cmp	 ax, WORD PTR [esi+164]
  00011	75 3a		 jne	 SHORT $L179576
$L179575:

; 1977 : 	{
; 1978 : 		m_wDefKillPoint = rand() % 6 + 1;

  00013	e8 00 00 00 00	 call	 _rand
  00018	99		 cdq
  00019	b9 06 00 00 00	 mov	 ecx, 6
  0001e	f7 f9		 idiv	 ecx
  00020	42		 inc	 edx
  00021	66 89 96 a2 00
	00 00		 mov	 WORD PTR [esi+162], dx

; 1979 : 		m_wAtkKillPoint = rand() % 6 + 1;

  00028	e8 00 00 00 00	 call	 _rand
  0002d	99		 cdq
  0002e	b9 06 00 00 00	 mov	 ecx, 6
  00033	f7 f9		 idiv	 ecx
  00035	42		 inc	 edx
  00036	66 89 96 a4 00
	00 00		 mov	 WORD PTR [esi+164], dx
  0003d	66 8b 96 a2 00
	00 00		 mov	 dx, WORD PTR [esi+162]
  00044	66 3b 96 a4 00
	00 00		 cmp	 dx, WORD PTR [esi+164]
  0004b	74 c6		 je	 SHORT $L179575
$L179576:
  0004d	5e		 pop	 esi

; 1980 : 	}
; 1981 : }

  0004e	c3		 ret	 0
?SelectWinner@CTMap@@QAEXXZ ENDP			; CTMap::SelectWinner
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L189956
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L189956:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE_NXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L189966
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L189966:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE_NXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::empty
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L189971
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L189971:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L189976
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L189976:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE_NXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L189985
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L189985:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::empty
_TEXT	ENDS
PUBLIC	?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L189991
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L189991:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx

; 517  : 		}

  0000f	c3		 ret	 0
?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?empty@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::empty, COMDAT
; _this$ = ecx

; 458  : 		return (size() == 0);

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 94 c0	 sete	 al

; 459  : 		}

  0000a	c3		 ret	 0
?empty@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::empty
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGG@std@@QAE@ABG0@Z		; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBGG@std@@QAE@ABG0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGG@std@@QAE@ABG0@Z PROC NEAR		; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00013	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 35   : 		}

  00017	c2 08 00	 ret	 8
??0?$pair@$$CBGG@std@@QAE@ABG0@Z ENDP			; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@QAE@ABGABQAUtagTSPAWNPOS@@@Z ; std::pair<unsigned short const ,tagTSPAWNPOS *>::pair<unsigned short const ,tagTSPAWNPOS *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@QAE@ABGABQAUtagTSPAWNPOS@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@QAE@ABGABQAUtagTSPAWNPOS@@@Z PROC NEAR ; std::pair<unsigned short const ,tagTSPAWNPOS *>::pair<unsigned short const ,tagTSPAWNPOS *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00015	c2 08 00	 ret	 8
??0?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@QAE@ABGABQAUtagTSPAWNPOS@@@Z ENDP ; std::pair<unsigned short const ,tagTSPAWNPOS *>::pair<unsigned short const ,tagTSPAWNPOS *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTCell@@@std@@QAE@ABKABQAVCTCell@@@Z ; std::pair<unsigned long const ,CTCell *>::pair<unsigned long const ,CTCell *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCTCell@@@std@@QAE@ABKABQAVCTCell@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTCell@@@std@@QAE@ABKABQAVCTCell@@@Z PROC NEAR ; std::pair<unsigned long const ,CTCell *>::pair<unsigned long const ,CTCell *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTCell@@@std@@QAE@ABKABQAVCTCell@@@Z ENDP ; std::pair<unsigned long const ,CTCell *>::pair<unsigned long const ,CTCell *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z PROC NEAR ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagSWITCH@@@std@@QAE@ABKABQAUtagSWITCH@@@Z ENDP ; std::pair<unsigned long const ,tagSWITCH *>::pair<unsigned long const ,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z PROC NEAR ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagGATE@@@std@@QAE@ABKABQAUtagGATE@@@Z ENDP ; std::pair<unsigned long const ,tagGATE *>::pair<unsigned long const ,tagGATE *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGPAUtagGODTOWER@@@std@@QAE@ABGABQAUtagGODTOWER@@@Z ; std::pair<unsigned short const ,tagGODTOWER *>::pair<unsigned short const ,tagGODTOWER *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBGPAUtagGODTOWER@@@std@@QAE@ABGABQAUtagGODTOWER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGPAUtagGODTOWER@@@std@@QAE@ABGABQAUtagGODTOWER@@@Z PROC NEAR ; std::pair<unsigned short const ,tagGODTOWER *>::pair<unsigned short const ,tagGODTOWER *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00015	c2 08 00	 ret	 8
??0?$pair@$$CBGPAUtagGODTOWER@@@std@@QAE@ABGABQAUtagGODTOWER@@@Z ENDP ; std::pair<unsigned short const ,tagGODTOWER *>::pair<unsigned short const ,tagGODTOWER *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGPAUtagGODBALL@@@std@@QAE@ABGABQAUtagGODBALL@@@Z ; std::pair<unsigned short const ,tagGODBALL *>::pair<unsigned short const ,tagGODBALL *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBGPAUtagGODBALL@@@std@@QAE@ABGABQAUtagGODBALL@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGPAUtagGODBALL@@@std@@QAE@ABGABQAUtagGODBALL@@@Z PROC NEAR ; std::pair<unsigned short const ,tagGODBALL *>::pair<unsigned short const ,tagGODBALL *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00015	c2 08 00	 ret	 8
??0?$pair@$$CBGPAUtagGODBALL@@@std@@QAE@ABGABQAUtagGODBALL@@@Z ENDP ; std::pair<unsigned short const ,tagGODBALL *>::pair<unsigned short const ,tagGODBALL *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGPAVCTMonSpawn@@@std@@QAE@ABGABQAVCTMonSpawn@@@Z ; std::pair<unsigned short const ,CTMonSpawn *>::pair<unsigned short const ,CTMonSpawn *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBGPAVCTMonSpawn@@@std@@QAE@ABGABQAVCTMonSpawn@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGPAVCTMonSpawn@@@std@@QAE@ABGABQAVCTMonSpawn@@@Z PROC NEAR ; std::pair<unsigned short const ,CTMonSpawn *>::pair<unsigned short const ,CTMonSpawn *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00015	c2 08 00	 ret	 8
??0?$pair@$$CBGPAVCTMonSpawn@@@std@@QAE@ABGABQAVCTMonSpawn@@@Z ENDP ; std::pair<unsigned short const ,CTMonSpawn *>::pair<unsigned short const ,CTMonSpawn *>
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEIXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190069
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L190069:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE_NXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L190079
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L190079:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE_NXZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::empty
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBEPAVCTInven@@@std@@QAE@ABEABQAVCTInven@@@Z ; std::pair<unsigned char const ,CTInven *>::pair<unsigned char const ,CTInven *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBEPAVCTInven@@@std@@QAE@ABEABQAVCTInven@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBEPAVCTInven@@@std@@QAE@ABEABQAVCTInven@@@Z PROC NEAR ; std::pair<unsigned char const ,CTInven *>::pair<unsigned char const ,CTInven *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	88 10		 mov	 BYTE PTR [eax], dl
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBEPAVCTInven@@@std@@QAE@ABEABQAVCTInven@@@Z ENDP ; std::pair<unsigned char const ,CTInven *>::pair<unsigned char const ,CTInven *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z PROC NEAR ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTMonster@@@std@@QAE@ABKABQAVCTMonster@@@Z ENDP ; std::pair<unsigned long const ,CTMonster *>::pair<unsigned long const ,CTMonster *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGPAVCTSkill@@@std@@QAE@ABGABQAVCTSkill@@@Z ; std::pair<unsigned short const ,CTSkill *>::pair<unsigned short const ,CTSkill *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBGPAVCTSkill@@@std@@QAE@ABGABQAVCTSkill@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGPAVCTSkill@@@std@@QAE@ABGABQAVCTSkill@@@Z PROC NEAR ; std::pair<unsigned short const ,CTSkill *>::pair<unsigned short const ,CTSkill *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00015	c2 08 00	 ret	 8
??0?$pair@$$CBGPAVCTSkill@@@std@@QAE@ABGABQAVCTSkill@@@Z ENDP ; std::pair<unsigned short const ,CTSkill *>::pair<unsigned short const ,CTSkill *>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z PROC NEAR ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAVCTPlayer@@@std@@QAE@ABKABQAVCTPlayer@@@Z ENDP ; std::pair<unsigned long const ,CTPlayer *>::pair<unsigned long const ,CTPlayer *>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBEE@std@@QAE@ABE0@Z		; std::pair<unsigned char const ,unsigned char>::pair<unsigned char const ,unsigned char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBEE@std@@QAE@ABE0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBEE@std@@QAE@ABE0@Z PROC NEAR		; std::pair<unsigned char const ,unsigned char>::pair<unsigned char const ,unsigned char>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8a 11		 mov	 dl, BYTE PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	88 10		 mov	 BYTE PTR [eax], dl
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 01	 mov	 BYTE PTR [eax+1], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBEE@std@@QAE@ABE0@Z ENDP			; std::pair<unsigned char const ,unsigned char>::pair<unsigned char const ,unsigned char>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@QAE@ABKABQAUtagTOURNAMENTPLAYER@@@Z ; std::pair<unsigned long const ,tagTOURNAMENTPLAYER *>::pair<unsigned long const ,tagTOURNAMENTPLAYER *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@QAE@ABKABQAUtagTOURNAMENTPLAYER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@QAE@ABKABQAUtagTOURNAMENTPLAYER@@@Z PROC NEAR ; std::pair<unsigned long const ,tagTOURNAMENTPLAYER *>::pair<unsigned long const ,tagTOURNAMENTPLAYER *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@QAE@ABKABQAUtagTOURNAMENTPLAYER@@@Z ENDP ; std::pair<unsigned long const ,tagTOURNAMENTPLAYER *>::pair<unsigned long const ,tagTOURNAMENTPLAYER *>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190120
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L190120:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagSWITCH@@@std@@QAE@XZ	; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@PAUtagSWITCH@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUtagSWITCH@@@std@@QAE@XZ PROC NEAR	; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUtagSWITCH@@@std@@QAE@XZ ENDP		; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190128
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L190128:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagGATE@@@std@@QAE@XZ		; std::allocator<tagGATE *>::allocator<tagGATE *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@PAUtagGATE@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUtagGATE@@@std@@QAE@XZ PROC NEAR	; std::allocator<tagGATE *>::allocator<tagGATE *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUtagGATE@@@std@@QAE@XZ ENDP		; std::allocator<tagGATE *>::allocator<tagGATE *>
_TEXT	ENDS
PUBLIC	??R?$less@G@std@@QBE_NABG0@Z			; std::less<unsigned short>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@G@std@@QBE_NABG0@Z PROC NEAR			; std::less<unsigned short>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	66 8b 08	 mov	 cx, WORD PTR [eax]
  00007	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000b	66 3b 0a	 cmp	 cx, WORD PTR [edx]
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 140  : 		}

  00012	c2 08 00	 ret	 8
??R?$less@G@std@@QBE_NABG0@Z ENDP			; std::less<unsigned short>::operator()
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190142
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L190142:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190147
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L190147:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::size
_TEXT	ENDS
PUBLIC	??R?$less@E@std@@QBE_NABE0@Z			; std::less<unsigned char>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@E@std@@QBE_NABE0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@E@std@@QBE_NABE0@Z PROC NEAR			; std::less<unsigned char>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	33 c0		 xor	 eax, eax
  0000c	3a 0a		 cmp	 cl, BYTE PTR [edx]
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 140  : 		}

  00012	c2 08 00	 ret	 8
??R?$less@E@std@@QBE_NABE0@Z ENDP			; std::less<unsigned char>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@E@std@@QAE@XZ			; std::allocator<unsigned char>::allocator<unsigned char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@E@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@E@std@@QAE@XZ PROC NEAR			; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@E@std@@QAE@XZ ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L190177
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L190177:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::capacity
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@SAABEABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@SAABEABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@SAABEABU?$pair@$$CBEPAVCTInven@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@SAABEABU?$pair@$$CBEPAVCTInven@@@2@@Z ENDP ; std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTSkill@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTSkill@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L182207
  0000e	8b ff		 npad	 2
$L182206:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L182206
$L182207:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L182211
  0000d	8d 49 00	 npad	 3
$L182210:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L182210
$L182211:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L182219

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L182219:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L182220

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L182220:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L182222

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L182222:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
; Function compile flags: /Ogty
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 71   : 		ATLASSERT(nRefs > 0);
; 72   : 		_InterlockedIncrement(&nRefs);

  00000	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	f0 0f c1 01	 lock	  xadd	 DWORD PTR [ecx], eax

; 73   : 	}

  0000c	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Ogty
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 76   : 		return nRefs < 0;

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 9c c0	 setl	 al

; 77   : 	}

  0000a	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 80   : 		return( nRefs > 1 ); 

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	83 fa 01	 cmp	 edx, 1
  00008	0f 9f c0	 setg	 al

; 81   : 	}

  0000b	c3		 ret	 0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L182495
  0000e	8b ff		 npad	 2
$L182494:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L182494
$L182495:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L182499
  0000d	8d 49 00	 npad	 3
$L182498:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L182498
$L182499:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L182507

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L182507:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L182508

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L182508:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L182510

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L182510:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTCell@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAVCTCell@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 11	 add	 eax, 17			; 00000011H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@XZ	; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L190777:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L190777
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 282  : 	{	// return pointer category from pointer to unsigned char arguments

  00000	51		 push	 ecx

; 283  : 	_Scalar_ptr_iterator_tag _Cat;
; 284  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 285  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAE0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 322  : 	{	// return pointer category from pointer to unsigned short arguments

  00000	51		 push	 ecx

; 323  : 	_Scalar_ptr_iterator_tag _Cat;
; 324  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 325  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0e	 add	 eax, 14			; 0000000eH

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0f	 add	 eax, 15			; 0000000fH

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::size
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L183366
  0000e	8b ff		 npad	 2
$L183365:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L183365
$L183366:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L183370
  0000d	8d 49 00	 npad	 3
$L183369:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L183369
$L183370:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 0f	 mov	 bl, BYTE PTR [esi+15]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183378

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183378:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L183379

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L183379:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L183381

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L183381:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEE@2@@Z ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEE@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEE@2@@Z ENDP ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@XZ	; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z	; ATL::ChTraitsCRT<char>::StringCompare
EXTRN	__mbscmp:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT
_pszA$ = 8						; size = 4
_pszB$ = 12						; size = 4
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z PROC NEAR	; ATL::ChTraitsCRT<char>::StringCompare, COMDAT

; 336  : 		return _mbscmp( reinterpret_cast< const unsigned char* >( pszA ), reinterpret_cast< const unsigned char* >( pszB ) );

  00000	e9 00 00 00 00	 jmp	 __mbscmp
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z ENDP	; ATL::ChTraitsCRT<char>::StringCompare
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagSWITCH@@@std@@QAE@ABV01@@Z	; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@PAUtagSWITCH@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUtagSWITCH@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUtagSWITCH@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<tagSWITCH *>::allocator<tagSWITCH *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUtagSWITCH@@@std@@QAEXPAPAUtagSWITCH@@I@Z ; std::allocator<tagSWITCH *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAUtagSWITCH@@@std@@QAEXPAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUtagSWITCH@@@std@@QAEXPAPAUtagSWITCH@@I@Z PROC NEAR ; std::allocator<tagSWITCH *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUtagSWITCH@@@std@@QAEXPAPAUtagSWITCH@@I@Z ENDP ; std::allocator<tagSWITCH *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagGATE@@@std@@QAE@ABV01@@Z	; std::allocator<tagGATE *>::allocator<tagGATE *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAUtagGATE@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUtagGATE@@@std@@QAE@ABV01@@Z PROC NEAR	; std::allocator<tagGATE *>::allocator<tagGATE *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUtagGATE@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<tagGATE *>::allocator<tagGATE *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUtagGATE@@@std@@QAEXPAPAUtagGATE@@I@Z ; std::allocator<tagGATE *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAUtagGATE@@@std@@QAEXPAPAUtagGATE@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUtagGATE@@@std@@QAEXPAPAUtagGATE@@I@Z PROC NEAR ; std::allocator<tagGATE *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUtagGATE@@@std@@QAEXPAPAUtagGATE@@I@Z ENDP ; std::allocator<tagGATE *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@E@std@@QAE@ABV01@@Z		; std::allocator<unsigned char>::allocator<unsigned char>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@E@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@E@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@E@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@E@std@@QAEXPAEI@Z	; std::allocator<unsigned char>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@E@std@@QAEXPAEI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@E@std@@QAEXPAEI@Z PROC NEAR	; std::allocator<unsigned char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@E@std@@QAEXPAEI@Z ENDP		; std::allocator<unsigned char>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTPlayer@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Color
; Function compile flags: /Ogty
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Color
; Function compile flags: /Ogty
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTSkill@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTRecallMon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTSelfObj@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTMonster@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::allocator<std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagSWITCH@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::allocator<std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagGATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::allocator<std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTMonSpawn@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTMonSpawn@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTMonSpawn@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAVCTMonSpawn@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::allocator<std::pair<unsigned short const ,CTMonSpawn *> >
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTCell@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTCell@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTCell@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAVCTCell@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	_sqrtf
EXTRN	__fltused:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_sqrtf	PROC NEAR					; COMDAT

; 470  :         {return ((float)sqrt((double)_X)); }

  00000	d9 44 24 04	 fld	 DWORD PTR __X$[esp-4]
  00004	d9 fa		 fsqrt
  00006	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,CTCell *> >::allocator<std::pair<unsigned long const ,CTCell *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBGG@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned short const ,unsigned short> >::allocator<std::pair<unsigned short const ,unsigned short> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODBALL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODBALL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODBALL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODBALL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?GetDistance@@YAMMMMM@Z				; GetDistance
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmaptype.h
;	COMDAT ?GetDistance@@YAMMMMM@Z
_TEXT	SEGMENT
_fStartPosX$ = 8					; size = 4
_fStartPosZ$ = 12					; size = 4
_fEndPosX$ = 16						; size = 4
_fEndPosZ$ = 20						; size = 4
?GetDistance@@YAMMMMM@Z PROC NEAR			; GetDistance, COMDAT

; 101  : 	FLOAT fDistX = fStartPosX - fEndPosX;

  00000	d9 44 24 04	 fld	 DWORD PTR _fStartPosX$[esp-4]
  00004	d8 64 24 0c	 fsub	 DWORD PTR _fEndPosX$[esp-4]

; 102  : 	FLOAT fDistZ = fStartPosZ - fEndPosZ;

  00008	d9 44 24 08	 fld	 DWORD PTR _fStartPosZ$[esp-4]
  0000c	d8 64 24 10	 fsub	 DWORD PTR _fEndPosZ$[esp-4]

; 103  : 	return sqrtf(fDistX * fDistX + fDistZ * fDistZ);

  00010	d9 c0		 fld	 ST(0)
  00012	d8 c9		 fmul	 ST(0), ST(1)
  00014	d9 c2		 fld	 ST(2)
  00016	d8 cb		 fmul	 ST(0), ST(3)
  00018	de c1		 faddp	 ST(1), ST(0)
  0001a	d9 fa		 fsqrt
  0001c	dd da		 fstp	 ST(2)
  0001e	dd d8		 fstp	 ST(0)

; 104  : }

  00020	c3		 ret	 0
?GetDistance@@YAMMMMM@Z ENDP				; GetDistance
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::allocator<std::pair<unsigned short const ,tagGODBALL *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODTOWER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODTOWER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODTOWER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagGODTOWER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::allocator<std::pair<unsigned short const ,tagGODTOWER *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEE@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBEE@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned char const ,unsigned char> >::allocator<std::pair<unsigned char const ,unsigned char> >
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEABQAUtagSWITCH@@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEABQAUtagSWITCH@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEABQAUtagSWITCH@@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEABQAUtagSWITCH@@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEABQAUtagGATE@@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEABQAUtagGATE@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEABQAUtagGATE@@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEABQAUtagGATE@@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEABQAVCTPlayer@@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	f7 d9		 neg	 ecx
  0000a	c1 e1 02	 shl	 ecx, 2
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  00011	c2 04 00	 ret	 4
??Ziterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEABQAVCTMonster@@XZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEABQAVCTMonster@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEABQAVCTMonster@@XZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEABQAVCTMonster@@XZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 10		 mov	 edx, DWORD PTR [eax]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00008	03 d1		 add	 edx, ecx
  0000a	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000c	c2 04 00	 ret	 4
??Yiterator@?$vector@EV?$allocator@E@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@EV?$allocator@E@std@@@std@@QBEABEXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	f7 d9		 neg	 ecx
  0000a	c1 e1 02	 shl	 ecx, 2
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  00011	c2 04 00	 ret	 4
??Ziterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEABQAUtagTMONSPAWN@@XZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEABQAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEABQAUtagTMONSPAWN@@XZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEABQAUtagTMONSPAWN@@XZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUtagSWITCH@@@std@@QBEIXZ ; std::allocator<tagSWITCH *>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@PAUtagSWITCH@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUtagSWITCH@@@std@@QBEIXZ PROC NEAR ; std::allocator<tagSWITCH *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUtagSWITCH@@@std@@QBEIXZ ENDP	; std::allocator<tagSWITCH *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUtagGATE@@@std@@QBEIXZ	; std::allocator<tagGATE *>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@PAUtagGATE@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUtagGATE@@@std@@QBEIXZ PROC NEAR ; std::allocator<tagGATE *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUtagGATE@@@std@@QBEIXZ ENDP	; std::allocator<tagGATE *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@E@std@@QBEIXZ		; std::allocator<unsigned char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@E@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@E@std@@QBEIXZ PROC NEAR		; std::allocator<unsigned char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@E@std@@QBEIXZ ENDP		; std::allocator<unsigned char>::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTPlayer *> >::max_size
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCTMonster@@@std@@QAEXPAPAVCTMonster@@I@Z ; std::allocator<CTMonster *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAVCTMonster@@@std@@QAEXPAPAVCTMonster@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCTMonster@@@std@@QAEXPAPAVCTMonster@@I@Z PROC NEAR ; std::allocator<CTMonster *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCTMonster@@@std@@QAEXPAPAVCTMonster@@I@Z ENDP ; std::allocator<CTMonster *>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned char const ,CTInven *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned char const ,CTInven *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned char const ,CTInven *> >::max_size
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,CTSkill *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,CTSkill *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,CTSkill *> >::max_size
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTMonster *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagSWITCH *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagGATE *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,CTCell *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,CTCell *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,CTCell *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L185495
  0000e	8b ff		 npad	 2
$L185494:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L185494
$L185495:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L185499
  0000d	8d 49 00	 npad	 3
$L185498:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L185498
$L185499:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,tagGODBALL *> >::max_size
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L185624
  0000e	8b ff		 npad	 2
$L185623:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L185623
$L185624:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L185628
  0000d	8d 49 00	 npad	 3
$L185627:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L185627
$L185628:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L185740
  0000e	8b ff		 npad	 2
$L185739:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L185739
$L185740:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L185744
  0000d	8d 49 00	 npad	 3
$L185743:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L185743
$L185744:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L185752

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L185752:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L185753

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L185753:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L185755

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L185755:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185776

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185776:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L191813

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L191791
$L191790:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L191790
$L191791:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L191813:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L191816
  0003d	8d 49 00	 npad	 3
$L185782:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185783

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185782
$L185783:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L191816

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L191816:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185790

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L191864

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L191845
  0001d	8d 49 00	 npad	 3
$L191844:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L191844
$L191845:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L191864:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185794
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185793:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185794

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185793
$L185794:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185790:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185902

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185902:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L191922

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L191900
$L191899:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L191899
$L191900:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L191922:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L191925
  0003d	8d 49 00	 npad	 3
$L185908:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185909

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185908
$L185909:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L191925

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L191925:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185916

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L191973

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L191954
  0001d	8d 49 00	 npad	 3
$L191953:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L191953
$L191954:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L191973:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185920
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185919:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185920

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185919
$L185920:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185916:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185961

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185961:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L192034

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L192019
$L192018:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L192018
$L192019:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L192034:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L192037
  0003d	8d 49 00	 npad	 3
$L185967:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185968

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185967
$L185968:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L192037

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L192037:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185975

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L192085

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L192073
  0001d	8d 49 00	 npad	 3
$L192072:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L192072
$L192073:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L192085:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185979
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185978:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185979

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185978
$L185979:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185975:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBEE@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned char const ,unsigned char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBEE@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBEE@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned char const ,unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBEE@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned char const ,unsigned char> >::max_size
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L186066

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L186066:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 0f	 mov	 bl, BYTE PTR [edx+15]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L192154

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L192132
$L192131:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L192131
$L192132:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L192154:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L192157
  0003d	8d 49 00	 npad	 3
$L186072:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L186073

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L186072
$L186073:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L192157

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L192157:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L186080

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 0f	 mov	 bl, BYTE PTR [edx+15]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L192205

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L192186
  0001d	8d 49 00	 npad	 3
$L192185:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L192185
$L192186:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L192205:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L186084
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L186083:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L186084

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L186083
$L186084:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L186080:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L186087

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L186087:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L192263

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L192241
$L192240:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L192240
$L192241:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L192263:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L192266
  0003d	8d 49 00	 npad	 3
$L186093:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L186094

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L186093
$L186094:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L192266

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L192266:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L186101

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L192314

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L192295
  0001d	8d 49 00	 npad	 3
$L192294:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L192294
$L192295:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L192314:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L186105
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L186104:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L186105

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L186104
$L186105:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L186101:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABV012@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABV012@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABV012@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABV012@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00017	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001a	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001c	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00020	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00023	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00026	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 41   : 			}

  0002a	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEE@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEE@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEE@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00017	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001a	66 8b 0a	 mov	 cx, WORD PTR [edx]
  0001d	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00021	66 89 48 0c	 mov	 WORD PTR [eax+12], cx
  00025	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00028	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 41   : 			}

  0002c	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBEE@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186215
  0000e	8b ff		 npad	 2
$L186214:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186214
$L186215:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186219
  0000d	8d 49 00	 npad	 3
$L186218:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186218
$L186219:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCTMonster@@@std@@QBEIXZ ; std::allocator<CTMonster *>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVCTMonster@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVCTMonster@@@std@@QBEIXZ PROC NEAR ; std::allocator<CTMonster *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVCTMonster@@@std@@QBEIXZ ENDP	; std::allocator<CTMonster *>::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186228
  0000e	8b ff		 npad	 2
$L186227:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186227
$L186228:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186232
  0000e	8b ff		 npad	 2
$L186231:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186231
$L186232:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186242
  0000d	8d 49 00	 npad	 3
$L186241:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186241
$L186242:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186252
  0000d	8d 49 00	 npad	 3
$L186251:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186251
$L186252:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186269
  0000e	8b ff		 npad	 2
$L186268:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186268
$L186269:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186273
  0000d	8d 49 00	 npad	 3
$L186272:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186272
$L186273:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186290
  0000e	8b ff		 npad	 2
$L186289:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186289
$L186290:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186294
  0000d	8d 49 00	 npad	 3
$L186293:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186293
$L186294:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186324
  0000e	8b ff		 npad	 2
$L186323:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186323
$L186324:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186328
  0000d	8d 49 00	 npad	 3
$L186327:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186327
$L186328:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186345
  0000e	8b ff		 npad	 2
$L186344:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186344
$L186345:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186349
  0000d	8d 49 00	 npad	 3
$L186348:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186348
$L186349:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186366
  0000e	8b ff		 npad	 2
$L186365:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186365
$L186366:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186370
  0000d	8d 49 00	 npad	 3
$L186369:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186369
$L186370:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L186400
  0000e	8b ff		 npad	 2
$L186399:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L186399
$L186400:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L186404
  0000d	8d 49 00	 npad	 3
$L186403:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L186403
$L186404:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ENDP ; std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ENDP ; std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@QAE@U?$less@G@1@@Z ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@QAE@U?$less@G@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@QAE@U?$less@G@1@@Z ENDP ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ENDP ; std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@QAE@U?$less@G@1@@Z ENDP ; std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0>
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTMONSPAWN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTMONSPAWN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTMONSPAWN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGPAUtagTMONSPAWN@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTMONSPAWN@@@2@@Z ; std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTMONSPAWN@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTMONSPAWN@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@SAABGABU?$pair@$$CBGPAUtagTMONSPAWN@@@2@@Z ENDP ; std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L186479

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L192777

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L192765
  0001d	8d 49 00	 npad	 3
$L192764:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L192764
$L192765:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L192777:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L186483
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L186482:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L186483

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L186482
$L186483:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L186479:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@QAE@U?$less@E@1@@Z ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@QAE@U?$less@E@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@QAE@U?$less@E@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@QAE@U?$less@E@1@@Z ENDP ; std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z ; std::_Ptr_cat<CTPlayer>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z PROC NEAR ; std::_Ptr_cat<CTPlayer>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z ENDP ; std::_Ptr_cat<CTPlayer>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z ; std::fill<tagSWITCH * *,tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z PROC NEAR ; std::fill<tagSWITCH * *,tagSWITCH *>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L187407
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L187405:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L187405
  0001c	5e		 pop	 esi
$L187407:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z ENDP ; std::fill<tagSWITCH * *,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUtagSWITCH@@@std@@YAPAPAUtagSWITCH@@IPAPAU1@@Z ; std::_Allocate<tagSWITCH *>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@PAUtagSWITCH@@@std@@YAPAPAUtagSWITCH@@IPAPAU1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUtagSWITCH@@@std@@YAPAPAUtagSWITCH@@IPAPAU1@@Z PROC NEAR ; std::_Allocate<tagSWITCH *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAUtagSWITCH@@@std@@YAPAPAUtagSWITCH@@IPAPAU1@@Z ENDP ; std::_Allocate<tagSWITCH *>
_TEXT	ENDS
PUBLIC	??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z ; std::fill<tagGATE * *,tagGATE *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z PROC NEAR ; std::fill<tagGATE * *,tagGATE *>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L187461
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L187459:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L187459
  0001c	5e		 pop	 esi
$L187461:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z ENDP ; std::fill<tagGATE * *,tagGATE *>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUtagGATE@@@std@@YAPAPAUtagGATE@@IPAPAU1@@Z ; std::_Allocate<tagGATE *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@PAUtagGATE@@@std@@YAPAPAUtagGATE@@IPAPAU1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUtagGATE@@@std@@YAPAPAUtagGATE@@IPAPAU1@@Z PROC NEAR ; std::_Allocate<tagGATE *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAUtagGATE@@@std@@YAPAPAUtagGATE@@IPAPAU1@@Z ENDP ; std::_Allocate<tagGATE *>
_TEXT	ENDS
PUBLIC	??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z ; std::fill<CTPlayer * *,CTPlayer *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z PROC NEAR ; std::fill<CTPlayer * *,CTPlayer *>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L187497
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L187495:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L187495
  0001c	5e		 pop	 esi
$L187497:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z ENDP ; std::fill<CTPlayer * *,CTPlayer *>
_TEXT	ENDS
PUBLIC	??$_Allocate@E@std@@YAPAEIPAE@Z			; std::_Allocate<unsigned char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@E@std@@YAPAEIPAE@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@E@std@@YAPAEIPAE@Z PROC NEAR		; std::_Allocate<unsigned char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@E@std@@YAPAEIPAE@Z ENDP			; std::_Allocate<unsigned char>
_TEXT	ENDS
PUBLIC	??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z ; std::fill<CTMonster * *,CTMonster *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z PROC NEAR ; std::fill<CTMonster * *,CTMonster *>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L187533
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L187531:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L187531
  0001c	5e		 pop	 esi
$L187533:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z ENDP ; std::fill<CTMonster * *,CTMonster *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCTMonster@@@std@@YAPAPAVCTMonster@@IPAPAV1@@Z ; std::_Allocate<CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@PAVCTMonster@@@std@@YAPAPAVCTMonster@@IPAPAV1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCTMonster@@@std@@YAPAPAVCTMonster@@IPAPAV1@@Z PROC NEAR ; std::_Allocate<CTMonster *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAVCTMonster@@@std@@YAPAPAVCTMonster@@IPAPAV1@@Z ENDP ; std::_Allocate<CTMonster *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *><std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *><std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *><std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *><std::pair<unsigned short const ,CTMonSpawn *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *><std::pair<unsigned short const ,CTMonSpawn *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *><std::pair<unsigned short const ,CTMonSpawn *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *><std::pair<unsigned short const ,tagTSPAWNPOS *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *><std::pair<unsigned short const ,tagTSPAWNPOS *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *><std::pair<unsigned short const ,tagTSPAWNPOS *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *><std::pair<unsigned long const ,CTCell *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *><std::pair<unsigned long const ,CTCell *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *><std::pair<unsigned long const ,CTCell *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGG@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *><std::pair<unsigned short const ,unsigned short> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGG@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGG@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *><std::pair<unsigned short const ,unsigned short> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGG@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *><std::pair<unsigned short const ,unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00007	c1 e0 02	 shl	 eax, 2
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODBALL *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODBALL *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODBALL *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODTOWER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODTOWER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *><std::pair<unsigned short const ,tagGODTOWER *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBEE@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *><std::pair<unsigned char const ,unsigned char> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBEE@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBEE@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *><std::pair<unsigned char const ,unsigned char> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBEE@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *><std::pair<unsigned char const ,unsigned char> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	c1 e0 04	 shl	 eax, 4
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 35   : 	}

  00010	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTMonster@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node><std::pair<unsigned long const ,CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L192976
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L192976:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagSWITCH@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node><std::pair<unsigned long const ,tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L192988
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L192988:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagGATE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node><std::pair<unsigned long const ,tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193000
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193000:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node><std::pair<unsigned short const ,CTMonSpawn *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node><std::pair<unsigned short const ,CTMonSpawn *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAVCTMonSpawn@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node><std::pair<unsigned short const ,CTMonSpawn *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193012
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193012:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node><std::pair<unsigned short const ,tagTSPAWNPOS *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node><std::pair<unsigned short const ,tagTSPAWNPOS *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node><std::pair<unsigned short const ,tagTSPAWNPOS *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193024
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193024:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node><std::pair<unsigned long const ,CTCell *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node><std::pair<unsigned long const ,CTCell *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAVCTCell@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node><std::pair<unsigned long const ,CTCell *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193036
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193036:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGG@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node><std::pair<unsigned short const ,unsigned short> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGG@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGG@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node><std::pair<unsigned short const ,unsigned short> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGG@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node><std::pair<unsigned short const ,unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193048
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193048:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node><std::pair<unsigned short const ,tagGODBALL *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node><std::pair<unsigned short const ,tagGODBALL *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagGODBALL@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node><std::pair<unsigned short const ,tagGODBALL *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193060
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193060:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node><std::pair<unsigned short const ,tagGODTOWER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node><std::pair<unsigned short const ,tagGODTOWER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBGPAUtagGODTOWER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node><std::pair<unsigned short const ,tagGODTOWER *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193072
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193072:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node><std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193084
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193084:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBEE@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node><std::pair<unsigned char const ,unsigned char> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBEE@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBEE@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node><std::pair<unsigned char const ,unsigned char> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBEE@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node><std::pair<unsigned char const ,unsigned char> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L193096
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L193096:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UtagSWITCH@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagSWITCH@@0@Z ; std::_Ptr_cat<tagSWITCH>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@UtagSWITCH@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagSWITCH@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UtagSWITCH@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagSWITCH@@0@Z PROC NEAR ; std::_Ptr_cat<tagSWITCH>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@UtagSWITCH@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagSWITCH@@0@Z ENDP ; std::_Ptr_cat<tagSWITCH>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UtagGATE@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagGATE@@0@Z ; std::_Ptr_cat<tagGATE>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@UtagGATE@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagGATE@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UtagGATE@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagGATE@@0@Z PROC NEAR ; std::_Ptr_cat<tagGATE>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@UtagGATE@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagGATE@@0@Z ENDP ; std::_Ptr_cat<tagGATE>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@VCTMonster@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTMonster@@0@Z ; std::_Ptr_cat<CTMonster>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@VCTMonster@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTMonster@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCTMonster@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTMonster@@0@Z PROC NEAR ; std::_Ptr_cat<CTMonster>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@VCTMonster@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTMonster@@0@Z ENDP ; std::_Ptr_cat<CTMonster>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagSWITCH * *,tagSWITCH * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<tagSWITCH * *,tagSWITCH * *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<tagSWITCH * *,tagSWITCH * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagGATE * *,tagGATE * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<tagGATE * *,tagGATE * *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<tagGATE * *,tagGATE * *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<CTPlayer * *,CTPlayer * *>
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<CTPlayer * *,CTPlayer * *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CTPlayer * *,CTPlayer * *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<CTMonster * *,CTMonster * *>
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<CTMonster * *,CTMonster * *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CTMonster * *,CTMonster * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
PUBLIC	??$fill_n@PAPAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@@Z ; std::fill_n<tagSWITCH * *,unsigned int,tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill_n@PAPAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAPAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@@Z PROC NEAR ; std::fill_n<tagSWITCH * *,unsigned int,tagSWITCH *>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L188063
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L188061:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L188061
  0001b	5e		 pop	 esi
$L188063:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAPAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@@Z ENDP ; std::fill_n<tagSWITCH * *,unsigned int,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAPAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@@Z ; std::fill_n<tagGATE * *,unsigned int,tagGATE *>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAPAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAPAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@@Z PROC NEAR ; std::fill_n<tagGATE * *,unsigned int,tagGATE *>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L188067
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L188065:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L188065
  0001b	5e		 pop	 esi
$L188067:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAPAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@@Z ENDP ; std::fill_n<tagGATE * *,unsigned int,tagGATE *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAPAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@@Z ; std::fill_n<CTPlayer * *,unsigned int,CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAPAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAPAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@@Z PROC NEAR ; std::fill_n<CTPlayer * *,unsigned int,CTPlayer *>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L188071
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L188069:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L188069
  0001b	5e		 pop	 esi
$L188071:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAPAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@@Z ENDP ; std::fill_n<CTPlayer * *,unsigned int,CTPlayer *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAPAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@@Z ; std::fill_n<CTMonster * *,unsigned int,CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAPAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAPAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@@Z PROC NEAR ; std::fill_n<CTMonster * *,unsigned int,CTMonster *>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L188075
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L188073:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L188073
  0001b	5e		 pop	 esi
$L188075:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAPAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@@Z ENDP ; std::fill_n<CTMonster * *,unsigned int,CTMonster *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUtagSWITCH@@PAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagSWITCH *,tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@PAUtagSWITCH@@PAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAUtagSWITCH@@PAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<tagSWITCH *,tagSWITCH *>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@PAUtagSWITCH@@PAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<tagSWITCH *,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUtagGATE@@PAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagGATE *,tagGATE *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_copy@PAUtagGATE@@PAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAUtagGATE@@PAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<tagGATE *,tagGATE *>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@PAUtagGATE@@PAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<tagGATE *,tagGATE *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVCTPlayer@@PAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CTPlayer *,CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_copy@PAVCTPlayer@@PAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAVCTPlayer@@PAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<CTPlayer *,CTPlayer *>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@PAVCTPlayer@@PAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CTPlayer *,CTPlayer *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVCTMonster@@PAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<CTMonster *,CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_copy@PAVCTMonster@@PAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAVCTMonster@@PAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<CTMonster *,CTMonster *>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@PAVCTMonster@@PAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CTMonster *,CTMonster *>
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L193181
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L193181:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	d1 f8		 sar	 eax, 1

; 517  : 		}

  00011	c3		 ret	 0
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::size
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
EXTRN	?g_strmgr@ATL@@3VCAtlStringMgr@1@A:BYTE		; ATL::g_strmgr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlstr.h
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ PROC NEAR ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 954  : 		return( &g_strmgr );

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr

; 955  : 	}

  00005	c3		 ret	 0
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L193192
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L193192:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@G@std@@QAE@XZ			; std::allocator<unsigned short>::allocator<unsigned short>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@G@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@G@std@@QAE@XZ PROC NEAR			; std::allocator<unsigned short>::allocator<unsigned short>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@G@std@@QAE@XZ ENDP			; std::allocator<unsigned short>::allocator<unsigned short>
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ PROC NEAR	; std::allocator<CTPlayer *>::allocator<CTPlayer *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAVCTPlayer@@@std@@QAE@XZ ENDP		; std::allocator<CTPlayer *>::allocator<CTPlayer *>
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEIXZ ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L193206
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L193206:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::size
_TEXT	ENDS
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 510  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 511  : 	}

  00002	c3		 ret	 0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L193220
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L193220:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@G@std@@QAE@ABV01@@Z		; std::allocator<unsigned short>::allocator<unsigned short>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@G@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@G@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<unsigned short>::allocator<unsigned short>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@G@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned short>::allocator<unsigned short>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@G@std@@QAEXPAGI@Z	; std::allocator<unsigned short>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@G@std@@QAEXPAGI@Z PROC NEAR	; std::allocator<unsigned short>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@G@std@@QAEXPAGI@Z ENDP		; std::allocator<unsigned short>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<CTPlayer *>::allocator<CTPlayer *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAVCTPlayer@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<CTPlayer *>::allocator<CTPlayer *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z ; std::allocator<CTPlayer *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z PROC NEAR ; std::allocator<CTPlayer *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCTPlayer@@@std@@QAEXPAPAVCTPlayer@@I@Z ENDP ; std::allocator<CTPlayer *>::deallocate
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 09	 lea	 edx, DWORD PTR [ecx+ecx]
  00009	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000b	c2 04 00	 ret	 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEABQAUtagTMAPMON@@XZ ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEABQAUtagTMAPMON@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEABQAUtagTMAPMON@@XZ PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEABQAUtagTMAPMON@@XZ ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Ogty
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	e9 00 00 00 00	 jmp	 _memmove
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Ogty
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 678  : 		if( psz == NULL )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	75 01		 jne	 SHORT $L150470

; 683  : 	}

  00008	c3		 ret	 0
$L150470:

; 679  : 		{
; 680  : 			return( 0 );
; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

  00009	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000c	8d 64 24 00	 npad	 4
$L193255:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $L193255
  00017	2b c2		 sub	 eax, edx

; 683  : 	}

  00019	c3		 ret	 0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L193260:
$L193259:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
; Function compile flags: /Ogty
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv181 = 8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 716  : 		CStringData* pOldData = GetData();

  00002	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00004	83 eb 10	 sub	 ebx, 16			; 00000010H
  00007	55		 push	 ebp

; 717  : 		int nOldLength = pOldData->nDataLength;

  00008	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  0000b	89 4c 24 08	 mov	 DWORD PTR _this$[esp+12], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

  0000f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	56		 push	 esi
  00014	ff 50 10	 call	 DWORD PTR [eax+16]
  00017	8b 74 24 14	 mov	 esi, DWORD PTR _nLength$[esp+12]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	8b c8		 mov	 ecx, eax
  00022	ff 12		 call	 DWORD PTR [edx]

; 719  : 		if( pNewData == NULL )

  00024	85 c0		 test	 eax, eax
  00026	75 05		 jne	 SHORT $L150479

; 720  : 		{
; 721  : 			ThrowMemoryException();

  00028	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L193291:
$L150479:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

  0002d	3b ee		 cmp	 ebp, esi
  0002f	7d 02		 jge	 SHORT $L193265
  00031	8b f5		 mov	 esi, ebp
$L193265:
  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

  00036	8b d1		 mov	 edx, ecx
  00038	57		 push	 edi
  00039	c1 e9 02	 shr	 ecx, 2
  0003c	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0003f	89 7c 24 18	 mov	 DWORD PTR tv181[esp+16], edi
  00043	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00046	f3 a5		 rep movsd
  00048	8b ca		 mov	 ecx, edx
  0004a	83 e1 03	 and	 ecx, 3
  0004d	f3 a4		 rep movsb

; 725  : 		pNewData->nDataLength = nOldLength;

  0004f	89 68 04	 mov	 DWORD PTR [eax+4], ebp

; 726  : 		pOldData->Release();

  00052	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00055	83 c9 ff	 or	 ecx, -1
  00058	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0005c	49		 dec	 ecx
  0005d	85 c9		 test	 ecx, ecx
  0005f	5f		 pop	 edi
  00060	7f 08		 jg	 SHORT $L193281
  00062	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	53		 push	 ebx
  00067	ff 52 04	 call	 DWORD PTR [edx+4]
$L193281:

; 727  : 		Attach( pNewData );

  0006a	8b 44 24 14	 mov	 eax, DWORD PTR tv181[esp+12]
  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+16]
  00072	5e		 pop	 esi
  00073	5d		 pop	 ebp
  00074	89 01		 mov	 DWORD PTR [ecx], eax
  00076	5b		 pop	 ebx

; 728  : 	}

  00077	59		 pop	 ecx
  00078	c2 04 00	 ret	 4
$L193290:
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Ogty
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 777  : 		CStringData* pOldData = GetData();
; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );
; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nLength$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	83 e8 10	 sub	 eax, 16			; 00000010H
  00012	6a 01		 push	 1
  00014	57		 push	 edi
  00015	50		 push	 eax
  00016	ff 52 08	 call	 DWORD PTR [edx+8]

; 781  : 		if( pNewData == NULL )

  00019	85 c0		 test	 eax, eax
  0001b	75 05		 jne	 SHORT $L150488

; 782  : 		{
; 783  : 			ThrowMemoryException();

  0001d	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L193307:
$L150488:

; 784  : 		}
; 785  : 		Attach( pNewData );

  00022	83 c0 10	 add	 eax, 16			; 00000010H
  00025	5f		 pop	 edi
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	5e		 pop	 esi

; 786  : 	}

  00029	c2 04 00	 ret	 4
$L193306:
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
; Function compile flags: /Ogty
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 790  : 		ATLASSERT( nLength >= 0 );
; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );
; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L150494
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L150494

; 794  : 			AtlThrow(E_INVALIDARG);
; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax

; 797  : 		m_pszData[nLength] = 0;

  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 798  : 	}

  00018	c2 04 00	 ret	 4
$L150494:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L193318:
$L193317:
  00025	cc		 int	 3
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L193327
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L193328
$L193327:
  00011	8b d0		 mov	 edx, eax
$L193328:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L150517
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L193335
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L193335:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L150517
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L150517:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@G@std@@QBEIXZ		; std::allocator<unsigned short>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@G@std@@QBEIXZ PROC NEAR		; std::allocator<unsigned short>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@G@std@@QBEIXZ ENDP		; std::allocator<unsigned short>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ	; std::allocator<CTPlayer *>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ PROC NEAR ; std::allocator<CTPlayer *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAVCTPlayer@@@std@@QBEIXZ ENDP	; std::allocator<CTPlayer *>::max_size
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@G@std@@YAPAGIPAG@Z			; std::_Allocate<unsigned short>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@G@std@@YAPAGIPAG@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@G@std@@YAPAGIPAG@Z PROC NEAR		; std::_Allocate<unsigned short>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 00	 lea	 ecx, DWORD PTR [eax+eax]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 35   : 	}

  00010	c3		 ret	 0
??$_Allocate@G@std@@YAPAGIPAG@Z ENDP			; std::_Allocate<unsigned short>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z PROC NEAR ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@@Z ENDP ; std::_Destroy_range<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z ; std::_Allocate<CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z PROC NEAR ; std::_Allocate<CTPlayer *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAVCTPlayer@@@std@@YAPAPAVCTPlayer@@IPAPAV1@@Z ENDP ; std::_Allocate<CTPlayer *>
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L193405
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L193405:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE_NXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::empty
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?empty@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::empty
; Function compile flags: /Ogty
;	COMDAT ?empty@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::empty, COMDAT
; _this$ = ecx

; 458  : 		return (size() == 0);

  00000	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 94 c0	 sete	 al

; 459  : 		}

  0000a	c3		 ret	 0
?empty@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::empty
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare, COMDAT
; _this$ = ecx

; 1088 : 		ATLASSERT( AtlIsValidString( psz ) );
; 1089 : 		return( StringTraits::StringCompare( GetString(), psz ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	50		 push	 eax
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 __mbscmp
  0000d	83 c4 08	 add	 esp, 8

; 1090 : 	}

  00010	c2 04 00	 ret	 4
?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE@V?$allocator@PAUtagSWITCH@@@1@@Z ; std::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE@V?$allocator@PAUtagSWITCH@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE@V?$allocator@PAUtagSWITCH@@@1@@Z PROC NEAR ; std::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE@V?$allocator@PAUtagSWITCH@@@1@@Z ENDP ; std::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >::_Vector_val<tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE@V?$allocator@PAUtagGATE@@@1@@Z ; std::_Vector_val<tagGATE *,std::allocator<tagGATE *> >::_Vector_val<tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE@V?$allocator@PAUtagGATE@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE@V?$allocator@PAUtagGATE@@@1@@Z PROC NEAR ; std::_Vector_val<tagGATE *,std::allocator<tagGATE *> >::_Vector_val<tagGATE *,std::allocator<tagGATE *> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE@V?$allocator@PAUtagGATE@@@1@@Z ENDP ; std::_Vector_val<tagGATE *,std::allocator<tagGATE *> >::_Vector_val<tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L182199

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L182199:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L182200

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L182200:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L182202

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L182202:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@EV?$allocator@E@std@@@std@@IAE@V?$allocator@E@1@@Z ; std::_Vector_val<unsigned char,std::allocator<unsigned char> >::_Vector_val<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@EV?$allocator@E@std@@@std@@IAE@V?$allocator@E@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@EV?$allocator@E@std@@@std@@IAE@V?$allocator@E@1@@Z PROC NEAR ; std::_Vector_val<unsigned char,std::allocator<unsigned char> >::_Vector_val<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@EV?$allocator@E@std@@@std@@IAE@V?$allocator@E@1@@Z ENDP ; std::_Vector_val<unsigned char,std::allocator<unsigned char> >::_Vector_val<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L182487

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L182487:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L182488

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L182488:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L182490

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L182490:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Hiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTCell@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTCell@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTCell@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTCell@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODBALL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODBALL@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODBALL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGPAUtagGODBALL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagGATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTMonster@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 0f	 mov	 bl, BYTE PTR [esi+15]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183358

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183358:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L183359

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L183359:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L183361

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L183361:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEE@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEAAPAUtagSWITCH@@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEAAPAUtagSWITCH@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEAAPAUtagSWITCH@@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEAAPAUtagSWITCH@@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEAAPAUtagGATE@@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEAAPAUtagGATE@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEAAPAUtagGATE@@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEAAPAUtagGATE@@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEAAPAVCTPlayer@@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEAAPAVCTMonster@@XZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEAAPAVCTMonster@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEAAPAVCTMonster@@XZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEAAPAVCTMonster@@XZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000d	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00011	2b ca		 sub	 ecx, edx
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00015	c2 08 00	 ret	 8
??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@EV?$allocator@E@std@@@std@@QBEAAEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@EV?$allocator@E@std@@@std@@QBEAAEXZ
_TEXT	SEGMENT
??Diterator@?$vector@EV?$allocator@E@std@@@std@@QBEAAEXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@EV?$allocator@E@std@@@std@@QBEAAEXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@EV?$allocator@E@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@EV?$allocator@E@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@EV?$allocator@E@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	03 4c 24 08	 add	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx

; 264  : 			}

  0000c	c2 08 00	 ret	 8
??Hiterator@?$vector@EV?$allocator@E@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEAAPAUtagTMONSPAWN@@XZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEAAPAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEAAPAUtagTMONSPAWN@@XZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBEAAPAUtagTMONSPAWN@@XZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000d	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00011	2b ca		 sub	 ecx, edx
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00015	c2 08 00	 ret	 8
??Giterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUtagSWITCH@@@std@@QAEPAPAUtagSWITCH@@I@Z ; std::allocator<tagSWITCH *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUtagSWITCH@@@std@@QAEPAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUtagSWITCH@@@std@@QAEPAPAUtagSWITCH@@I@Z PROC NEAR ; std::allocator<tagSWITCH *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAUtagSWITCH@@@std@@QAEPAPAUtagSWITCH@@I@Z ENDP ; std::allocator<tagSWITCH *>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUtagGATE@@@std@@QAEPAPAUtagGATE@@I@Z ; std::allocator<tagGATE *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUtagGATE@@@std@@QAEPAPAUtagGATE@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUtagGATE@@@std@@QAEPAPAUtagGATE@@I@Z PROC NEAR ; std::allocator<tagGATE *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAUtagGATE@@@std@@QAEPAPAUtagGATE@@I@Z ENDP ; std::allocator<tagGATE *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@E@std@@QAEPAEI@Z		; std::allocator<unsigned char>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@E@std@@QAEPAEI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@E@std@@QAEPAEI@Z PROC NEAR	; std::allocator<unsigned char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@E@std@@QAEPAEI@Z ENDP		; std::allocator<unsigned char>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L183699
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L183698:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L183700

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L183701
$L183700:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L183701:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L183698
  00029	5b		 pop	 ebx
$L183699:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183705

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183705:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L183706

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L183706:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L183708

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L183708:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183715

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183715:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L183716

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L183716:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L183718

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L183718:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183781

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183781:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L183782

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L183782:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L183784

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L183784:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183791

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183791:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L183792

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L183792:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L183794

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L183794:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183818

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183818:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L183819

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L183819:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L183821

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L183821:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183828

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183828:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L183829

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L183829:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L183831

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L183831:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L183905
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L183904:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L183906

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L183907
$L183906:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L183907:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L183904
  00029	5b		 pop	 ebx
$L183905:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L183957
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L183956:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L183958

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L183959
$L183958:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L183959:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L183956
  00029	5b		 pop	 ebx
$L183957:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183963

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183963:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L183964

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L183964:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L183966

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L183966:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L183971

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L183971:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L183972

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L183972:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L183974

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L183974:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L184033
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L184032:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L184034

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L184035
$L184034:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184035:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L184032
  00029	5b		 pop	 ebx
$L184033:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184039

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184039:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184040

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184040:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184042

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184042:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184047

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184047:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184048

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184048:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184050

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184050:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	83 c8 ff	 or	 eax, -1

; 522  : 		}

  00003	c3		 ret	 0
?max_size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L184121
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L184120:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L184122

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L184123
$L184122:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184123:
  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L184120
  0002b	5b		 pop	 ebx
$L184121:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184170

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184170:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184171

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184171:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184173

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184173:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184178

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184178:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184179

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184179:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184181

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184181:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L184240
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L184239:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L184241

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L184242
$L184241:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184242:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L184239
  00029	5b		 pop	 ebx
$L184240:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184246

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184246:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184247

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184247:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184249

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184249:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184254

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184254:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184255

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184255:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184257

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184257:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 11	 mov	 bl, BYTE PTR [esi+17]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184313

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184313:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184314

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184314:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184316

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184316:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 11	 mov	 bl, BYTE PTR [esi+17]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184321

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184321:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184322

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184322:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184324

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184324:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L184424
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L184423:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L184425

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L184426
$L184425:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184426:
  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L184423
  0002b	5b		 pop	 ebx
$L184424:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184430

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184430:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184431

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184431:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184433

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184433:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184438

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184438:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184439

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184439:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184441

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184441:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L184500
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L184499:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L184501

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L184502
$L184501:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184502:
  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L184499
  0002b	5b		 pop	 ebx
$L184500:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184506

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184506:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184507

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184507:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184509

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184509:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184514

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184514:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184515

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184515:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184517

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184517:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L184617
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L184616:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L184618

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L184619
$L184618:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184619:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L184616
  00029	5b		 pop	 ebx
$L184617:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184623

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184623:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L184624

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L184624:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L184626

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L184626:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L184631

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L184631:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L184632

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L184632:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L184634

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L184634:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABE@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 0f	 mov	 dl, BYTE PTR [ecx+15]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L184841
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8a 12		 mov	 dl, BYTE PTR [edx]
  00013	53		 push	 ebx
$L184840:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	38 51 0c	 cmp	 BYTE PTR [ecx+12], dl
  00017	73 05		 jae	 SHORT $L184842

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L184843
$L184842:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L184843:
  00022	8a 59 0f	 mov	 bl, BYTE PTR [ecx+15]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L184840
  00029	5b		 pop	 ebx
$L184841:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@PAPAUtagSWITCH@@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@PAPAUtagGATE@@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@PAPAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	f7 d9		 neg	 ecx
  0000a	c1 e1 02	 shl	 ecx, 2
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  00011	c2 04 00	 ret	 4
??Ziterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE@PAPAVCTMonster@@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@EV?$allocator@E@std@@@std@@QAE@PAE@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE@PAPAUtagTMONSPAWN@@@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCTMonster@@@std@@QAEPAPAVCTMonster@@I@Z ; std::allocator<CTMonster *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVCTMonster@@@std@@QAEPAPAVCTMonster@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCTMonster@@@std@@QAEPAPAVCTMonster@@I@Z PROC NEAR ; std::allocator<CTMonster *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCTMonster@@@std@@QAEPAPAVCTMonster@@I@Z ENDP ; std::allocator<CTMonster *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00007	c1 e0 02	 shl	 eax, 2
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L185508
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L185507:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00015	66 3b 51 0c	 cmp	 dx, WORD PTR [ecx+12]
  00019	73 06		 jae	 SHORT $L185509

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  0001b	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001d	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001f	eb 03		 jmp	 SHORT $L185510
$L185509:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00021	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L185510:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L185507
  0002b	5b		 pop	 ebx
$L185508:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002c	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L185637
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L185636:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L185638

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L185639
$L185638:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L185639:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L185636
  00029	5b		 pop	 ebx
$L185637:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L185732

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L185732:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L185733

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L185733:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L185735

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L185735:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185797

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185797:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197001

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L196986
$L196985:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L196985
$L196986:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197001:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197004
  0003d	8d 49 00	 npad	 3
$L185803:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185804

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185803
$L185804:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197004

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197004:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185811

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197052

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197040
  0001d	8d 49 00	 npad	 3
$L197039:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197039
$L197040:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197052:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185815
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185814:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185815

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185814
$L185815:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185811:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185818

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185818:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197110

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197095
$L197094:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197094
$L197095:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197110:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197113
  0003d	8d 49 00	 npad	 3
$L185824:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185825

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185824
$L185825:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197113

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197113:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185832

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197161

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197149
  0001d	8d 49 00	 npad	 3
$L197148:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197148
$L197149:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197161:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185836
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185835:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185836

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185835
$L185836:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185832:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185839

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185839:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197219

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197204
$L197203:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197203
$L197204:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197219:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197222
  0003d	8d 49 00	 npad	 3
$L185845:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185846

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185845
$L185846:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197222

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197222:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185853

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197270

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197258
  0001d	8d 49 00	 npad	 3
$L197257:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197257
$L197258:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197270:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185857
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185856:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185857

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185856
$L185857:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185853:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185860

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185860:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 11	 mov	 bl, BYTE PTR [edx+17]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197328

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197313
$L197312:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197312
$L197313:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197328:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197331
  0003d	8d 49 00	 npad	 3
$L185866:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185867

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185866
$L185867:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197331

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197331:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185874

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 11	 mov	 bl, BYTE PTR [edx+17]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197379

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197359
  0001d	8d 49 00	 npad	 3
$L197358:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197358
$L197359:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197379:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185878
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185877:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185878

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185877
$L185878:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185874:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185881

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185881:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197437

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197415
$L197414:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197414
$L197415:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197437:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197440
  0003d	8d 49 00	 npad	 3
$L185887:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185888

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185887
$L185888:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197440

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197440:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185895

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197488

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197469
  0001d	8d 49 00	 npad	 3
$L197468:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197468
$L197469:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197488:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185899
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185898:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185899

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185898
$L185899:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185895:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185923

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185923:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197546

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197531
$L197530:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197530
$L197531:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197546:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197549
  0003d	8d 49 00	 npad	 3
$L185929:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185930

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185929
$L185930:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197549

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197549:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185937

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197597

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197578
  0001d	8d 49 00	 npad	 3
$L197577:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197577
$L197578:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197597:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185941
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185940:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185941

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185940
$L185941:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185937:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L185947

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197647

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197628
  0001d	8d 49 00	 npad	 3
$L197627:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197627
$L197628:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197647:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L185951
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L185950:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L185951

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L185950
$L185951:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L185947:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185982

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185982:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197711

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197696
$L197695:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197695
$L197696:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197711:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197714
  0003d	8d 49 00	 npad	 3
$L185988:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L185989

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185988
$L185989:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197714

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197714:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L185993

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L185993:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197770

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197755
$L197754:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197754
$L197755:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197770:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197773
  0003d	8d 49 00	 npad	 3
$L185999:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L186000

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L185999
$L186000:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197773

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197773:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L186007

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197821

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197809
  0001d	8d 49 00	 npad	 3
$L197808:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197808
$L197809:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197821:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L186011
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L186010:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L186011

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L186010
$L186011:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L186007:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L186014

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L186014:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L197879

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L197864
$L197863:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L197863
$L197864:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L197879:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L197882
  0003d	8d 49 00	 npad	 3
$L186020:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L186021

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L186020
$L186021:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L197882

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L197882:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L186028

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L197930

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L197918
  0001d	8d 49 00	 npad	 3
$L197917:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L197917
$L197918:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L197930:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L186032
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L186031:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L186032

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L186031
$L186032:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L186028:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	c1 e0 04	 shl	 eax, 4
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 138  : 		}

  00010	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L197962
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L197962:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L197988
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L197988:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198014
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198014:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198040
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198040:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198066
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198066:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198092
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198092:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198118
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198118:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198144
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198144:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198170
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198170:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198196
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198196:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L198234
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L198234:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@@Z ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@@Z PROC NEAR ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@0AAV?$allocator@PAVCTMonster@@@0@@Z ENDP ; std::_Destroy_range<CTMonster *,std::allocator<CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@@Z ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@@Z PROC NEAR ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@0AAV?$allocator@PAUtagSWITCH@@@0@@Z ENDP ; std::_Destroy_range<tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z ; std::copy_backward<tagSWITCH * *,tagSWITCH * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z PROC NEAR ; std::copy_backward<tagSWITCH * *,tagSWITCH * *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z ENDP ; std::copy_backward<tagSWITCH * *,tagSWITCH * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@@Z ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@@Z PROC NEAR ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@0AAV?$allocator@PAUtagGATE@@@0@@Z ENDP ; std::_Destroy_range<tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z ; std::copy_backward<tagGATE * *,tagGATE * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z PROC NEAR ; std::copy_backward<tagGATE * *,tagGATE * *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z ENDP ; std::copy_backward<tagGATE * *,tagGATE * *>
_TEXT	ENDS
PUBLIC	??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z ; std::copy_backward<CTPlayer * *,CTPlayer * *>
; Function compile flags: /Ogty
;	COMDAT ??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z PROC NEAR ; std::copy_backward<CTPlayer * *,CTPlayer * *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z ENDP ; std::copy_backward<CTPlayer * *,CTPlayer * *>
_TEXT	ENDS
PUBLIC	??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z ; std::copy_backward<CTMonster * *,CTMonster * *>
; Function compile flags: /Ogty
;	COMDAT ??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z PROC NEAR ; std::copy_backward<CTMonster * *,CTMonster * *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z ENDP ; std::copy_backward<CTMonster * *,CTMonster * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z PROC NEAR ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@@Z ENDP ; std::_Destroy_range<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagSWITCH *,unsigned int,tagSWITCH *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_fill_n@PAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<tagSWITCH *,unsigned int,tagSWITCH *>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L198337
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L198335:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L198335
  0001b	5e		 pop	 esi
$L198337:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@PAUtagSWITCH@@IPAU1@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<tagSWITCH *,unsigned int,tagSWITCH *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagGATE *,unsigned int,tagGATE *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_fill_n@PAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<tagGATE *,unsigned int,tagGATE *>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L198350
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L198348:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L198348
  0001b	5e		 pop	 esi
$L198350:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@PAUtagGATE@@IPAU1@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<tagGATE *,unsigned int,tagGATE *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<CTPlayer *,unsigned int,CTPlayer *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_fill_n@PAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<CTPlayer *,unsigned int,CTPlayer *>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L198363
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L198361:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L198361
  0001b	5e		 pop	 esi
$L198363:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@PAVCTPlayer@@IPAV1@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<CTPlayer *,unsigned int,CTPlayer *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<CTMonster *,unsigned int,CTMonster *>
; Function compile flags: /Ogty
;	COMDAT ??$_Uninit_fill_n@PAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<CTMonster *,unsigned int,CTMonster *>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L198376
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L198374:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L198374
  0001b	5e		 pop	 esi
$L198376:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@PAVCTMonster@@IPAV1@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<CTMonster *,unsigned int,CTMonster *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAUtagSWITCH@@PAPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@@Z ; std::_Uninitialized_copy<tagSWITCH * *,tagSWITCH * *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAPAUtagSWITCH@@PAPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAUtagSWITCH@@PAPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<tagSWITCH * *,tagSWITCH * *,std::allocator<tagSWITCH *> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAPAUtagSWITCH@@PAPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAPAPAUtagSWITCH@@PAPAU1@00AAV?$allocator@PAUtagSWITCH@@@0@@Z ENDP ; std::_Uninitialized_copy<tagSWITCH * *,tagSWITCH * *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAUtagGATE@@PAPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@@Z ; std::_Uninitialized_copy<tagGATE * *,tagGATE * *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAPAUtagGATE@@PAPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAUtagGATE@@PAPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<tagGATE * *,tagGATE * *,std::allocator<tagGATE *> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAPAUtagGATE@@PAPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAPAPAUtagGATE@@PAPAU1@00AAV?$allocator@PAUtagGATE@@@0@@Z ENDP ; std::_Uninitialized_copy<tagGATE * *,tagGATE * *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAVCTPlayer@@PAPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@@Z ; std::_Uninitialized_copy<CTPlayer * *,CTPlayer * *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAPAVCTPlayer@@PAPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAVCTPlayer@@PAPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<CTPlayer * *,CTPlayer * *,std::allocator<CTPlayer *> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAPAVCTPlayer@@PAPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAPAPAVCTPlayer@@PAPAV1@00AAV?$allocator@PAVCTPlayer@@@0@@Z ENDP ; std::_Uninitialized_copy<CTPlayer * *,CTPlayer * *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAVCTMonster@@PAPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@@Z ; std::_Uninitialized_copy<CTMonster * *,CTMonster * *,std::allocator<CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAPAVCTMonster@@PAPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAVCTMonster@@PAPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<CTMonster * *,CTMonster * *,std::allocator<CTMonster *> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAPAVCTMonster@@PAPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAPAPAVCTMonster@@PAPAV1@00AAV?$allocator@PAVCTMonster@@@0@@Z ENDP ; std::_Uninitialized_copy<CTMonster * *,CTMonster * *,std::allocator<CTMonster *> >
_TEXT	ENDS
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 501  : 		return( GetData()->nDataLength );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 40 f4	 mov	 eax, DWORD PTR [eax-12]

; 502  : 	}

  00005	c3		 ret	 0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE_NXZ ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?empty@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L198444
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L198444:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBE_NXZ ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::empty
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );
; 213  : 		CStringData* pData = pStringMgr->GetNilString();

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]

; 214  : 		Attach( pData );

  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 215  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L198465
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L198465:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@GV?$allocator@G@std@@@std@@IAE@V?$allocator@G@1@@Z ; std::_Vector_val<unsigned short,std::allocator<unsigned short> >::_Vector_val<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@GV?$allocator@G@std@@@std@@IAE@V?$allocator@G@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@GV?$allocator@G@std@@@std@@IAE@V?$allocator@G@1@@Z PROC NEAR ; std::_Vector_val<unsigned short,std::allocator<unsigned short> >::_Vector_val<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@GV?$allocator@G@std@@@std@@IAE@V?$allocator@G@1@@Z ENDP ; std::_Vector_val<unsigned short,std::allocator<unsigned short> >::_Vector_val<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z PROC NEAR ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE@V?$allocator@PAVCTPlayer@@@1@@Z ENDP ; std::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >::_Vector_val<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEAAPAUtagTMAPMON@@XZ ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEAAPAUtagTMAPMON@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEAAPAUtagTMAPMON@@XZ PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QBEAAPAUtagTMAPMON@@XZ ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );
; 548  : 		SetLength( nNewLength );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nNewLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L198522
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L198522
  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax
  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 549  : 	}

  00018	c2 04 00	 ret	 4
$L198522:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L198525:
$L198524:
  00025	cc		 int	 3
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Ogty
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 747  : 		CStringData* pOldData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 748  : 		if( pOldData->nDataLength > nLength )

  00002	8b 54 24 04	 mov	 edx, DWORD PTR _nLength$[esp-4]
  00006	83 e8 10	 sub	 eax, 16			; 00000010H
  00009	56		 push	 esi
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	3b f2		 cmp	 esi, edx
  0000f	7e 02		 jle	 SHORT $L149740

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

  00011	8b d6		 mov	 edx, esi
$L149740:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

  00013	83 78 0c 01	 cmp	 DWORD PTR [eax+12], 1
  00017	5e		 pop	 esi
  00018	7e 09		 jle	 SHORT $L149741

; 753  : 		{
; 754  : 			Fork( nLength );

  0001a	89 54 24 04	 mov	 DWORD PTR _nLength$[esp-4], edx
  0001e	e9 00 00 00 00	 jmp	 ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork
$L149741:

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00026	3b c2		 cmp	 eax, edx
  00028	7d 1f		 jge	 SHORT $L149743

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;
; 760  : 			if( nNewLength > 1024 )

  0002a	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  0002f	7e 07		 jle	 SHORT $L149745

; 761  : 			{
; 762  : 				nNewLength += 1024;

  00031	05 00 04 00 00	 add	 eax, 1024		; 00000400H

; 763  : 			}
; 764  : 			else

  00036	eb 02		 jmp	 SHORT $L149746
$L149745:

; 765  : 			{
; 766  : 				nNewLength *= 2;

  00038	03 c0		 add	 eax, eax
$L149746:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

  0003a	3b c2		 cmp	 eax, edx
  0003c	7d 02		 jge	 SHORT $L149747

; 769  : 			{
; 770  : 				nNewLength = nLength;

  0003e	8b c2		 mov	 eax, edx
$L149747:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

  00040	89 44 24 04	 mov	 DWORD PTR _nLength$[esp-4], eax
  00044	e9 00 00 00 00	 jmp	 ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L149743:

; 773  : 		}
; 774  : 	}

  00049	c2 04 00	 ret	 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
_TEXT	ENDS
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Ogty
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

  00000	56		 push	 esi

; 802  : 		CStringData* pNewData = NULL;
; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pData$[esp]
  00005	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 10	 call	 DWORD PTR [eax+16]

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

  0000c	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0000f	85 d2		 test	 edx, edx
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	7c 11		 jl	 SHORT $L149751
  00016	3b 06		 cmp	 eax, DWORD PTR [esi]
  00018	75 0d		 jne	 SHORT $L149751

; 806  : 		{
; 807  : 			pNewData = pData;

  0001a	8b c6		 mov	 eax, esi

; 808  : 			pNewData->AddRef();

  0001c	ba 01 00 00 00	 mov	 edx, 1
  00021	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00025	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  00026	c3		 ret	 0
$L149751:

; 809  : 		}
; 810  : 		else
; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	6a 01		 push	 1
  0002e	51		 push	 ecx
  0002f	8b c8		 mov	 ecx, eax
  00031	ff 12		 call	 DWORD PTR [edx]

; 813  : 			if( pNewData == NULL )

  00033	85 c0		 test	 eax, eax
  00035	75 05		 jne	 SHORT $L149754

; 814  : 			{
; 815  : 				ThrowMemoryException();

  00037	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L149754:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

  0003c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

  00042	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00045	41		 inc	 ecx
  00046	8b d1		 mov	 edx, ecx
  00048	57		 push	 edi
  00049	c1 e9 02	 shr	 ecx, 2
  0004c	83 c6 10	 add	 esi, 16			; 00000010H
  0004f	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00052	f3 a5		 rep movsd
  00054	8b ca		 mov	 ecx, edx
  00056	83 e1 03	 and	 ecx, 3
  00059	f3 a4		 rep movsb
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  0005d	c3		 ret	 0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L198564
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L198564:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@G@std@@QAEPAGI@Z		; std::allocator<unsigned short>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@G@std@@QAEPAGI@Z PROC NEAR	; std::allocator<unsigned short>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 00	 lea	 ecx, DWORD PTR [eax+eax]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 138  : 		}

  00010	c2 04 00	 ret	 4
?allocate@?$allocator@G@std@@QAEPAGI@Z ENDP		; std::allocator<unsigned short>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::max_size
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXPAPAVCTPlayer@@0@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Destroy
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z ; std::allocator<CTPlayer *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z PROC NEAR ; std::allocator<CTPlayer *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAVCTPlayer@@@std@@QAEPAPAVCTPlayer@@I@Z ENDP ; std::allocator<CTPlayer *>::allocate
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE@PAPAUtagTMAPMON@@@Z ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 422  : 		CStringData* pOldData = GetData();

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 424  : 		if( pOldData->nDataLength == 0 )

  00005	8b 51 f4	 mov	 edx, DWORD PTR [ecx-12]
  00008	85 d2		 test	 edx, edx
  0000a	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0000d	57		 push	 edi
  0000e	8b 38		 mov	 edi, DWORD PTR [eax]
  00010	74 4c		 je	 SHORT $L198654
  00012	53		 push	 ebx

; 425  : 		{
; 426  : 			return;
; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

  00013	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
  00016	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00019	85 db		 test	 ebx, ebx
  0001b	5b		 pop	 ebx
  0001c	7d 20		 jge	 SHORT $L150462

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

  0001e	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  00021	85 c0		 test	 eax, eax
  00023	7d 0a		 jge	 SHORT $L198638
  00025	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0002a	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L198659:
$L198638:
  0002f	c7 41 f4 00 00
	00 00		 mov	 DWORD PTR [ecx-12], 0
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	5f		 pop	 edi
  00039	c6 00 00	 mov	 BYTE PTR [eax], 0
  0003c	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  0003d	c3		 ret	 0
$L150462:

; 433  : 		}
; 434  : 		else
; 435  : 		{
; 436  : 			pOldData->Release();

  0003e	83 c9 ff	 or	 ecx, -1
  00041	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00045	49		 dec	 ecx
  00046	85 c9		 test	 ecx, ecx
  00048	7f 08		 jg	 SHORT $L198648
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	50		 push	 eax
  0004f	ff 52 04	 call	 DWORD PTR [edx+4]
$L198648:

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

  00052	8b 07		 mov	 eax, DWORD PTR [edi]
  00054	8b cf		 mov	 ecx, edi
  00056	ff 50 0c	 call	 DWORD PTR [eax+12]

; 438  : 			Attach( pNewData );

  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	89 06		 mov	 DWORD PTR [esi], eax
$L198654:
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  00060	c3		 ret	 0
$L198658:
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z ; ATL::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z PROC NEAR ; ATL::operator==, COMDAT

; 2088 : 		return( str1.Compare( psz2 ) == 0 );

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _psz2$[esp-4]
  00004	8b 44 24 04	 mov	 eax, DWORD PTR _str1$[esp-4]
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
  0000a	51		 push	 ecx
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 __mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	f7 d8		 neg	 eax
  00016	1b c0		 sbb	 eax, eax
  00018	40		 inc	 eax

; 2089 : 	}

  00019	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z ENDP ; ATL::operator==
_TEXT	ENDS
PUBLIC	??9ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z ; ATL::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z PROC NEAR ; ATL::operator!=, COMDAT

; 2122 : 		return( str1.Compare( psz2 ) != 0 );

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _psz2$[esp-4]
  00004	8b 44 24 04	 mov	 eax, DWORD PTR _str1$[esp-4]
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
  0000a	51		 push	 ecx
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 __mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	f7 d8		 neg	 eax
  00016	1b c0		 sbb	 eax, eax
  00018	f7 d8		 neg	 eax

; 2123 : 	}

  0001a	c3		 ret	 0
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@PBD@Z ENDP ; ATL::operator!=
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::pop_back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?pop_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::pop_back, COMDAT
; _this$ = ecx

; 587  : 		{	// erase element at end

  00000	56		 push	 esi

; 588  : 		if (!empty())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 14		 je	 SHORT $L180024
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	8b c2		 mov	 eax, edx
  0000d	2b c6		 sub	 eax, esi
  0000f	c1 f8 02	 sar	 eax, 2
  00012	85 c0		 test	 eax, eax
  00014	74 06		 je	 SHORT $L180024

; 589  : 			{	// erase last element
; 590  : 			_Destroy(_Mylast - 1, _Mylast);
; 591  : 			--_Mylast;

  00016	83 c2 fc	 add	 edx, -4			; fffffffcH
  00019	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$L180024:
  0001c	5e		 pop	 esi

; 592  : 			}
; 593  : 		}

  0001d	c3		 ret	 0
?pop_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::pop_back
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator->
; Function compile flags: /Ogty
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBGPAVCTMonSpawn@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagSWITCH@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTCell@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTCell@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTCell@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTCell@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODTOWER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODBALL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODBALL@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODBALL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGPAUtagGODBALL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagGATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTSelfObj@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTMonster@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTRecallMon@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAVCTPlayer@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEE@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::end
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L199508
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L199476:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L199478
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L199479
$L199478:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L199479:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L199476
  00029	5b		 pop	 ebx
$L199508:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::end
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXPAPAVCTMonster@@0@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXPAPAVCTMonster@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXPAPAVCTMonster@@0@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXPAPAVCTMonster@@0@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L199650
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L199618:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L199620
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L199621
$L199620:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L199621:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L199618
  00029	5b		 pop	 ebx
$L199650:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182166
$L182164:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182164
$L182166:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L199740
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L199722:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L199724
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L199725
$L199724:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L199725:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L199722
  00029	5b		 pop	 ebx
$L199740:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182277
$L182275:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182275
$L182277:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L199830
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L199817:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L199819
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L199820
$L199819:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L199820:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L199817
  00029	5b		 pop	 ebx
$L199830:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182356
$L182354:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182354
$L182356:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@EV?$allocator@E@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L199932
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L199919:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L199921
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L199922
$L199921:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L199922:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L199919
  0002b	5b		 pop	 ebx
$L199932:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182454
$L182452:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182452
$L182454:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182561
$L182559:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182559
$L182561:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L200039
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L200026:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L200028
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L200029
$L200028:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L200029:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L200026
  00029	5b		 pop	 ebx
$L200039:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182640
$L182638:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182638
$L182640:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 11	 mov	 al, BYTE PTR [edi+17]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182715
$L182713:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 11	 mov	 al, BYTE PTR [esi+17]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182713
$L182715:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L200146
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L200114:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L200116
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L200117
$L200116:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L200117:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L200114
  0002b	5b		 pop	 ebx
$L200146:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182813
$L182811:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182811
$L182813:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L200236
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L200204:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L200206
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L200207
$L200206:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L200207:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L200204
  0002b	5b		 pop	 ebx
$L200236:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182892
$L182890:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182890
$L182892:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L200326
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L200294:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L200296
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L200297
$L200296:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L200297:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L200294
  00029	5b		 pop	 ebx
$L200326:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L182990
$L182988:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L182988
$L182990:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::end
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L200476
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8a 12		 mov	 dl, BYTE PTR [edx]
  00013	53		 push	 ebx
$L200444:
  00014	38 50 0c	 cmp	 BYTE PTR [eax+12], dl
  00017	73 05		 jae	 SHORT $L200446
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L200447
$L200446:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L200447:
  00022	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L200444
  00029	5b		 pop	 ebx
$L200476:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 0f	 mov	 al, BYTE PTR [edi+15]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L183325
$L183323:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 0f	 mov	 al, BYTE PTR [esi+15]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L183323
$L183325:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000d	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00011	2b ca		 sub	 ecx, edx
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00015	c2 08 00	 ret	 8
??Giterator@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXPAPAUtagSWITCH@@0@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXPAPAUtagSWITCH@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXPAPAUtagSWITCH@@0@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXPAPAUtagSWITCH@@0@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXPAPAUtagGATE@@0@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXPAPAUtagGATE@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXPAPAUtagGATE@@0@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXPAPAUtagGATE@@0@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::begin
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200552
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200552:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200584
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200584:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200614
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200614:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200644
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200644:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200674
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200674:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200704
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200704:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200737
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200737:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200767
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200767:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200797
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200797:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 14		 push	 20			; 00000014H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 28		 je	 SHORT $L200827
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001f	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00023	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00026	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00028	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  0002c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002f	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00032	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
$L200827:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  00036	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L200924
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L200899:
  00015	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L200901
  0001b	8b c8		 mov	 ecx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L200902
$L200901:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L200902:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L200899
  0002b	5b		 pop	 ebx
$L200924:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00032	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200930
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200930:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L200960
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L200960:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L201057
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L201030:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L201033
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L201035
$L201033:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L201035:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L201030
  00029	5b		 pop	 ebx
$L201057:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L201063
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L201063:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 10		 push	 16			; 00000010H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2a		 je	 SHORT $L201180
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001f	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00023	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00026	66 8b 0a	 mov	 cx, WORD PTR [edx]
  00029	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  0002d	66 89 48 0c	 mov	 WORD PTR [eax+12], cx
  00031	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  00034	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0
$L201180:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  00038	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201243
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201243:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201270
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201270:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201297
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201297:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201381
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201381:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201408
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201408:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201435
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201435:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201519
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201519:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201546
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201546:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201573
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201573:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201657
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201657:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201685
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201685:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201712
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201712:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201794
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201794:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201821
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201821:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201848
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201848:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L201932
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L201932:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L201959
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201959:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L201986
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L201986:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 14		 push	 20			; 00000014H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L202072
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L202072:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L202099
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202099:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L202126
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202126:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 10 01	 mov	 BYTE PTR [eax+16], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L202210
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L202210:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L202237
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202237:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L202264
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202264:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L202348
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L202348:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L202375
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202375:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L202402
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202402:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L202486
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L202486:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L202513
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202513:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L202540
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202540:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L185717
$L185715:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L185715
$L185717:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L185724
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L185723:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L185725

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L185726
$L185725:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L185726:
  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L185723
  0002b	5b		 pop	 ebx
$L185724:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Ubound
; Function compile flags: /Ogty
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L185763
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L185762:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00015	66 3b 51 0c	 cmp	 dx, WORD PTR [ecx+12]
  00019	73 06		 jae	 SHORT $L185764

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  0001b	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001d	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001f	eb 03		 jmp	 SHORT $L185765
$L185764:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00021	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L185765:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00024	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L185762
  0002b	5b		 pop	 ebx
$L185763:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002c	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 10		 push	 16			; 00000010H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L202723
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L202723:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L202750
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202750:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L202775
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L202775:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 0e 01	 mov	 BYTE PTR [eax+14], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 0f 00	 mov	 BYTE PTR [eax+15], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAPAUtagSWITCH@@IPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@@Z ; std::_Uninitialized_fill_n<tagSWITCH * *,unsigned int,tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagSWITCH@@IPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAPAUtagSWITCH@@IPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<tagSWITCH * *,unsigned int,tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L202844
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L202842:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L202842
  0001b	5e		 pop	 esi
$L202844:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAPAUtagSWITCH@@IPAU1@V?$allocator@PAUtagSWITCH@@@std@@@std@@YAXPAPAUtagSWITCH@@IABQAU1@AAV?$allocator@PAUtagSWITCH@@@0@@Z ENDP ; std::_Uninitialized_fill_n<tagSWITCH * *,unsigned int,tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAPAUtagGATE@@IPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@@Z ; std::_Uninitialized_fill_n<tagGATE * *,unsigned int,tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagGATE@@IPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAPAUtagGATE@@IPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<tagGATE * *,unsigned int,tagGATE *,std::allocator<tagGATE *> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L202870
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L202868:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L202868
  0001b	5e		 pop	 esi
$L202870:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAPAUtagGATE@@IPAU1@V?$allocator@PAUtagGATE@@@std@@@std@@YAXPAPAUtagGATE@@IABQAU1@AAV?$allocator@PAUtagGATE@@@0@@Z ENDP ; std::_Uninitialized_fill_n<tagGATE * *,unsigned int,tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAPAVCTPlayer@@IPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@@Z ; std::_Uninitialized_fill_n<CTPlayer * *,unsigned int,CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_fill_n@PAPAVCTPlayer@@IPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAPAVCTPlayer@@IPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<CTPlayer * *,unsigned int,CTPlayer *,std::allocator<CTPlayer *> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L202896
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L202894:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L202894
  0001b	5e		 pop	 esi
$L202896:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAPAVCTPlayer@@IPAV1@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@IABQAV1@AAV?$allocator@PAVCTPlayer@@@0@@Z ENDP ; std::_Uninitialized_fill_n<CTPlayer * *,unsigned int,CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAPAVCTMonster@@IPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@@Z ; std::_Uninitialized_fill_n<CTMonster * *,unsigned int,CTMonster *,std::allocator<CTMonster *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_fill_n@PAPAVCTMonster@@IPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAPAVCTMonster@@IPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<CTMonster * *,unsigned int,CTMonster *,std::allocator<CTMonster *> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L202922
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L202920:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L202920
  0001b	5e		 pop	 esi
$L202922:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAPAVCTMonster@@IPAV1@V?$allocator@PAVCTMonster@@@std@@@std@@YAXPAPAVCTMonster@@IABQAV1@AAV?$allocator@PAVCTMonster@@@0@@Z ENDP ; std::_Uninitialized_fill_n<CTMonster * *,unsigned int,CTMonster *,std::allocator<CTMonster *> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ucopy<tagSWITCH * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ucopy<tagSWITCH * *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ucopy<tagSWITCH * *>
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ucopy<tagGATE * *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ucopy<tagGATE * *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ucopy<tagGATE * *>
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ucopy<CTPlayer * *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ucopy<CTPlayer * *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ucopy<CTPlayer * *>
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ucopy<CTMonster * *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ucopy<CTMonster * *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ucopy<CTMonster * *>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L187812
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L203024:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L203024
  00023	5e		 pop	 esi
$L187812:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L187819
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L203041:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L203041
  00023	5e		 pop	 esi
$L187819:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L187826
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L203064:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L203064
  00023	5e		 pop	 esi
$L187826:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0000d	ff 50 0c	 call	 DWORD PTR [eax+12]
  00010	83 c0 10	 add	 eax, 16			; 00000010H
  00013	89 06		 mov	 DWORD PTR [esi], eax

; 797  : 	}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L203114
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L203114:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData

; 221  : 		Attach( pNewData );

  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 222  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Ogty
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 735  : 		CStringData* pOldData = GetData();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp]
  00019	2b d0		 sub	 edx, eax

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L203135

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L203135:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 744  : 	}

  0002a	c2 04 00	 ret	 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L203143

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L203143

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L203141
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L203141:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L203143:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L203183

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L203183:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L203191

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L203191:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Tidy
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx
  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nMinBufferLength$[esp]
  00019	2b d0		 sub	 edx, eax
  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L203211
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L203211:
  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 491  : 	}

  0002a	c2 04 00	 ret	 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

  00000	53		 push	 ebx

; 584  : 		if( nLength == 0 )

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _nLength$[esp]
  00005	85 db		 test	 ebx, ebx
  00007	55		 push	 ebp
  00008	8b e9		 mov	 ebp, ecx
  0000a	75 0a		 jne	 SHORT $L149725

; 585  : 		{
; 586  : 			Empty();

  0000c	e8 00 00 00 00	 call	 ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty
  00011	5d		 pop	 ebp
  00012	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00013	c2 08 00	 ret	 8
$L149725:

; 587  : 		}
; 588  : 		else
; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

  00016	8b 54 24 0c	 mov	 edx, DWORD PTR _pszSrc$[esp+4]
  0001a	85 d2		 test	 edx, edx
  0001c	75 0a		 jne	 SHORT $L149727

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

$L203284:
  0001e	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00023	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L203287:
$L149727:

; 597  : 				AtlThrow(E_INVALIDARG);			
; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

  00028	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  0002b	56		 push	 esi

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

  0002c	8b f2		 mov	 esi, edx
  0002e	2b f0		 sub	 esi, eax

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	2b 48 fc	 sub	 ecx, DWORD PTR [eax-4]
  00038	57		 push	 edi
  00039	8b 78 f4	 mov	 edi, DWORD PTR [eax-12]
  0003c	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  0003f	2b c3		 sub	 eax, ebx
  00041	0b c8		 or	 ecx, eax
  00043	7d 0c		 jge	 SHORT $L203248
  00045	53		 push	 ebx
  00046	8b cd		 mov	 ecx, ebp
  00048	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
  0004d	8b 54 24 14	 mov	 edx, DWORD PTR _pszSrc$[esp+12]
$L203248:

; 605  : 			if( nOffset <= nOldLength )

  00051	3b f7		 cmp	 esi, edi
  00053	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00056	77 10		 ja	 SHORT $L149732

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

  00058	53		 push	 ebx
  00059	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  0005c	51		 push	 ecx
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 _memmove
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 608  : 			}
; 609  : 			else

  00066	eb 14		 jmp	 SHORT $L203257
$L149732:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

  00068	8b cb		 mov	 ecx, ebx
  0006a	8b f2		 mov	 esi, edx
  0006c	8b d1		 mov	 edx, ecx
  0006e	c1 e9 02	 shr	 ecx, 2
  00071	8b f8		 mov	 edi, eax
  00073	f3 a5		 rep movsd
  00075	8b ca		 mov	 ecx, edx
  00077	83 e1 03	 and	 ecx, 3
  0007a	f3 a4		 rep movsb
$L203257:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

  0007c	85 db		 test	 ebx, ebx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	7c 9c		 jl	 SHORT $L203284
  00082	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00085	3b 58 f8	 cmp	 ebx, DWORD PTR [eax-8]
  00088	7f 94		 jg	 SHORT $L203284
  0008a	89 58 f4	 mov	 DWORD PTR [eax-12], ebx
  0008d	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00090	5d		 pop	 ebp
  00091	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  00095	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00096	c2 08 00	 ret	 8
$L203286:
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L149765

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L149765:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L149766

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L149766:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L203330

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L203296
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L203297
$L203296:
  00036	8b d3		 mov	 edx, ebx
$L203297:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L203303
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L203304
$L203303:
  00041	8b cb		 mov	 ecx, ebx
$L203304:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L203327

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L203327:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L203330:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T203535 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T203537 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L203337
$T203538 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L203335
$T203536 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T203537
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T203538
$T203529 DD	019930520H
	DD	04H
	DD	FLAT:$T203535
	DD	02H
	DD	FLAT:$T203536
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L150507

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L150509
$L150507:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L150509
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L150509

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L150509:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L150511
$L203335:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L203530
  00092	c3		 ret	 0
$L203530:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L150511:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L203454

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L203451
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L203452
$L203451:
  000ae	83 c6 04	 add	 esi, 4
$L203452:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L203454:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L203496
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L203496:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L203525
  000f2	8b c2		 mov	 eax, edx
$L203525:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L203337:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L203435
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L203435:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L203540:
$L203534:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T203529
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??0tagGODBALL@@QAE@XZ				; tagGODBALL::tagGODBALL
; Function compile flags: /Ogty
;	COMDAT ??0tagGODBALL@@QAE@XZ
_TEXT	SEGMENT
??0tagGODBALL@@QAE@XZ PROC NEAR				; tagGODBALL::tagGODBALL, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00006	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  0000b	8b c6		 mov	 eax, esi
  0000d	5e		 pop	 esi
  0000e	c3		 ret	 0
??0tagGODBALL@@QAE@XZ ENDP				; tagGODBALL::tagGODBALL
_TEXT	ENDS
PUBLIC	??1tagGODBALL@@QAE@XZ				; tagGODBALL::~tagGODBALL
; Function compile flags: /Ogty
;	COMDAT ??1tagGODBALL@@QAE@XZ
_TEXT	SEGMENT
??1tagGODBALL@@QAE@XZ PROC NEAR				; tagGODBALL::~tagGODBALL, COMDAT
; _this$ = ecx
  00000	83 c1 20	 add	 ecx, 32			; 00000020H
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
??1tagGODBALL@@QAE@XZ ENDP				; tagGODBALL::~tagGODBALL
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAPAUtagSWITCH@@I@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAPAUtagSWITCH@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAPAUtagSWITCH@@I@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEAAPAUtagSWITCH@@I@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAPAUtagGATE@@I@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAPAUtagGATE@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAPAUtagGATE@@I@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEAAPAUtagGATE@@I@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::operator[]
_TEXT	ENDS
PUBLIC	?back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::back
; Function compile flags: /Ogty
;	COMDAT ?back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 04	 sub	 eax, 4

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEAAPAVCTPlayer@@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::back
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAPAUtagTMAPMON@@I@Z ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAPAUtagTMAPMON@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAPAUtagTMAPMON@@I@Z PROC NEAR ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@QAEAAPAUtagTMAPMON@@I@Z ENDP ; std::vector<tagTMAPMON *,std::allocator<tagTMAPMON *> >::operator[]
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T203713 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L203794
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L203793:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L203795
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L203796
$L203795:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L203796:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L203793
$L203794:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L203712
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L203712
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L203712:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T203713[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T203713[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@I@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@I@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@I@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::operator[]
_TEXT	ENDS
PUBLIC	?back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@XZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::back
; Function compile flags: /Ogty
;	COMDAT ?back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@XZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 04	 sub	 eax, 4

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEAAPAVCTMonster@@XZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::back
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::pop_back
; Function compile flags: /Ogty
;	COMDAT ?pop_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::pop_back, COMDAT
; _this$ = ecx

; 587  : 		{	// erase element at end

  00000	56		 push	 esi

; 588  : 		if (!empty())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 14		 je	 SHORT $L180216
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	8b c2		 mov	 eax, edx
  0000d	2b c6		 sub	 eax, esi
  0000f	c1 f8 02	 sar	 eax, 2
  00012	85 c0		 test	 eax, eax
  00014	74 06		 je	 SHORT $L180216

; 589  : 			{	// erase last element
; 590  : 			_Destroy(_Mylast - 1, _Mylast);
; 591  : 			--_Mylast;

  00016	83 c2 fc	 add	 edx, -4			; fffffffcH
  00019	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$L180216:
  0001c	5e		 pop	 esi

; 592  : 			}
; 593  : 		}

  0001d	c3		 ret	 0
?pop_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::pop_back
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T204013 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L204108
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L204107:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L204109
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L204110
$L204109:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L204110:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L204107
$L204108:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L204012
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L204012
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L204012:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T204013[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T204013[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T204213 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L204308
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L204307:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L204309
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L204310
$L204309:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L204310:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L204307
$L204308:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L204212
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L204212
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L204212:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T204213[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T204213[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T204413 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L204509
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L204508:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L204510
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L204511
$L204510:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L204511:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L204508
$L204509:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L204412
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L204412
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L204412:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T204413[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T204413[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find
_TEXT	ENDS
PUBLIC	??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	03 44 24 04	 add	 eax, DWORD PTR __Pos$[esp-4]

; 556  : 		}

  00007	c2 04 00	 ret	 4
??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::operator[]
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
$T204651 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 1b		 jne	 SHORT $L204728
  00014	56		 push	 esi
  00015	66 8b 37	 mov	 si, WORD PTR [edi]
$L204727:
  00018	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  0001c	73 05		 jae	 SHORT $L204729
  0001e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00021	eb 04		 jmp	 SHORT $L204730
$L204729:
  00023	8b d0		 mov	 edx, eax
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$L204730:
  00027	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002a	84 db		 test	 bl, bl
  0002c	74 ea		 je	 SHORT $L204727
  0002e	5e		 pop	 esi
$L204728:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00032	3b d0		 cmp	 edx, eax
  00034	89 54 24 14	 mov	 DWORD PTR __Where$[esp+8], edx
  00038	74 1b		 je	 SHORT $L204650
  0003a	66 8b 0f	 mov	 cx, WORD PTR [edi]
  0003d	66 3b 4a 0c	 cmp	 cx, WORD PTR [edx+12]
  00041	72 12		 jb	 SHORT $L204650
  00043	8d 44 24 14	 lea	 eax, DWORD PTR __Where$[esp+8]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0004d	5f		 pop	 edi
  0004e	89 10		 mov	 DWORD PTR [eax], edx
  00050	5b		 pop	 ebx

; 791  : 		}

  00051	59		 pop	 ecx
  00052	c2 08 00	 ret	 8
$L204650:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00055	89 44 24 08	 mov	 DWORD PTR $T204651[esp+12], eax
  00059	8d 44 24 08	 lea	 eax, DWORD PTR $T204651[esp+12]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00063	5f		 pop	 edi
  00064	89 10		 mov	 DWORD PTR [eax], edx
  00066	5b		 pop	 ebx

; 791  : 		}

  00067	59		 pop	 ecx
  00068	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T204887 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L204982
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L204981:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L204983
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L204984
$L204983:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L204984:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L204981
$L204982:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L204886
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L204886
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L204886:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T204887[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T204887[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::clear
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
$T205123 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 1b		 jne	 SHORT $L205199
  00014	56		 push	 esi
  00015	66 8b 37	 mov	 si, WORD PTR [edi]
$L205198:
  00018	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  0001c	73 05		 jae	 SHORT $L205200
  0001e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00021	eb 04		 jmp	 SHORT $L205201
$L205200:
  00023	8b d0		 mov	 edx, eax
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$L205201:
  00027	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002a	84 db		 test	 bl, bl
  0002c	74 ea		 je	 SHORT $L205198
  0002e	5e		 pop	 esi
$L205199:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00032	3b d0		 cmp	 edx, eax
  00034	89 54 24 14	 mov	 DWORD PTR __Where$[esp+8], edx
  00038	74 1b		 je	 SHORT $L205122
  0003a	66 8b 0f	 mov	 cx, WORD PTR [edi]
  0003d	66 3b 4a 0c	 cmp	 cx, WORD PTR [edx+12]
  00041	72 12		 jb	 SHORT $L205122
  00043	8d 44 24 14	 lea	 eax, DWORD PTR __Where$[esp+8]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0004d	5f		 pop	 edi
  0004e	89 10		 mov	 DWORD PTR [eax], edx
  00050	5b		 pop	 ebx

; 791  : 		}

  00051	59		 pop	 ecx
  00052	c2 08 00	 ret	 8
$L205122:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00055	89 44 24 08	 mov	 DWORD PTR $T205123[esp+12], eax
  00059	8d 44 24 08	 lea	 eax, DWORD PTR $T205123[esp+12]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00063	5f		 pop	 edi
  00064	89 10		 mov	 DWORD PTR [eax], edx
  00066	5b		 pop	 ebx

; 791  : 		}

  00067	59		 pop	 ecx
  00068	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
$T205323 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 1b		 jne	 SHORT $L205399
  00014	56		 push	 esi
  00015	66 8b 37	 mov	 si, WORD PTR [edi]
$L205398:
  00018	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  0001c	73 05		 jae	 SHORT $L205400
  0001e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00021	eb 04		 jmp	 SHORT $L205401
$L205400:
  00023	8b d0		 mov	 edx, eax
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$L205401:
  00027	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002a	84 db		 test	 bl, bl
  0002c	74 ea		 je	 SHORT $L205398
  0002e	5e		 pop	 esi
$L205399:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00032	3b d0		 cmp	 edx, eax
  00034	89 54 24 14	 mov	 DWORD PTR __Where$[esp+8], edx
  00038	74 1b		 je	 SHORT $L205322
  0003a	66 8b 0f	 mov	 cx, WORD PTR [edi]
  0003d	66 3b 4a 0c	 cmp	 cx, WORD PTR [edx+12]
  00041	72 12		 jb	 SHORT $L205322
  00043	8d 44 24 14	 lea	 eax, DWORD PTR __Where$[esp+8]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0004d	5f		 pop	 edi
  0004e	89 10		 mov	 DWORD PTR [eax], edx
  00050	5b		 pop	 ebx

; 791  : 		}

  00051	59		 pop	 ecx
  00052	c2 08 00	 ret	 8
$L205322:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00055	89 44 24 08	 mov	 DWORD PTR $T205323[esp+12], eax
  00059	8d 44 24 08	 lea	 eax, DWORD PTR $T205323[esp+12]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00063	5f		 pop	 edi
  00064	89 10		 mov	 DWORD PTR [eax], edx
  00066	5b		 pop	 ebx

; 791  : 		}

  00067	59		 pop	 ecx
  00068	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T205523 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L205600
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L205599:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L205601
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L205602
$L205601:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L205602:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L205599
$L205600:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L205522
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L205522
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L205522:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T205523[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T205523[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?back@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@XZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?back@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@XZ
_TEXT	SEGMENT
?back@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@XZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 04	 sub	 eax, 4

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@XZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::back
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT
$T205801 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	56		 push	 esi
  00003	8b f1		 mov	 esi, ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00005	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00008	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000b	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  0000e	84 c9		 test	 cl, cl
  00010	57		 push	 edi
  00011	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00015	75 1e		 jne	 SHORT $L205888
  00017	8a 0f		 mov	 cl, BYTE PTR [edi]
  00019	8d a4 24 00 00
	00 00		 npad	 7
$L205887:
  00020	38 48 0c	 cmp	 BYTE PTR [eax+12], cl
  00023	73 05		 jae	 SHORT $L205889
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	eb 04		 jmp	 SHORT $L205890
$L205889:
  0002a	8b d0		 mov	 edx, eax
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
$L205890:
  0002e	8a 58 0f	 mov	 bl, BYTE PTR [eax+15]
  00031	84 db		 test	 bl, bl
  00033	74 eb		 je	 SHORT $L205887
$L205888:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	3b d0		 cmp	 edx, eax
  0003a	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  0003e	74 1a		 je	 SHORT $L205800
  00040	8a 0f		 mov	 cl, BYTE PTR [edi]
  00042	3a 4a 0c	 cmp	 cl, BYTE PTR [edx+12]
  00045	72 13		 jb	 SHORT $L205800
  00047	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	89 10		 mov	 DWORD PTR [eax], edx
  00055	5b		 pop	 ebx

; 791  : 		}

  00056	59		 pop	 ecx
  00057	c2 08 00	 ret	 8
$L205800:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0005a	89 44 24 0c	 mov	 DWORD PTR $T205801[esp+16], eax
  0005e	8d 44 24 0c	 lea	 eax, DWORD PTR $T205801[esp+16]
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5b		 pop	 ebx

; 791  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L205986

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L205986:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L206029
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L206022:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L206022
  00021	5b		 pop	 ebx
$L206029:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L206035

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L206035:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXXZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L206078
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L206071:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L206071
  00021	5b		 pop	 ebx
$L206078:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L206119
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L206112:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L206112
  00021	5b		 pop	 ebx
$L206119:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L206160
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L206153:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L206153
  00021	5b		 pop	 ebx
$L206160:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L206166

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L206166:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::equal_range
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 19		 jne	 SHORT $L206249
  00014	66 8b 37	 mov	 si, WORD PTR [edi]
$L206248:
  00017	66 3b 70 0c	 cmp	 si, WORD PTR [eax+12]
  0001b	73 06		 jae	 SHORT $L206250
  0001d	8b d0		 mov	 edx, eax
  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
  00021	eb 03		 jmp	 SHORT $L206251
$L206250:
  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L206251:
  00026	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00029	84 db		 test	 bl, bl
  0002b	74 ea		 je	 SHORT $L206248
$L206249:
  0002d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00030	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00033	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00036	84 db		 test	 bl, bl
  00038	75 1c		 jne	 SHORT $L206349
  0003a	66 8b 37	 mov	 si, WORD PTR [edi]
  0003d	8d 49 00	 npad	 3
$L206348:
  00040	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  00044	73 05		 jae	 SHORT $L206350
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	eb 04		 jmp	 SHORT $L206351
$L206350:
  0004b	8b c8		 mov	 ecx, eax
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
$L206351:
  0004f	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00052	84 db		 test	 bl, bl
  00054	74 ea		 je	 SHORT $L206348
$L206349:
  00056	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	89 08		 mov	 DWORD PTR [eax], ecx
  0005e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00061	5b		 pop	 ebx

; 831  : 		}

  00062	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L206461
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L206460:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L206462
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L206463
$L206462:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L206463:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L206460
$L206461:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L206561
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L206560:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L206562
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L206563
$L206562:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L206563:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L206560
$L206561:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@G@1@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L207579
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L207547:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L207549
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L207550
$L207549:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L207550:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L207547
  0002b	5b		 pop	 ebx
$L207579:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L207652
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L207620:
  00015	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L207622
  0001b	8b c8		 mov	 ecx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L207623
$L207622:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L207623:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L207620
  0002b	5b		 pop	 ebx
$L207652:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00032	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@E@1@V?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree_val<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T207781 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T207781[esp], eax
  0000f	74 21		 je	 SHORT $L207769
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L207771:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T207781[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T207781[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L207771
  00031	5e		 pop	 esi
$L207769:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T207823 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T207823[esp], eax
  0000f	74 21		 je	 SHORT $L207811
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L207813:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T207823[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T207823[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L207813
  00031	5e		 pop	 esi
$L207811:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T207865 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T207865[esp], eax
  0000f	74 21		 je	 SHORT $L207853
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L207855:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T207865[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T207865[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L207855
  00031	5e		 pop	 esi
$L207853:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 815  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L207930
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L207930:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L207957
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L207957:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
_TEXT	ENDS
PUBLIC	??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L208009
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L208009:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear, COMDAT
; _this$ = ecx

; 743  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 744  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L208023
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L208023:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 745  : 		}

  00029	c3		 ret	 0
?clear@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::clear
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 08		 mov	 ecx, DWORD PTR [eax]

; 275  : 		CStringData* pOldData = GetData();

  0000a	8b 37		 mov	 esi, DWORD PTR [edi]
  0000c	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0000f	83 ee 10	 sub	 esi, 16			; 00000010H

; 276  : 		if( pSrcData != pOldData)

  00012	3b c6		 cmp	 eax, esi
  00014	74 4d		 je	 SHORT $L208063

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

  00016	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00019	85 d2		 test	 edx, edx
  0001b	53		 push	 ebx
  0001c	8d 5e 0c	 lea	 ebx, DWORD PTR [esi+12]
  0001f	55		 push	 ebp
  00020	7c 33		 jl	 SHORT $L148817
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	3b 16		 cmp	 edx, DWORD PTR [esi]
  00026	75 2d		 jne	 SHORT $L148817

; 281  : 			}
; 282  : 			else
; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  0002e	8b e8		 mov	 ebp, eax
  00030	83 c4 04	 add	 esp, 4

; 285  : 				pOldData->Release();

  00033	83 c8 ff	 or	 eax, -1
  00036	f0 0f c1 03	 lock	  xadd	 DWORD PTR [ebx], eax
  0003a	48		 dec	 eax
  0003b	85 c0		 test	 eax, eax
  0003d	7f 08		 jg	 SHORT $L208054
  0003f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	56		 push	 esi
  00044	ff 52 04	 call	 DWORD PTR [edx+4]
$L208054:

; 286  : 				Attach( pNewData );

  00047	83 c5 10	 add	 ebp, 16			; 00000010H
  0004a	89 2f		 mov	 DWORD PTR [edi], ebp
  0004c	5d		 pop	 ebp
  0004d	5b		 pop	 ebx

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

  0004e	8b c7		 mov	 eax, edi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi

; 291  : 	}

  00052	c2 04 00	 ret	 4
$L148817:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

  00055	8b 41 f4	 mov	 eax, DWORD PTR [ecx-12]
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00061	5d		 pop	 ebp
  00062	5b		 pop	 ebx
$L208063:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

  00063	8b c7		 mov	 eax, edi
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 291  : 	}

  00067	c2 04 00	 ret	 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

  00000	56		 push	 esi

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pszSrc$[esp]
  00005	85 f6		 test	 esi, esi
  00007	75 0d		 jne	 SHORT $L208073
  00009	33 c0		 xor	 eax, eax
  0000b	50		 push	 eax
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00012	5e		 pop	 esi

; 581  : 	}

  00013	c2 04 00	 ret	 4

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

$L208073:
  00016	8b c6		 mov	 eax, esi
  00018	57		 push	 edi
  00019	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001c	8d 64 24 00	 npad	 4
$L208075:
  00020	8a 10		 mov	 dl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 d2		 test	 dl, dl
  00025	75 f9		 jne	 SHORT $L208075
  00027	2b c7		 sub	 eax, edi
  00029	5f		 pop	 edi
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00031	5e		 pop	 esi

; 581  : 	}

  00032	c2 04 00	 ret	 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L149774

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L149774:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L149775

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L149775:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L149777
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L149777
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L208080
  00047	8b de		 mov	 ebx, esi
$L208080:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L208135
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L208133
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L208133:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L208135:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L149777:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L208172

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L208169
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L208169:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L208172:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	??_GtagGODBALL@@QAEPAXI@Z			; tagGODBALL::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagGODBALL@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagGODBALL@@QAEPAXI@Z PROC NEAR			; tagGODBALL::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagGODBALL@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L208177
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L208177:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagGODBALL@@QAEPAXI@Z ENDP				; tagGODBALL::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1tagGODTOWER@@QAE@XZ				; tagGODTOWER::~tagGODTOWER
; Function compile flags: /Ogty
;	COMDAT ??1tagGODTOWER@@QAE@XZ
_TEXT	SEGMENT
??1tagGODTOWER@@QAE@XZ PROC NEAR			; tagGODTOWER::~tagGODTOWER, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L208197
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L208197:
  00013	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  0001a	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00021	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1tagGODTOWER@@QAE@XZ ENDP				; tagGODTOWER::~tagGODTOWER
_TEXT	ENDS
PUBLIC	?FindMonSpawn@CTMap@@QAEPAVCTMonSpawn@@G@Z	; CTMap::FindMonSpawn
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
;	COMDAT ?FindMonSpawn@CTMap@@QAEPAVCTMonSpawn@@G@Z
_TEXT	SEGMENT
_finder$ = -4						; size = 4
_wSpawnID$ = 8						; size = 2
?FindMonSpawn@CTMap@@QAEPAVCTMonSpawn@@G@Z PROC NEAR	; CTMap::FindMonSpawn, COMDAT
; _this$ = ecx

; 542  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 543  : 	MAPTMONSPAWN::iterator finder = m_mapTMONSPAWN.find(wSpawnID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _wSpawnID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _finder$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 544  : 
; 545  : 	if( finder != m_mapTMONSPAWN.end() )

  00016	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _finder$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L177052

; 546  : 		return (*finder).second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 549  : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L177052:

; 547  : 
; 548  : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 549  : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?FindMonSpawn@CTMap@@QAEPAVCTMonSpawn@@G@Z ENDP		; CTMap::FindMonSpawn
_TEXT	ENDS
PUBLIC	?FindMonster@CTMap@@QAEPAVCTMonster@@K@Z	; CTMap::FindMonster
; Function compile flags: /Ogty
;	COMDAT ?FindMonster@CTMap@@QAEPAVCTMonster@@K@Z
_TEXT	SEGMENT
_finder$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindMonster@CTMap@@QAEPAVCTMonster@@K@Z PROC NEAR	; CTMap::FindMonster, COMDAT
; _this$ = ecx

; 1373 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1374 : 	MAPTMONSTER::iterator finder = m_mapTMONSTER.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _finder$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find

; 1375 : 
; 1376 : 	if( finder != m_mapTMONSTER.end() &&
; 1377 : 		(*finder).second->m_pMON &&
; 1378 : 		(*finder).second->m_bStatus != OS_DISAPPEAR)

  00016	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _finder$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 17		 je	 SHORT $L178979
  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00025	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  0002b	85 c9		 test	 ecx, ecx
  0002d	74 0a		 je	 SHORT $L178979
  0002f	8a 88 cc 00 00
	00		 mov	 cl, BYTE PTR [eax+204]
  00035	84 c9		 test	 cl, cl

; 1379 : 		return (*finder).second;

  00037	75 02		 jne	 SHORT $L178975
$L178979:

; 1380 : 
; 1381 : 	return NULL;

  00039	33 c0		 xor	 eax, eax
$L178975:

; 1382 : }

  0003b	59		 pop	 ecx
  0003c	c2 04 00	 ret	 4
?FindMonster@CTMap@@QAEPAVCTMonster@@K@Z ENDP		; CTMap::FindMonster
_TEXT	ENDS
PUBLIC	?FindSwitch@CTMap@@QAEPAUtagSWITCH@@K@Z		; CTMap::FindSwitch
; Function compile flags: /Ogty
;	COMDAT ?FindSwitch@CTMap@@QAEPAUtagSWITCH@@K@Z
_TEXT	SEGMENT
_finder$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindSwitch@CTMap@@QAEPAUtagSWITCH@@K@Z PROC NEAR	; CTMap::FindSwitch, COMDAT
; _this$ = ecx

; 1385 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1386 : 	MAPTSWITCH::iterator finder = m_mapTSWITCH.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _finder$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find

; 1387 : 
; 1388 : 	if( finder != m_mapTSWITCH.end() )

  00016	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _finder$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L178987

; 1389 : 		return (*finder).second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 1392 : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L178987:

; 1390 : 
; 1391 : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 1392 : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?FindSwitch@CTMap@@QAEPAUtagSWITCH@@K@Z ENDP		; CTMap::FindSwitch
_TEXT	ENDS
PUBLIC	?FindMapGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z	; CTMap::FindMapGodBall
; Function compile flags: /Ogty
;	COMDAT ?FindMapGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_wBall$ = 8						; size = 2
?FindMapGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z PROC NEAR	; CTMap::FindMapGodBall, COMDAT
; _this$ = ecx

; 1413 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1414 : 	MAPTGODBALL::iterator it = m_mapTGODBALL.find(wBall);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _wBall$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find

; 1415 : 	if(it!=m_mapTGODBALL.end())

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L179012

; 1416 : 		return (*it).second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 1419 : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L179012:

; 1417 : 	else
; 1418 : 		return NULL;

  00029	33 c0		 xor	 eax, eax

; 1419 : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?FindMapGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z ENDP	; CTMap::FindMapGodBall
_TEXT	ENDS
PUBLIC	?FindGodTower@CTMap@@QAEPAUtagGODTOWER@@G@Z	; CTMap::FindGodTower
; Function compile flags: /Ogty
;	COMDAT ?FindGodTower@CTMap@@QAEPAUtagGODTOWER@@G@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_wTower$ = 8						; size = 2
?FindGodTower@CTMap@@QAEPAUtagGODTOWER@@G@Z PROC NEAR	; CTMap::FindGodTower, COMDAT
; _this$ = ecx

; 1422 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1423 : 	MAPTGODTOWER::iterator it = m_mapTGODTOWER.find(wTower);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _wTower$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::find

; 1424 : 	if(it!=m_mapTGODTOWER.end())

  00016	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L179021

; 1425 : 		return (*it).second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 1428 : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L179021:

; 1426 : 	else
; 1427 : 		return NULL;

  00029	33 c0		 xor	 eax, eax

; 1428 : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?FindGodTower@CTMap@@QAEPAUtagGODTOWER@@G@Z ENDP	; CTMap::FindGodTower
_TEXT	ENDS
PUBLIC	?MoveTempGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z	; CTMap::MoveTempGodBall
; Function compile flags: /Ogty
;	COMDAT ?MoveTempGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z
_TEXT	SEGMENT
_itTemp$ = 8						; size = 4
_pBall$ = 8						; size = 4
?MoveTempGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z PROC NEAR	; CTMap::MoveTempGodBall, COMDAT
; _this$ = ecx

; 1507 : 	MAPTGODBALL::iterator itTemp = m_mapTTEMPGODBALL.find(pBall->m_wTempID);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pBall$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	83 c0 32	 add	 eax, 50			; 00000032H
  0000a	50		 push	 eax
  0000b	8d 4c 24 0c	 lea	 ecx, DWORD PTR _itTemp$[esp+4]
  0000f	51		 push	 ecx
  00010	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00013	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find

; 1508 : 	if(itTemp != m_mapTTEMPGODBALL.end())

  00018	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0001b	8b 44 24 08	 mov	 eax, DWORD PTR _itTemp$[esp]
  0001f	3b c1		 cmp	 eax, ecx
  00021	5e		 pop	 esi
  00022	74 07		 je	 SHORT $L179073

; 1509 : 		(*itTemp).second->m_bMove = TRUE;

  00024	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00027	c6 42 30 01	 mov	 BYTE PTR [edx+48], 1
$L179073:

; 1510 : }

  0002b	c2 04 00	 ret	 4
?MoveTempGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z ENDP	; CTMap::MoveTempGodBall
_TEXT	ENDS
PUBLIC	?ResetTempGodBall@CTMap@@QAEXXZ			; CTMap::ResetTempGodBall
; Function compile flags: /Ogty
;	COMDAT ?ResetTempGodBall@CTMap@@QAEXXZ
_TEXT	SEGMENT
_itTemp$ = -4						; size = 4
?ResetTempGodBall@CTMap@@QAEXXZ PROC NEAR		; CTMap::ResetTempGodBall, COMDAT
; _this$ = ecx

; 1513 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1514 : 	MAPTGODBALL::iterator itTemp;
; 1515 : 	for(itTemp=m_mapTTEMPGODBALL.begin(); itTemp!=m_mapTTEMPGODBALL.end(); itTemp++)

  00004	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 44 24 04	 mov	 DWORD PTR _itTemp$[esp+8], eax
  0000f	74 19		 je	 SHORT $L179083
$L208542:

; 1516 : 		(*itTemp).second->m_bMove = TRUE;

  00011	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00014	8d 4c 24 04	 lea	 ecx, DWORD PTR _itTemp$[esp+8]
  00018	c6 40 30 01	 mov	 BYTE PTR [eax+48], 1
  0001c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  00021	8b 44 24 04	 mov	 eax, DWORD PTR _itTemp$[esp+8]
  00025	3b 46 5c	 cmp	 eax, DWORD PTR [esi+92]
  00028	75 e7		 jne	 SHORT $L208542
$L179083:
  0002a	5e		 pop	 esi

; 1517 : }

  0002b	59		 pop	 ecx
  0002c	c3		 ret	 0
?ResetTempGodBall@CTMap@@QAEXXZ ENDP			; CTMap::ResetTempGodBall
_TEXT	ENDS
PUBLIC	?ClearMonster@CTMap@@QAEXXZ			; CTMap::ClearMonster
; Function compile flags: /Ogty
;	COMDAT ?ClearMonster@CTMap@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearMonster@CTMap@@QAEXXZ PROC NEAR			; CTMap::ClearMonster, COMDAT
; _this$ = ecx

; 1802 : {

  00000	51		 push	 ecx

; 1803 : 	MAPTMONSPAWN::iterator it;
; 1804 : 	for(it = m_mapTMONSPAWN.begin(); it!=m_mapTMONSPAWN.end(); it++)

  00001	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00004	55		 push	 ebp
  00005	8b 28		 mov	 ebp, DWORD PTR [eax]
  00007	3b e8		 cmp	 ebp, eax
  00009	89 4c 24 04	 mov	 DWORD PTR _this$[esp+8], ecx
  0000d	0f 84 b0 00 00
	00		 je	 $L179349
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	b3 03		 mov	 bl, 3
$L208784:

; 1805 : 	{
; 1806 : 		CTMonSpawn * pSPAWN = (*it).second;

  00018	8b 75 10	 mov	 esi, DWORD PTR [ebp+16]

; 1807 : 		for(DWORD i=0; i<pSPAWN->m_vTMON.size(); i++)

  0001b	33 ff		 xor	 edi, edi
  0001d	8d 49 00	 npad	 3
$L179352:
  00020	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00023	85 c9		 test	 ecx, ecx
  00025	74 3a		 je	 SHORT $L179348
  00027	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002a	2b c1		 sub	 eax, ecx
  0002c	c1 f8 02	 sar	 eax, 2
  0002f	3b f8		 cmp	 edi, eax
  00031	73 2e		 jae	 SHORT $L179348
  00033	8b c1		 mov	 eax, ecx

; 1808 : 			if( pSPAWN->m_vTMON[i]->m_bStatus != OS_DEAD  &&
; 1809 : 				pSPAWN->m_vTMON[i]->m_bStatus != OS_DISAPPEAR)

  00035	8b 0c b8	 mov	 ecx, DWORD PTR [eax+edi*4]
  00038	38 99 cc 00 00
	00		 cmp	 BYTE PTR [ecx+204], bl
  0003e	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  00041	74 1b		 je	 SHORT $L179353
  00043	8b d1		 mov	 edx, ecx
  00045	8a 8a cc 00 00
	00		 mov	 cl, BYTE PTR [edx+204]
  0004b	84 c9		 test	 cl, cl
  0004d	74 0f		 je	 SHORT $L179353

; 1810 : 			{
; 1811 : 				pSPAWN->m_vTMON[i]->OnDie(0,OT_NONE,0); 

  0004f	6a 00		 push	 0
  00051	8b c2		 mov	 eax, edx
  00053	8b 10		 mov	 edx, DWORD PTR [eax]
  00055	6a 00		 push	 0
  00057	6a 00		 push	 0
  00059	8b c8		 mov	 ecx, eax
  0005b	ff 52 18	 call	 DWORD PTR [edx+24]
$L179353:

; 1807 : 		for(DWORD i=0; i<pSPAWN->m_vTMON.size(); i++)

  0005e	47		 inc	 edi
  0005f	eb bf		 jmp	 SHORT $L179352
$L179348:

; 1803 : 	MAPTMONSPAWN::iterator it;
; 1804 : 	for(it = m_mapTMONSPAWN.begin(); it!=m_mapTMONSPAWN.end(); it++)

  00061	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00064	84 c0		 test	 al, al
  00066	75 4b		 jne	 SHORT $L208795
  00068	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  0006b	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0006e	84 c0		 test	 al, al
  00070	75 1d		 jne	 SHORT $L209039
  00072	8b 01		 mov	 eax, DWORD PTR [ecx]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	75 10		 jne	 SHORT $L208810
  0007b	eb 03 8d 49 00	 npad	 5
$L208809:
  00080	8b c8		 mov	 ecx, eax
  00082	8b 01		 mov	 eax, DWORD PTR [ecx]
  00084	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00087	84 d2		 test	 dl, dl
  00089	74 f5		 je	 SHORT $L208809
$L208810:
  0008b	8b e9		 mov	 ebp, ecx
  0008d	eb 24		 jmp	 SHORT $L208795
$L209039:
  0008f	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00092	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00095	84 c9		 test	 cl, cl
  00097	75 18		 jne	 SHORT $L208798
  00099	8d a4 24 00 00
	00 00		 npad	 7
$L208797:
  000a0	3b 68 08	 cmp	 ebp, DWORD PTR [eax+8]
  000a3	75 0c		 jne	 SHORT $L208798
  000a5	8b e8		 mov	 ebp, eax
  000a7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000aa	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000ad	84 c9		 test	 cl, cl
  000af	74 ef		 je	 SHORT $L208797
$L208798:
  000b1	8b e8		 mov	 ebp, eax
$L208795:
  000b3	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+20]
  000b7	3b 68 08	 cmp	 ebp, DWORD PTR [eax+8]
  000ba	0f 85 58 ff ff
	ff		 jne	 $L208784
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
$L179349:
  000c3	5d		 pop	 ebp

; 1812 : 			}
; 1813 : 	}
; 1814 : }

  000c4	59		 pop	 ecx
  000c5	c3		 ret	 0
?ClearMonster@CTMap@@QAEXXZ ENDP			; CTMap::ClearMonster
_TEXT	ENDS
PUBLIC	?ResetTournament@CTMap@@QAEXXZ			; CTMap::ResetTournament
; Function compile flags: /Ogty
;	COMDAT ?ResetTournament@CTMap@@QAEXXZ
_TEXT	SEGMENT
?ResetTournament@CTMap@@QAEXXZ PROC NEAR		; CTMap::ResetTournament, COMDAT
; _this$ = ecx

; 1924 : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1925 : 	m_wDefKillPoint = 0;

  00002	33 ff		 xor	 edi, edi

; 1926 : 	m_wAtkKillPoint = 0;
; 1927 : 	m_dwBlueHideTick = 0;
; 1928 : 	m_dwRedHideTick = 0;
; 1929 : 
; 1930 : 	m_dwEndTick = 0;
; 1931 : 	m_bBlueTeam = TOURNAMENT_SLOT;

  00004	b0 08		 mov	 al, 8

; 1932 : 	m_bRedTeam = TOURNAMENT_SLOT;
; 1933 : 
; 1934 : 	m_mapTNMTPlayer.clear();

  00006	8d 71 7c	 lea	 esi, DWORD PTR [ecx+124]
  00009	66 89 b9 a2 00
	00 00		 mov	 WORD PTR [ecx+162], di
  00010	66 89 b9 a4 00
	00 00		 mov	 WORD PTR [ecx+164], di
  00017	89 b9 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], edi
  0001d	89 b9 ac 00 00
	00		 mov	 DWORD PTR [ecx+172], edi
  00023	89 b9 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], edi
  00029	88 81 a0 00 00
	00		 mov	 BYTE PTR [ecx+160], al
  0002f	88 81 a1 00 00
	00		 mov	 BYTE PTR [ecx+161], al
  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003b	51		 push	 ecx
  0003c	8b ce		 mov	 ecx, esi
  0003e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  00043	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00046	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00049	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004c	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  0004f	89 00		 mov	 DWORD PTR [eax], eax
  00051	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00054	5f		 pop	 edi
  00055	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00058	5e		 pop	 esi

; 1935 : }

  00059	c3		 ret	 0
?ResetTournament@CTMap@@QAEXXZ ENDP			; CTMap::ResetTournament
_TEXT	ENDS
PUBLIC	?CanDoTournament@CTMap@@QAEEE@Z			; CTMap::CanDoTournament
; Function compile flags: /Ogty
;	COMDAT ?CanDoTournament@CTMap@@QAEEE@Z
_TEXT	SEGMENT
_bRed$ = -7						; size = 1
_bID$ = -6						; size = 1
tv226 = -5						; size = 1
_it$ = -4						; size = 4
_bStep$ = 8						; size = 1
?CanDoTournament@CTMap@@QAEEE@Z PROC NEAR		; CTMap::CanDoTournament, COMDAT
; _this$ = ecx

; 1938 : {

  00000	83 ec 08	 sub	 esp, 8

; 1939 : 	if(m_bBlueTeam == TOURNAMENT_SLOT ||
; 1940 : 		m_bRedTeam == TOURNAMENT_SLOT ||
; 1941 : 		m_mapTNMTPlayer.empty())

  00003	8a 91 a0 00 00
	00		 mov	 dl, BYTE PTR [ecx+160]
  00009	80 fa 08	 cmp	 dl, 8
  0000c	88 54 24 03	 mov	 BYTE PTR tv226[esp+8], dl
  00010	0f 84 b8 00 00
	00		 je	 $L179550
  00016	80 b9 a1 00 00
	00 08		 cmp	 BYTE PTR [ecx+161], 8
  0001d	0f 84 ab 00 00
	00		 je	 $L179550
  00023	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 9d 00 00
	00		 je	 $L179550

; 1943 : 
; 1944 : 	BYTE bID;
; 1945 : 
; 1946 : 	if(bStep == TNMTSTEP_FINAL)	bID = MATCH_FINAL;

  00031	8a 44 24 0c	 mov	 al, BYTE PTR _bStep$[esp+4]
  00035	3c 0c		 cmp	 al, 12			; 0000000cH
  00037	75 07		 jne	 SHORT $L179552
  00039	c6 44 24 02 02	 mov	 BYTE PTR _bID$[esp+8], 2

; 1947 : 	else if(bStep == TNMTSTEP_SFINAL) bID = MATCH_SFINAL;

  0003e	eb 07		 jmp	 SHORT $L179554
$L179552:
  00040	3c 09		 cmp	 al, 9
  00042	0f 94 44 24 02	 sete	 BYTE PTR _bID$[esp+8]
$L179554:
  00047	53		 push	 ebx
  00048	56		 push	 esi

; 1951 : 	BYTE bRed = 0;
; 1952 : 
; 1953 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1954 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  00049	8b b1 80 00 00
	00		 mov	 esi, DWORD PTR [ecx+128]
  0004f	8b 06		 mov	 eax, DWORD PTR [esi]
  00051	32 db		 xor	 bl, bl
  00053	3b c6		 cmp	 eax, esi
  00055	57		 push	 edi
  00056	88 5c 24 0d	 mov	 BYTE PTR _bRed$[esp+20], bl
  0005a	89 44 24 10	 mov	 DWORD PTR _it$[esp+20], eax
  0005e	74 63		 je	 SHORT $L209238

; 1948 : 	else bID = MATCH_QFINAL;
; 1949 : 
; 1950 : 	BYTE bBlue = 0;

  00060	66 8b b9 8a 00
	00 00		 mov	 di, WORD PTR [ecx+138]
  00067	eb 07		 jmp	 SHORT $L209166
$L209241:
  00069	8a 54 24 0f	 mov	 dl, BYTE PTR tv226[esp+20]
  0006d	8d 49 00	 npad	 3

; 1951 : 	BYTE bRed = 0;
; 1952 : 
; 1953 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1954 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

$L209166:

; 1955 : 	{
; 1956 : 		if((*it).second->m_wMapID == m_wMapID)

  00070	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00073	66 39 78 16	 cmp	 WORD PTR [eax+22], di
  00077	75 0d		 jne	 SHORT $L179567

; 1957 : 		{
; 1958 : 			if(m_bBlueTeam == (*it).second->m_bSlot)

  00079	3a 50 15	 cmp	 dl, BYTE PTR [eax+21]
  0007c	75 04		 jne	 SHORT $L179566

; 1959 : 				bBlue++;

  0007e	fe c3		 inc	 bl

; 1960 : 			else

  00080	eb 04		 jmp	 SHORT $L179567
$L179566:

; 1961 : 				bRed++;

  00082	fe 44 24 0d	 inc	 BYTE PTR _bRed$[esp+20]
$L179567:

; 1962 : 		}
; 1963 : 
; 1964 : 		if(bStep != TNMTSTEP_READY && (*it).second->m_bResult[bID] != TNMTWIN_NONE)

  00086	8a 4c 24 18	 mov	 cl, BYTE PTR _bStep$[esp+16]
  0008a	84 c9		 test	 cl, cl
  0008c	74 0d		 je	 SHORT $L179563
  0008e	0f b6 4c 24 0e	 movzx	 ecx, BYTE PTR _bID$[esp+20]
  00093	8a 54 01 18	 mov	 dl, BYTE PTR [ecx+eax+24]
  00097	84 d2		 test	 dl, dl
  00099	75 28		 jne	 SHORT $L209238
$L179563:

; 1951 : 	BYTE bRed = 0;
; 1952 : 
; 1953 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1954 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  0009b	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+20]
  0009f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  000a4	8b 44 24 10	 mov	 eax, DWORD PTR _it$[esp+20]
  000a8	3b c6		 cmp	 eax, esi
  000aa	75 bd		 jne	 SHORT $L209241

; 1966 : 	}
; 1967 : 
; 1968 : 	if(!bBlue || !bRed)

  000ac	84 db		 test	 bl, bl
  000ae	74 13		 je	 SHORT $L209238
  000b0	8a 44 24 0d	 mov	 al, BYTE PTR _bRed$[esp+20]
  000b4	84 c0		 test	 al, al
  000b6	74 0b		 je	 SHORT $L209238
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi

; 1969 : 		return FALSE;
; 1970 : 
; 1971 : 	return TRUE;

  000ba	b0 01		 mov	 al, 1
  000bc	5b		 pop	 ebx

; 1972 : }

  000bd	83 c4 08	 add	 esp, 8
  000c0	c2 04 00	 ret	 4
$L209238:
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi

; 1965 : 			return FALSE;

  000c5	32 c0		 xor	 al, al
  000c7	5b		 pop	 ebx

; 1972 : }

  000c8	83 c4 08	 add	 esp, 8
  000cb	c2 04 00	 ret	 4
$L179550:

; 1942 : 		return FALSE;

  000ce	32 c0		 xor	 al, al

; 1972 : }

  000d0	83 c4 08	 add	 esp, 8
  000d3	c2 04 00	 ret	 4
?CanDoTournament@CTMap@@QAEEE@Z ENDP			; CTMap::CanDoTournament
_TEXT	ENDS
PUBLIC	?SetHideTick@CTMap@@QAEXKK@Z			; CTMap::SetHideTick
; Function compile flags: /Ogty
;	COMDAT ?SetHideTick@CTMap@@QAEXKK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwCharID$ = 8						; size = 4
_dwTick$ = 12						; size = 4
?SetHideTick@CTMap@@QAEXKK@Z PROC NEAR			; CTMap::SetHideTick, COMDAT
; _this$ = ecx

; 1984 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1985 : 	MAPTOURNAMENTPLAYER::iterator it = m_mapTNMTPlayer.find(dwCharID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwCharID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::find

; 1986 : 	if(it!=m_mapTNMTPlayer.end())

  00016	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001a	3b 86 80 00 00
	00		 cmp	 eax, DWORD PTR [esi+128]
  00020	74 37		 je	 SHORT $L179587

; 1987 : 	{
; 1988 : 		if(m_bBlueTeam == (*it).second->m_bSlot)

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8a 86 a0 00 00
	00		 mov	 al, BYTE PTR [esi+160]
  0002b	3a 42 15	 cmp	 al, BYTE PTR [edx+21]
  0002e	75 17		 jne	 SHORT $L179586

; 1989 : 			m_dwBlueHideTick += dwTick;

  00030	8b 86 a8 00 00
	00		 mov	 eax, DWORD PTR [esi+168]
  00036	8b 4c 24 10	 mov	 ecx, DWORD PTR _dwTick$[esp+4]
  0003a	03 c1		 add	 eax, ecx
  0003c	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  00042	5e		 pop	 esi

; 1992 : 	}
; 1993 : }

  00043	59		 pop	 ecx
  00044	c2 08 00	 ret	 8
$L179586:

; 1990 : 		else
; 1991 : 			m_dwRedHideTick += dwTick;

  00047	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  0004d	8b 54 24 10	 mov	 edx, DWORD PTR _dwTick$[esp+4]
  00051	03 c2		 add	 eax, edx
  00053	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
$L179587:
  00059	5e		 pop	 esi

; 1992 : 	}
; 1993 : }

  0005a	59		 pop	 ecx
  0005b	c2 08 00	 ret	 8
?SetHideTick@CTMap@@QAEXKK@Z ENDP			; CTMap::SetHideTick
_TEXT	ENDS
PUBLIC	??1?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::~vector<tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::~vector<tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L209298
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L209298:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::~vector<tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??1?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::~vector<tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::~vector<tagGATE *,std::allocator<tagGATE *> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L209312
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L209312:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::~vector<tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L209328
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L209328:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGG@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@G@1@ABV?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 19		 jne	 SHORT $L210679
  00014	66 8b 37	 mov	 si, WORD PTR [edi]
$L210678:
  00017	66 3b 70 0c	 cmp	 si, WORD PTR [eax+12]
  0001b	73 06		 jae	 SHORT $L210680
  0001d	8b d0		 mov	 edx, eax
  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
  00021	eb 03		 jmp	 SHORT $L210681
$L210680:
  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L210681:
  00026	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00029	84 db		 test	 bl, bl
  0002b	74 ea		 je	 SHORT $L210678
$L210679:
  0002d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00030	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00033	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00036	84 db		 test	 bl, bl
  00038	75 1c		 jne	 SHORT $L210780
  0003a	66 8b 37	 mov	 si, WORD PTR [edi]
  0003d	8d 49 00	 npad	 3
$L210779:
  00040	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  00044	73 05		 jae	 SHORT $L210781
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	eb 04		 jmp	 SHORT $L210782
$L210781:
  0004b	8b c8		 mov	 ecx, eax
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
$L210782:
  0004f	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00052	84 db		 test	 bl, bl
  00054	74 ea		 je	 SHORT $L210779
$L210780:
  00056	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	89 08		 mov	 DWORD PTR [eax], ecx
  0005e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00061	5b		 pop	 ebx

; 831  : 		}

  00062	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L210878
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L210878:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L210906
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L210906:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L210912
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L210912:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@E@1@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@E@1@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@E@1@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@E@1@ABV?$allocator@U?$pair@$$CBEE@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
_TEXT	ENDS
PUBLIC	??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 969  : 
; 970  : 		return( *this );

  0000d	8b c6		 mov	 eax, esi
  0000f	5e		 pop	 esi

; 971  : 	}

  00010	c2 04 00	 ret	 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 316  : 		SetString( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L211045
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 319  : 	}

  00017	c2 04 00	 ret	 4

; 316  : 		SetString( pszSrc );

$L211045:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L211047:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L211047
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 319  : 	}

  00036	c2 04 00	 ret	 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L148837

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L148837:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L148839

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L148839:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L148840

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L148840:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L211198
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L211198:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L211199
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L211244:
  0006b	76 6d		 jbe	 SHORT $L211243

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L211208
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L211209

; 599  : 		else if (_Grow(_Num))

$L211199:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L211244
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L211191
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L211191:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L211208:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L211209:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L211215
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L211216
$L211215:
  000b7	8b f8		 mov	 edi, eax
$L211216:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L211240
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L211240:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L211243:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L211266
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L211267
$L211266:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L211267:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L149761
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L211270
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L211271
$L211270:
  00029	8b c8		 mov	 ecx, eax
$L211271:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L149761

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L211283
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L211283:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L149761:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L211381
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L211381:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L211382
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L211462:
  00077	76 68		 jbe	 SHORT $L211460

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L211434
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L211435

; 611  : 
; 612  : 		if (_Grow(_Num))

$L211382:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L211462
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L211425
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L211425:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L211434:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L211435:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L211457
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L211457:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L211460:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??_GtagGODTOWER@@QAEPAXI@Z			; tagGODTOWER::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagGODTOWER@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagGODTOWER@@QAEPAXI@Z PROC NEAR			; tagGODTOWER::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagGODTOWER@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L211466
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L211466:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagGODTOWER@@QAEPAXI@Z ENDP				; tagGODTOWER::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1tagSWITCH@@QAE@XZ				; tagSWITCH::~tagSWITCH
; Function compile flags: /Ogty
;	COMDAT ??1tagSWITCH@@QAE@XZ
_TEXT	SEGMENT
??1tagSWITCH@@QAE@XZ PROC NEAR				; tagSWITCH::~tagSWITCH, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L211485
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L211485:
  00013	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  0001a	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00021	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1tagSWITCH@@QAE@XZ ENDP				; tagSWITCH::~tagSWITCH
_TEXT	ENDS
PUBLIC	??1tagGATE@@QAE@XZ				; tagGATE::~tagGATE
; Function compile flags: /Ogty
;	COMDAT ??1tagGATE@@QAE@XZ
_TEXT	SEGMENT
??1tagGATE@@QAE@XZ PROC NEAR				; tagGATE::~tagGATE, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L211510
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L211510:
  00013	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  0001a	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1tagGATE@@QAE@XZ ENDP					; tagGATE::~tagGATE
_TEXT	ENDS
PUBLIC	?FindNeighbor@CTMap@@QAEPAVCTObjBase@@EKMM@Z	; CTMap::FindNeighbor
EXTRN	__ftol2:NEAR
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
;	COMDAT ?FindNeighbor@CTMap@@QAEPAVCTObjBase@@EKMM@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_i$177449 = -12						; size = 4
_nPosX$ = -8						; size = 4
_nPosZ$ = -4						; size = 4
_bType$ = 8						; size = 1
_finder$177460 = 12					; size = 4
_dwObjID$ = 12						; size = 4
_itCHAR$177631 = 16					; size = 4
_itMON$177553 = 16					; size = 4
_itSELF$177552 = 16					; size = 4
_itREC$177551 = 16					; size = 4
$T211518 = 16						; size = 4
_fPosX$ = 16						; size = 4
_j$177454 = 20						; size = 4
_fPosZ$ = 20						; size = 4
?FindNeighbor@CTMap@@QAEPAVCTObjBase@@EKMM@Z PROC NEAR	; CTMap::FindNeighbor, COMDAT
; _this$ = ecx

; 690  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H

; 691  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00003	d9 44 24 1c	 fld	 DWORD PTR _fPosX$[esp+12]
  00007	53		 push	 ebx
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	89 74 24 10	 mov	 DWORD PTR _this$[esp+32], esi
  00011	e8 00 00 00 00	 call	 __ftol2

; 692  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 44 24 30	 fld	 DWORD PTR _fPosZ$[esp+28]
  0001a	0f b7 e8	 movzx	 ebp, ax
  0001d	c1 ed 06	 shr	 ebp, 6
  00020	4d		 dec	 ebp
  00021	89 6c 24 18	 mov	 DWORD PTR _nPosX$[esp+32], ebp
  00025	e8 00 00 00 00	 call	 __ftol2

; 693  : 
; 694  : 	for( int i=0; i<3; i++)

  0002a	8b 7c 24 28	 mov	 edi, DWORD PTR _dwObjID$[esp+28]
  0002e	0f b7 c0	 movzx	 eax, ax
  00031	c1 e8 06	 shr	 eax, 6
  00034	33 db		 xor	 ebx, ebx
  00036	48		 dec	 eax
  00037	89 5c 24 14	 mov	 DWORD PTR _i$177449[esp+32], ebx
  0003b	89 44 24 1c	 mov	 DWORD PTR _nPosZ$[esp+32], eax

; 695  : 	{
; 696  : 		int nLocZ = nPosZ + i;

  0003f	8b d8		 mov	 ebx, eax

; 697  : 
; 698  : 		for( int j=0; j<3; j++)

  00041	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR _j$177454[esp+28], 0
  00049	eb 1c		 jmp	 SHORT $L177455
$L212024:

; 693  : 
; 694  : 	for( int i=0; i<3; i++)

  0004b	8b 44 24 1c	 mov	 eax, DWORD PTR _nPosZ$[esp+32]
  0004f	8b 6c 24 18	 mov	 ebp, DWORD PTR _nPosX$[esp+32]
  00053	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+32]

; 695  : 	{
; 696  : 		int nLocZ = nPosZ + i;

  00057	03 d8		 add	 ebx, eax

; 697  : 
; 698  : 		for( int j=0; j<3; j++)

  00059	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR _j$177454[esp+28], 0
  00061	eb 04		 jmp	 SHORT $L177455
$L212025:

; 695  : 	{
; 696  : 		int nLocZ = nPosZ + i;

  00063	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+32]
$L177455:

; 699  : 		{
; 700  : 			int nLocX = nPosX + j;
; 701  : 
; 702  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00067	85 ed		 test	 ebp, ebp
  00069	0f 8c 1a 01 00
	00		 jl	 $L177456
  0006f	85 db		 test	 ebx, ebx
  00071	0f 8c 12 01 00
	00		 jl	 $L177456

; 703  : 			{
; 704  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00077	0f b7 c3	 movzx	 eax, bx
  0007a	0f b7 cd	 movzx	 ecx, bp
  0007d	c1 e0 10	 shl	 eax, 16			; 00000010H
  00080	0b c1		 or	 eax, ecx
  00082	8d 54 24 2c	 lea	 edx, DWORD PTR $T211518[esp+28]
  00086	89 44 24 2c	 mov	 DWORD PTR $T211518[esp+28], eax
  0008a	52		 push	 edx
  0008b	8d 44 24 2c	 lea	 eax, DWORD PTR _finder$177460[esp+32]
  0008f	50		 push	 eax
  00090	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00093	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 705  : 
; 706  : 				if( finder != m_mapTCELL.end() )

  00098	8b 44 24 28	 mov	 eax, DWORD PTR _finder$177460[esp+28]
  0009c	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  0009f	0f 84 e4 00 00
	00		 je	 $L177456

; 707  : 				{
; 708  : 					CTCell *pCell = (*finder).second;
; 709  : 					MAPTRECALLMON::iterator itREC;
; 710  : 					MAPTSELFOBJ::iterator itSELF;
; 711  : 					MAPTMONSTER::iterator itMON;
; 712  : 					MAPPLAYER::iterator itCHAR;
; 713  : 
; 714  : 					switch(bType)

  000a5	0f b6 4c 24 24	 movzx	 ecx, BYTE PTR _bType$[esp+28]
  000aa	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000ad	49		 dec	 ecx
  000ae	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000b1	0f 87 d2 00 00
	00		 ja	 $L177456
  000b7	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $L212022[ecx]
  000be	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L212028[ecx*4]
$L177636:

; 715  : 					{
; 716  : 					case OT_PC:
; 717  : 						for( itCHAR = pCell->m_mapPLAYER.begin(); itCHAR != pCell->m_mapPLAYER.end(); itCHAR++)

  000c5	8b 70 2c	 mov	 esi, DWORD PTR [eax+44]
  000c8	8b 06		 mov	 eax, DWORD PTR [esi]
  000ca	3b c6		 cmp	 eax, esi
  000cc	89 44 24 2c	 mov	 DWORD PTR _itCHAR$177631[esp+28], eax
  000d0	0f 84 b3 00 00
	00		 je	 $L177456
  000d6	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L211643:

; 718  : 							if((*itCHAR).second->m_dwID == dwObjID)

  000e0	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000e3	39 ba 44 01 01
	00		 cmp	 DWORD PTR [edx+65860], edi
  000e9	0f 84 cb 00 00
	00		 je	 $L212007
  000ef	8d 4c 24 2c	 lea	 ecx, DWORD PTR _itCHAR$177631[esp+28]
  000f3	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Inc
  000f8	8b 44 24 2c	 mov	 eax, DWORD PTR _itCHAR$177631[esp+28]
  000fc	3b c6		 cmp	 eax, esi
  000fe	75 e0		 jne	 SHORT $L211643

; 720  : 						break;

  00100	e9 84 00 00 00	 jmp	 $L177456
$L177662:

; 721  : 					case OT_MON:
; 722  : 						for( itMON = pCell->m_mapMONSTER.begin(); itMON != pCell->m_mapMONSTER.end(); itMON++)

  00105	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  00108	8b 06		 mov	 eax, DWORD PTR [esi]
  0010a	3b c6		 cmp	 eax, esi
  0010c	89 44 24 2c	 mov	 DWORD PTR _itMON$177553[esp+28], eax
  00110	74 77		 je	 SHORT $L177456
$L211742:

; 723  : 							if((*itMON).second->m_dwID == dwObjID)

  00112	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00115	39 79 44	 cmp	 DWORD PTR [ecx+68], edi
  00118	0f 84 b2 00 00
	00		 je	 $L212010
  0011e	8d 4c 24 2c	 lea	 ecx, DWORD PTR _itMON$177553[esp+28]
  00122	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc
  00127	8b 44 24 2c	 mov	 eax, DWORD PTR _itMON$177553[esp+28]
  0012b	3b c6		 cmp	 eax, esi
  0012d	75 e3		 jne	 SHORT $L211742

; 724  : 								return (*itMON).second;
; 725  : 						break;

  0012f	eb 58		 jmp	 SHORT $L177456
$L177670:

; 726  : 					case OT_RECALL:
; 727  : 						for( itREC = pCell->m_mapRECALLMON.begin(); itREC != pCell->m_mapRECALLMON.end(); itREC++)

  00131	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00134	8b 06		 mov	 eax, DWORD PTR [esi]
  00136	3b c6		 cmp	 eax, esi
  00138	89 44 24 2c	 mov	 DWORD PTR _itREC$177551[esp+28], eax
  0013c	74 4b		 je	 SHORT $L177456
  0013e	8b ff		 npad	 2
$L211841:

; 728  : 							if((*itREC).second->m_dwID == dwObjID)

  00140	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00143	39 7a 44	 cmp	 DWORD PTR [edx+68], edi
  00146	0f 84 84 00 00
	00		 je	 $L212010
  0014c	8d 4c 24 2c	 lea	 ecx, DWORD PTR _itREC$177551[esp+28]
  00150	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTRecallMon@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTRecallMon@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTRecallMon *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTRecallMon *> >,0> >::const_iterator::_Inc
  00155	8b 44 24 2c	 mov	 eax, DWORD PTR _itREC$177551[esp+28]
  00159	3b c6		 cmp	 eax, esi
  0015b	75 e3		 jne	 SHORT $L211841

; 729  : 								return (*itREC).second;
; 730  : 						break;

  0015d	eb 2a		 jmp	 SHORT $L177456
$L177696:

; 731  : 					case OT_SELF:
; 732  : 						for( itSELF = pCell->m_mapSELFOBJ.begin(); itSELF != pCell->m_mapSELFOBJ.end(); itSELF++)

  0015f	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
  00162	8b 06		 mov	 eax, DWORD PTR [esi]
  00164	3b c6		 cmp	 eax, esi
  00166	89 44 24 2c	 mov	 DWORD PTR _itSELF$177552[esp+28], eax
  0016a	74 1d		 je	 SHORT $L177456
  0016c	8d 64 24 00	 npad	 4
$L211940:

; 733  : 							if((*itSELF).second->m_dwID == dwObjID)

  00170	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00173	39 79 44	 cmp	 DWORD PTR [ecx+68], edi
  00176	74 58		 je	 SHORT $L212010
  00178	8d 4c 24 2c	 lea	 ecx, DWORD PTR _itSELF$177552[esp+28]
  0017c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTSelfObj@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTSelfObj@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTSelfObj *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTSelfObj *> >,0> >::const_iterator::_Inc
  00181	8b 44 24 2c	 mov	 eax, DWORD PTR _itSELF$177552[esp+28]
  00185	3b c6		 cmp	 eax, esi
  00187	75 e7		 jne	 SHORT $L211940
$L177456:

; 697  : 
; 698  : 		for( int j=0; j<3; j++)

  00189	8b 44 24 30	 mov	 eax, DWORD PTR _j$177454[esp+28]
  0018d	40		 inc	 eax
  0018e	45		 inc	 ebp
  0018f	83 f8 03	 cmp	 eax, 3
  00192	89 44 24 30	 mov	 DWORD PTR _j$177454[esp+28], eax
  00196	0f 8c c7 fe ff
	ff		 jl	 $L212025
  0019c	8b 5c 24 14	 mov	 ebx, DWORD PTR _i$177449[esp+32]
  001a0	43		 inc	 ebx
  001a1	83 fb 03	 cmp	 ebx, 3
  001a4	89 5c 24 14	 mov	 DWORD PTR _i$177449[esp+32], ebx
  001a8	0f 8c 9d fe ff
	ff		 jl	 $L212024
$L177452:
  001ae	5f		 pop	 edi
  001af	5e		 pop	 esi
  001b0	5d		 pop	 ebp

; 735  : 						break;
; 736  : 					}
; 737  : 				}
; 738  : 			}
; 739  : 		}
; 740  : 	}
; 741  : 
; 742  : 	return NULL;

  001b1	33 c0		 xor	 eax, eax
  001b3	5b		 pop	 ebx

; 743  : }

  001b4	83 c4 10	 add	 esp, 16			; 00000010H
  001b7	c2 10 00	 ret	 16			; 00000010H
$L212007:

; 719  : 								return (*itCHAR).second;

  001ba	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  001bd	85 c0		 test	 eax, eax
  001bf	74 ed		 je	 SHORT $L177452
  001c1	5f		 pop	 edi
  001c2	5e		 pop	 esi
  001c3	5d		 pop	 ebp
  001c4	05 00 01 01 00	 add	 eax, 65792		; 00010100H
  001c9	5b		 pop	 ebx

; 743  : }

  001ca	83 c4 10	 add	 esp, 16			; 00000010H
  001cd	c2 10 00	 ret	 16			; 00000010H
$L212010:

; 734  : 								return (*itSELF).second;

  001d0	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  001d3	5f		 pop	 edi
  001d4	5e		 pop	 esi
  001d5	5d		 pop	 ebp
  001d6	5b		 pop	 ebx

; 743  : }

  001d7	83 c4 10	 add	 esp, 16			; 00000010H
  001da	c2 10 00	 ret	 16			; 00000010H
  001dd	8d 49 00	 npad	 3
$L212028:
  001e0	00 00 00 00	 DD	 $L177636
  001e4	00 00 00 00	 DD	 $L177662
  001e8	00 00 00 00	 DD	 $L177670
  001ec	00 00 00 00	 DD	 $L177696
  001f0	00 00 00 00	 DD	 $L177456
$L212022:
  001f4	00		 DB	 0
  001f5	01		 DB	 1
  001f6	04		 DB	 4
  001f7	04		 DB	 4
  001f8	04		 DB	 4
  001f9	04		 DB	 4
  001fa	02		 DB	 2
  001fb	04		 DB	 4
  001fc	04		 DB	 4
  001fd	04		 DB	 4
  001fe	03		 DB	 3
?FindNeighbor@CTMap@@QAEPAVCTObjBase@@EKMM@Z ENDP	; CTMap::FindNeighbor
_TEXT	ENDS
PUBLIC	?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z	; CTMap::FindGodBall
; Function compile flags: /Ogty
;	COMDAT ?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z
_TEXT	SEGMENT
_itTw$178997 = -4					; size = 4
_it$ = -4						; size = 4
_wBall$ = 8						; size = 2
?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z PROC NEAR	; CTMap::FindGodBall, COMDAT
; _this$ = ecx

; 1395 : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1396 : 	MAPTGODBALL::iterator it = m_mapTGODBALL.find(wBall);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _wBall$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find

; 1397 : 	if(it!=m_mapTGODBALL.end())

  00016	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001a	3b 46 74	 cmp	 eax, DWORD PTR [esi+116]
  0001d	74 08		 je	 SHORT $L178995

; 1398 : 		return (*it).second;

  0001f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00022	5e		 pop	 esi

; 1409 : 	}
; 1410 : }

  00023	59		 pop	 ecx
  00024	c2 04 00	 ret	 4
$L178995:

; 1399 : 	else
; 1400 : 	{
; 1401 : 		MAPTGODTOWER::iterator itTw;
; 1402 : 		for(itTw=m_mapTGODTOWER.begin(); itTw!=m_mapTGODTOWER.end(); itTw++)

  00027	8b 76 68	 mov	 esi, DWORD PTR [esi+104]
  0002a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002c	3b ce		 cmp	 ecx, esi
  0002e	57		 push	 edi
  0002f	89 4c 24 08	 mov	 DWORD PTR _itTw$178997[esp+12], ecx
  00033	74 2c		 je	 SHORT $L179003
  00035	66 8b 7c 24 10	 mov	 di, WORD PTR _wBall$[esp+8]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L212121:

; 1403 : 		{
; 1404 : 			if((*itTw).second->m_pGodBall && (*itTw).second->m_pGodBall->m_wID == wBall)

  00040	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	85 c0		 test	 eax, eax
  00048	74 06		 je	 SHORT $L179002
  0004a	66 39 78 04	 cmp	 WORD PTR [eax+4], di
  0004e	74 19		 je	 SHORT $L212198
$L179002:

; 1399 : 	else
; 1400 : 	{
; 1401 : 		MAPTGODTOWER::iterator itTw;
; 1402 : 		for(itTw=m_mapTGODTOWER.begin(); itTw!=m_mapTGODTOWER.end(); itTw++)

  00050	8d 4c 24 08	 lea	 ecx, DWORD PTR _itTw$178997[esp+12]
  00054	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
  00059	8b 4c 24 08	 mov	 ecx, DWORD PTR _itTw$178997[esp+12]
  0005d	3b ce		 cmp	 ecx, esi
  0005f	75 df		 jne	 SHORT $L212121
$L179003:
  00061	5f		 pop	 edi

; 1406 : 		}
; 1407 : 
; 1408 : 		return NULL;

  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi

; 1409 : 	}
; 1410 : }

  00065	59		 pop	 ecx
  00066	c2 04 00	 ret	 4
$L212198:

; 1405 : 				return (*itTw).second->m_pGodBall;

  00069	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0006c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi

; 1409 : 	}
; 1410 : }

  00071	59		 pop	 ecx
  00072	c2 04 00	 ret	 4
?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z ENDP		; CTMap::FindGodBall
_TEXT	ENDS
PUBLIC	?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z	; CTMap::GenGodBall
; Function compile flags: /Ogty
;	COMDAT ?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z
_TEXT	SEGMENT
_bCamp$ = 8						; size = 1
_wID$ = 12						; size = 4
?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z PROC NEAR	; CTMap::GenGodBall, COMDAT
; _this$ = ecx

; 1431 : {

  00000	53		 push	 ebx

; 1432 : 	if(!wID)

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _wID$[esp]
  00005	66 83 3b 00	 cmp	 WORD PTR [ebx], 0
  00009	55		 push	 ebp
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b e9		 mov	 ebp, ecx
  0000e	75 60		 jne	 SHORT $L179043

; 1433 : 	{
; 1434 : 		BYTE bCreate = FALSE;
; 1435 : 
; 1436 : 		WORD wTs = WORD(m_mapTGODTOWER.size());
; 1437 : 		if(bCamp == CAMP_DEFEND)

  00010	80 7c 24 14 01	 cmp	 BYTE PTR _bCamp$[esp+12], 1
  00015	66 8b 7d 6c	 mov	 di, WORD PTR [ebp+108]
  00019	75 25		 jne	 SHORT $L179031

; 1438 : 		{
; 1439 : 			for(WORD i=1; i<=wTs; i++)

  0001b	be 01 00 00 00	 mov	 esi, 1
  00020	66 3b fe	 cmp	 di, si
  00023	72 12		 jb	 SHORT $L179050
$L179033:

; 1440 : 			{
; 1441 : 				if(!FindGodBall(i))

  00025	56		 push	 esi
  00026	8b cd		 mov	 ecx, ebp
  00028	e8 00 00 00 00	 call	 ?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z ; CTMap::FindGodBall
  0002d	85 c0		 test	 eax, eax
  0002f	74 3c		 je	 SHORT $L212485
  00031	46		 inc	 esi
  00032	66 3b f7	 cmp	 si, di
  00035	76 ee		 jbe	 SHORT $L179033
$L179050:
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5d		 pop	 ebp

; 1473 : 			return pTempBall;
; 1474 : 		}
; 1475 : 	}
; 1476 : 
; 1477 : 	return NULL;

  0003a	33 c0		 xor	 eax, eax
  0003c	5b		 pop	 ebx

; 1478 : }

  0003d	c2 08 00	 ret	 8
$L179031:

; 1442 : 				{
; 1443 : 					wID = i;
; 1444 : 					bCreate = TRUE;
; 1445 : 					break;
; 1446 : 				}
; 1447 : 			}
; 1448 : 		}
; 1449 : 		else
; 1450 : 		{
; 1451 : 			for(WORD i=wTs+1; i<=wTs*2; i++)

  00040	8d 77 01	 lea	 esi, DWORD PTR [edi+1]

; 1473 : 			return pTempBall;
; 1474 : 		}
; 1475 : 	}
; 1476 : 
; 1477 : 	return NULL;

  00043	0f b7 ff	 movzx	 edi, di
  00046	0f b7 c6	 movzx	 eax, si
  00049	d1 e7		 shl	 edi, 1
  0004b	3b c7		 cmp	 eax, edi
  0004d	7f e8		 jg	 SHORT $L179050
  0004f	90		 npad	 1
$L179039:

; 1452 : 			{
; 1453 : 				if(!FindGodBall(i))

  00050	56		 push	 esi
  00051	8b cd		 mov	 ecx, ebp
  00053	e8 00 00 00 00	 call	 ?FindGodBall@CTMap@@QAEPAUtagGODBALL@@G@Z ; CTMap::FindGodBall
  00058	85 c0		 test	 eax, eax
  0005a	74 11		 je	 SHORT $L212485
  0005c	46		 inc	 esi
  0005d	0f b7 ce	 movzx	 ecx, si
  00060	3b cf		 cmp	 ecx, edi
  00062	7e ec		 jle	 SHORT $L179039
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5d		 pop	 ebp

; 1473 : 			return pTempBall;
; 1474 : 		}
; 1475 : 	}
; 1476 : 
; 1477 : 	return NULL;

  00067	33 c0		 xor	 eax, eax
  00069	5b		 pop	 ebx

; 1478 : }

  0006a	c2 08 00	 ret	 8
$L212485:

; 1454 : 				{
; 1455 : 					wID = i;

  0006d	66 89 33	 mov	 WORD PTR [ebx], si
$L179043:

; 1456 : 					bCreate = TRUE;
; 1457 : 					break;
; 1458 : 				}
; 1459 : 			}
; 1460 : 		}
; 1461 : 
; 1462 : 		if(!bCreate)
; 1463 : 			return NULL;
; 1464 : 	}
; 1465 : 
; 1466 : 	MAPTGODBALL::iterator itTemp;
; 1467 : 	for(itTemp=m_mapTTEMPGODBALL.begin(); itTemp!=m_mapTTEMPGODBALL.end(); itTemp++)

  00070	8b 6d 5c	 mov	 ebp, DWORD PTR [ebp+92]
  00073	8b 4d 00	 mov	 ecx, DWORD PTR [ebp]
  00076	3b cd		 cmp	 ecx, ebp
  00078	74 bd		 je	 SHORT $L179050
  0007a	8d 9b 00 00 00
	00		 npad	 6
$L212400:

; 1468 : 	{
; 1469 : 		LPTGODBALL pTempBall = (*itTemp).second;

  00080	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1470 : 		if(pTempBall->m_bCamp == bCamp && pTempBall->m_bMove)

  00083	8a 54 24 14	 mov	 dl, BYTE PTR _bCamp$[esp+12]
  00087	38 50 08	 cmp	 BYTE PTR [eax+8], dl
  0008a	75 07		 jne	 SHORT $L179049
  0008c	8a 50 30	 mov	 dl, BYTE PTR [eax+48]
  0008f	84 d2		 test	 dl, dl
  00091	75 54		 jne	 SHORT $L212486
$L179049:

; 1456 : 					bCreate = TRUE;
; 1457 : 					break;
; 1458 : 				}
; 1459 : 			}
; 1460 : 		}
; 1461 : 
; 1462 : 		if(!bCreate)
; 1463 : 			return NULL;
; 1464 : 	}
; 1465 : 
; 1466 : 	MAPTGODBALL::iterator itTemp;
; 1467 : 	for(itTemp=m_mapTTEMPGODBALL.begin(); itTemp!=m_mapTTEMPGODBALL.end(); itTemp++)

  00093	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00096	84 c0		 test	 al, al
  00098	75 40		 jne	 SHORT $L212434
  0009a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0009d	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000a0	84 d2		 test	 dl, dl
  000a2	75 19		 jne	 SHORT $L212483
  000a4	8b c8		 mov	 ecx, eax
  000a6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a8	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000ab	84 d2		 test	 dl, dl
  000ad	75 2b		 jne	 SHORT $L212434
  000af	90		 npad	 1
$L212415:
  000b0	8b c8		 mov	 ecx, eax
  000b2	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b4	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000b7	84 d2		 test	 dl, dl
  000b9	74 f5		 je	 SHORT $L212415
  000bb	eb 1d		 jmp	 SHORT $L212434
$L212483:
  000bd	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000c0	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000c3	84 d2		 test	 dl, dl
  000c5	75 11		 jne	 SHORT $L212437
$L212436:
  000c7	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000ca	75 0c		 jne	 SHORT $L212437
  000cc	8b c8		 mov	 ecx, eax
  000ce	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d1	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000d4	84 d2		 test	 dl, dl
  000d6	74 ef		 je	 SHORT $L212436
$L212437:
  000d8	8b c8		 mov	 ecx, eax
$L212434:
  000da	3b cd		 cmp	 ecx, ebp
  000dc	75 a2		 jne	 SHORT $L212400
  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5d		 pop	 ebp

; 1473 : 			return pTempBall;
; 1474 : 		}
; 1475 : 	}
; 1476 : 
; 1477 : 	return NULL;

  000e1	33 c0		 xor	 eax, eax
  000e3	5b		 pop	 ebx

; 1478 : }

  000e4	c2 08 00	 ret	 8
$L212486:
  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	5d		 pop	 ebp

; 1471 : 		{
; 1472 : 			pTempBall->m_bMove = FALSE;

  000ea	c6 40 30 00	 mov	 BYTE PTR [eax+48], 0
  000ee	5b		 pop	 ebx

; 1478 : }

  000ef	c2 08 00	 ret	 8
?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z ENDP	; CTMap::GenGodBall
_TEXT	ENDS
PUBLIC	?EndTournament@CTMap@@QAEEAAEAAK1E@Z		; CTMap::EndTournament
; Function compile flags: /Ogty
;	COMDAT ?EndTournament@CTMap@@QAEEAAEAAK1E@Z
_TEXT	SEGMENT
_bBlue$179502 = -5					; size = 1
_it$ = -4						; size = 4
_it$179504 = -4						; size = 4
_bID$ = 8						; size = 1
_bRet$ = 8						; size = 4
_dwWinner$ = 12						; size = 4
_dwLoser$ = 16						; size = 4
_bStep$ = 20						; size = 1
?EndTournament@CTMap@@QAEEAAEAAK1E@Z PROC NEAR		; CTMap::EndTournament, COMDAT
; _this$ = ecx

; 1846 : 	dwWinner = dwLoser = 0;

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _dwLoser$[esp-4]

; 1847 : 	bRet = TRUE;

  00004	8b 54 24 04	 mov	 edx, DWORD PTR _bRet$[esp-4]
  00008	83 ec 08	 sub	 esp, 8
  0000b	56		 push	 esi
  0000c	8b f1		 mov	 esi, ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR _dwWinner$[esp+8]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00018	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0001e	c6 02 01	 mov	 BYTE PTR [edx], 1

; 1848 : 
; 1849 : 	BYTE bWinSlot = TOURNAMENT_SLOT;
; 1850 : 
; 1851 : 	if(m_mapTNMTPlayer.empty())

  00021	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  00027	85 c0		 test	 eax, eax
  00029	75 09		 jne	 SHORT $L179496

; 1852 : 		return FALSE;

  0002b	32 c0		 xor	 al, al
  0002d	5e		 pop	 esi

; 1921 : }

  0002e	83 c4 08	 add	 esp, 8
  00031	c2 10 00	 ret	 16			; 00000010H
$L179496:
  00034	53		 push	 ebx

; 1853 : 
; 1854 : 	if(m_bBlueTeam == TOURNAMENT_SLOT &&
; 1855 : 		m_bRedTeam == TOURNAMENT_SLOT)

  00035	8a 9e a0 00 00
	00		 mov	 bl, BYTE PTR [esi+160]
  0003b	80 fb 08	 cmp	 bl, 8
  0003e	75 12		 jne	 SHORT $L179497
  00040	38 9e a1 00 00
	00		 cmp	 BYTE PTR [esi+161], bl
  00046	75 0a		 jne	 SHORT $L179497
  00048	5b		 pop	 ebx

; 1856 : 		return FALSE;

  00049	32 c0		 xor	 al, al
  0004b	5e		 pop	 esi

; 1921 : }

  0004c	83 c4 08	 add	 esp, 8
  0004f	c2 10 00	 ret	 16			; 00000010H
$L179497:

; 1857 : 
; 1858 : 	if(m_bBlueTeam == TOURNAMENT_SLOT)

  00052	80 fb 08	 cmp	 bl, 8
  00055	55		 push	 ebp
  00056	57		 push	 edi
  00057	75 08		 jne	 SHORT $L179498
$L212898:

; 1859 : 		bWinSlot = m_bRedTeam;

  00059	8a 9e a1 00 00
	00		 mov	 bl, BYTE PTR [esi+161]

; 1860 : 	else if(m_bRedTeam == TOURNAMENT_SLOT)

  0005f	eb 75		 jmp	 SHORT $L179525
$L179498:
  00061	80 be a1 00 00
	00 08		 cmp	 BYTE PTR [esi+161], 8

; 1861 : 		bWinSlot = m_bBlueTeam;
; 1862 : 	else

  00068	74 6c		 je	 SHORT $L179525

; 1863 : 	{
; 1864 : 		BYTE bBlue = 0;
; 1865 : 		BYTE bRed = 0;
; 1866 : 
; 1867 : 		MAPTOURNAMENTPLAYER::iterator it;
; 1868 : 		for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  0006a	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  00070	8b 01		 mov	 eax, DWORD PTR [ecx]
  00072	32 db		 xor	 bl, bl
  00074	3b c1		 cmp	 eax, ecx
  00076	c6 44 24 13 00	 mov	 BYTE PTR _bBlue$179502[esp+24], 0
  0007b	89 44 24 14	 mov	 DWORD PTR _it$179504[esp+24], eax
  0007f	74 48		 je	 SHORT $L212897
  00081	66 8b be 8a 00
	00 00		 mov	 di, WORD PTR [esi+138]
  00088	8b e9		 mov	 ebp, ecx
  0008a	8d 9b 00 00 00
	00		 npad	 6
$L212900:

; 1869 : 		{
; 1870 : 			if((*it).second->m_wMapID == m_wMapID)

  00090	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00093	66 39 78 16	 cmp	 WORD PTR [eax+22], di
  00097	75 13		 jne	 SHORT $L179509

; 1871 : 			{
; 1872 : 				if(m_bBlueTeam == (*it).second->m_bSlot)

  00099	8a 8e a0 00 00
	00		 mov	 cl, BYTE PTR [esi+160]
  0009f	3a 48 15	 cmp	 cl, BYTE PTR [eax+21]
  000a2	75 06		 jne	 SHORT $L179512

; 1873 : 					bBlue++;

  000a4	fe 44 24 13	 inc	 BYTE PTR _bBlue$179502[esp+24]

; 1874 : 				else

  000a8	eb 02		 jmp	 SHORT $L179509
$L179512:

; 1875 : 					bRed++;

  000aa	fe c3		 inc	 bl
$L179509:

; 1863 : 	{
; 1864 : 		BYTE bBlue = 0;
; 1865 : 		BYTE bRed = 0;
; 1866 : 
; 1867 : 		MAPTOURNAMENTPLAYER::iterator it;
; 1868 : 		for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  000ac	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$179504[esp+24]
  000b0	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  000b5	8b 44 24 14	 mov	 eax, DWORD PTR _it$179504[esp+24]
  000b9	3b c5		 cmp	 eax, ebp
  000bb	75 d3		 jne	 SHORT $L212900

; 1876 : 			}
; 1877 : 		}
; 1878 : 
; 1879 : 		if(!bBlue && !bRed)

  000bd	8a 44 24 13	 mov	 al, BYTE PTR _bBlue$179502[esp+24]
  000c1	84 c0		 test	 al, al
  000c3	75 21		 jne	 SHORT $L179516
  000c5	84 db		 test	 bl, bl
  000c7	75 90		 jne	 SHORT $L212898
$L212897:

; 1880 : 		{
; 1881 : 			bRet = FALSE;

  000c9	8b 44 24 1c	 mov	 eax, DWORD PTR _bRet$[esp+20]
  000cd	c6 00 00	 mov	 BYTE PTR [eax], 0
$L179524:

; 1895 : 			bWinSlot = m_bBlueTeam;

  000d0	8a 9e a0 00 00
	00		 mov	 bl, BYTE PTR [esi+160]
$L179525:

; 1896 : 	}
; 1897 : 
; 1898 : 	BYTE bID;
; 1899 : 	if(bStep == TNMTSTEP_FINAL)	bID = MATCH_FINAL;

  000d6	8a 54 24 28	 mov	 dl, BYTE PTR _bStep$[esp+20]
  000da	80 fa 0c	 cmp	 dl, 12			; 0000000cH
  000dd	75 3e		 jne	 SHORT $L179527
  000df	c6 44 24 1c 02	 mov	 BYTE PTR _bID$[esp+20], 2

; 1900 : 	else if(bStep == TNMTSTEP_SFINAL) bID = MATCH_SFINAL;

  000e4	eb 3f		 jmp	 SHORT $L179529
$L179516:

; 1882 : 			bWinSlot = m_bBlueTeam;
; 1883 : 		}
; 1884 : 		else if(!bBlue)
; 1885 : 			bWinSlot = m_bRedTeam;
; 1886 : 		else if(!bRed)

  000e6	84 db		 test	 bl, bl

; 1887 : 			bWinSlot = m_bBlueTeam;
; 1888 : 		else if(m_wAtkKillPoint < m_wDefKillPoint)

  000e8	74 e6		 je	 SHORT $L179524
  000ea	66 8b 86 a4 00
	00 00		 mov	 ax, WORD PTR [esi+164]
  000f1	66 8b 8e a2 00
	00 00		 mov	 cx, WORD PTR [esi+162]
  000f8	66 3b c1	 cmp	 ax, cx

; 1889 : 			bWinSlot = m_bBlueTeam;
; 1890 : 		else if(m_wAtkKillPoint > m_wDefKillPoint)

  000fb	72 d3		 jb	 SHORT $L179524
  000fd	76 08		 jbe	 SHORT $L179522

; 1891 : 			bWinSlot = m_bRedTeam;

  000ff	8a 9e a1 00 00
	00		 mov	 bl, BYTE PTR [esi+161]

; 1892 : 		else if(m_dwRedHideTick < m_dwBlueHideTick)

  00105	eb cf		 jmp	 SHORT $L179525
$L179522:
  00107	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0010d	3b 8e a8 00 00
	00		 cmp	 ecx, DWORD PTR [esi+168]
  00113	73 bb		 jae	 SHORT $L179524

; 1893 : 			bWinSlot = m_bRedTeam;

  00115	8a 9e a1 00 00
	00		 mov	 bl, BYTE PTR [esi+161]

; 1894 : 		else

  0011b	eb b9		 jmp	 SHORT $L179525
$L179527:

; 1900 : 	else if(bStep == TNMTSTEP_SFINAL) bID = MATCH_SFINAL;

  0011d	80 fa 09	 cmp	 dl, 9
  00120	0f 94 44 24 1c	 sete	 BYTE PTR _bID$[esp+20]
$L179529:

; 1901 : 	else bID = MATCH_QFINAL;
; 1902 : 
; 1903 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1904 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  00125	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0012b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0012d	3b c1		 cmp	 eax, ecx
  0012f	89 44 24 14	 mov	 DWORD PTR _it$[esp+24], eax
  00133	74 5a		 je	 SHORT $L212901
  00135	8b 7c 24 24	 mov	 edi, DWORD PTR _dwLoser$[esp+20]
  00139	8b 6c 24 20	 mov	 ebp, DWORD PTR _dwWinner$[esp+20]
  0013d	eb 04		 jmp	 SHORT $L212667
$L212899:
  0013f	8a 54 24 28	 mov	 dl, BYTE PTR _bStep$[esp+20]
$L212667:

; 1905 : 	{
; 1906 : 		if(bStep != TNMTSTEP_READY && (*it).second->m_bResult[bID] != TNMTWIN_NONE)

  00143	84 d2		 test	 dl, dl
  00145	74 13		 je	 SHORT $L179538
  00147	0f b6 54 24 1c	 movzx	 edx, BYTE PTR _bID$[esp+20]
  0014c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0014f	80 7c 11 18 00	 cmp	 BYTE PTR [ecx+edx+24], 0
  00154	0f 85 bd 00 00
	00		 jne	 $L212891
$L179538:

; 1908 : 
; 1909 : 		if((*it).second->m_bSlot == bWinSlot)

  0015a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0015d	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00160	75 08		 jne	 SHORT $L179539

; 1910 : 			dwWinner = (*it).second->m_dwChiefID;

  00162	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00165	89 55 00	 mov	 DWORD PTR [ebp], edx

; 1911 : 		else

  00168	eb 05		 jmp	 SHORT $L179540
$L179539:

; 1912 : 			dwLoser = (*it).second->m_dwChiefID;

  0016a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0016d	89 07		 mov	 DWORD PTR [edi], eax
$L179540:

; 1913 : 
; 1914 : 		if(dwWinner && dwLoser)

  0016f	83 7d 00 00	 cmp	 DWORD PTR [ebp], 0
  00173	74 05		 je	 SHORT $L179536
  00175	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00178	75 15		 jne	 SHORT $L212901
$L179536:

; 1901 : 	else bID = MATCH_QFINAL;
; 1902 : 
; 1903 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1904 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  0017a	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$[esp+24]
  0017e	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  00183	8b 44 24 14	 mov	 eax, DWORD PTR _it$[esp+24]
  00187	3b 86 80 00 00
	00		 cmp	 eax, DWORD PTR [esi+128]
  0018d	75 b0		 jne	 SHORT $L212899
$L212901:

; 1915 : 			break;
; 1916 : 	}
; 1917 : 
; 1918 : 	ResetTournament();

  0018f	33 c0		 xor	 eax, eax
  00191	66 89 86 a2 00
	00 00		 mov	 WORD PTR [esi+162], ax
  00198	66 89 86 a4 00
	00 00		 mov	 WORD PTR [esi+164], ax
  0019f	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax
  001a5	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  001ab	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  001b1	c6 86 a0 00 00
	00 08		 mov	 BYTE PTR [esi+160], 8
  001b8	c6 86 a1 00 00
	00 08		 mov	 BYTE PTR [esi+161], 8
  001bf	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  001c5	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  001c8	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  001cb	84 c0		 test	 al, al
  001cd	8d 7e 7c	 lea	 edi, DWORD PTR [esi+124]
  001d0	8b f5		 mov	 esi, ebp
  001d2	75 1f		 jne	 SHORT $L212865
$L212863:
  001d4	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  001d7	52		 push	 edx
  001d8	8b cf		 mov	 ecx, edi
  001da	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  001df	8b 36		 mov	 esi, DWORD PTR [esi]
  001e1	55		 push	 ebp
  001e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e7	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  001ea	83 c4 04	 add	 esp, 4
  001ed	84 c0		 test	 al, al
  001ef	8b ee		 mov	 ebp, esi
  001f1	74 e1		 je	 SHORT $L212863
$L212865:
  001f3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001f6	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001f9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001fc	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00203	89 00		 mov	 DWORD PTR [eax], eax
  00205	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00208	89 7f 08	 mov	 DWORD PTR [edi+8], edi
  0020b	5f		 pop	 edi
  0020c	5d		 pop	 ebp
  0020d	5b		 pop	 ebx

; 1919 : 
; 1920 : 	return TRUE;

  0020e	b0 01		 mov	 al, 1
  00210	5e		 pop	 esi

; 1921 : }

  00211	83 c4 08	 add	 esp, 8
  00214	c2 10 00	 ret	 16			; 00000010H
$L212891:
  00217	5f		 pop	 edi
  00218	5d		 pop	 ebp
  00219	5b		 pop	 ebx

; 1907 : 			return FALSE;

  0021a	32 c0		 xor	 al, al
  0021c	5e		 pop	 esi

; 1921 : }

  0021d	83 c4 08	 add	 esp, 8
  00220	c2 10 00	 ret	 16			; 00000010H
?EndTournament@CTMap@@QAEEAAEAAK1E@Z ENDP		; CTMap::EndTournament
_TEXT	ENDS
PUBLIC	??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L212927
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 986  : 	}

  00017	c2 04 00	 ret	 4

; 983  : 		CThisSimpleString::operator=( pszSrc );

$L212927:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L212928:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L212928
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 986  : 	}

  00036	c2 04 00	 ret	 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L213001:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L213001
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L213076:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L213076
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_GtagSWITCH@@QAEPAXI@Z			; tagSWITCH::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagSWITCH@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagSWITCH@@QAEPAXI@Z PROC NEAR			; tagSWITCH::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagSWITCH@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L213080
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L213080:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagSWITCH@@QAEPAXI@Z ENDP				; tagSWITCH::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GtagGATE@@QAEPAXI@Z				; tagGATE::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagGATE@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagGATE@@QAEPAXI@Z PROC NEAR			; tagGATE::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagGATE@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L213084
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L213084:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagGATE@@QAEPAXI@Z ENDP				; tagGATE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z ; CTMap::GetGodBallOwner
EXTRN	?_AtlModule@@3VCTMapSvrModule@@A:BYTE		; _AtlModule
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
CONST	ENDS
;	COMDAT ?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_strAtk1$ = 8						; size = 4
_strAtk2$ = 12						; size = 4
_strDef1$ = 16						; size = 4
_it$ = 20						; size = 4
_strDef2$ = 20						; size = 4
_wKeepAtk1$ = 24					; size = 4
_wKeepAtk2$ = 28					; size = 4
_wKeepDef1$ = 32					; size = 4
_wKeepDef2$ = 36					; size = 4
?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z PROC NEAR ; CTMap::GetGodBallOwner, COMDAT
; _this$ = ecx

; 1756 : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp

; 1757 : 	strAtk1 = strAtk2 = strDef1 = strDef2 = NAME_NULL;

  00003	8b 6c 24 1c	 mov	 ebp, DWORD PTR _strDef2$[esp+8]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00012	8b cd		 mov	 ecx, ebp
  00014	89 74 24 18	 mov	 DWORD PTR _this$[esp+28], esi
  00018	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  0001d	8b 5c 24 20	 mov	 ebx, DWORD PTR _strDef1$[esp+16]
  00021	55		 push	 ebp
  00022	8b cb		 mov	 ecx, ebx
  00024	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  00029	8b 7c 24 1c	 mov	 edi, DWORD PTR _strAtk2$[esp+16]
  0002d	53		 push	 ebx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  00035	8b 4c 24 18	 mov	 ecx, DWORD PTR _strAtk1$[esp+16]
  00039	57		 push	 edi
  0003a	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 1758 : 	wKeepAtk1 = wKeepAtk2 = wKeepDef1 = wKeepDef2 = 0;

  0003f	8b 44 24 34	 mov	 eax, DWORD PTR _wKeepDef2$[esp+16]
  00043	8b 4c 24 30	 mov	 ecx, DWORD PTR _wKeepDef1$[esp+16]
  00047	8b 54 24 2c	 mov	 edx, DWORD PTR _wKeepAtk2$[esp+16]
  0004b	66 c7 00 00 00	 mov	 WORD PTR [eax], 0
  00050	8b 44 24 28	 mov	 eax, DWORD PTR _wKeepAtk1$[esp+16]
  00054	66 c7 01 00 00	 mov	 WORD PTR [ecx], 0
  00059	66 c7 02 00 00	 mov	 WORD PTR [edx], 0
  0005e	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 1759 : 
; 1760 : 	MAPTGODBALL::iterator it;
; 1761 : 	for(it=m_mapTGODBALL.begin(); it!=m_mapTGODBALL.end(); it++)

  00063	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00066	8b 01		 mov	 eax, DWORD PTR [ecx]
  00068	3b c1		 cmp	 eax, ecx
  0006a	89 44 24 24	 mov	 DWORD PTR _it$[esp+16], eax
  0006e	0f 84 d1 00 00
	00		 je	 $L179326
$L213175:

; 1762 : 	{
; 1763 : 		LPTGODBALL pBall = (*it).second;

  00074	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 1764 : 		if(pBall->m_strOwner != NAME_NULL)

  00077	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0007a	8d 7e 20	 lea	 edi, DWORD PTR [esi+32]
  0007d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 __mbscmp
  00088	83 c4 08	 add	 esp, 8
  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 98 00 00
	00		 je	 $L179325

; 1765 : 		{
; 1766 : 			if(pBall->m_bCamp == CAMP_ATTACK)

  00093	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  00096	3c 02		 cmp	 al, 2
  00098	75 45		 jne	 SHORT $L179329

; 1767 : 			{
; 1768 : 				if(strAtk1 == NAME_NULL)

  0009a	8b 4c 24 18	 mov	 ecx, DWORD PTR _strAtk1$[esp+16]
  0009e	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 __mbscmp
  000ab	83 c4 08	 add	 esp, 8
  000ae	85 c0		 test	 eax, eax

; 1769 : 				{
; 1770 : 					strAtk1 = pBall->m_strOwner;

  000b0	57		 push	 edi
  000b1	75 0f		 jne	 SHORT $L179330
  000b3	8b 4c 24 1c	 mov	 ecx, DWORD PTR _strAtk1$[esp+20]
  000b7	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 1771 : 					wKeepAtk1 = WORD(_AtlModule.m_timeCurrent - pBall->m_dlTime);

  000bc	8b 44 24 28	 mov	 eax, DWORD PTR _wKeepAtk1$[esp+16]

; 1772 : 				}
; 1773 : 				else

  000c0	eb 5b		 jmp	 SHORT $L213304
$L179330:

; 1774 : 				{
; 1775 : 					strAtk2 = pBall->m_strOwner;

  000c2	8b 4c 24 20	 mov	 ecx, DWORD PTR _strAtk2$[esp+20]
  000c6	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 1776 : 					wKeepAtk2 = WORD(_AtlModule.m_timeCurrent - pBall->m_dlTime);

  000cb	66 8b 0d 50 a9
	02 00		 mov	 cx, WORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174416
  000d2	66 2b 4e 28	 sub	 cx, WORD PTR [esi+40]
  000d6	8b 54 24 2c	 mov	 edx, DWORD PTR _wKeepAtk2$[esp+16]
  000da	66 89 0a	 mov	 WORD PTR [edx], cx

; 1777 : 				}
; 1778 : 			}
; 1779 : 			else if(pBall->m_bCamp == CAMP_DEFEND)

  000dd	eb 4c		 jmp	 SHORT $L179325
$L179329:
  000df	3c 01		 cmp	 al, 1
  000e1	75 48		 jne	 SHORT $L179325

; 1780 : 			{
; 1781 : 				if(strDef1 == NAME_NULL)

  000e3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000e5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 __mbscmp
  000f0	83 c4 08	 add	 esp, 8
  000f3	85 c0		 test	 eax, eax

; 1782 : 				{
; 1783 : 					strDef1 = pBall->m_strOwner;

  000f5	57		 push	 edi
  000f6	75 1a		 jne	 SHORT $L179334
  000f8	8b cb		 mov	 ecx, ebx
  000fa	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 1784 : 					wKeepDef1 = WORD(_AtlModule.m_timeCurrent - pBall->m_dlTime);

  000ff	66 a1 50 a9 02
	00		 mov	 ax, WORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174416
  00105	66 2b 46 28	 sub	 ax, WORD PTR [esi+40]
  00109	8b 4c 24 30	 mov	 ecx, DWORD PTR _wKeepDef1$[esp+16]
  0010d	66 89 01	 mov	 WORD PTR [ecx], ax

; 1785 : 				}
; 1786 : 				else

  00110	eb 19		 jmp	 SHORT $L179325
$L179334:

; 1787 : 				{
; 1788 : 					strDef2 = pBall->m_strOwner;

  00112	8b cd		 mov	 ecx, ebp
  00114	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 1789 : 					wKeepDef2 = WORD(_AtlModule.m_timeCurrent - pBall->m_dlTime);

  00119	8b 44 24 34	 mov	 eax, DWORD PTR _wKeepDef2$[esp+16]
$L213304:
  0011d	66 8b 15 50 a9
	02 00		 mov	 dx, WORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174416
  00124	66 2b 56 28	 sub	 dx, WORD PTR [esi+40]
  00128	66 89 10	 mov	 WORD PTR [eax], dx
$L179325:
  0012b	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$[esp+16]
  0012f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  00134	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  00138	8b 44 24 24	 mov	 eax, DWORD PTR _it$[esp+16]
  0013c	3b 41 74	 cmp	 eax, DWORD PTR [ecx+116]
  0013f	0f 85 2f ff ff
	ff		 jne	 $L213175
$L179326:
  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5d		 pop	 ebp
  00148	5b		 pop	 ebx

; 1790 : 				}
; 1791 : 			}
; 1792 : 		}
; 1793 : 	}
; 1794 : }

  00149	59		 pop	 ecx
  0014a	c2 20 00	 ret	 32			; 00000020H
?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z ENDP ; CTMap::GetGodBallOwner
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T213407 DD	0ffffffffH
	DD	FLAT:$L213308
$T213405 DD	019930520H
	DD	01H
	DD	FLAT:$T213407
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213308:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T213405
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L213417
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L213417:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L213505
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L213505:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L213531
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L213531:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L213625
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L213625:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Insert
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T214012 DD	0ffffffffH
	DD	FLAT:$L213643
$T214007 DD	019930520H
	DD	01H
	DD	FLAT:$T214012
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT
$T213642 = -80						; size = 28
$T213641 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 7f		 cmp	 DWORD PTR [edi+8], 2147483646 ; 7ffffffeH
  00023	72 4c		 jb	 SHORT $L183329

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T213642[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T213642[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T213642[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T213642[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T213642[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T213641[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T213641[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T213641[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L214013:
$L183329:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEE@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L183334

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L183339
$L183334:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L183336

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L183339

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L183339
$L183336:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L183339

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L183339:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 0e 00	 cmp	 BYTE PTR [edx+14], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L183343
  000e5	55		 push	 ebp
$L183342:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L183344

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 0e 00	 cmp	 BYTE PTR [edx+14], 0
  000f9	75 18		 jne	 SHORT $L183345
$L214011:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 0e	 mov	 BYTE PTR [ecx+14], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 0e	 mov	 BYTE PTR [edx+14], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 0e 00	 mov	 BYTE PTR [ecx+14], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L183350
$L183345:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L183347

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate
$L183347:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 0e	 mov	 BYTE PTR [eax+14], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 0e 00	 mov	 BYTE PTR [edx+14], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L183350
$L183344:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 0e 00	 cmp	 BYTE PTR [edx+14], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L214011

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L183351

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate
$L183351:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 0e	 mov	 BYTE PTR [eax+14], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 0e 00	 mov	 BYTE PTR [edx+14], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate
$L183350:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 0e	 mov	 cl, BYTE PTR [edx+14]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L183342
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L183343:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 0e	 mov	 BYTE PTR [edx+14], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L214010:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L213643:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T213642[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214007
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T214118 DD	0ffffffffH
	DD	FLAT:$L214019
$T214116 DD	019930520H
	DD	01H
	DD	FLAT:$T214118
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L214019:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214116
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T214240 DD	0ffffffffH
	DD	FLAT:$L214126
$T214237 DD	019930520H
	DD	01H
	DD	FLAT:$T214240
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T214125 = -80						; size = 28
$T214124 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T214125[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T214125[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T214125[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T214125[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T214125[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214124[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214124[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T214124[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L214241:
$L214239:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L214126:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T214125[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214237
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Xlen
PUBLIC	?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T214363 DD	0ffffffffH
	DD	FLAT:$L214249
$T214360 DD	019930520H
	DD	01H
	DD	FLAT:$T214363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T214248 = -80						; size = 28
$T214247 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T214248[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T214248[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T214248[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T214248[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T214248[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214247[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214247[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T214247[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L214364:
$L214362:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L214249:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T214248[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214360
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Xlen
PUBLIC	?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T214486 DD	0ffffffffH
	DD	FLAT:$L214372
$T214483 DD	019930520H
	DD	01H
	DD	FLAT:$T214486
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T214371 = -80						; size = 28
$T214370 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T214371[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T214371[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T214371[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T214371[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T214371[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214370[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T214370[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T214370[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L214487:
$L214485:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L214372:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T214371[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214483
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T214984 DD	0ffffffffH
	DD	FLAT:$L214499
$T214976 DD	019930520H
	DD	01H
	DD	FLAT:$T214984
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T214494 = -80						; size = 28
$T214493 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L184365

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T214494[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T214494[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T214494[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T214494[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T214494[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T214493[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T214493[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T214493[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L214985:
$L184365:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L184373

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L214979
$L184373:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L184375

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L214979
$L184375:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L184377
$L214979:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L184378

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184378:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L184379

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L184382
$L184379:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L184381

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L184382
$L184381:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L184382:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L184383

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L214495
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L214496
$L214495:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L214496:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L184383:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L214812

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L214497
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L214812
$L214497:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L214812
$L184377:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L184386

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L184387
$L184386:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L184388

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184388:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L184387:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L184389

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L184392
$L184389:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L184391

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L184392
$L184391:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L184392:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L214812:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L184393

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L184396
  0018e	8b ff		 npad	 2
$L184394:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L184396

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L184397

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L184398

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184398:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L214982

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L184401
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L214983
$L184401:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L184403

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184403:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L184396
$L184397:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L184405

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L184405:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L214982

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L184408
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L184408
$L214983:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L214982:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L184394

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L184396
$L184408:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L184410

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L184410:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate
$L184396:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L184393:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L184411

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L184411:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L214981:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L214499:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T214494[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T214976
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T215486 DD	0ffffffffH
	DD	FLAT:$L215001
$T215478 DD	019930520H
	DD	01H
	DD	FLAT:$T215486
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T214996 = -80						; size = 28
$T214995 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L184558

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T214996[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T214996[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T214996[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T214996[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T214996[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T214995[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T214995[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T214995[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L215487:
$L184558:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L184566

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L215481
$L184566:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L184568

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L215481
$L184568:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L184570
$L215481:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L184571

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184571:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L184572

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L184575
$L184572:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L184574

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L184575
$L184574:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L184575:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L184576

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L214997
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L214998
$L214997:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L214998:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L184576:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L215315

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L214999
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L215315
$L214999:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L215315
$L184570:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L184579

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L184580
$L184579:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L184581

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184581:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L184580:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L184582

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L184585
$L184582:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L184584

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L184585
$L184584:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L184585:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L215315:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L184586

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L184589
  0018e	8b ff		 npad	 2
$L184587:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L184589

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L184590

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L184591

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184591:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L215484

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L184594
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L215485
$L184594:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L184596

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184596:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L184589
$L184590:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L184598

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L184598:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L215484

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L184601
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L184601
$L215485:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L215484:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L184587

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L184589
$L184601:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L184603

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L184603:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate
$L184589:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L184586:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L184604

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L184604:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L215483:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L215001:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T214996[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T215478
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T215984 DD	0ffffffffH
	DD	FLAT:$L215499
$T215976 DD	019930520H
	DD	01H
	DD	FLAT:$T215984
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T215494 = -80						; size = 28
$T215493 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L184675

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T215494[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T215494[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T215494[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T215494[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T215494[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T215493[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T215493[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T215493[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L215985:
$L184675:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L184683

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L215979
$L184683:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L184685

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L215979
$L184685:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L184687
$L215979:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L184688

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184688:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L184689

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L184692
$L184689:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L184691

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L184692
$L184691:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L184692:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L184693

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L215495
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L215496
$L215495:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L215496:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L184693:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L215812

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L215497
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L215812
$L215497:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L215812
$L184687:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L184696

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L184697
$L184696:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L184698

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L184698:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L184697:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L184699

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L184702
$L184699:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L184701

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L184702
$L184701:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L184702:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L215812:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L184703

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L184706
  0018e	8b ff		 npad	 2
$L184704:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L184706

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L184707

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L184708

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184708:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L215982

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L184711
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L215983
$L184711:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L184713

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L184713:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L184706
$L184707:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L184715

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L184715:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L215982

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L184718
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L184718
$L215983:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L215982:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L184704

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L184706
$L184718:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L184720

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L184720:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Rrotate
$L184706:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L184703:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L184721

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L184721:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L215981:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L215499:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T215494[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T215976
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
PUBLIC	?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T216107 DD	0ffffffffH
	DD	FLAT:$L215993
$T216104 DD	019930520H
	DD	01H
	DD	FLAT:$T216107
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T215992 = -80						; size = 28
$T215991 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T215992[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T215992[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T215992[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T215992[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T215992[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T215991[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T215991[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T215991[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L216108:
$L216106:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L215993:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T215992[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T216104
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Xlen
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T216605 DD	0ffffffffH
	DD	FLAT:$L216120
$T216597 DD	019930520H
	DD	01H
	DD	FLAT:$T216605
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T216115 = -80						; size = 28
$T216114 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185063

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T216115[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T216115[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T216115[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T216115[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T216115[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T216114[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T216114[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T216114[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L216606:
$L185063:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185071

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L216600
$L185071:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185073

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L216600
$L185073:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185075
$L216600:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185076

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185076:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185077

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185080
$L185077:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185079

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185080
$L185079:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185080:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185081

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L216116
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L216117
$L216116:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L216117:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185081:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L216434

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L216118
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L216434
$L216118:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L216434
$L185075:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185084

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185085
$L185084:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185086

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185086:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185085:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185087

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185090
$L185087:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185089

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185090
$L185089:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185090:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L216434:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185091

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185094
  0018e	8b ff		 npad	 2
$L185092:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185094

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185095

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185096

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185096:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L216603

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L185099
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L216604
$L185099:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L185101

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185101:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185094
$L185095:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185103

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185103:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L216603

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L185106
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L185106
$L216604:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L216603:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185092

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185094
$L185106:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L185108

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185108:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
$L185094:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L185091:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185109

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185109:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L216602:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L216120:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T216115[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T216597
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T217103 DD	0ffffffffH
	DD	FLAT:$L216618
$T217095 DD	019930520H
	DD	01H
	DD	FLAT:$T217103
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T216613 = -80						; size = 28
$T216612 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185144

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T216613[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T216613[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T216613[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T216613[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T216613[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T216612[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T216612[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T216612[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L217104:
$L185144:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185152

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L217098
$L185152:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185154

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L217098
$L185154:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185156
$L217098:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185157

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185157:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185158

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185161
$L185158:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185160

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185161
$L185160:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185161:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185162

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L216614
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L216615
$L216614:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L216615:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185162:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L216931

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L216616
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L216931
$L216616:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L216931
$L185156:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185165

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185166
$L185165:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185167

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185167:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185166:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185168

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185171
$L185168:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185170

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185171
$L185170:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185171:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L216931:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185172

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185175
  0018e	8b ff		 npad	 2
$L185173:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185175

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185176

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185177

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185177:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L217101

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L185180
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L217102
$L185180:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L185182

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185182:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185175
$L185176:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185184

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185184:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L217101

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L185187
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L185187
$L217102:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L217101:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185173

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185175
$L185187:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L185189

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185189:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
$L185175:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L185172:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185190

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185190:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L217100:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L216618:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T216613[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T217095
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T217601 DD	0ffffffffH
	DD	FLAT:$L217116
$T217593 DD	019930520H
	DD	01H
	DD	FLAT:$T217601
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T217111 = -80						; size = 28
$T217110 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185256

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T217111[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T217111[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T217111[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T217111[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T217111[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T217110[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T217110[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T217110[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L217602:
$L185256:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185264

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L217596
$L185264:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185266

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L217596
$L185266:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185268
$L217596:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185269

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185269:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185270

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185273
$L185270:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185272

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185273
$L185272:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185273:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185274

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L217112
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L217113
$L217112:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L217113:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185274:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L217430

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L217114
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L217430
$L217114:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L217430
$L185268:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185277

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185278
$L185277:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185279

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185279:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185278:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185280

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185283
$L185280:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185282

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185283
$L185282:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185283:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L217430:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185284

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185287
  0018e	8b ff		 npad	 2
$L185285:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185287

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185288

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185289

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185289:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L217599

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L185292
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L217600
$L185292:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L185294

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185294:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185287
$L185288:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185296

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185296:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L217599

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L185299
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L185299
$L217600:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L217599:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185285

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185287
$L185299:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L185301

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185301:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate
$L185287:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L185284:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185302

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185302:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L217598:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L217116:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T217111[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T217593
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T218099 DD	0ffffffffH
	DD	FLAT:$L217614
$T218091 DD	019930520H
	DD	01H
	DD	FLAT:$T218099
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T217609 = -80						; size = 28
$T217608 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185335

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T217609[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T217609[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T217609[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T217609[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T217609[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T217608[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T217608[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T217608[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L218100:
$L185335:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185343

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L218094
$L185343:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185345

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L218094
$L185345:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185347
$L218094:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185348

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185348:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185349

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185352
$L185349:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185351

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185352
$L185351:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185352:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185353

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L217610
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L217611
$L217610:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L217611:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185353:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L217927

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L217612
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L217927
$L217612:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L217927
$L185347:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185356

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185357
$L185356:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185358

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185358:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185357:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185359

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185362
$L185359:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185361

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185362
$L185361:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185362:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L217927:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185363

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185366
  0018e	8b ff		 npad	 2
$L185364:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185366

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185367

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185368

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185368:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L218097

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L185371
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L218098
$L185371:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L185373

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185373:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185366
$L185367:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185375

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185375:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L218097

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L185378
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L185378
$L218098:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L218097:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185364

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185366
$L185378:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L185380

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185380:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate
$L185366:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L185363:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185381

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185381:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L218096:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L217614:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T217609[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T218091
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T218597 DD	0ffffffffH
	DD	FLAT:$L218112
$T218589 DD	019930520H
	DD	01H
	DD	FLAT:$T218597
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T218107 = -80						; size = 28
$T218106 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185416

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T218107[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T218107[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T218107[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T218107[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T218107[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T218106[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T218106[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T218106[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L218598:
$L185416:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185424

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L218592
$L185424:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 11	 mov	 cl, BYTE PTR [edx+17]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185426

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L218592
$L185426:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185428
$L218592:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 11	 mov	 al, BYTE PTR [edi+17]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185429

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185429:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185430

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185433
$L185430:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185432

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185433
$L185432:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185433:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185434

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 11	 mov	 al, BYTE PTR [edi+17]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L218108
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L218109
$L218108:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L218109:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185434:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L218426

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 11	 mov	 al, BYTE PTR [edi+17]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L218110
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L218426
$L218110:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L218426
$L185428:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185437

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185438
$L185437:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 11	 mov	 al, BYTE PTR [edi+17]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185439

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185439:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185438:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185440

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185443
$L185440:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185442

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185443
$L185442:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185443:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 10	 mov	 dl, BYTE PTR [ebx+16]
  00168	8a 41 10	 mov	 al, BYTE PTR [ecx+16]
  0016b	88 51 10	 mov	 BYTE PTR [ecx+16], dl
  0016e	88 43 10	 mov	 BYTE PTR [ebx+16], al
$L218426:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185444

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185447
  0018e	8b ff		 npad	 2
$L185445:
  00190	38 5f 10	 cmp	 BYTE PTR [edi+16], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185447

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185448

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185449

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185449:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L218595

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 10	 cmp	 BYTE PTR [edx+16], bl
  001c7	75 08		 jne	 SHORT $L185452
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 10	 cmp	 BYTE PTR [ecx+16], bl
  001cf	74 63		 je	 SHORT $L218596
$L185452:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 10	 cmp	 BYTE PTR [ecx+16], bl
  001d7	75 14		 jne	 SHORT $L185454

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 10	 mov	 BYTE PTR [edx+16], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185454:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  001f0	88 48 10	 mov	 BYTE PTR [eax+16], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 10	 mov	 BYTE PTR [esi+16], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 10	 mov	 BYTE PTR [edx+16], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185447
$L185448:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185456

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185456:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L218595

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 10	 cmp	 BYTE PTR [edx+16], bl
  0022b	75 20		 jne	 SHORT $L185459
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 10	 cmp	 BYTE PTR [ecx+16], bl
  00232	75 19		 jne	 SHORT $L185459
$L218596:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
$L218595:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185445

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185447
$L185459:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 10	 cmp	 BYTE PTR [ecx+16], bl
  00252	75 14		 jne	 SHORT $L185461

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 10	 mov	 BYTE PTR [edx+16], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185461:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0026b	88 48 10	 mov	 BYTE PTR [eax+16], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 10	 mov	 BYTE PTR [esi+16], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 10	 mov	 BYTE PTR [edx+16], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
$L185447:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 10	 mov	 BYTE PTR [edi+16], bl
$L185444:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185462

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185462:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L218594:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L218112:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T218107[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T218589
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T219095 DD	0ffffffffH
	DD	FLAT:$L218610
$T219087 DD	019930520H
	DD	01H
	DD	FLAT:$T219095
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T218605 = -80						; size = 28
$T218604 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L185543

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T218605[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T218605[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T218605[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T218605[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T218605[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T218604[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T218604[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T218604[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L219096:
$L185543:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L185551

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L219090
$L185551:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L185553

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L219090
$L185553:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L185555
$L219090:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L185556

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185556:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L185557

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L185560
$L185557:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L185559

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L185560
$L185559:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L185560:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L185561

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L218606
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L218607
$L218606:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L218607:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L185561:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L218923

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L218608
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L218923
$L218608:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L218923
$L185555:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L185564

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L185565
$L185564:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L185566

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L185566:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L185565:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L185567

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L185570
$L185567:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L185569

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L185570
$L185569:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L185570:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L218923:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L185571

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L185574
  0018e	8b ff		 npad	 2
$L185572:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L185574

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L185575

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L185576

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185576:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L219093

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L185579
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L219094
$L185579:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L185581

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L185581:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L185574
$L185575:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L185583

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L185583:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L219093

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L185586
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L185586
$L219094:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L219093:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L185572

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L185574
$L185586:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L185588

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L185588:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate
$L185574:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L185571:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L185589

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L185589:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L219092:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L218610:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T218605[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T219087
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
PUBLIC	?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T219218 DD	0ffffffffH
	DD	FLAT:$L219104
$T219215 DD	019930520H
	DD	01H
	DD	FLAT:$T219218
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T219103 = -80						; size = 28
$T219102 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T219103[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T219103[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T219103[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T219103[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T219103[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T219102[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T219102[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T219102[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L219219:
$L219217:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L219104:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T219103[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T219215
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
PUBLIC	?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T219341 DD	0ffffffffH
	DD	FLAT:$L219227
$T219338 DD	019930520H
	DD	01H
	DD	FLAT:$T219341
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T219226 = -80						; size = 28
$T219225 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T219226[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T219226[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T219226[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T219226[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T219226[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T219225[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T219225[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T219225[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L219342:
$L219340:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L219227:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T219226[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T219338
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?CheckPower@CTMap@@QAEEXZ			; CTMap::CheckPower
PUBLIC	__real@42c80000
PUBLIC	__real@4f800000
EXTRN	?SendCS_BALANCEOFPOWER_ACK@CTPlayer@@QAEXMKGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000GGGG@Z:NEAR ; CTPlayer::SendCS_BALANCEOFPOWER_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T220712 DD	0ffffffffH
	DD	FLAT:$L219368
	DD	00H
	DD	FLAT:$L219369
	DD	01H
	DD	FLAT:$L219370
	DD	02H
	DD	FLAT:$L219371
	DD	03H
	DD	FLAT:$L219372
	DD	04H
	DD	FLAT:$L219373
	DD	05H
	DD	FLAT:$L219374
$T220680 DD	019930520H
	DD	07H
	DD	FLAT:$T220712
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
CONST	ENDS
;	COMDAT ?CheckPower@CTMap@@QAEEXZ
_TEXT	SEGMENT
_itCell$ = -80						; size = 4
_this$ = -76						; size = 4
_strDef2$ = -72						; size = 4
_strDef1$ = -68						; size = 4
_strAtk2$ = -64						; size = 4
_strAtk1$ = -60						; size = 4
_it$ = -60						; size = 4
_wKD2$ = -56						; size = 2
_wKD1$ = -52						; size = 2
_wKA2$ = -48						; size = 2
_wKA1$ = -44						; size = 2
tv882 = -40						; size = 4
_fDefPower$ = -36					; size = 4
tv1328 = -32						; size = 4
tv1327 = -32						; size = 4
_pCell$179145 = -32					; size = 4
$T219363 = -28						; size = 4
$T219364 = -24						; size = 4
$T219365 = -20						; size = 4
$T219366 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CheckPower@CTMap@@QAEEXZ PROC NEAR			; CTMap::CheckPower, COMDAT
; _this$ = ecx

; 1556 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?CheckPower@CTMap@@QAEEXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx

; 1557 : 	if(m_bDefBallMax == 0 || m_bAtkBallMax == 0)

  0001e	8a 87 94 00 00
	00		 mov	 al, BYTE PTR [edi+148]
  00024	84 c0		 test	 al, al
  00026	89 7c 24 14	 mov	 DWORD PTR _this$[esp+96], edi
  0002a	0f 84 34 05 00
	00		 je	 $L179112
  00030	8a 87 95 00 00
	00		 mov	 al, BYTE PTR [edi+149]
  00036	84 c0		 test	 al, al
  00038	0f 84 26 05 00
	00		 je	 $L179112

; 1558 : 		return FALSE;
; 1559 : 
; 1560 : 	MAPTGODTOWER::iterator it;
; 1561 : 	for(it=m_mapTGODTOWER.begin(); it!=m_mapTGODTOWER.end(); it++)

  0003e	8b 4f 68	 mov	 ecx, DWORD PTR [edi+104]
  00041	8b 01		 mov	 eax, DWORD PTR [ecx]
  00043	3b c1		 cmp	 eax, ecx
  00045	89 44 24 24	 mov	 DWORD PTR _it$[esp+96], eax
  00049	0f 84 7c 00 00
	00		 je	 $L179119
  0004f	90		 npad	 1
$L219422:

; 1562 : 	{
; 1563 : 		LPTGODBALL pBall = (*it).second->m_pGodBall;

  00050	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00053	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1564 : 		if(pBall)

  00056	85 c0		 test	 eax, eax
  00058	74 41		 je	 SHORT $L179124

; 1565 : 		{
; 1566 : 			if(pBall->m_bCamp == CAMP_ATTACK)

  0005a	8a 40 08	 mov	 al, BYTE PTR [eax+8]
  0005d	3c 02		 cmp	 al, 2
  0005f	75 1c		 jne	 SHORT $L179122

; 1567 : 			{
; 1568 : 				m_dwAtkPower++;

  00061	8b 8f 9c 00 00
	00		 mov	 ecx, DWORD PTR [edi+156]

; 1569 : 				m_dwDefPower--;

  00067	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]
  0006d	41		 inc	 ecx
  0006e	48		 dec	 eax
  0006f	89 8f 9c 00 00
	00		 mov	 DWORD PTR [edi+156], ecx
  00075	89 87 98 00 00
	00		 mov	 DWORD PTR [edi+152], eax

; 1570 : 			}
; 1571 : 			else if(pBall->m_bCamp == CAMP_DEFEND)

  0007b	eb 1e		 jmp	 SHORT $L179124
$L179122:
  0007d	3c 01		 cmp	 al, 1
  0007f	75 1a		 jne	 SHORT $L179124

; 1572 : 			{
; 1573 : 				m_dwDefPower++;

  00081	8b 8f 98 00 00
	00		 mov	 ecx, DWORD PTR [edi+152]

; 1574 : 				m_dwAtkPower--;

  00087	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]
  0008d	41		 inc	 ecx
  0008e	48		 dec	 eax
  0008f	89 8f 98 00 00
	00		 mov	 DWORD PTR [edi+152], ecx
  00095	89 87 9c 00 00
	00		 mov	 DWORD PTR [edi+156], eax
$L179124:

; 1575 : 			}
; 1576 : 		}
; 1577 : 
; 1578 : 		if(m_dwAtkPower == 0 || m_dwDefPower == 0)

  0009b	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]
  000a1	85 c0		 test	 eax, eax
  000a3	0f 84 bb 04 00
	00		 je	 $L179112
  000a9	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]
  000af	85 c0		 test	 eax, eax
  000b1	0f 84 ad 04 00
	00		 je	 $L179112
  000b7	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$[esp+96]
  000bb	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
  000c0	8b 4f 68	 mov	 ecx, DWORD PTR [edi+104]
  000c3	8b 44 24 24	 mov	 eax, DWORD PTR _it$[esp+96]
  000c7	3b c1		 cmp	 eax, ecx
  000c9	75 85		 jne	 SHORT $L219422
$L179119:

; 1579 : 			return FALSE;
; 1580 : 	}
; 1581 : 
; 1582 : 	MAPTCELL::iterator itCell;
; 1583 : 	FLOAT fDefPower = m_dwDefPower*100.0f/FLOAT(m_dwDefPower + m_dwAtkPower);

  000cb	8b 87 98 00 00
	00		 mov	 eax, DWORD PTR [edi+152]
  000d1	db 87 98 00 00
	00		 fild	 DWORD PTR [edi+152]
  000d7	85 c0		 test	 eax, eax
  000d9	7d 06		 jge	 SHORT $L220706
  000db	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L220706:
  000e1	8b 8f 9c 00 00
	00		 mov	 ecx, DWORD PTR [edi+156]
  000e7	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@42c80000
  000ed	03 c8		 add	 ecx, eax
  000ef	85 c9		 test	 ecx, ecx
  000f1	89 4c 24 40	 mov	 DWORD PTR tv1327[esp+96], ecx
  000f5	db 44 24 40	 fild	 DWORD PTR tv1327[esp+96]
  000f9	7d 06		 jge	 SHORT $L220709
  000fb	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L220709:
  00101	de f9		 fdivp	 ST(1), ST(0)

; 1584 : 	DWORD dwLeftTime = m_dwEndTick - _AtlModule.m_dwTick < DAY_ONE * 1000 ? m_dwEndTick - _AtlModule.m_dwTick : 0;

  00103	8b 87 b0 00 00
	00		 mov	 eax, DWORD PTR [edi+176]
  00109	2b 05 48 a9 02
	00		 sub	 eax, DWORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174408
  0010f	3d 00 5c 26 05	 cmp	 eax, 86400000		; 05265c00H
  00114	89 44 24 38	 mov	 DWORD PTR tv882[esp+96], eax
  00118	d9 5c 24 3c	 fstp	 DWORD PTR _fDefPower$[esp+96]
  0011c	0f 83 42 04 00
	00		 jae	 $L179112

; 1585 : 	if(dwLeftTime == 0)

  00122	85 c0		 test	 eax, eax

; 1586 : 		return FALSE;

  00124	0f 84 3a 04 00
	00		 je	 $L179112

; 1587 : 
; 1588 : 	CString strAtk1, strAtk2, strDef1, strDef2;

  0012a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00130	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00135	ff 52 0c	 call	 DWORD PTR [edx+12]
  00138	83 c0 10	 add	 eax, 16			; 00000010H
  0013b	89 44 24 24	 mov	 DWORD PTR _strAtk1$[esp+96], eax
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00144	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00149	c7 44 24 5c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+104], 0
  00151	ff 50 0c	 call	 DWORD PTR [eax+12]
  00154	83 c0 10	 add	 eax, 16			; 00000010H
  00157	89 44 24 20	 mov	 DWORD PTR _strAtk2$[esp+96], eax
  0015b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00161	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00166	c6 44 24 5c 01	 mov	 BYTE PTR __$EHRec$[esp+104], 1
  0016b	ff 52 0c	 call	 DWORD PTR [edx+12]
  0016e	83 c0 10	 add	 eax, 16			; 00000010H
  00171	89 44 24 1c	 mov	 DWORD PTR _strDef1$[esp+96], eax
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0017a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0017f	c6 44 24 5c 02	 mov	 BYTE PTR __$EHRec$[esp+104], 2
  00184	ff 50 0c	 call	 DWORD PTR [eax+12]
  00187	83 c0 10	 add	 eax, 16			; 00000010H
  0018a	89 44 24 18	 mov	 DWORD PTR _strDef2$[esp+96], eax

; 1589 : 	WORD wKA1, wKA2, wKD1, wKD2;
; 1590 : 
; 1591 : 	GetGodBallOwner(
; 1592 : 		strAtk1, strAtk2, strDef1, strDef2,
; 1593 : 		wKA1, wKA2, wKD1, wKD2);

  0018e	8d 4c 24 28	 lea	 ecx, DWORD PTR _wKD2$[esp+96]
  00192	51		 push	 ecx
  00193	8d 54 24 30	 lea	 edx, DWORD PTR _wKD1$[esp+100]
  00197	52		 push	 edx
  00198	8d 44 24 38	 lea	 eax, DWORD PTR _wKA2$[esp+104]
  0019c	50		 push	 eax
  0019d	8d 4c 24 40	 lea	 ecx, DWORD PTR _wKA1$[esp+108]
  001a1	51		 push	 ecx
  001a2	8d 54 24 28	 lea	 edx, DWORD PTR _strDef2$[esp+112]
  001a6	52		 push	 edx
  001a7	8d 44 24 30	 lea	 eax, DWORD PTR _strDef1$[esp+116]
  001ab	50		 push	 eax
  001ac	8d 4c 24 38	 lea	 ecx, DWORD PTR _strAtk2$[esp+120]
  001b0	51		 push	 ecx
  001b1	8d 54 24 40	 lea	 edx, DWORD PTR _strAtk1$[esp+124]
  001b5	52		 push	 edx
  001b6	8b cf		 mov	 ecx, edi
  001b8	c6 44 24 7c 03	 mov	 BYTE PTR __$EHRec$[esp+136], 3
  001bd	e8 00 00 00 00	 call	 ?GetGodBallOwner@CTMap@@QAEXAAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000AAG111@Z ; CTMap::GetGodBallOwner

; 1594 : 
; 1595 : 	for(itCell=m_mapTCELL.begin(); itCell!=m_mapTCELL.end(); itCell++)

  001c2	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  001c5	8b 10		 mov	 edx, DWORD PTR [eax]
  001c7	3b d0		 cmp	 edx, eax
  001c9	89 54 24 10	 mov	 DWORD PTR _itCell$[esp+96], edx
  001cd	0f 84 e8 02 00
	00		 je	 $L179144
$L219780:

; 1596 : 	{
; 1597 : 		CTCell * pCell = (*itCell).second;

  001d3	8b 72 10	 mov	 esi, DWORD PTR [edx+16]

; 1598 : 		MAPPLAYER::iterator itChar;
; 1599 : 		for(itChar=pCell->m_mapPLAYER.begin(); itChar != pCell->m_mapPLAYER.end(); itChar++)

  001d6	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  001d9	8b 18		 mov	 ebx, DWORD PTR [eax]
  001db	3b d8		 cmp	 ebx, eax
  001dd	89 74 24 40	 mov	 DWORD PTR _pCell$179145[esp+96], esi
  001e1	0f 84 75 02 00
	00		 je	 $L179143
  001e7	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$L220047:

; 1600 : 		{
; 1601 : 			if((*itChar).second->m_bMain)

  001f0	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001f3	8a 88 a8 04 01
	00		 mov	 cl, BYTE PTR [eax+66728]
  001f9	84 c9		 test	 cl, cl
  001fb	0f 84 0a 02 00
	00		 je	 $L179151

; 1602 : 				(*itChar).second->SendCS_BALANCEOFPOWER_ACK(
; 1603 : 					fDefPower,
; 1604 : 					dwLeftTime,
; 1605 : 					m_wAtkKillPoint,
; 1606 : 					m_wDefKillPoint,
; 1607 : 					strAtk1, strAtk2, strDef1, strDef2,
; 1608 : 					wKA1, wKA2, wKD1, wKD2);

  00201	8b 4c 24 28	 mov	 ecx, DWORD PTR _wKD2$[esp+96]
  00205	8b 54 24 2c	 mov	 edx, DWORD PTR _wKD1$[esp+96]
  00209	8b 44 24 30	 mov	 eax, DWORD PTR _wKA2$[esp+96]
  0020d	8b 74 24 18	 mov	 esi, DWORD PTR _strDef2$[esp+96]
  00211	51		 push	 ecx
  00212	8b 4c 24 38	 mov	 ecx, DWORD PTR _wKA1$[esp+100]
  00216	52		 push	 edx
  00217	50		 push	 eax
  00218	51		 push	 ecx
  00219	51		 push	 ecx
  0021a	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0021d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0021f	83 c6 f0	 add	 esi, -16		; fffffff0H
  00222	89 64 24 58	 mov	 DWORD PTR $T219363[esp+116], esp
  00226	8b ec		 mov	 ebp, esp
  00228	ff 52 10	 call	 DWORD PTR [edx+16]
  0022b	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0022e	85 c9		 test	 ecx, ecx
  00230	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00233	7c 11		 jl	 SHORT $L220222
  00235	3b 06		 cmp	 eax, DWORD PTR [esi]
  00237	75 0d		 jne	 SHORT $L220222
  00239	8b c6		 mov	 eax, esi
  0023b	b9 01 00 00 00	 mov	 ecx, 1
  00240	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00244	eb 36		 jmp	 SHORT $L220207
$L220222:
  00246	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00249	8b 10		 mov	 edx, DWORD PTR [eax]
  0024b	6a 01		 push	 1
  0024d	51		 push	 ecx
  0024e	8b c8		 mov	 ecx, eax
  00250	ff 12		 call	 DWORD PTR [edx]
  00252	85 c0		 test	 eax, eax
  00254	0f 84 05 03 00
	00		 je	 $L220692
  0025a	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0025d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00260	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00263	41		 inc	 ecx
  00264	8b d1		 mov	 edx, ecx
  00266	c1 e9 02	 shr	 ecx, 2
  00269	83 c6 10	 add	 esi, 16			; 00000010H
  0026c	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0026f	f3 a5		 rep movsd
  00271	8b ca		 mov	 ecx, edx
  00273	83 e1 03	 and	 ecx, 3
  00276	f3 a4		 rep movsb
  00278	8b 7c 24 28	 mov	 edi, DWORD PTR _this$[esp+116]
$L220207:
  0027c	83 c0 10	 add	 eax, 16			; 00000010H
  0027f	89 45 00	 mov	 DWORD PTR [ebp], eax
  00282	8b 74 24 30	 mov	 esi, DWORD PTR _strDef1$[esp+116]
  00286	51		 push	 ecx
  00287	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0028a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0028c	83 c6 f0	 add	 esi, -16		; fffffff0H
  0028f	c6 44 24 74 04	 mov	 BYTE PTR __$EHRec$[esp+128], 4
  00294	89 64 24 60	 mov	 DWORD PTR $T219364[esp+120], esp
  00298	8b ec		 mov	 ebp, esp
  0029a	ff 50 10	 call	 DWORD PTR [eax+16]
  0029d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  002a0	85 c9		 test	 ecx, ecx
  002a2	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  002a5	7c 11		 jl	 SHORT $L220329
  002a7	3b 06		 cmp	 eax, DWORD PTR [esi]
  002a9	75 0d		 jne	 SHORT $L220329
  002ab	8b c6		 mov	 eax, esi
  002ad	b9 01 00 00 00	 mov	 ecx, 1
  002b2	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  002b6	eb 36		 jmp	 SHORT $L220325
$L220329:
  002b8	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  002bb	8b 10		 mov	 edx, DWORD PTR [eax]
  002bd	6a 01		 push	 1
  002bf	51		 push	 ecx
  002c0	8b c8		 mov	 ecx, eax
  002c2	ff 12		 call	 DWORD PTR [edx]
  002c4	85 c0		 test	 eax, eax
  002c6	0f 84 93 02 00
	00		 je	 $L220692
  002cc	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  002cf	89 50 04	 mov	 DWORD PTR [eax+4], edx
  002d2	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  002d5	41		 inc	 ecx
  002d6	8b d1		 mov	 edx, ecx
  002d8	c1 e9 02	 shr	 ecx, 2
  002db	83 c6 10	 add	 esi, 16			; 00000010H
  002de	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  002e1	f3 a5		 rep movsd
  002e3	8b ca		 mov	 ecx, edx
  002e5	83 e1 03	 and	 ecx, 3
  002e8	f3 a4		 rep movsb
  002ea	8b 7c 24 2c	 mov	 edi, DWORD PTR _this$[esp+120]
$L220325:
  002ee	83 c0 10	 add	 eax, 16			; 00000010H
  002f1	89 45 00	 mov	 DWORD PTR [ebp], eax
  002f4	8b 74 24 38	 mov	 esi, DWORD PTR _strAtk2$[esp+120]
  002f8	51		 push	 ecx
  002f9	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  002fc	8b 01		 mov	 eax, DWORD PTR [ecx]
  002fe	83 c6 f0	 add	 esi, -16		; fffffff0H
  00301	c6 44 24 78 05	 mov	 BYTE PTR __$EHRec$[esp+132], 5
  00306	89 64 24 68	 mov	 DWORD PTR $T219365[esp+124], esp
  0030a	8b ec		 mov	 ebp, esp
  0030c	ff 50 10	 call	 DWORD PTR [eax+16]
  0030f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00312	85 c9		 test	 ecx, ecx
  00314	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00317	7c 11		 jl	 SHORT $L220436
  00319	3b 06		 cmp	 eax, DWORD PTR [esi]
  0031b	75 0d		 jne	 SHORT $L220436
  0031d	8b c6		 mov	 eax, esi
  0031f	b9 01 00 00 00	 mov	 ecx, 1
  00324	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00328	eb 36		 jmp	 SHORT $L220432
$L220436:
  0032a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	6a 01		 push	 1
  00331	51		 push	 ecx
  00332	8b c8		 mov	 ecx, eax
  00334	ff 12		 call	 DWORD PTR [edx]
  00336	85 c0		 test	 eax, eax
  00338	0f 84 21 02 00
	00		 je	 $L220692
  0033e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00341	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00344	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00347	41		 inc	 ecx
  00348	8b d1		 mov	 edx, ecx
  0034a	c1 e9 02	 shr	 ecx, 2
  0034d	83 c6 10	 add	 esi, 16			; 00000010H
  00350	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00353	f3 a5		 rep movsd
  00355	8b ca		 mov	 ecx, edx
  00357	83 e1 03	 and	 ecx, 3
  0035a	f3 a4		 rep movsb
  0035c	8b 7c 24 30	 mov	 edi, DWORD PTR _this$[esp+124]
$L220432:
  00360	83 c0 10	 add	 eax, 16			; 00000010H
  00363	89 45 00	 mov	 DWORD PTR [ebp], eax
  00366	8b 74 24 40	 mov	 esi, DWORD PTR _strAtk1$[esp+124]
  0036a	51		 push	 ecx
  0036b	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0036e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00370	83 c6 f0	 add	 esi, -16		; fffffff0H
  00373	c6 44 24 7c 06	 mov	 BYTE PTR __$EHRec$[esp+136], 6
  00378	89 64 24 70	 mov	 DWORD PTR $T219366[esp+128], esp
  0037c	8b ec		 mov	 ebp, esp
  0037e	ff 50 10	 call	 DWORD PTR [eax+16]
  00381	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00384	85 c9		 test	 ecx, ecx
  00386	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00389	7c 11		 jl	 SHORT $L220533
  0038b	3b 06		 cmp	 eax, DWORD PTR [esi]
  0038d	75 0d		 jne	 SHORT $L220533
  0038f	8b c6		 mov	 eax, esi
  00391	b9 01 00 00 00	 mov	 ecx, 1
  00396	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  0039a	eb 36		 jmp	 SHORT $L220548
$L220533:
  0039c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	6a 01		 push	 1
  003a3	51		 push	 ecx
  003a4	8b c8		 mov	 ecx, eax
  003a6	ff 12		 call	 DWORD PTR [edx]
  003a8	85 c0		 test	 eax, eax
  003aa	0f 84 af 01 00
	00		 je	 $L220692
  003b0	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  003b3	89 50 04	 mov	 DWORD PTR [eax+4], edx
  003b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  003b9	41		 inc	 ecx
  003ba	8b d1		 mov	 edx, ecx
  003bc	c1 e9 02	 shr	 ecx, 2
  003bf	83 c6 10	 add	 esi, 16			; 00000010H
  003c2	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  003c5	f3 a5		 rep movsd
  003c7	8b ca		 mov	 ecx, edx
  003c9	83 e1 03	 and	 ecx, 3
  003cc	f3 a4		 rep movsb
  003ce	8b 7c 24 34	 mov	 edi, DWORD PTR _this$[esp+128]
$L220548:
  003d2	8b 54 24 58	 mov	 edx, DWORD PTR tv882[esp+128]
  003d6	83 c0 10	 add	 eax, 16			; 00000010H
  003d9	89 45 00	 mov	 DWORD PTR [ebp], eax
  003dc	33 c0		 xor	 eax, eax
  003de	66 8b 87 a2 00
	00 00		 mov	 ax, WORD PTR [edi+162]
  003e5	33 c9		 xor	 ecx, ecx
  003e7	66 8b 8f a4 00
	00 00		 mov	 cx, WORD PTR [edi+164]
  003ee	c6 44 24 7c 03	 mov	 BYTE PTR __$EHRec$[esp+136], 3
  003f3	50		 push	 eax
  003f4	8b 44 24 60	 mov	 eax, DWORD PTR _fDefPower$[esp+132]
  003f8	51		 push	 ecx
  003f9	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  003fc	52		 push	 edx
  003fd	50		 push	 eax
  003fe	e8 00 00 00 00	 call	 ?SendCS_BALANCEOFPOWER_ACK@CTPlayer@@QAEXMKGGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@000GGGG@Z ; CTPlayer::SendCS_BALANCEOFPOWER_ACK
  00403	8b 54 24 10	 mov	 edx, DWORD PTR _itCell$[esp+96]
  00407	8b 74 24 40	 mov	 esi, DWORD PTR _pCell$179145[esp+96]
$L179151:
  0040b	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  0040e	84 c0		 test	 al, al
  00410	75 41		 jne	 SHORT $L220057
  00412	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00415	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00418	84 c0		 test	 al, al
  0041a	75 18		 jne	 SHORT $L220685
  0041c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0041e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00421	84 db		 test	 bl, bl
  00423	75 0b		 jne	 SHORT $L220079

; 1598 : 		MAPPLAYER::iterator itChar;
; 1599 : 		for(itChar=pCell->m_mapPLAYER.begin(); itChar != pCell->m_mapPLAYER.end(); itChar++)

$L220078:
  00425	8b c8		 mov	 ecx, eax
  00427	8b 01		 mov	 eax, DWORD PTR [ecx]
  00429	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0042c	84 db		 test	 bl, bl
  0042e	74 f5		 je	 SHORT $L220078
$L220079:
  00430	8b d9		 mov	 ebx, ecx
  00432	eb 1f		 jmp	 SHORT $L220057
$L220685:
  00434	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00437	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0043a	84 c9		 test	 cl, cl
  0043c	75 13		 jne	 SHORT $L220060
  0043e	8b ff		 npad	 2
$L220059:
  00440	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  00443	75 0c		 jne	 SHORT $L220060
  00445	8b d8		 mov	 ebx, eax
  00447	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0044a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0044d	84 c9		 test	 cl, cl
  0044f	74 ef		 je	 SHORT $L220059
$L220060:
  00451	8b d8		 mov	 ebx, eax
$L220057:
  00453	3b 5e 2c	 cmp	 ebx, DWORD PTR [esi+44]
  00456	0f 85 94 fd ff
	ff		 jne	 $L220047
$L179143:

; 1594 : 
; 1595 : 	for(itCell=m_mapTCELL.begin(); itCell!=m_mapTCELL.end(); itCell++)

  0045c	8a 42 15	 mov	 al, BYTE PTR [edx+21]
  0045f	84 c0		 test	 al, al
  00461	75 4f		 jne	 SHORT $L219799
  00463	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00466	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00469	84 c0		 test	 al, al
  0046b	75 1a		 jne	 SHORT $L220687
  0046d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0046f	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00472	84 d2		 test	 dl, dl
  00474	75 0b		 jne	 SHORT $L219812
$L219811:
  00476	8b c8		 mov	 ecx, eax
  00478	8b 01		 mov	 eax, DWORD PTR [ecx]
  0047a	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0047d	84 d2		 test	 dl, dl
  0047f	74 f5		 je	 SHORT $L219811
$L219812:
  00481	89 4c 24 10	 mov	 DWORD PTR _itCell$[esp+96], ecx
  00485	eb 27		 jmp	 SHORT $L220711
$L220687:
  00487	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0048a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0048d	84 c9		 test	 cl, cl
  0048f	75 19		 jne	 SHORT $L219802
  00491	eb 04		 jmp	 SHORT $L219801
$L220704:
  00493	8b 54 24 10	 mov	 edx, DWORD PTR _itCell$[esp+96]
$L219801:
  00497	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0049a	75 0e		 jne	 SHORT $L219802
  0049c	89 44 24 10	 mov	 DWORD PTR _itCell$[esp+96], eax
  004a0	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  004a3	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  004a6	84 c9		 test	 cl, cl
  004a8	74 e9		 je	 SHORT $L220704
$L219802:
  004aa	89 44 24 10	 mov	 DWORD PTR _itCell$[esp+96], eax
$L220711:
  004ae	8b 54 24 10	 mov	 edx, DWORD PTR _itCell$[esp+96]
$L219799:
  004b2	3b 57 44	 cmp	 edx, DWORD PTR [edi+68]
  004b5	0f 85 18 fd ff
	ff		 jne	 $L219780
$L179144:

; 1609 : 		}
; 1610 : 	}
; 1611 : 
; 1612 : 	return TRUE;

  004bb	8b 44 24 18	 mov	 eax, DWORD PTR _strDef2$[esp+96]
  004bf	83 c0 f0	 add	 eax, -16		; fffffff0H
  004c2	c6 44 24 5c 02	 mov	 BYTE PTR __$EHRec$[esp+104], 2
  004c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  004ca	83 ca ff	 or	 edx, -1
  004cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  004d1	4a		 dec	 edx
  004d2	85 d2		 test	 edx, edx
  004d4	7f 08		 jg	 SHORT $L220597
  004d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d8	8b 11		 mov	 edx, DWORD PTR [ecx]
  004da	50		 push	 eax
  004db	ff 52 04	 call	 DWORD PTR [edx+4]
$L220597:
  004de	8b 44 24 1c	 mov	 eax, DWORD PTR _strDef1$[esp+96]
  004e2	83 c0 f0	 add	 eax, -16		; fffffff0H
  004e5	c6 44 24 5c 01	 mov	 BYTE PTR __$EHRec$[esp+104], 1
  004ea	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  004ed	83 ca ff	 or	 edx, -1
  004f0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  004f4	4a		 dec	 edx
  004f5	85 d2		 test	 edx, edx
  004f7	7f 08		 jg	 SHORT $L220624
  004f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  004fd	50		 push	 eax
  004fe	ff 52 04	 call	 DWORD PTR [edx+4]
$L220624:
  00501	8b 44 24 20	 mov	 eax, DWORD PTR _strAtk2$[esp+96]
  00505	83 c0 f0	 add	 eax, -16		; fffffff0H
  00508	c6 44 24 5c 00	 mov	 BYTE PTR __$EHRec$[esp+104], 0
  0050d	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00510	83 ca ff	 or	 edx, -1
  00513	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00517	4a		 dec	 edx
  00518	85 d2		 test	 edx, edx
  0051a	7f 08		 jg	 SHORT $L220651
  0051c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00520	50		 push	 eax
  00521	ff 52 04	 call	 DWORD PTR [edx+4]
$L220651:
  00524	8b 44 24 24	 mov	 eax, DWORD PTR _strAtk1$[esp+96]
  00528	83 c0 f0	 add	 eax, -16		; fffffff0H
  0052b	c7 44 24 5c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+104], -1
  00533	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00536	83 ca ff	 or	 edx, -1
  00539	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0053d	4a		 dec	 edx
  0053e	85 d2		 test	 edx, edx
  00540	7f 08		 jg	 SHORT $L220678
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	8b 11		 mov	 edx, DWORD PTR [ecx]
  00546	50		 push	 eax
  00547	ff 52 04	 call	 DWORD PTR [edx+4]
$L220678:
  0054a	b0 01		 mov	 al, 1

; 1613 : }

  0054c	8b 4c 24 54	 mov	 ecx, DWORD PTR __$EHRec$[esp+96]
  00550	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00557	5f		 pop	 edi
  00558	5e		 pop	 esi
  00559	5d		 pop	 ebp
  0055a	5b		 pop	 ebx
  0055b	83 c4 50	 add	 esp, 80			; 00000050H
  0055e	c3		 ret	 0
$L220692:

; 1602 : 				(*itChar).second->SendCS_BALANCEOFPOWER_ACK(
; 1603 : 					fDefPower,
; 1604 : 					dwLeftTime,
; 1605 : 					m_wAtkKillPoint,
; 1606 : 					m_wDefKillPoint,
; 1607 : 					strAtk1, strAtk2, strDef1, strDef2,
; 1608 : 					wKA1, wKA2, wKD1, wKD2);

  0055f	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L179112:

; 1613 : }

  00564	8b 4c 24 54	 mov	 ecx, DWORD PTR __$EHRec$[esp+96]
  00568	5f		 pop	 edi
  00569	5e		 pop	 esi
  0056a	5d		 pop	 ebp
  0056b	32 c0		 xor	 al, al
  0056d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00574	5b		 pop	 ebx
  00575	83 c4 50	 add	 esp, 80			; 00000050H
  00578	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L219368:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _strAtk1$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219369:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR _strAtk2$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219370:
  00010	8d 4d bc	 lea	 ecx, DWORD PTR _strDef1$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219371:
  00018	8d 4d b8	 lea	 ecx, DWORD PTR _strDef2$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219372:
  00020	8b 4d e4	 mov	 ecx, DWORD PTR $T219363[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219373:
  00028	8b 4d e8	 mov	 ecx, DWORD PTR $T219364[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L219374:
  00030	8b 4d ec	 mov	 ecx, DWORD PTR $T219365[ebp]
  00033	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?CheckPower@CTMap@@QAEEXZ:
  00038	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T220680
  0003d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CheckPower@CTMap@@QAEEXZ ENDP				; CTMap::CheckPower
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T221209 DD	0ffffffffH
	DD	FLAT:$L220724
$T221201 DD	019930520H
	DD	01H
	DD	FLAT:$T221209
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T220719 = -80						; size = 28
$T220718 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L180355

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T220719[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T220719[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T220719[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T220719[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T220719[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T220718[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T220718[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T220718[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L221210:
$L180355:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L180363

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L221204
$L180363:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L180365

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L221204
$L180365:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L180367
$L221204:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L180368

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L180368:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L180369

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L180372
$L180369:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L180371

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L180372
$L180371:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L180372:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L180373

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L220720
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L220721
$L220720:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L220721:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L180373:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L221037

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L220722
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L221037
$L220722:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L221037
$L180367:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L180376

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L180377
$L180376:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L180378

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L180378:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L180377:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L180379

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L180382
$L180379:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L180381

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L180382
$L180381:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L180382:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L221037:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L180383

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L180386
  0018e	8b ff		 npad	 2
$L180384:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L180386

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L180387

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L180388

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L180388:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L221207

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L180391
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L221208
$L180391:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L180393

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L180393:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L180386
$L180387:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L180395

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L180395:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L221207

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L180398
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L180398
$L221208:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L221207:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L180384

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L180386
$L180398:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L180400

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L180400:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
$L180386:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L180383:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L180401

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L180401:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L221206:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L220724:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T220719[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T221201
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T221707 DD	0ffffffffH
	DD	FLAT:$L221222
$T221699 DD	019930520H
	DD	01H
	DD	FLAT:$T221707
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T221217 = -80						; size = 28
$T221216 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L180714

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T221217[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T221217[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T221217[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T221217[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T221217[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T221216[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T221216[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T221216[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L221708:
$L180714:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L180722

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L221702
$L180722:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L180724

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L221702
$L180724:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L180726
$L221702:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L180727

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L180727:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L180728

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L180731
$L180728:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L180730

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L180731
$L180730:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L180731:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L180732

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L221218
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L221219
$L221218:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L221219:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L180732:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L221536

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L221220
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L221536
$L221220:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L221536
$L180726:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L180735

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L180736
$L180735:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L180737

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L180737:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L180736:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L180738

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L180741
$L180738:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L180740

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L180741
$L180740:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L180741:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L221536:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L180742

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L180745
  0018e	8b ff		 npad	 2
$L180743:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L180745

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L180746

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L180747

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L180747:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L221705

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L180750
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L221706
$L180750:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L180752

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L180752:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L180745
$L180746:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L180754

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L180754:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L221705

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L180757
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L180757
$L221706:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L221705:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L180743

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L180745
$L180757:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L180759

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L180759:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate
$L180745:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L180742:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L180760

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L180760:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L221704:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L221222:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T221217[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T221699
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T221722 = 12						; size = 4
$T221720 = 12						; size = 4
__Where$181640 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L181630
  0001d	8a 55 00	 mov	 dl, BYTE PTR [ebp]
$L181629:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3a 50 0c	 cmp	 dl, BYTE PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L221714
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L221715
$L221714:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L221715:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  0003b	74 e3		 je	 SHORT $L181629
$L181630:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$181640[esp+12], edx
  00045	74 33		 je	 SHORT $L221814

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T221720[esp+12]
  00050	75 1f		 jne	 SHORT $L181645
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L181645:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$181640[esp+12]
$L221814:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8a 42 0c	 mov	 al, BYTE PTR [edx+12]
  0007d	3a 45 00	 cmp	 al, BYTE PTR [ebp]
  00080	73 26		 jae	 SHORT $L181650

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T221722[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L181650:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T222342 DD	0ffffffffH
	DD	FLAT:$L221857
$T222334 DD	019930520H
	DD	01H
	DD	FLAT:$T222342
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T221852 = -80						; size = 28
$T221851 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L181660

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T221852[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T221852[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T221852[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T221852[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T221852[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T221851[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T221851[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T221851[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L222343:
$L181660:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L181668

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L222337
$L181668:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 0f	 mov	 cl, BYTE PTR [edx+15]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L181670

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L222337
$L181670:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L181672
$L222337:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 0f	 mov	 al, BYTE PTR [edi+15]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L181673

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L181673:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L181674

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L181677
$L181674:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L181676

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L181677
$L181676:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L181677:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L181678

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 0f	 mov	 al, BYTE PTR [edi+15]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L221853
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L221854
$L221853:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L221854:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L181678:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L222170

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 0f	 mov	 al, BYTE PTR [edi+15]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L221855
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L222170
$L221855:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L222170
$L181672:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L181681

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L181682
$L181681:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 0f	 mov	 al, BYTE PTR [edi+15]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L181683

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L181683:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L181682:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L181684

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L181687
$L181684:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L181686

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L181687
$L181686:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L181687:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 0e	 mov	 dl, BYTE PTR [ebx+14]
  00168	8a 41 0e	 mov	 al, BYTE PTR [ecx+14]
  0016b	88 51 0e	 mov	 BYTE PTR [ecx+14], dl
  0016e	88 43 0e	 mov	 BYTE PTR [ebx+14], al
$L222170:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L181688

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L181691
  0018e	8b ff		 npad	 2
$L181689:
  00190	38 5f 0e	 cmp	 BYTE PTR [edi+14], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L181691

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L181692

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L181693

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 0e	 mov	 BYTE PTR [eax+14], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 0e 00	 mov	 BYTE PTR [esi+14], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L181693:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L222340

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 0e	 cmp	 BYTE PTR [edx+14], bl
  001c7	75 08		 jne	 SHORT $L181696
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 0e	 cmp	 BYTE PTR [ecx+14], bl
  001cf	74 63		 je	 SHORT $L222341
$L181696:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 0e	 cmp	 BYTE PTR [ecx+14], bl
  001d7	75 14		 jne	 SHORT $L181698

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 0e	 mov	 BYTE PTR [edx+14], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L181698:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 0e	 mov	 cl, BYTE PTR [esi+14]
  001f0	88 48 0e	 mov	 BYTE PTR [eax+14], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 0e	 mov	 BYTE PTR [esi+14], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 0e	 mov	 BYTE PTR [edx+14], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L181691
$L181692:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L181700

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 0e	 mov	 BYTE PTR [eax+14], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 0e 00	 mov	 BYTE PTR [esi+14], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L181700:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L222340

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 0e	 cmp	 BYTE PTR [edx+14], bl
  0022b	75 20		 jne	 SHORT $L181703
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 0e	 cmp	 BYTE PTR [ecx+14], bl
  00232	75 19		 jne	 SHORT $L181703
$L222341:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0
$L222340:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L181689

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L181691
$L181703:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 0e	 cmp	 BYTE PTR [ecx+14], bl
  00252	75 14		 jne	 SHORT $L181705

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 0e	 mov	 BYTE PTR [edx+14], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L181705:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 0e	 mov	 cl, BYTE PTR [esi+14]
  0026b	88 48 0e	 mov	 BYTE PTR [eax+14], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 0e	 mov	 BYTE PTR [esi+14], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 0e	 mov	 BYTE PTR [edx+14], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Rrotate
$L181691:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 0e	 mov	 BYTE PTR [edi+14], bl
$L181688:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L181706

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L181706:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L222339:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L221857:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T221852[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T222334
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
PUBLIC	?_Buy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE_NI@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Buy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L181805

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L181805:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L181807

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Xlen
$L222374:
$L181807:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L222373:
?_Buy@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE_NI@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L181848

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L181848:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L181850

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Xlen
$L222403:
$L181850:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L222402:
?_Buy@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Buy
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T222778 DD	0ffffffffH
	DD	FLAT:$L222409
$T222773 DD	019930520H
	DD	01H
	DD	FLAT:$T222778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
$T222408 = -80						; size = 28
$T222407 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L181940

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T222408[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T222408[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T222408[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T222408[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T222408[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T222407[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T222407[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T222407[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L222779:
$L181940:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTPlayer@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L181946

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L181951
$L181946:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L181948

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L181951

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L181951
$L181948:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L181951

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L181951:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L181955
  000e5	55		 push	 ebp
$L181954:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L181956

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L181957
$L222777:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L181962
$L181957:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L181959

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
$L181959:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L181962
$L181956:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L222777

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L181963

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Rrotate
$L181963:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Lrotate
$L181962:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L181954
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L181955:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L222776:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L222409:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T222408[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T222773
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T223156 DD	0ffffffffH
	DD	FLAT:$L222787
$T223151 DD	019930520H
	DD	01H
	DD	FLAT:$T223156
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT
$T222786 = -80						; size = 28
$T222785 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182038

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T222786[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T222786[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T222786[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T222786[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T222786[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T222785[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T222785[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T222785[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L223157:
$L182038:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBEPAVCTInven@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182043

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182048
$L182043:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182045

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182048

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182048
$L182045:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182048

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182048:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182052
  000e5	55		 push	 ebp
$L182051:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182053

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182054
$L223155:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182059
$L182054:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182056

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lrotate
$L182056:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182059
$L182053:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L223155

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182060

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Rrotate
$L182060:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lrotate
$L182059:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182051
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182052:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L223154:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L222787:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T222786[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T223151
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T223534 DD	0ffffffffH
	DD	FLAT:$L223165
$T223529 DD	019930520H
	DD	01H
	DD	FLAT:$T223534
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT
$T223164 = -80						; size = 28
$T223163 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182094

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T223164[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T223164[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T223164[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T223164[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T223164[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223163[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223163[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T223163[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L223535:
$L182094:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTSkill@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182099

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182104
$L182099:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182101

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182104

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182104
$L182101:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182104

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182104:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182108
  000e5	55		 push	 ebp
$L182107:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182109

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182110
$L223533:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182115
$L182110:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182112

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lrotate
$L182112:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182115
$L182109:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L223533

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182116

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Rrotate
$L182116:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Lrotate
$L182115:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182107
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182108:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L223532:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L223165:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T223164[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T223529
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T223912 DD	0ffffffffH
	DD	FLAT:$L223543
$T223907 DD	019930520H
	DD	01H
	DD	FLAT:$T223912
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
$T223542 = -80						; size = 28
$T223541 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182170

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T223542[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T223542[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T223542[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T223542[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T223542[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223541[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223541[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T223541[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L223913:
$L182170:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTMonster@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182175

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182180
$L182175:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182177

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182180

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182180
$L182177:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182180

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182180:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182184
  000e5	55		 push	 ebp
$L182183:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182185

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182186
$L223911:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182191
$L182186:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182188

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
$L182188:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182191
$L182185:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L223911

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182192

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Rrotate
$L182192:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Lrotate
$L182191:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182183
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182184:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L223910:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L223543:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T223542[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T223907
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T224290 DD	0ffffffffH
	DD	FLAT:$L223921
$T224285 DD	019930520H
	DD	01H
	DD	FLAT:$T224290
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
$T223920 = -80						; size = 28
$T223919 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182281

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T223920[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T223920[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T223920[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T223920[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T223920[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223919[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T223919[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T223919[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L224291:
$L182281:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagSWITCH@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182286

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182291
$L182286:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182288

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182291

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182291
$L182288:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182291

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182291:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182295
  000e5	55		 push	 ebp
$L182294:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182296

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182297
$L224289:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182302
$L182297:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182299

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
$L182299:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182302
$L182296:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L224289

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182303

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Rrotate
$L182303:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Lrotate
$L182302:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182294
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182295:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L224288:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L223921:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T223920[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T224285
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T224668 DD	0ffffffffH
	DD	FLAT:$L224299
$T224663 DD	019930520H
	DD	01H
	DD	FLAT:$T224668
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
$T224298 = -80						; size = 28
$T224297 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182360

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T224298[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T224298[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T224298[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T224298[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T224298[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T224297[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T224297[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T224297[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L224669:
$L182360:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagGATE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182365

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182370
$L182365:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182367

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182370

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182370
$L182367:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182370

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182370:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182374
  000e5	55		 push	 ebp
$L182373:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182375

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182376
$L224667:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182381
$L182376:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182378

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
$L182378:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182381
$L182375:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L224667

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182382

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Rrotate
$L182382:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Lrotate
$L182381:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182373
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182374:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L224666:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L224299:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T224298[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T224663
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
PUBLIC	?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy, COMDAT
; _this$ = ecx

; 770  : 		{	// allocate array with _Capacity elements

  00000	56		 push	 esi

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00001	33 c0		 xor	 eax, eax
  00003	57		 push	 edi

; 772  : 		if (_Capacity == 0)

  00004	8b 7c 24 0c	 mov	 edi, DWORD PTR __Capacity$[esp+4]
  00008	3b f8		 cmp	 edi, eax
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00012	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00015	75 07		 jne	 SHORT $L182404
  00017	5f		 pop	 edi

; 773  : 			return (false);

  00018	32 c0		 xor	 al, al
  0001a	5e		 pop	 esi

; 783  : 		}

  0001b	c2 04 00	 ret	 4
$L182404:

; 774  : 		else if (max_size() < _Capacity)

  0001e	83 ff ff	 cmp	 edi, -1
  00021	76 07		 jbe	 SHORT $L182406

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@EV?$allocator@E@std@@@std@@IBEXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlen
$L224700:
$L182406:

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002a	57		 push	 edi
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 779  : 			_Mylast = _Myfirst;

  00033	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00036	83 c4 04	 add	 esp, 4

; 780  : 			_Myend = _Myfirst + _Capacity;

  00039	03 c7		 add	 eax, edi
  0003b	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0003e	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  0003f	b0 01		 mov	 al, 1
  00041	5e		 pop	 esi

; 783  : 		}

  00042	c2 04 00	 ret	 4
$L224699:
?_Buy@?$vector@EV?$allocator@E@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Insert
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T225075 DD	0ffffffffH
	DD	FLAT:$L224706
$T225070 DD	019930520H
	DD	01H
	DD	FLAT:$T225075
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT
$T224705 = -80						; size = 28
$T224704 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182458

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T224705[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T224705[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T224705[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T224705[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T224705[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T224704[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T224704[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T224704[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L225076:
$L182458:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAVCTMonSpawn@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182463

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182468
$L182463:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182465

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182468

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182468
$L182465:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182468

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182468:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182472
  000e5	55		 push	 ebp
$L182471:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182473

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182474
$L225074:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182479
$L182474:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182476

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate
$L182476:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182479
$L182473:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L225074

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182480

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Rrotate
$L182480:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Lrotate
$L182479:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182471
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182472:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L225073:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L224706:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T224705[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T225070
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T225453 DD	0ffffffffH
	DD	FLAT:$L225084
$T225448 DD	019930520H
	DD	01H
	DD	FLAT:$T225453
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT
$T225083 = -80						; size = 28
$T225082 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182565

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T225083[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T225083[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T225083[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T225083[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T225083[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225082[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225082[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T225082[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L225454:
$L182565:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182570

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182575
$L182570:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182572

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182575

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182575
$L182572:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182575

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182575:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182579
  000e5	55		 push	 ebp
$L182578:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182580

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182581
$L225452:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182586
$L182581:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182583

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate
$L182583:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182586
$L182580:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L225452

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182587

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Rrotate
$L182587:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Lrotate
$L182586:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182578
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182579:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L225451:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L225084:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T225083[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T225448
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T225831 DD	0ffffffffH
	DD	FLAT:$L225462
$T225826 DD	019930520H
	DD	01H
	DD	FLAT:$T225831
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT
$T225461 = -80						; size = 28
$T225460 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182644

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T225461[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T225461[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T225461[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T225461[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T225461[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225460[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225460[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T225460[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L225832:
$L182644:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAVCTCell@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182649

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182654
$L182649:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182651

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182654

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182654
$L182651:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182654

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182654:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182658
  000e5	55		 push	 ebp
$L182657:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182659

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182660
$L225830:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182665
$L182660:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182662

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate
$L182662:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182665
$L182659:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L225830

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182666

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Rrotate
$L182666:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Lrotate
$L182665:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182657
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182658:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L225829:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L225462:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T225461[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T225826
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T226209 DD	0ffffffffH
	DD	FLAT:$L225840
$T226204 DD	019930520H
	DD	01H
	DD	FLAT:$T226209
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
$T225839 = -80						; size = 28
$T225838 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 3f		 cmp	 DWORD PTR [edi+8], 1073741822 ; 3ffffffeH
  00023	72 4c		 jb	 SHORT $L182719

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T225839[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T225839[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T225839[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T225839[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T225839[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225838[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T225838[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T225838[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L226210:
$L182719:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182724

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182729
$L182724:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182726

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182729

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182729
$L182726:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182729

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182729:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182733
  000e5	55		 push	 ebp
$L182732:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182734

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0
  000f9	75 18		 jne	 SHORT $L182735
$L226208:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 10	 mov	 BYTE PTR [ecx+16], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 10	 mov	 BYTE PTR [edx+16], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 10 00	 mov	 BYTE PTR [ecx+16], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182740
$L182735:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182737

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
$L182737:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 10 00	 mov	 BYTE PTR [edx+16], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182740
$L182734:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L226208

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182741

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
$L182741:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 10 00	 mov	 BYTE PTR [edx+16], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
$L182740:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 10	 mov	 cl, BYTE PTR [edx+16]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182732
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182733:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 10	 mov	 BYTE PTR [edx+16], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L226207:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L225840:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T225839[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T226204
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T226219 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L226551
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L226551

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L226551:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L182795
$L182794:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L226545
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L226553
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L226545
  0006e	8b ff		 npad	 2
$L226533:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L226533
  0007b	eb 1d		 jmp	 SHORT $L226545
$L226553:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L226548
$L226547:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L226548
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L226547
$L226548:
  00098	8b f0		 mov	 esi, eax
$L226545:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T226219[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L182794
$L182795:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T226931 DD	0ffffffffH
	DD	FLAT:$L226562
$T226926 DD	019930520H
	DD	01H
	DD	FLAT:$T226931
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT
$T226561 = -80						; size = 28
$T226560 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182817

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T226561[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T226561[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T226561[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T226561[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T226561[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T226560[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T226560[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T226560[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L226932:
$L182817:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODBALL@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182822

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182827
$L182822:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182824

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182827

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182827
$L182824:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182827

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182827:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182831
  000e5	55		 push	 ebp
$L182830:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182832

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182833
$L226930:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182838
$L182833:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182835

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate
$L182835:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182838
$L182832:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L226930

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182839

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Rrotate
$L182839:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Lrotate
$L182838:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182830
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182831:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L226929:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L226562:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T226561[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T226926
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Insert
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T226940 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T226940[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T227374 DD	0ffffffffH
	DD	FLAT:$L227005
$T227369 DD	019930520H
	DD	01H
	DD	FLAT:$T227374
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT
$T227004 = -80						; size = 28
$T227003 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182896

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T227004[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T227004[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T227004[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T227004[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T227004[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T227003[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T227003[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T227003[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L227375:
$L182896:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGPAUtagGODTOWER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182901

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L182906
$L182901:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L182903

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L182906

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L182906
$L182903:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L182906

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L182906:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L182910
  000e5	55		 push	 ebp
$L182909:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L182911

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L182912
$L227373:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L182917
$L182912:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L182914

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate
$L182914:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L182917
$L182911:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L227373

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L182918

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Rrotate
$L182918:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Lrotate
$L182917:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L182909
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L182910:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L227372:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L227005:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T227004[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T227369
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Insert
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T227384 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L227716
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L227716

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L227716:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L182972
$L182971:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L227709
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L227718
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L227709
  0006e	8b ff		 npad	 2
$L227697:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L227697
  0007b	eb 1d		 jmp	 SHORT $L227709
$L227718:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L227712
$L227711:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L227712
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L227711
$L227712:
  00098	8b f0		 mov	 esi, eax
$L227709:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T227384[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L182971
$L182972:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T228096 DD	0ffffffffH
	DD	FLAT:$L227727
$T228091 DD	019930520H
	DD	01H
	DD	FLAT:$T228096
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT
$T227726 = -80						; size = 28
$T227725 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L182994

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T227726[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T227726[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T227726[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T227726[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T227726[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T227725[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T227725[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T227725[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L228097:
$L182994:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L182999

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L183004
$L182999:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L183001

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L183004

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L183004
$L183001:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L183004

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L183004:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L183008
  000e5	55		 push	 ebp
$L183007:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L183009

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L183010
$L228095:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L183015
$L183010:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L183012

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate
$L183012:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L183015
$L183009:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L228095

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L183016

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Rrotate
$L183016:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Lrotate
$L183015:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L183007
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L183008:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L228094:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L227727:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T227726[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228091
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Insert
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T228105 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T228105[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T228171 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L228503
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L228503

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L228503:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L183047
$L183046:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L228471
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L228505
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L228471
  0006e	8b ff		 npad	 2
$L228485:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L228485
  0007b	eb 1d		 jmp	 SHORT $L228471
$L228505:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L228474
$L228473:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L228474
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L228473
$L228474:
  00098	8b f0		 mov	 esi, eax
$L228471:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T228171[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L183046
$L183047:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T228628 DD	0ffffffffH
	DD	FLAT:$L228514
$T228625 DD	019930520H
	DD	01H
	DD	FLAT:$T228628
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T228513 = -80						; size = 28
$T228512 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran, COMDAT
; _this$ = ecx

; 888  : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 889  : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00018	6a 1b		 push	 27			; 0000001bH
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T228513[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T228513[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T228513[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T228513[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T228513[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T228512[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T228512[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T228512[esp+88], OFFSET FLAT:??_7out_of_range@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L228629:
$L228627:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L228514:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T228513[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T228625
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran
PUBLIC	?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Newvec$183517 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L228645
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L228646
$L228645:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L228646:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L183537

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L228668
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L228669
$L228668:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L228669:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L183513

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IBEXXZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Xlen
$L228800:
$L183513:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L228675
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L228676
$L228675:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L228676:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L183515

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L228635
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L228636
$L228635:
  0007f	03 c1		 add	 eax, ecx
$L228636:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L228698
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L228699
$L228698:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L228699:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L183516

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L228705
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L228706
$L228705:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L228706:
  000a7	03 c7		 add	 eax, edi
$L183516:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$183517[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L228788
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L228789
$L228788:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L228789:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L228791

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L228791:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$183517[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L183515:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L183528
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ucopy<tagSWITCH * *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU3@IABQAU3@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z ; std::fill<tagSWITCH * *,tagSWITCH *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L183528:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagSWITCH@@@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEPAPAUtagSWITCH@@PAPAU2@00@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Ucopy<tagSWITCH * *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAPAUtagSWITCH@@PAPAU1@@std@@YAPAPAUtagSWITCH@@PAPAU1@00@Z ; std::copy_backward<tagSWITCH * *,tagSWITCH * *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAPAUtagSWITCH@@PAU1@@std@@YAXPAPAUtagSWITCH@@0ABQAU1@@Z ; std::fill<tagSWITCH * *,tagSWITCH *>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L183537:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L228799:
?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z
_TEXT	SEGMENT
__Newvec$183584 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L228814
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L228815
$L228814:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L228815:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L183604

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L228837
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L228838
$L228837:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L228838:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L183580

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IBEXXZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Xlen
$L228969:
$L183580:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L228844
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L228845
$L228844:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L228845:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L183582

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L228804
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L228805
$L228804:
  0007f	03 c1		 add	 eax, ecx
$L228805:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L228867
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L228868
$L228867:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L228868:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L183583

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L228874
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L228875
$L228874:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L228875:
  000a7	03 c7		 add	 eax, edi
$L183583:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$183584[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L228957
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L228958
$L228957:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L228958:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L228960

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L228960:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$183584[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L183582:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L183595
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ucopy<tagGATE * *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU3@IABQAU3@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z ; std::fill<tagGATE * *,tagGATE *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L183595:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagGATE@@@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEPAPAUtagGATE@@PAPAU2@00@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Ucopy<tagGATE * *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAPAUtagGATE@@PAPAU1@@std@@YAPAPAUtagGATE@@PAPAU1@00@Z ; std::copy_backward<tagGATE * *,tagGATE * *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAPAUtagGATE@@PAU1@@std@@YAXPAPAUtagGATE@@0ABQAU1@@Z ; std::fill<tagGATE * *,tagGATE *>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L183604:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L228968:
?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z
_TEXT	SEGMENT
__Newvec$183644 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L228983
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L228985
$L228983:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L228985:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L183664

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L229007
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L229008
$L229007:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L229008:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L183640

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
$L229138:
$L183640:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L229014
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L229015
$L229014:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L229015:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L183642

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L228973
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L228974
$L228973:
  0007f	03 c1		 add	 eax, ecx
$L228974:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L229037
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L229038
$L229037:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L229038:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L183643

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L229044
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L229045
$L229044:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L229045:
  000a7	03 c7		 add	 eax, edi
$L183643:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$183644[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L229126
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L229127
$L229126:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L229127:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L229129

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L229129:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$183644[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L183642:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L183655
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ucopy<CTPlayer * *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV3@IABQAV3@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z ; std::fill<CTPlayer * *,CTPlayer *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L183655:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAVCTPlayer@@@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEPAPAVCTPlayer@@PAPAV2@00@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Ucopy<CTPlayer * *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAPAVCTPlayer@@PAPAV1@@std@@YAPAPAVCTPlayer@@PAPAV1@00@Z ; std::copy_backward<CTPlayer * *,CTPlayer * *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAPAVCTPlayer@@PAV1@@std@@YAXPAPAVCTPlayer@@0ABQAV1@@Z ; std::fill<CTPlayer * *,CTPlayer *>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L183664:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L229137:
?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z
_TEXT	SEGMENT
__Newvec$183739 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L229153
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L229154
$L229153:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L229154:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L183759

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L229175
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L229176
$L229175:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L229176:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L183735

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IBEXXZ ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Xlen
$L229307:
$L183735:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L229182
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L229183
$L229182:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L229183:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L183737

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L229142
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L229143
$L229142:
  0007f	03 c1		 add	 eax, ecx
$L229143:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L229205
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L229206
$L229205:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L229206:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L183738

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L229212
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L229213
$L229212:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L229213:
  000a7	03 c7		 add	 eax, edi
$L183738:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$183739[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L229295
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L229296
$L229295:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L229296:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L229298

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L229298:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$183739[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L183737:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L183750
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ucopy<CTMonster * *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV3@IABQAV3@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z ; std::fill<CTMonster * *,CTMonster *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L183750:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAVCTMonster@@@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEPAPAVCTMonster@@PAPAV2@00@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Ucopy<CTMonster * *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAPAVCTMonster@@PAPAV1@@std@@YAPAPAVCTMonster@@PAPAV1@00@Z ; std::copy_backward<CTMonster * *,CTMonster * *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAPAVCTMonster@@PAV1@@std@@YAXPAPAVCTMonster@@0ABQAV1@@Z ; std::fill<CTMonster * *,CTMonster *>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L183759:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L229306:
?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T229314 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L229646
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L229646

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L229646:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L183894
$L183893:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L229640
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L229648
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L229640
  0006e	8b ff		 npad	 2
$L229628:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L229628
  0007b	eb 1d		 jmp	 SHORT $L229640
$L229648:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L229643
$L229642:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L229643
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L229642
$L229643:
  00098	8b f0		 mov	 esi, eax
$L229640:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T229314[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L183893
$L183894:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T229658 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L229990
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L229990

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L229990:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L183946
$L183945:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L229985
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L229992
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L229985
  0006e	8b ff		 npad	 2
$L229973:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L229973
  0007b	eb 1d		 jmp	 SHORT $L229985
$L229992:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L229988
$L229987:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L229988
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L229987
$L229988:
  00098	8b f0		 mov	 esi, eax
$L229985:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T229658[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L183945
$L183946:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T230002 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L230334
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L230334

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L230334:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184022
$L184021:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L230304
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L230336
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L230304
  0006e	8b ff		 npad	 2
$L230325:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L230325
  0007b	eb 1d		 jmp	 SHORT $L230304
$L230336:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L230307
$L230306:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L230307
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L230306
$L230307:
  00098	8b f0		 mov	 esi, eax
$L230304:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T230002[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184021
$L184022:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T230346 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L230678
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L230678

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L230678:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184110
$L184109:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L230672
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L230680
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L230672
  0006e	8b ff		 npad	 2
$L230660:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L230660
  0007b	eb 1d		 jmp	 SHORT $L230672
$L230680:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L230675
$L230674:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L230675
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L230674
$L230675:
  00098	8b f0		 mov	 esi, eax
$L230672:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T230346[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184109
$L184110:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T230690 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L231022
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L231022

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L231022:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184162
$L184161:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L231011
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L231024
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L231011
  0006e	8b ff		 npad	 2
$L231007:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L231007
  0007b	eb 1d		 jmp	 SHORT $L231011
$L231024:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L231016
$L231015:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L231016
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L231015
$L231016:
  00098	8b f0		 mov	 esi, eax
$L231011:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T230690[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184161
$L184162:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T231034 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L231366
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L231366

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L231366:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184229
$L184228:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L231337
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L231368
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L231337
  0006e	8b ff		 npad	 2
$L231358:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L231358
  0007b	eb 1d		 jmp	 SHORT $L231337
$L231368:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L231340
$L231339:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L231340
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L231339
$L231340:
  00098	8b f0		 mov	 esi, eax
$L231337:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T231034[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184228
$L184229:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T231378 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L231710
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L231710

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L231710:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184305
$L184304:

; 759  : 				erase(_First++);

  00050	8a 46 11	 mov	 al, BYTE PTR [esi+17]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L231704
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L231712
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L231704
  0006e	8b ff		 npad	 2
$L231684:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L231684
  0007b	eb 1d		 jmp	 SHORT $L231704
$L231712:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L231707
$L231706:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L231707
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L231706
$L231707:
  00098	8b f0		 mov	 esi, eax
$L231704:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T231378[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184304
$L184305:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T231722 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L232054
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L232054

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L232054:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184489
$L184488:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L232049
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L232056
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L232049
  0006e	8b ff		 npad	 2
$L232030:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L232030
  0007b	eb 1d		 jmp	 SHORT $L232049
$L232056:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L232052
$L232051:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L232052
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L232051
$L232052:
  00098	8b f0		 mov	 esi, eax
$L232049:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T231722[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184488
$L184489:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T232066 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L232398
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L232398

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L232398:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L184830
$L184829:

; 759  : 				erase(_First++);

  00050	8a 46 0f	 mov	 al, BYTE PTR [esi+15]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L232369
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L232400
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L232369
  0006e	8b ff		 npad	 2
$L232383:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L232383
  0007b	eb 1d		 jmp	 SHORT $L232369
$L232400:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L232372
$L232371:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L232372
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L232371
$L232372:
  00098	8b f0		 mov	 esi, eax
$L232369:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T232066[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L184829
$L184830:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@GV?$allocator@G@std@@@std@@IAE_NI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Buy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@GV?$allocator@G@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@GV?$allocator@G@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L149122

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L149122:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  00021	76 07		 jbe	 SHORT $L149124

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
$L232432:
$L149124:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 00	 lea	 edi, DWORD PTR [eax+eax]
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00034	03 f8		 add	 edi, eax
  00036	83 c4 04	 add	 esp, 4
  00039	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0003c	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0003f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00042	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00043	b0 01		 mov	 al, 1
  00045	5e		 pop	 esi

; 783  : 		}

  00046	c2 04 00	 ret	 4
$L232431:
?_Buy@?$vector@GV?$allocator@G@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L149145

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L149145:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L149147

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IBEXXZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Xlen
$L232461:
$L149147:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L232460:
?_Buy@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Buy
_TEXT	ENDS
PUBLIC	??0?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::vector<tagSWITCH *,std::allocator<tagSWITCH *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::vector<tagSWITCH *,std::allocator<tagSWITCH *> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::vector<tagSWITCH *,std::allocator<tagSWITCH *> >
_TEXT	ENDS
PUBLIC	??0?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ ; std::vector<tagGATE *,std::allocator<tagGATE *> >::vector<tagGATE *,std::allocator<tagGATE *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::vector<tagGATE *,std::allocator<tagGATE *> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::vector<tagGATE *,std::allocator<tagGATE *> >
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T232591 = 12						; size = 4
$T232589 = 12						; size = 4
__Where$180055 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180045
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L180044:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L232583
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L232584
$L232583:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L232584:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180044
$L180045:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180055[esp+12], edx
  00045	74 33		 je	 SHORT $L232683

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T232589[esp+12]
  00050	75 1f		 jne	 SHORT $L180060
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180060:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180055[esp+12]
$L232683:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L180065

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T232591[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180065:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T232728 = 12						; size = 4
$T232726 = 12						; size = 4
__Where$180235 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180225
  0001d	8a 55 00	 mov	 dl, BYTE PTR [ebp]
$L180224:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3a 50 0c	 cmp	 dl, BYTE PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L232720
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L232721
$L232720:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L232721:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180224
$L180225:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180235[esp+12], edx
  00045	74 33		 je	 SHORT $L232820

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T232726[esp+12]
  00050	75 1f		 jne	 SHORT $L180240
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180240:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180235[esp+12]
$L232820:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8a 42 0c	 mov	 al, BYTE PTR [edx+12]
  0007d	3a 45 00	 cmp	 al, BYTE PTR [ebp]
  00080	73 26		 jae	 SHORT $L180245

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T232728[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180245:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T232865 = 12						; size = 4
$T232863 = 12						; size = 4
__Where$180270 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L180260

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L180259:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L232857
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L232858
$L232857:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L232858:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003d	74 e2		 je	 SHORT $L180259
$L180260:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$180270[esp+12], edx
  00047	74 33		 je	 SHORT $L232956

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T232863[esp+12]
  00052	75 1f		 jne	 SHORT $L180275
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L180275:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180270[esp+12]
$L232956:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L180280

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T232865[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L180280:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233002 = 12						; size = 4
$T233000 = 12						; size = 4
__Where$180335 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180325
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L180324:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L232994
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L232995
$L232994:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L232995:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180324
$L180325:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180335[esp+12], edx
  00045	74 33		 je	 SHORT $L233093

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233000[esp+12]
  00050	75 1f		 jne	 SHORT $L180340
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180340:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180335[esp+12]
$L233093:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L180345

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T233002[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180345:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233139 = 12						; size = 4
$T233137 = 12						; size = 4
__Where$180444 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180434
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L180433:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L233131
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L233132
$L233131:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233132:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180433
$L180434:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180444[esp+12], edx
  00045	74 33		 je	 SHORT $L233230

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233137[esp+12]
  00050	75 1f		 jne	 SHORT $L180449
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180449:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180444[esp+12]
$L233230:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L180454

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T233139[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180454:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233276 = 12						; size = 4
$T233274 = 12						; size = 4
__Where$180503 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180493
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L180492:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L233268
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L233269
$L233268:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233269:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180492
$L180493:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180503[esp+12], edx
  00045	74 33		 je	 SHORT $L233368

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233274[esp+12]
  00050	75 1f		 jne	 SHORT $L180508
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180508:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180503[esp+12]
$L233368:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L180513

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T233276[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180513:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
_TEXT	ENDS
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233473 = 12						; size = 4
$T233471 = 12						; size = 4
__Where$180694 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L180684

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L180683:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L233465
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L233466
$L233465:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233466:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003d	74 e2		 je	 SHORT $L180683
$L180684:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$180694[esp+12], edx
  00047	74 33		 je	 SHORT $L233565

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233471[esp+12]
  00052	75 1f		 jne	 SHORT $L180699
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L180699:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180694[esp+12]
$L233565:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L180704

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T233473[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L180704:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233610 = 12						; size = 4
$T233608 = 12						; size = 4
__Where$180803 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L180793

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L180792:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L233602
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L233603
$L233602:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233603:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003d	74 e2		 je	 SHORT $L180792
$L180793:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$180803[esp+12], edx
  00047	74 33		 je	 SHORT $L233702

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233608[esp+12]
  00052	75 1f		 jne	 SHORT $L180808
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L180808:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180803[esp+12]
$L233702:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L180813

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T233610[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L180813:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233747 = 12						; size = 4
$T233745 = 12						; size = 4
__Where$180854 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L180844
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L180843:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L233739
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L233740
$L233739:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233740:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L180843
$L180844:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$180854[esp+12], edx
  00045	74 33		 je	 SHORT $L233839

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233745[esp+12]
  00050	75 1f		 jne	 SHORT $L180859
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L180859:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180854[esp+12]
$L233839:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L180864

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T233747[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L180864:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T233884 = 12						; size = 4
$T233882 = 12						; size = 4
__Where$180913 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L180903

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L180902:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L233876
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L233877
$L233876:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L233877:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0003d	74 e2		 je	 SHORT $L180902
$L180903:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$180913[esp+12], edx
  00047	74 33		 je	 SHORT $L233975

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T233882[esp+12]
  00052	75 1f		 jne	 SHORT $L180918
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L180918:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180913[esp+12]
$L233975:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L180923

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T233884[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L180923:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T234079 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T234079[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T234116 = 12						; size = 4
$T234114 = 12						; size = 4
__Where$180964 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L180954

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L180953:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L234108
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L234109
$L234108:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L234109:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003d	74 e2		 je	 SHORT $L180953
$L180954:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$180964[esp+12], edx
  00047	74 33		 je	 SHORT $L234207

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T234114[esp+12]
  00052	75 1f		 jne	 SHORT $L180969
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L180969:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$180964[esp+12]
$L234207:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L180974

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T234116[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L180974:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z
_TEXT	SEGMENT
$T234245 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T234245[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T234257 = 12						; size = 4
$T234255 = 12						; size = 4
__Where$181062 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L181052

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L181051:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L234249
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L234250
$L234249:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L234250:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003d	74 e2		 je	 SHORT $L181051
$L181052:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$181062[esp+12], edx
  00047	74 33		 je	 SHORT $L234349

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T234255[esp+12]
  00052	75 1f		 jne	 SHORT $L181067
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L181067:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$181062[esp+12]
$L234349:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L181072

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T234257[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L181072:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::insert
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T234453 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T234453[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T234489 = 12						; size = 4
$T234487 = 12						; size = 4
__Where$181125 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L181115
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L181114:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L234481
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L234482
$L234481:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L234482:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L181114
$L181115:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$181125[esp+12], edx
  00045	74 33		 je	 SHORT $L234581

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T234487[esp+12]
  00050	75 1f		 jne	 SHORT $L181130
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L181130:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$181125[esp+12]
$L234581:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L181135

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T234489[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L181135:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T234618 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T234618[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z
_TEXT	SEGMENT
$T234622 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T234622[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::at
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z PROC NEAR ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::at, COMDAT
; _this$ = ecx

; 543  : 		if (size() <= _Pos)

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	56		 push	 esi
  00006	74 10		 je	 SHORT $L234668
  00008	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000b	8b 74 24 08	 mov	 esi, DWORD PTR __Pos$[esp]
  0000f	2b c2		 sub	 eax, edx
  00011	c1 f8 02	 sar	 eax, 2
  00014	3b c6		 cmp	 eax, esi
  00016	77 05		 ja	 SHORT $L181449
$L234668:

; 544  : 			_Xran();

  00018	e8 00 00 00 00	 call	 ?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran
$L234670:
$L181449:

; 545  : 		return (*(begin() + _Pos));

  0001d	8d 04 b2	 lea	 eax, DWORD PTR [edx+esi*4]
  00020	5e		 pop	 esi

; 546  : 		}

  00021	c2 04 00	 ret	 4
$L234669:
?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z ENDP ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::at
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagSWITCH@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagSWITCH@@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L234736
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L234675
$L234736:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L234676
$L234675:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L234676:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagSWITCH@@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagGATE@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagGATE@@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L234802
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L234741
$L234802:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L234742
$L234741:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L234742:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagGATE@@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTPlayer@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L234868
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L234807
$L234868:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L234808
$L234807:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L234808:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTMonster@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTMonster@@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L234934
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L234873
$L234934:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L234874
$L234873:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L234874:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCTMonster@@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T234940 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T234940[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235005 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235005[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235070 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235070[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235135 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235135[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235200 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235200[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235265 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235265[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235330 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235330[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235395 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235395[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T235460 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235460[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::vector<CTPlayer *,std::allocator<CTPlayer *> >
_TEXT	ENDS
PUBLIC	??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::~map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T235739 = -4						; size = 4
??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::~map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235739[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::~map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::~map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T235867 = -4						; size = 4
??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::~map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T235867[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::~map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >
_TEXT	ENDS
PUBLIC	??0tagSWITCH@@QAE@XZ				; tagSWITCH::tagSWITCH
; Function compile flags: /Ogty
;	COMDAT ??0tagSWITCH@@QAE@XZ
_TEXT	SEGMENT
??0tagSWITCH@@QAE@XZ PROC NEAR				; tagSWITCH::tagSWITCH, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 24	 mov	 DWORD PTR [eax+36], ecx
  00007	89 48 28	 mov	 DWORD PTR [eax+40], ecx
  0000a	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  0000d	c3		 ret	 0
??0tagSWITCH@@QAE@XZ ENDP				; tagSWITCH::tagSWITCH
_TEXT	ENDS
PUBLIC	??0tagGATE@@QAE@XZ				; tagGATE::tagGATE
; Function compile flags: /Ogty
;	COMDAT ??0tagGATE@@QAE@XZ
_TEXT	SEGMENT
??0tagGATE@@QAE@XZ PROC NEAR				; tagGATE::tagGATE, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  00007	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  0000a	89 48 20	 mov	 DWORD PTR [eax+32], ecx
  0000d	c3		 ret	 0
??0tagGATE@@QAE@XZ ENDP					; tagGATE::tagGATE
_TEXT	ENDS
PUBLIC	??0tagGODTOWER@@QAE@XZ				; tagGODTOWER::tagGODTOWER
; Function compile flags: /Ogty
;	COMDAT ??0tagGODTOWER@@QAE@XZ
_TEXT	SEGMENT
??0tagGODTOWER@@QAE@XZ PROC NEAR			; tagGODTOWER::tagGODTOWER, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  00007	89 48 20	 mov	 DWORD PTR [eax+32], ecx
  0000a	89 48 24	 mov	 DWORD PTR [eax+36], ecx
  0000d	c3		 ret	 0
??0tagGODTOWER@@QAE@XZ ENDP				; tagGODTOWER::tagGODTOWER
_TEXT	ENDS
PUBLIC	??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@		; `string'
PUBLIC	?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z	; CTMap::InitCell
EXTRN	?GetQuery@CSqlDatabase@@QAEPAVCSqlQuery@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:NEAR ; CSqlDatabase::GetQuery
EXTRN	?Call@CSqlBase@@QAEHXZ:NEAR			; CSqlBase::Call
EXTRN	??0CTCell@@QAE@XZ:NEAR				; CTCell::CTCell
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T236561 DD	0ffffffffH
	DD	FLAT:$L236185
$T236531 DD	019930520H
	DD	01H
	DD	FLAT:$T236561
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
CONST	SEGMENT
??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@ DB 'CSPGetServerID', 00H ; `string'
CONST	ENDS
;	COMDAT ?nCELL@?1??InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z@4PAY01HA
_DATA	SEGMENT
?nCELL@?1??InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z@4PAY01HA DD 0ffffffffH ; `CTMap::InitCell'::`2'::nCELL
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
_DATA	ENDS
;	COMDAT ?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z
_TEXT	SEGMENT
tv794 = -340						; size = 4
_i$176491 = -340					; size = 4
tv647 = -336						; size = 4
$T236169 = -336						; size = 4
$T236165 = -336						; size = 4
$T236183 = -332						; size = 8
$T236168 = -332						; size = 4
_this$ = -332						; size = 4
tv555 = -324						; size = 4
tv1128 = -320						; size = 4
tv692 = -316						; size = 4
tv1126 = -312						; size = 4
tv658 = -308						; size = 4
_vCheck$176538 = -304					; size = 8
$T236182 = -296						; size = 8
_vEnable$ = -288					; size = 30
_vServerID$ = -256					; size = 240
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_pDB$ = 8						; size = 4
_bServerID$ = 12					; size = 1
_wUnitID$ = 16						; size = 2
?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z PROC NEAR	; CTMap::InitCell, COMDAT
; _this$ = ecx

; 279  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	53		 push	 ebx
  00021	89 84 24 48 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+344], eax
  00028	55		 push	 ebp
  00029	56		 push	 esi

; 280  : 	static int nCELL[UD_COUNT][2] = {
; 281  : 		{ -1, -1},
; 282  : 		{  0, -1},
; 283  : 		{  1, -1},
; 284  : 		{ -1,  0},
; 285  : 		{  1,  0},
; 286  : 		{ -1,  1},
; 287  : 		{  0,  1},
; 288  : 		{  1,  1}};
; 289  : 
; 290  : 	BYTE vServerID[UD_COUNT][MAX_CHANNEL];
; 291  : 	BYTE vEnable[MAX_CHANNEL];
; 292  : 
; 293  : 	BYTE bUnitX = LOBYTE(wUnitID);
; 294  : 	BYTE bUnitY = HIBYTE(wUnitID);
; 295  : 
; 296  : 	for( int i=0; i<MAX_CHANNEL; i++)

  0002a	33 db		 xor	 ebx, ebx
  0002c	33 f6		 xor	 esi, esi

; 297  : 	{
; 298  : 		for( int j=0; j<UD_COUNT; j++)
; 299  : 			vServerID[j][i] = bServerID;
; 300  : 
; 301  : 		vEnable[i] = FALSE;

  0002e	33 c0		 xor	 eax, eax
  00030	89 44 24 40	 mov	 DWORD PTR _vEnable$[esp+352], eax
  00034	89 44 24 44	 mov	 DWORD PTR _vEnable$[esp+356], eax
  00038	89 44 24 48	 mov	 DWORD PTR _vEnable$[esp+360], eax
  0003c	89 44 24 4c	 mov	 DWORD PTR _vEnable$[esp+364], eax
  00040	89 44 24 50	 mov	 DWORD PTR _vEnable$[esp+368], eax
  00044	89 44 24 54	 mov	 DWORD PTR _vEnable$[esp+372], eax
  00048	89 44 24 58	 mov	 DWORD PTR _vEnable$[esp+376], eax
  0004c	57		 push	 edi
  0004d	89 4c 24 18	 mov	 DWORD PTR _this$[esp+356], ecx
  00051	66 89 44 24 60	 mov	 WORD PTR _vEnable$[esp+384], ax
  00056	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L176493:
  00060	8d 44 34 64	 lea	 eax, DWORD PTR _vServerID$[esp+esi+356]
  00064	b9 08 00 00 00	 mov	 ecx, 8
  00069	8d a4 24 00 00
	00 00		 npad	 7
$L176497:
  00070	8a 94 24 6c 01
	00 00		 mov	 dl, BYTE PTR _bServerID$[esp+352]
  00077	88 10		 mov	 BYTE PTR [eax], dl
  00079	83 c0 1e	 add	 eax, 30			; 0000001eH
  0007c	49		 dec	 ecx
  0007d	75 f1		 jne	 SHORT $L176497
  0007f	46		 inc	 esi
  00080	83 fe 1e	 cmp	 esi, 30			; 0000001eH
  00083	7c db		 jl	 SHORT $L176493

; 302  : 	}
; 303  : 
; 304  : 	DEFINE_QUERY( pDB, CSPGetServerID)

  00085	8b b4 24 68 01
	00 00		 mov	 esi, DWORD PTR _pDB$[esp+352]
  0008c	3b f3		 cmp	 esi, ebx
  0008e	0f 84 75 01 00
	00		 je	 $L236554
  00094	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00097	8b cc		 mov	 ecx, esp
  00099	89 64 24 30	 mov	 DWORD PTR $T236165[esp+384], esp
  0009d	6a 0e		 push	 14			; 0000000eH
  0009f	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000a6	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000a9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
  000ae	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0
  000b2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000b7	8b ce		 mov	 ecx, esi
  000b9	e8 00 00 00 00	 call	 ?GetQuery@CSqlDatabase@@QAEPAVCSqlQuery@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSqlDatabase::GetQuery
  000be	8b f0		 mov	 esi, eax
  000c0	3b f3		 cmp	 esi, ebx
  000c2	0f 84 41 01 00
	00		 je	 $L236554

; 321  : 
; 322  : 	for( i=0; i<INT(m_vTCHANNEL.size()); i++)

  000c8	8b 94 24 70 01
	00 00		 mov	 edx, DWORD PTR _wUnitID$[esp+352]
  000cf	0f b6 c2	 movzx	 eax, dl
  000d2	89 44 24 10	 mov	 DWORD PTR tv794[esp+356], eax
  000d6	bd 00 00 00 00	 mov	 ebp, OFFSET FLAT:?nCELL@?1??InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z@4PAY01HA
  000db	eb 03 8d 49 00	 npad	 5
$L236552:
  000e0	8b 4d 00	 mov	 ecx, DWORD PTR [ebp]
  000e3	03 4c 24 10	 add	 ecx, DWORD PTR tv794[esp+356]
  000e7	78 19		 js	 SHORT $L236166
  000e9	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  000ec	0f b6 c6	 movzx	 eax, dh
  000ef	03 c1		 add	 eax, ecx
  000f1	78 0f		 js	 SHORT $L236166
  000f3	02 ce		 add	 cl, dh
  000f5	33 c0		 xor	 eax, eax
  000f7	8a e1		 mov	 ah, cl
  000f9	8a 4d 00	 mov	 cl, BYTE PTR [ebp]
  000fc	02 ca		 add	 cl, dl
  000fe	8a c1		 mov	 al, cl
  00100	eb 02		 jmp	 SHORT $L236167
$L236166:

; 306  : 	{
; 307  : 		query->m_wUnitID = INT(bUnitX) + nCELL[i][0] < 0 || INT(bUnitY) + nCELL[i][1] < 0 ? wUnitID : MAKEWORD( BYTE(INT(bUnitX) + nCELL[i][0]), BYTE(INT(bUnitY) + nCELL[i][1]));

  00102	8b c2		 mov	 eax, edx
$L236167:
  00104	66 89 86 32 0c
	00 00		 mov	 WORD PTR [esi+3122], ax

; 308  : 		query->m_wMapID = m_wMapID;

  0010b	8b 44 24 18	 mov	 eax, DWORD PTR _this$[esp+356]
  0010f	66 8b 88 8a 00
	00 00		 mov	 cx, WORD PTR [eax+138]
  00116	66 89 8e 34 0c
	00 00		 mov	 WORD PTR [esi+3124], cx

; 309  : 
; 310  : 		for( int j=0; j<INT(m_vTCHANNEL.size()); j++)

  0011d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00123	33 ff		 xor	 edi, edi
$L176516:
  00125	85 c9		 test	 ecx, ecx
  00127	75 04		 jne	 SHORT $L236297
  00129	33 c0		 xor	 eax, eax
  0012b	eb 07		 jmp	 SHORT $L236298
$L236297:
  0012d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00132	2b c1		 sub	 eax, ecx
$L236298:
  00134	3b f8		 cmp	 edi, eax
  00136	7d 3e		 jge	 SHORT $L176507

; 311  : 		{
; 312  : 			query->m_bChannel = m_vTCHANNEL[j];

  00138	8a 14 39	 mov	 dl, BYTE PTR [ecx+edi]

; 313  : 
; 314  : 			if( query->Call() && !query->m_nRET )

  0013b	8b ce		 mov	 ecx, esi
  0013d	88 96 31 0c 00
	00		 mov	 BYTE PTR [esi+3121], dl
  00143	e8 00 00 00 00	 call	 ?Call@CSqlBase@@QAEHXZ	; CSqlBase::Call
  00148	85 c0		 test	 eax, eax
  0014a	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00150	74 1a		 je	 SHORT $L176517
  00152	8b 86 2c 0c 00
	00		 mov	 eax, DWORD PTR [esi+3116]
  00158	85 c0		 test	 eax, eax
  0015a	75 10		 jne	 SHORT $L176517

; 315  : 				vServerID[i][m_vTCHANNEL[j]] = query->m_bServerID;

  0015c	0f b6 04 39	 movzx	 eax, BYTE PTR [ecx+edi]
  00160	8a 96 30 0c 00
	00		 mov	 dl, BYTE PTR [esi+3120]
  00166	03 c3		 add	 eax, ebx
  00168	88 54 04 64	 mov	 BYTE PTR _vServerID$[esp+eax+356], dl
$L176517:
  0016c	8b 94 24 70 01
	00 00		 mov	 edx, DWORD PTR _wUnitID$[esp+352]
  00173	47		 inc	 edi
  00174	eb af		 jmp	 SHORT $L176516
$L176507:

; 305  : 	for( i=0; i<UD_COUNT; i++)

  00176	83 c5 08	 add	 ebp, 8
  00179	83 c3 1e	 add	 ebx, 30			; 0000001eH
  0017c	81 fd 40 00 00
	00		 cmp	 ebp, OFFSET FLAT:?nCELL@?1??InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z@4PAY01HA+64
  00182	0f 8c 58 ff ff
	ff		 jl	 $L236552

; 316  : 		}
; 317  : 	}
; 318  : 
; 319  : 	query->m_wUnitID = wUnitID;
; 320  : 	query->m_wMapID = m_wMapID;

  00188	8b 44 24 18	 mov	 eax, DWORD PTR _this$[esp+356]
  0018c	66 89 96 32 0c
	00 00		 mov	 WORD PTR [esi+3122], dx
  00193	66 8b 88 8a 00
	00 00		 mov	 cx, WORD PTR [eax+138]
  0019a	66 89 8e 34 0c
	00 00		 mov	 WORD PTR [esi+3124], cx

; 321  : 
; 322  : 	for( i=0; i<INT(m_vTCHANNEL.size()); i++)

  001a1	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001a7	33 ff		 xor	 edi, edi
  001a9	8d a4 24 00 00
	00 00		 npad	 7
$L176520:
  001b0	85 c9		 test	 ecx, ecx
  001b2	75 04		 jne	 SHORT $L236414
  001b4	33 c0		 xor	 eax, eax
  001b6	eb 07		 jmp	 SHORT $L236415
$L236414:
  001b8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  001bd	2b c1		 sub	 eax, ecx
$L236415:
  001bf	3b f8		 cmp	 edi, eax
  001c1	7d 4d		 jge	 SHORT $L176522

; 323  : 	{
; 324  : 		query->m_bChannel = m_vTCHANNEL[i];

  001c3	8a 14 39	 mov	 dl, BYTE PTR [ecx+edi]

; 325  : 
; 326  : 		if( query->Call() && !query->m_nRET )

  001c6	8b ce		 mov	 ecx, esi
  001c8	88 96 31 0c 00
	00		 mov	 BYTE PTR [esi+3121], dl
  001ce	e8 00 00 00 00	 call	 ?Call@CSqlBase@@QAEHXZ	; CSqlBase::Call
  001d3	85 c0		 test	 eax, eax
  001d5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001db	74 22		 je	 SHORT $L176521
  001dd	8b 86 2c 0c 00
	00		 mov	 eax, DWORD PTR [esi+3116]
  001e3	85 c0		 test	 eax, eax
  001e5	75 18		 jne	 SHORT $L176521

; 327  : 			vEnable[m_vTCHANNEL[i]] = query->m_bServerID == bServerID ? TRUE : FALSE;

  001e7	8a 84 24 6c 01
	00 00		 mov	 al, BYTE PTR _bServerID$[esp+352]
  001ee	38 86 30 0c 00
	00		 cmp	 BYTE PTR [esi+3120], al
  001f4	0f b6 04 39	 movzx	 eax, BYTE PTR [ecx+edi]
  001f8	0f 94 c2	 sete	 dl
  001fb	88 54 04 44	 mov	 BYTE PTR _vEnable$[esp+eax+356], dl
$L176521:
  001ff	8b 94 24 70 01
	00 00		 mov	 edx, DWORD PTR _wUnitID$[esp+352]
  00206	47		 inc	 edi
  00207	eb a7		 jmp	 SHORT $L176520
$L236554:

; 321  : 
; 322  : 	for( i=0; i<INT(m_vTCHANNEL.size()); i++)

  00209	8b 94 24 70 01
	00 00		 mov	 edx, DWORD PTR _wUnitID$[esp+352]
$L176522:

; 328  : 	}
; 329  : 	UNDEFINE_QUERY()
; 330  : 
; 331  : 	WORD wCount = UNIT_SIZE / CELL_SIZE;
; 332  : 	for( i=0; i<wCount; i++)

  00210	66 0f b6 ca	 movzx	 cx, dl
  00214	66 0f b6 c6	 movzx	 ax, dh
  00218	33 ff		 xor	 edi, edi
  0021a	89 7c 24 10	 mov	 DWORD PTR _i$176491[esp+356], edi
  0021e	c1 e1 04	 shl	 ecx, 4
  00221	89 4c 24 24	 mov	 DWORD PTR tv1128[esp+356], ecx
  00225	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+356]
  00229	c1 e0 04	 shl	 eax, 4
  0022c	83 c1 40	 add	 ecx, 64			; 00000040H
  0022f	89 44 24 2c	 mov	 DWORD PTR tv1126[esp+356], eax
  00233	89 4c 24 28	 mov	 DWORD PTR tv692[esp+356], ecx
  00237	eb 07		 jmp	 SHORT $L176525
$L236555:
  00239	8b 44 24 2c	 mov	 eax, DWORD PTR tv1126[esp+356]
  0023d	8d 49 00	 npad	 3
$L176525:

; 333  : 	{
; 334  : 		WORD wCellY = WORD(bUnitY) * wCount + i;

  00240	03 c7		 add	 eax, edi

; 335  : 
; 336  : 		for( int j=0; j<wCount; j++)

  00242	33 f6		 xor	 esi, esi

; 342  : 				i == 0 ? TRUE : FALSE,

  00244	85 ff		 test	 edi, edi
  00246	0f 94 c2	 sete	 dl
  00249	8d 6f 01	 lea	 ebp, DWORD PTR [edi+1]

; 347  : 				i + 1 >= wCount ? TRUE : FALSE,

  0024c	83 fd 10	 cmp	 ebp, 16			; 00000010H
  0024f	0f b7 d8	 movzx	 ebx, ax
  00252	0f 9d c1	 setge	 cl
  00255	c1 e3 10	 shl	 ebx, 16			; 00000010H
  00258	88 54 24 35	 mov	 BYTE PTR _vCheck$176538[esp+357], dl
  0025c	89 6c 24 20	 mov	 DWORD PTR tv555[esp+356], ebp
  00260	88 4c 24 3a	 mov	 BYTE PTR _vCheck$176538[esp+362], cl
  00264	89 5c 24 30	 mov	 DWORD PTR tv658[esp+356], ebx
  00268	eb 0c		 jmp	 SHORT $L176530
$L236556:

; 328  : 	}
; 329  : 	UNDEFINE_QUERY()
; 330  : 
; 331  : 	WORD wCount = UNIT_SIZE / CELL_SIZE;
; 332  : 	for( i=0; i<wCount; i++)

  0026a	8b 7c 24 10	 mov	 edi, DWORD PTR _i$176491[esp+356]
  0026e	8b 6c 24 20	 mov	 ebp, DWORD PTR tv555[esp+356]
  00272	8b 5c 24 30	 mov	 ebx, DWORD PTR tv658[esp+356]
$L176530:

; 337  : 		{
; 338  : 			CTCell *pCell = new CTCell();

  00276	68 7c 01 00 00	 push	 380			; 0000017cH
  0027b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00280	83 c4 04	 add	 esp, 4
  00283	89 44 24 14	 mov	 DWORD PTR $T236169[esp+356], eax
  00287	85 c0		 test	 eax, eax
  00289	c7 84 24 60 01
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+364], 0
  00294	74 09		 je	 SHORT $L236170
  00296	8b c8		 mov	 ecx, eax
  00298	e8 00 00 00 00	 call	 ??0CTCell@@QAE@XZ	; CTCell::CTCell
  0029d	eb 02		 jmp	 SHORT $L236560
$L236170:
  0029f	33 c0		 xor	 eax, eax
$L236560:

; 339  : 
; 340  : 			BYTE vCheck[UD_COUNT] = {
; 341  : 				i == 0 && j == 0 ? TRUE : FALSE,

  002a1	85 ff		 test	 edi, edi
  002a3	89 44 24 18	 mov	 DWORD PTR $T236168[esp+356], eax
  002a7	c7 84 24 60 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+364], -1
  002b2	75 0b		 jne	 SHORT $L236172
  002b4	85 f6		 test	 esi, esi
  002b6	75 07		 jne	 SHORT $L236172
  002b8	c6 44 24 34 01	 mov	 BYTE PTR _vCheck$176538[esp+356], 1
  002bd	eb 09		 jmp	 SHORT $L236550
$L236172:

; 343  : 				i == 0 && j + 1 >= wCount ? TRUE : FALSE,

  002bf	85 ff		 test	 edi, edi
  002c1	c6 44 24 34 00	 mov	 BYTE PTR _vCheck$176538[esp+356], 0
  002c6	75 0d		 jne	 SHORT $L236557
$L236550:
  002c8	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
  002cb	83 fa 10	 cmp	 edx, 16			; 00000010H
  002ce	c6 44 24 36 01	 mov	 BYTE PTR _vCheck$176538[esp+358], 1
  002d3	7d 05		 jge	 SHORT $L236175
$L236557:
  002d5	c6 44 24 36 00	 mov	 BYTE PTR _vCheck$176538[esp+358], 0
$L236175:

; 344  : 				j == 0 ? TRUE : FALSE,

  002da	85 f6		 test	 esi, esi
  002dc	0f 94 c1	 sete	 cl
  002df	88 4c 24 37	 mov	 BYTE PTR _vCheck$176538[esp+359], cl

; 345  : 				j + 1 >= wCount ? TRUE : FALSE,

  002e3	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  002e6	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002e9	0f 9d c2	 setge	 dl

; 346  : 				i + 1 >= wCount && j == 0 ? TRUE : FALSE,

  002ec	83 fd 10	 cmp	 ebp, 16			; 00000010H
  002ef	89 4c 24 14	 mov	 DWORD PTR tv647[esp+356], ecx
  002f3	88 54 24 38	 mov	 BYTE PTR _vCheck$176538[esp+360], dl
  002f7	7c 09		 jl	 SHORT $L236176
  002f9	85 f6		 test	 esi, esi
  002fb	c6 44 24 39 01	 mov	 BYTE PTR _vCheck$176538[esp+361], 1
  00300	74 05		 je	 SHORT $L236177
$L236176:
  00302	c6 44 24 39 00	 mov	 BYTE PTR _vCheck$176538[esp+361], 0
$L236177:

; 348  : 				i + 1 >= wCount && j + 1 >= wCount ? TRUE : FALSE};

  00307	83 fd 10	 cmp	 ebp, 16			; 00000010H
  0030a	7c 0a		 jl	 SHORT $L236178
  0030c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0030f	c6 44 24 3b 01	 mov	 BYTE PTR _vCheck$176538[esp+363], 1
  00314	7d 05		 jge	 SHORT $L236179
$L236178:
  00316	c6 44 24 3b 00	 mov	 BYTE PTR _vCheck$176538[esp+363], 0
$L236179:

; 349  : 			WORD wCellX = WORD(bUnitX) * wCount + j;

  0031b	8b 4c 24 24	 mov	 ecx, DWORD PTR tv1128[esp+356]
  0031f	03 ce		 add	 ecx, esi

; 350  : 
; 351  : 			pCell->m_dwID = MAKELONG( wCellX, wCellY);

  00321	0f b7 d1	 movzx	 edx, cx
  00324	0b d3		 or	 edx, ebx
  00326	89 90 78 01 00
	00		 mov	 DWORD PTR [eax+376], edx
  0032c	8d b8 5a 01 00
	00		 lea	 edi, DWORD PTR [eax+346]

; 352  : 			for( int k=0; k<MAX_CHANNEL; k++)
; 353  : 				pCell->m_vEnable[k] = vEnable[k];

  00332	b9 07 00 00 00	 mov	 ecx, 7
  00337	8d 74 24 44	 lea	 esi, DWORD PTR _vEnable$[esp+356]
  0033b	f3 a5		 rep movsd
  0033d	66 a5		 movsw

; 354  : 
; 355  : 			for( k=0; k<UD_COUNT; k++)

  0033f	33 ff		 xor	 edi, edi
  00341	8d 4c 24 64	 lea	 ecx, DWORD PTR _vServerID$[esp+356]
  00345	8d 70 4c	 lea	 esi, DWORD PTR [eax+76]
  00348	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L176551:
  00350	8a 44 3c 34	 mov	 al, BYTE PTR _vCheck$176538[esp+edi+356]

; 356  : 				for( int l=0; l<MAX_CHANNEL; l++)

  00354	bd 1e 00 00 00	 mov	 ebp, 30			; 0000001eH
  00359	8d a4 24 00 00
	00 00		 npad	 7
$L176556:

; 357  : 					pCell->m_vServerID[k][l] = vCheck[k] && vServerID[k][l] != bServerID ? vServerID[k][l] : 0;

  00360	84 c0		 test	 al, al
  00362	74 10		 je	 SHORT $L236551
  00364	8a 11		 mov	 dl, BYTE PTR [ecx]
  00366	3a 94 24 6c 01
	00 00		 cmp	 dl, BYTE PTR _bServerID$[esp+352]
  0036d	74 05		 je	 SHORT $L236551
  0036f	0f b6 d2	 movzx	 edx, dl
  00372	eb 02		 jmp	 SHORT $L236181
$L236551:
  00374	33 d2		 xor	 edx, edx
$L236181:

; 356  : 				for( int l=0; l<MAX_CHANNEL; l++)

  00376	41		 inc	 ecx

; 357  : 					pCell->m_vServerID[k][l] = vCheck[k] && vServerID[k][l] != bServerID ? vServerID[k][l] : 0;

  00377	88 16		 mov	 BYTE PTR [esi], dl
  00379	46		 inc	 esi
  0037a	4d		 dec	 ebp
  0037b	75 e3		 jne	 SHORT $L176556
  0037d	47		 inc	 edi
  0037e	83 ff 08	 cmp	 edi, 8
  00381	7c cd		 jl	 SHORT $L176551

; 358  : 
; 359  : 			m_mapTCELL.insert( MAPTCELL::value_type( pCell->m_dwID, pCell));

  00383	8b 44 24 18	 mov	 eax, DWORD PTR $T236168[esp+356]
  00387	8b 88 78 01 00
	00		 mov	 ecx, DWORD PTR [eax+376]
  0038d	8d 54 24 3c	 lea	 edx, DWORD PTR $T236182[esp+356]
  00391	89 44 24 40	 mov	 DWORD PTR $T236182[esp+360], eax
  00395	52		 push	 edx
  00396	8d 44 24 1c	 lea	 eax, DWORD PTR $T236183[esp+360]
  0039a	89 4c 24 40	 mov	 DWORD PTR $T236182[esp+360], ecx
  0039e	8b 4c 24 2c	 mov	 ecx, DWORD PTR tv692[esp+360]
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert
  003a8	8b 74 24 14	 mov	 esi, DWORD PTR tv647[esp+356]
  003ac	83 fe 10	 cmp	 esi, 16			; 00000010H
  003af	0f 8c b5 fe ff
	ff		 jl	 $L236556
  003b5	8b 7c 24 20	 mov	 edi, DWORD PTR tv555[esp+356]
  003b9	83 ff 10	 cmp	 edi, 16			; 00000010H
  003bc	89 7c 24 10	 mov	 DWORD PTR _i$176491[esp+356], edi
  003c0	0f 8c 73 fe ff
	ff		 jl	 $L236555

; 360  : 		}
; 361  : 	}
; 362  : }

  003c6	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+356]
  003cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003d4	8b 8c 24 54 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+356]
  003db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003e0	5f		 pop	 edi
  003e1	5e		 pop	 esi
  003e2	5d		 pop	 ebp
  003e3	5b		 pop	 ebx
  003e4	81 c4 54 01 00
	00		 add	 esp, 340		; 00000154H
  003ea	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L236185:
  00000	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T236169[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
__ehhandler$?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z:
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T236531
  00013	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z ENDP		; CTMap::InitCell
PUBLIC	?InitExtCell@CTMap@@QAEXG@Z			; CTMap::InitExtCell
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T236895 DD	0ffffffffH
	DD	FLAT:$L236576
$T236882 DD	019930520H
	DD	01H
	DD	FLAT:$T236895
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ?nCELL@?1??InitExtCell@CTMap@@QAEXG@Z@4PAY01HA
_DATA	SEGMENT
?nCELL@?1??InitExtCell@CTMap@@QAEXG@Z@4PAY01HA DD 0ffffffffH ; `CTMap::InitExtCell'::`2'::nCELL
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
_DATA	ENDS
;	COMDAT ?InitExtCell@CTMap@@QAEXG@Z
_TEXT	SEGMENT
tv598 = -88						; size = 4
_this$ = -84						; size = 4
_j$176579 = -80						; size = 4
_i$176574 = -76						; size = 4
_dwEXT$176600 = -72					; size = 4
tv637 = -68						; size = 4
$T236567 = -68						; size = 4
tv680 = -64						; size = 4
tv682 = -60						; size = 4
_itCELL$176584 = -56					; size = 4
_wCellY$176578 = -52					; size = 2
_wCellX$176583 = -48					; size = 2
_itEXT$176612 = -44					; size = 4
_pCell$176595 = -40					; size = 4
tv395 = -36						; size = 4
$T236575 = -32						; size = 8
$T236571 = -32						; size = 4
$T236574 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_wUnitID$ = 8						; size = 2
?InitExtCell@CTMap@@QAEXG@Z PROC NEAR			; CTMap::InitExtCell, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?InitExtCell@CTMap@@QAEXG@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	83 ec 50	 sub	 esp, 80			; 00000050H

; 366  : 	static int nCELL[UD_COUNT][2] = {
; 367  : 		{ -1, -1},
; 368  : 		{  0, -1},
; 369  : 		{  1, -1},
; 370  : 		{ -1,  0},
; 371  : 		{  1,  0},
; 372  : 		{ -1,  1},
; 373  : 		{  0,  1},
; 374  : 		{  1,  1}};
; 375  : 	WORD wCount = UNIT_SIZE / CELL_SIZE;
; 376  : 
; 377  : 	BYTE bUnitX = LOBYTE(wUnitID);
; 378  : 	BYTE bUnitY = HIBYTE(wUnitID);

  0001e	66 8b 45 08	 mov	 ax, WORD PTR _wUnitID$[ebp]
  00022	53		 push	 ebx

; 379  : 
; 380  : 	for( int i=0; i<wCount; i++)

  00023	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	8b f9		 mov	 edi, ecx
  0002d	66 0f b6 cc	 movzx	 cx, ah
  00031	66 0f b6 c0	 movzx	 ax, al
  00035	89 7c 24 14	 mov	 DWORD PTR _this$[esp+104], edi
  00039	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR _i$176574[esp+104], 0
  00041	c1 e1 04	 shl	 ecx, 4
  00044	89 4c 24 28	 mov	 DWORD PTR tv680[esp+104], ecx
  00048	c1 e0 04	 shl	 eax, 4
  0004b	89 44 24 2c	 mov	 DWORD PTR tv682[esp+104], eax
  0004f	eb 04		 jmp	 SHORT $L176575
$L236892:
  00051	8b 4c 24 28	 mov	 ecx, DWORD PTR tv680[esp+104]
$L176575:

; 381  : 	{
; 382  : 		WORD wCellY = WORD(bUnitY) * wCount + i;

  00055	8b 44 24 1c	 mov	 eax, DWORD PTR _i$176574[esp+104]
  00059	03 c1		 add	 eax, ecx
  0005b	0f b7 f0	 movzx	 esi, ax
  0005e	c1 e6 10	 shl	 esi, 16			; 00000010H
  00061	89 44 24 34	 mov	 DWORD PTR _wCellY$176578[esp+104], eax

; 383  : 
; 384  : 		for( int j=0; j<wCount; j++)

  00065	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _j$176579[esp+104], 0
  0006d	89 74 24 44	 mov	 DWORD PTR tv395[esp+104], esi
$L176580:

; 385  : 		{
; 386  : 			WORD wCellX = WORD(bUnitX) * wCount + j;

  00071	8b 4c 24 2c	 mov	 ecx, DWORD PTR tv682[esp+104]
  00075	8b 54 24 18	 mov	 edx, DWORD PTR _j$176579[esp+104]
  00079	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  0007c	89 44 24 38	 mov	 DWORD PTR _wCellX$176583[esp+104], eax

; 387  : 			MAPTCELL::iterator itCELL = m_mapTCELL.find(MAKELONG( wCellX, wCellY));

  00080	0f b7 c0	 movzx	 eax, ax
  00083	8d 4c 24 24	 lea	 ecx, DWORD PTR $T236567[esp+104]
  00087	51		 push	 ecx
  00088	8d 54 24 34	 lea	 edx, DWORD PTR _itCELL$176584[esp+108]
  0008c	0b c6		 or	 eax, esi
  0008e	52		 push	 edx
  0008f	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  00092	89 44 24 2c	 mov	 DWORD PTR $T236567[esp+112], eax
  00096	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 388  : 
; 389  : 			if( itCELL != m_mapTCELL.end() )

  0009b	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  0009e	8b 4c 24 30	 mov	 ecx, DWORD PTR _itCELL$176584[esp+104]
  000a2	3b c8		 cmp	 ecx, eax
  000a4	0f 84 55 01 00
	00		 je	 $L176581

; 390  : 			{
; 391  : 				CTCell *pCell = (*itCELL).second;

  000aa	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  000ad	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:?nCELL@?1??InitExtCell@CTMap@@QAEXG@Z@4PAY01HA
  000b2	89 4c 24 40	 mov	 DWORD PTR _pCell$176595[esp+104], ecx
  000b6	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR tv598[esp+104], 0
  000be	89 54 24 24	 mov	 DWORD PTR tv637[esp+104], edx
$L176597:

; 394  : 				{
; 395  : 					DWORD dwEXT = MAKELONG( WORD(INT(wCellX) + nCELL[k][0]), WORD(INT(wCellY) + nCELL[k][1]));

  000c2	66 8b 42 04	 mov	 ax, WORD PTR [edx+4]
  000c6	66 03 44 24 34	 add	 ax, WORD PTR _wCellY$176578[esp+104]
  000cb	66 8b 32	 mov	 si, WORD PTR [edx]
  000ce	66 03 74 24 38	 add	 si, WORD PTR _wCellX$176583[esp+104]
  000d3	0f b7 c0	 movzx	 eax, ax
  000d6	0f b7 f6	 movzx	 esi, si
  000d9	c1 e0 10	 shl	 eax, 16			; 00000010H
  000dc	0b c6		 or	 eax, esi
  000de	89 44 24 20	 mov	 DWORD PTR _dwEXT$176600[esp+104], eax

; 396  : 
; 397  : 					for( int l=0; l<INT(m_vTCHANNEL.size()); l++)

  000e2	33 ff		 xor	 edi, edi
$L176608:
  000e4	85 db		 test	 ebx, ebx
  000e6	75 04		 jne	 SHORT $L236620
  000e8	33 c0		 xor	 eax, eax
  000ea	eb 07		 jmp	 SHORT $L236621
$L236620:
  000ec	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  000f1	2b c3		 sub	 eax, ebx
$L236621:
  000f3	3b f8		 cmp	 edi, eax
  000f5	0f 8d de 00 00
	00		 jge	 $L176598

; 398  : 						if( pCell->m_vEnable[m_vTCHANNEL[l]] && pCell->m_vServerID[k][m_vTCHANNEL[l]] )

  000fb	0f b6 04 3b	 movzx	 eax, BYTE PTR [ebx+edi]
  000ff	80 bc 08 5a 01
	00 00 00	 cmp	 BYTE PTR [eax+ecx+346], 0
  00107	0f 84 c6 00 00
	00		 je	 $L176609
  0010d	0f b6 04 3b	 movzx	 eax, BYTE PTR [ebx+edi]
  00111	03 44 24 10	 add	 eax, DWORD PTR tv598[esp+104]
  00115	80 7c 08 4c 00	 cmp	 BYTE PTR [eax+ecx+76], 0
  0011a	0f 84 b3 00 00
	00		 je	 $L176609

; 399  : 						{
; 400  : 							MAPTCELL::iterator itEXT = m_mapTCELL.find(dwEXT);

  00120	8b 74 24 14	 mov	 esi, DWORD PTR _this$[esp+104]
  00124	8d 4c 24 20	 lea	 ecx, DWORD PTR _dwEXT$176600[esp+104]
  00128	51		 push	 ecx
  00129	8d 54 24 40	 lea	 edx, DWORD PTR _itEXT$176612[esp+108]
  0012d	52		 push	 edx
  0012e	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00131	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 401  : 							CTCell *pEXT = NULL;
; 402  : 
; 403  : 							if( itEXT == m_mapTCELL.end() )

  00136	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00139	8b 4c 24 3c	 mov	 ecx, DWORD PTR _itEXT$176612[esp+104]
  0013d	3b c8		 cmp	 ecx, eax
  0013f	75 64		 jne	 SHORT $L176616

; 404  : 							{
; 405  : 								pEXT = new CTCell();

  00141	68 7c 01 00 00	 push	 380			; 0000017cH
  00146	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0014b	83 c4 04	 add	 esp, 4
  0014e	89 44 24 48	 mov	 DWORD PTR $T236571[esp+104], eax
  00152	85 c0		 test	 eax, eax
  00154	c7 44 24 64 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+112], 0
  0015c	74 09		 je	 SHORT $L236572
  0015e	8b c8		 mov	 ecx, eax
  00160	e8 00 00 00 00	 call	 ??0CTCell@@QAE@XZ	; CTCell::CTCell
  00165	eb 02		 jmp	 SHORT $L236573
$L236572:
  00167	33 c0		 xor	 eax, eax
$L236573:

; 406  : 								pEXT->m_dwID = dwEXT;

  00169	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwEXT$176600[esp+104]
  0016d	89 88 78 01 00
	00		 mov	 DWORD PTR [eax+376], ecx

; 407  : 
; 408  : 								m_mapTCELL.insert( MAPTCELL::value_type( pEXT->m_dwID, pEXT));

  00173	8b d1		 mov	 edx, ecx
  00175	8b f0		 mov	 esi, eax
  00177	89 44 24 54	 mov	 DWORD PTR $T236574[esp+108], eax
  0017b	8d 44 24 50	 lea	 eax, DWORD PTR $T236574[esp+104]
  0017f	50		 push	 eax
  00180	8d 4c 24 4c	 lea	 ecx, DWORD PTR $T236575[esp+108]
  00184	51		 push	 ecx
  00185	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+112]
  00189	83 c1 40	 add	 ecx, 64			; 00000040H
  0018c	c7 44 24 6c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+120], -1
  00194	89 54 24 58	 mov	 DWORD PTR $T236574[esp+112], edx
  00198	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert

; 409  : 							}
; 410  : 							else

  0019d	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001a3	eb 03		 jmp	 SHORT $L176623
$L176616:

; 411  : 								pEXT = (*itEXT).second;

  001a5	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
$L176623:

; 412  : 
; 413  : 							pEXT->m_vExtCell[m_vTCHANNEL[l]] = TRUE;

  001a8	0f b6 14 3b	 movzx	 edx, BYTE PTR [ebx+edi]
  001ac	c6 84 32 3c 01
	00 00 01	 mov	 BYTE PTR [edx+esi+316], 1

; 414  : 							pEXT->m_vEnable[m_vTCHANNEL[l]] = TRUE;

  001b4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001b9	0f b6 0c 38	 movzx	 ecx, BYTE PTR [eax+edi]
  001bd	8b 54 24 24	 mov	 edx, DWORD PTR tv637[esp+104]
  001c1	c6 84 31 5a 01
	00 00 01	 mov	 BYTE PTR [ecx+esi+346], 1
  001c9	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001cf	8b 4c 24 40	 mov	 ecx, DWORD PTR _pCell$176595[esp+104]
$L176609:

; 396  : 
; 397  : 					for( int l=0; l<INT(m_vTCHANNEL.size()); l++)

  001d3	47		 inc	 edi
  001d4	e9 0b ff ff ff	 jmp	 $L176608
$L176598:

; 392  : 
; 393  : 				for( int k=0; k<UD_COUNT; k++)

  001d9	8b 74 24 10	 mov	 esi, DWORD PTR tv598[esp+104]
  001dd	83 c2 08	 add	 edx, 8
  001e0	83 c6 1e	 add	 esi, 30			; 0000001eH
  001e3	81 fa 40 00 00
	00		 cmp	 edx, OFFSET FLAT:?nCELL@?1??InitExtCell@CTMap@@QAEXG@Z@4PAY01HA+64
  001e9	89 54 24 24	 mov	 DWORD PTR tv637[esp+104], edx
  001ed	89 74 24 10	 mov	 DWORD PTR tv598[esp+104], esi
  001f1	0f 8c cb fe ff
	ff		 jl	 $L176597
  001f7	8b 74 24 44	 mov	 esi, DWORD PTR tv395[esp+104]
  001fb	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+104]
$L176581:
  001ff	8b 44 24 18	 mov	 eax, DWORD PTR _j$176579[esp+104]
  00203	40		 inc	 eax
  00204	83 f8 10	 cmp	 eax, 16			; 00000010H
  00207	89 44 24 18	 mov	 DWORD PTR _j$176579[esp+104], eax
  0020b	0f 8c 60 fe ff
	ff		 jl	 $L176580
  00211	8b 44 24 1c	 mov	 eax, DWORD PTR _i$176574[esp+104]
  00215	40		 inc	 eax
  00216	83 f8 10	 cmp	 eax, 16			; 00000010H
  00219	89 44 24 1c	 mov	 DWORD PTR _i$176574[esp+104], eax
  0021d	0f 8c 2e fe ff
	ff		 jl	 $L236892

; 415  : 						}
; 416  : 				}
; 417  : 			}
; 418  : 		}
; 419  : 	}
; 420  : }

  00223	8b 4c 24 5c	 mov	 ecx, DWORD PTR __$EHRec$[esp+104]
  00227	5f		 pop	 edi
  00228	5e		 pop	 esi
  00229	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00230	5b		 pop	 ebx
  00231	8b e5		 mov	 esp, ebp
  00233	5d		 pop	 ebp
  00234	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L236576:
  00000	8b 45 e0	 mov	 eax, DWORD PTR $T236571[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?InitExtCell@CTMap@@QAEXG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T236882
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitExtCell@CTMap@@QAEXG@Z ENDP			; CTMap::InitExtCell
PUBLIC	?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor
; Function compile flags: /Ogty
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z
_TEXT	SEGMENT
tv173 = -36						; size = 4
_i$177892 = -32						; size = 4
_nPosX$ = -28						; size = 4
_nPosZ$ = -24						; size = 4
$T236903 = -20						; size = 8
$T236900 = -20						; size = 4
_finder$177903 = -12					; size = 4
$T236902 = -8						; size = 8
_pCELLS$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosZ$ = 16						; size = 4
?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z PROC NEAR ; CTMap::GetNeighbor, COMDAT
; _this$ = ecx

; 882  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 24	 sub	 esp, 36			; 00000024H

; 883  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00009	d9 45 0c	 fld	 DWORD PTR _fPosX$[ebp]
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b d9		 mov	 ebx, ecx
  00011	e8 00 00 00 00	 call	 __ftol2

; 884  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 45 10	 fld	 DWORD PTR _fPosZ$[ebp]
  00019	0f b7 f0	 movzx	 esi, ax
  0001c	c1 ee 06	 shr	 esi, 6
  0001f	4e		 dec	 esi
  00020	89 74 24 14	 mov	 DWORD PTR _nPosX$[esp+48], esi
  00024	e8 00 00 00 00	 call	 __ftol2
  00029	0f b7 c0	 movzx	 eax, ax
  0002c	c1 e8 06	 shr	 eax, 6
  0002f	48		 dec	 eax

; 885  : 
; 886  : 	for( int i=0; i<3; i++)

  00030	33 ff		 xor	 edi, edi
  00032	89 44 24 18	 mov	 DWORD PTR _nPosZ$[esp+48], eax
  00036	89 7c 24 10	 mov	 DWORD PTR _i$177892[esp+48], edi
  0003a	eb 08		 jmp	 SHORT $L177893
$L236967:
  0003c	8b 74 24 14	 mov	 esi, DWORD PTR _nPosX$[esp+48]
  00040	8b 44 24 18	 mov	 eax, DWORD PTR _nPosZ$[esp+48]
$L177893:

; 887  : 	{
; 888  : 		int nLocZ = nPosZ + i;

  00044	03 f8		 add	 edi, eax
  00046	c7 44 24 0c 03
	00 00 00	 mov	 DWORD PTR tv173[esp+48], 3
  0004e	8b ff		 npad	 2
$L177898:

; 889  : 
; 890  : 		for( int j=0; j<3; j++)
; 891  : 		{
; 892  : 			int nLocX = nPosX + j;
; 893  : 
; 894  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00050	85 f6		 test	 esi, esi
  00052	7c 4e		 jl	 SHORT $L177899
  00054	85 ff		 test	 edi, edi
  00056	7c 4a		 jl	 SHORT $L177899

; 895  : 			{
; 896  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00058	0f b7 c7	 movzx	 eax, di
  0005b	0f b7 ce	 movzx	 ecx, si
  0005e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00061	0b c1		 or	 eax, ecx
  00063	8d 54 24 1c	 lea	 edx, DWORD PTR $T236900[esp+48]
  00067	89 44 24 1c	 mov	 DWORD PTR $T236900[esp+48], eax
  0006b	52		 push	 edx
  0006c	8d 44 24 28	 lea	 eax, DWORD PTR _finder$177903[esp+52]
  00070	50		 push	 eax
  00071	8d 4b 40	 lea	 ecx, DWORD PTR [ebx+64]
  00074	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 897  : 
; 898  : 				if( finder != m_mapTCELL.end() )

  00079	8b 44 24 24	 mov	 eax, DWORD PTR _finder$177903[esp+48]
  0007d	3b 43 44	 cmp	 eax, DWORD PTR [ebx+68]
  00080	74 20		 je	 SHORT $L177899

; 899  : 					pCELLS->insert( MAPTCELL::value_type( (*finder).first, (*finder).second));

  00082	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00085	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00088	89 4c 24 28	 mov	 DWORD PTR $T236902[esp+48], ecx
  0008c	8d 44 24 28	 lea	 eax, DWORD PTR $T236902[esp+48]
  00090	50		 push	 eax
  00091	8d 4c 24 20	 lea	 ecx, DWORD PTR $T236903[esp+52]
  00095	51		 push	 ecx
  00096	8b 4d 08	 mov	 ecx, DWORD PTR _pCELLS$[ebp]
  00099	89 54 24 34	 mov	 DWORD PTR $T236902[esp+60], edx
  0009d	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert
$L177899:
  000a2	8b 44 24 0c	 mov	 eax, DWORD PTR tv173[esp+48]
  000a6	46		 inc	 esi
  000a7	48		 dec	 eax
  000a8	89 44 24 0c	 mov	 DWORD PTR tv173[esp+48], eax
  000ac	75 a2		 jne	 SHORT $L177898
  000ae	8b 7c 24 10	 mov	 edi, DWORD PTR _i$177892[esp+48]
  000b2	47		 inc	 edi
  000b3	83 ff 03	 cmp	 edi, 3
  000b6	89 7c 24 10	 mov	 DWORD PTR _i$177892[esp+48], edi
  000ba	7c 80		 jl	 SHORT $L236967

; 900  : 			}
; 901  : 		}
; 902  : 	}
; 903  : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 0c 00	 ret	 12			; 0000000cH
?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ENDP ; CTMap::GetNeighbor
_TEXT	ENDS
PUBLIC	?EnterMAP@CTMap@@QAEEPAUtagSWITCH@@@Z		; CTMap::EnterMAP
EXTRN	?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z:NEAR	; CTCell::AddSwitch
; Function compile flags: /Ogty
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagSWITCH@@@Z
_TEXT	SEGMENT
$T236974 = -16						; size = 8
_finder$ = -16						; size = 4
$T236975 = -8						; size = 8
$T236972 = 8						; size = 4
_pSwitch$ = 8						; size = 4
?EnterMAP@CTMap@@QAEEPAUtagSWITCH@@@Z PROC NEAR		; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 978  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	56		 push	 esi

; 979  : 	WORD wPosX = pSwitch->m_wPosX / CELL_SIZE;
; 980  : 	WORD wPosZ = pSwitch->m_wPosZ / CELL_SIZE;
; 981  : 
; 982  : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  00004	8b 74 24 18	 mov	 esi, DWORD PTR _pSwitch$[esp+16]
  00008	0f b7 46 10	 movzx	 eax, WORD PTR [esi+16]
  0000c	57		 push	 edi
  0000d	8b f9		 mov	 edi, ecx
  0000f	0f b7 4e 0c	 movzx	 ecx, WORD PTR [esi+12]
  00013	83 e0 c0	 and	 eax, -64		; ffffffc0H
  00016	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00019	c1 e9 06	 shr	 ecx, 6
  0001c	0b c1		 or	 eax, ecx
  0001e	8d 54 24 1c	 lea	 edx, DWORD PTR $T236972[esp+20]
  00022	89 44 24 1c	 mov	 DWORD PTR $T236972[esp+20], eax
  00026	52		 push	 edx
  00027	8d 44 24 0c	 lea	 eax, DWORD PTR _finder$[esp+28]
  0002b	50		 push	 eax
  0002c	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0002f	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 983  : 	if( finder != m_mapTCELL.end() )

  00034	8b 44 24 08	 mov	 eax, DWORD PTR _finder$[esp+24]
  00038	3b 47 44	 cmp	 eax, DWORD PTR [edi+68]
  0003b	74 09		 je	 SHORT $L178006

; 984  : 		(*finder).second->AddSwitch(pSwitch);

  0003d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 ?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z ; CTCell::AddSwitch
$L178006:

; 985  : 
; 986  : 	pSwitch->m_pMAP = this;
; 987  : 	m_mapTSWITCH.insert( MAPTSWITCH::value_type( pSwitch->m_dwSwitchID, pSwitch));

  00046	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00048	8d 54 24 08	 lea	 edx, DWORD PTR $T236974[esp+24]
  0004c	52		 push	 edx
  0004d	8d 44 24 14	 lea	 eax, DWORD PTR $T236975[esp+28]
  00051	89 4c 24 0c	 mov	 DWORD PTR $T236974[esp+28], ecx
  00055	50		 push	 eax
  00056	8d 4f 28	 lea	 ecx, DWORD PTR [edi+40]
  00059	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  0005c	89 74 24 14	 mov	 DWORD PTR $T236974[esp+36], esi
  00060	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
  00065	5f		 pop	 edi

; 988  : 
; 989  : 	return TRUE;

  00066	b0 01		 mov	 al, 1
  00068	5e		 pop	 esi

; 990  : }

  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	c2 04 00	 ret	 4
?EnterMAP@CTMap@@QAEEPAUtagSWITCH@@@Z ENDP		; CTMap::EnterMAP
_TEXT	ENDS
PUBLIC	?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z		; CTMap::EnterMAP
EXTRN	?AddGate@CTCell@@QAEXPAUtagGATE@@@Z:NEAR	; CTCell::AddGate
; Function compile flags: /Ogty
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z
_TEXT	SEGMENT
$T237025 = -16						; size = 8
_finder$ = -16						; size = 4
$T237026 = -8						; size = 8
$T237023 = 8						; size = 4
_itGATE$ = 8						; size = 4
_pGate$ = 8						; size = 4
?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z PROC NEAR		; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 993  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 994  : 	MAPTGATE::iterator itGATE = m_mapTGATE.find(pGate->m_dwGateID);

  00006	8b 7c 24 20	 mov	 edi, DWORD PTR _pGate$[esp+24]
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	8d 44 24 24	 lea	 eax, DWORD PTR _itGATE$[esp+28]
  00011	8d 5e 34	 lea	 ebx, DWORD PTR [esi+52]
  00014	50		 push	 eax
  00015	8b cb		 mov	 ecx, ebx
  00017	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find

; 995  : 
; 996  : 	if( itGATE != m_mapTGATE.end() )

  0001c	8b 4c 24 20	 mov	 ecx, DWORD PTR _itGATE$[esp+24]
  00020	3b 4e 38	 cmp	 ecx, DWORD PTR [esi+56]

; 997  : 		return TRUE;

  00023	75 56		 jne	 SHORT $L237094

; 998  : 
; 999  : 	WORD wPosX = pGate->m_wPosX / CELL_SIZE;
; 1000 : 	WORD wPosZ = pGate->m_wPosZ / CELL_SIZE;
; 1001 : 
; 1002 : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  00025	0f b7 57 0e	 movzx	 edx, WORD PTR [edi+14]
  00029	0f b7 47 0a	 movzx	 eax, WORD PTR [edi+10]
  0002d	83 e2 c0	 and	 edx, -64		; ffffffc0H
  00030	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  00033	c1 e8 06	 shr	 eax, 6
  00036	0b d0		 or	 edx, eax
  00038	8d 4c 24 20	 lea	 ecx, DWORD PTR $T237023[esp+24]
  0003c	89 54 24 20	 mov	 DWORD PTR $T237023[esp+24], edx
  00040	51		 push	 ecx
  00041	8d 54 24 10	 lea	 edx, DWORD PTR _finder$[esp+32]
  00045	52		 push	 edx
  00046	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00049	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1003 : 	if( finder != m_mapTCELL.end() )

  0004e	8b 44 24 0c	 mov	 eax, DWORD PTR _finder$[esp+28]
  00052	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  00055	74 09		 je	 SHORT $L178049

; 1004 : 		(*finder).second->AddGate(pGate);

  00057	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 ?AddGate@CTCell@@QAEXPAUtagGATE@@@Z ; CTCell::AddGate
$L178049:

; 1005 : 
; 1006 : 	m_mapTGATE.insert( MAPTGATE::value_type( pGate->m_dwGateID, pGate));

  00060	8b 07		 mov	 eax, DWORD PTR [edi]
  00062	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T237025[esp+28]
  00066	51		 push	 ecx
  00067	8d 54 24 18	 lea	 edx, DWORD PTR $T237026[esp+32]
  0006b	52		 push	 edx
  0006c	8b cb		 mov	 ecx, ebx
  0006e	89 44 24 14	 mov	 DWORD PTR $T237025[esp+36], eax
  00072	89 7c 24 18	 mov	 DWORD PTR $T237025[esp+40], edi
  00076	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagGATE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::insert
$L237094:
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi

; 1007 : 
; 1008 : 	return TRUE;

  0007d	b0 01		 mov	 al, 1
  0007f	5b		 pop	 ebx

; 1009 : }

  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	c2 04 00	 ret	 4
?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z ENDP		; CTMap::EnterMAP
_TEXT	ENDS
PUBLIC	?EnterMAP@CTMap@@QAEEPAUtagGODTOWER@@@Z		; CTMap::EnterMAP
; Function compile flags: /Ogty
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGODTOWER@@@Z
_TEXT	SEGMENT
$T237098 = -16						; size = 8
$T237099 = -8						; size = 8
_pGodTower$ = 8						; size = 4
?EnterMAP@CTMap@@QAEEPAUtagGODTOWER@@@Z PROC NEAR	; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 1012 : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H

; 1013 : 	pGodTower->m_pMAP = this;

  00003	8b 44 24 14	 mov	 eax, DWORD PTR _pGodTower$[esp+12]

; 1014 : 	m_mapTGODTOWER.insert( MAPTGODTOWER::value_type( pGodTower->m_wID, pGodTower));

  00007	66 8b 10	 mov	 dx, WORD PTR [eax]
  0000a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000d	89 44 24 04	 mov	 DWORD PTR $T237098[esp+20], eax
  00011	8d 04 24	 lea	 eax, DWORD PTR $T237098[esp+16]
  00014	66 89 14 24	 mov	 WORD PTR $T237098[esp+16], dx
  00018	50		 push	 eax
  00019	8d 54 24 0c	 lea	 edx, DWORD PTR $T237099[esp+20]
  0001d	52		 push	 edx
  0001e	83 c1 64	 add	 ecx, 100		; 00000064H
  00021	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::insert

; 1015 : 
; 1016 : 	return TRUE;

  00026	b0 01		 mov	 al, 1

; 1017 : }

  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	c2 04 00	 ret	 4
?EnterMAP@CTMap@@QAEEPAUtagGODTOWER@@@Z ENDP		; CTMap::EnterMAP
_TEXT	ENDS
PUBLIC	?GetUnitPlayer@CTMap@@QAEXPAV?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@MM@Z ; CTMap::GetUnitPlayer
PUBLIC	__real@3a800000
;	COMDAT __real@3a800000
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
CONST	SEGMENT
__real@3a800000 DD 03a800000r			; 0.000976563
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
CONST	ENDS
;	COMDAT ?GetUnitPlayer@CTMap@@QAEXPAV?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@MM@Z
_TEXT	SEGMENT
_bUnitX$ = -57						; size = 1
tv514 = -56						; size = 4
tv320 = -52						; size = 4
tv529 = -48						; size = 4
tv65 = -44						; size = 4
tv516 = -40						; size = 4
_pCell$179189 = -36					; size = 4
$T237107 = -36						; size = 4
_finder$179178 = -32					; size = 4
_itChar$179197 = -28					; size = 4
_this$ = -24						; size = 4
tv366 = -20						; size = 4
$T237113 = -16						; size = 8
$T237114 = -8						; size = 8
_pPLAYERS$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosZ$ = 16						; size = 4
?GetUnitPlayer@CTMap@@QAEXPAV?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@MM@Z PROC NEAR ; CTMap::GetUnitPlayer, COMDAT
; _this$ = ecx

; 1616 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 3c	 sub	 esp, 60			; 0000003cH

; 1617 : 	BYTE bUnitX = BYTE(fPosX / UNIT_SIZE);

  00009	d9 45 0c	 fld	 DWORD PTR _fPosX$[ebp]
  0000c	53		 push	 ebx
  0000d	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3a800000
  00013	8b d9		 mov	 ebx, ecx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	89 5c 24 30	 mov	 DWORD PTR _this$[esp+72], ebx
  0001b	e8 00 00 00 00	 call	 __ftol2

; 1618 : 	BYTE bUnitZ = BYTE(fPosZ / UNIT_SIZE);

  00020	d9 45 10	 fld	 DWORD PTR _fPosZ$[ebp]
  00023	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3a800000
  00029	88 44 24 0f	 mov	 BYTE PTR _bUnitX$[esp+72], al
  0002d	e8 00 00 00 00	 call	 __ftol2

; 1619 : 
; 1620 : 	WORD wCount = UNIT_SIZE/CELL_SIZE;
; 1621 : 	for(WORD i=0; i<wCount; i++)

  00032	66 0f b6 4c 24
	0f		 movzx	 cx, BYTE PTR _bUnitX$[esp+72]
  00038	66 0f b6 c0	 movzx	 ax, al
  0003c	c7 44 24 1c 10
	00 00 00	 mov	 DWORD PTR tv65[esp+72], 16 ; 00000010H
  00044	c1 e1 04	 shl	 ecx, 4
  00047	89 4c 24 20	 mov	 DWORD PTR tv516[esp+72], ecx
  0004b	c1 e0 04	 shl	 eax, 4
  0004e	89 44 24 18	 mov	 DWORD PTR tv529[esp+72], eax
  00052	eb 0c		 jmp	 SHORT $L179169
$L237488:

; 1617 : 	BYTE bUnitX = BYTE(fPosX / UNIT_SIZE);

  00054	8b 4c 24 20	 mov	 ecx, DWORD PTR tv516[esp+72]
  00058	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L179169:

; 1619 : 
; 1620 : 	WORD wCount = UNIT_SIZE/CELL_SIZE;
; 1621 : 	for(WORD i=0; i<wCount; i++)

  00060	0f b7 f8	 movzx	 edi, ax
  00063	c1 e7 10	 shl	 edi, 16			; 00000010H

; 1622 : 	{
; 1623 : 		WORD wCellZ = WORD(bUnitZ) * wCount + i;

  00066	89 7c 24 34	 mov	 DWORD PTR tv366[esp+72], edi
  0006a	89 4c 24 10	 mov	 DWORD PTR tv514[esp+72], ecx
  0006e	c7 44 24 14 10
	00 00 00	 mov	 DWORD PTR tv320[esp+72], 16 ; 00000010H
$L179174:

; 1624 : 		for(WORD j=0; j<wCount; j++)
; 1625 : 		{
; 1626 : 			WORD wCellX = WORD(bUnitX) * wCount + j;
; 1627 : 			MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG(wCellX, wCellZ));

  00076	0f b7 c1	 movzx	 eax, cx
  00079	8d 4c 24 24	 lea	 ecx, DWORD PTR $T237107[esp+72]
  0007d	51		 push	 ecx
  0007e	8d 54 24 2c	 lea	 edx, DWORD PTR _finder$179178[esp+76]
  00082	0b c7		 or	 eax, edi
  00084	52		 push	 edx
  00085	8d 4b 40	 lea	 ecx, DWORD PTR [ebx+64]
  00088	89 44 24 2c	 mov	 DWORD PTR $T237107[esp+80], eax
  0008c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1628 : 			if( finder != m_mapTCELL.end() )

  00091	8b 44 24 28	 mov	 eax, DWORD PTR _finder$179178[esp+72]
  00095	3b 43 44	 cmp	 eax, DWORD PTR [ebx+68]
  00098	0f 84 b1 00 00
	00		 je	 $L179175

; 1629 : 			{
; 1630 : 				CTCell *pCell = (*finder).second;

  0009e	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000a1	89 44 24 24	 mov	 DWORD PTR _pCell$179189[esp+72], eax

; 1631 : 				MAPPLAYER::iterator it;
; 1632 : 
; 1633 : 				for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

  000a5	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  000a8	8b 30		 mov	 esi, DWORD PTR [eax]
  000aa	3b f0		 cmp	 esi, eax
  000ac	0f 84 9d 00 00
	00		 je	 $L179175
$L237342:

; 1634 : 				{
; 1635 : 					MAPPLAYER::iterator itChar = pPLAYERS->find((*it).second->m_dwID);

  000b2	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _pPLAYERS$[ebp]
  000b8	8d 9f 44 01 01
	00		 lea	 ebx, DWORD PTR [edi+65860]
  000be	53		 push	 ebx
  000bf	8d 44 24 30	 lea	 eax, DWORD PTR _itChar$179197[esp+76]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::find

; 1636 : 					if(itChar == pPLAYERS->end())

  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _pPLAYERS$[ebp]
  000cc	8b 54 24 2c	 mov	 edx, DWORD PTR _itChar$179197[esp+72]
  000d0	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  000d3	75 19		 jne	 SHORT $L179195

; 1637 : 						pPLAYERS->insert(MAPPLAYER::value_type((*it).second->m_dwID, (*it).second));

  000d5	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d7	8d 54 24 38	 lea	 edx, DWORD PTR $T237113[esp+72]
  000db	89 44 24 38	 mov	 DWORD PTR $T237113[esp+72], eax
  000df	52		 push	 edx
  000e0	8d 44 24 44	 lea	 eax, DWORD PTR $T237114[esp+76]
  000e4	50		 push	 eax
  000e5	89 7c 24 44	 mov	 DWORD PTR $T237113[esp+84], edi
  000e9	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTPlayer@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTPlayer *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTPlayer *> >,0> >::insert
$L179195:
  000ee	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000f1	84 c0		 test	 al, al
  000f3	75 45		 jne	 SHORT $L237371
  000f5	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000f8	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000fb	84 c9		 test	 cl, cl
  000fd	75 1e		 jne	 SHORT $L237479
  000ff	8b f0		 mov	 esi, eax
  00101	8b 06		 mov	 eax, DWORD PTR [esi]
  00103	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00106	84 c9		 test	 cl, cl
  00108	75 30		 jne	 SHORT $L237371
  0010a	8d 9b 00 00 00
	00		 npad	 6

; 1631 : 				MAPPLAYER::iterator it;
; 1632 : 
; 1633 : 				for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

$L237366:
  00110	8b f0		 mov	 esi, eax
  00112	8b 06		 mov	 eax, DWORD PTR [esi]
  00114	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00117	84 c9		 test	 cl, cl
  00119	74 f5		 je	 SHORT $L237366
  0011b	eb 1d		 jmp	 SHORT $L237371
$L237479:
  0011d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00120	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00123	84 c9		 test	 cl, cl
  00125	75 11		 jne	 SHORT $L237377
$L237375:
  00127	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0012a	75 0c		 jne	 SHORT $L237377
  0012c	8b f0		 mov	 esi, eax
  0012e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00131	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00134	84 c9		 test	 cl, cl
  00136	74 ef		 je	 SHORT $L237375
$L237377:
  00138	8b f0		 mov	 esi, eax
$L237371:
  0013a	8b 4c 24 24	 mov	 ecx, DWORD PTR _pCell$179189[esp+72]
  0013e	3b 71 2c	 cmp	 esi, DWORD PTR [ecx+44]
  00141	0f 85 6b ff ff
	ff		 jne	 $L237342
  00147	8b 5c 24 30	 mov	 ebx, DWORD PTR _this$[esp+72]
  0014b	8b 7c 24 34	 mov	 edi, DWORD PTR tv366[esp+72]
$L179175:
  0014f	8b 4c 24 10	 mov	 ecx, DWORD PTR tv514[esp+72]
  00153	8b 44 24 14	 mov	 eax, DWORD PTR tv320[esp+72]
  00157	41		 inc	 ecx
  00158	48		 dec	 eax
  00159	89 4c 24 10	 mov	 DWORD PTR tv514[esp+72], ecx
  0015d	89 44 24 14	 mov	 DWORD PTR tv320[esp+72], eax
  00161	0f 85 0f ff ff
	ff		 jne	 $L179174
  00167	8b 44 24 18	 mov	 eax, DWORD PTR tv529[esp+72]
  0016b	8b 4c 24 1c	 mov	 ecx, DWORD PTR tv65[esp+72]
  0016f	40		 inc	 eax
  00170	49		 dec	 ecx
  00171	89 44 24 18	 mov	 DWORD PTR tv529[esp+72], eax
  00175	89 4c 24 1c	 mov	 DWORD PTR tv65[esp+72], ecx
  00179	0f 85 d5 fe ff
	ff		 jne	 $L237488

; 1638 : 				}
; 1639 : 			}
; 1640 : 		}
; 1641 : 	}
; 1642 : }

  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c2 0c 00	 ret	 12			; 0000000cH
?GetUnitPlayer@CTMap@@QAEXPAV?$map@KPAVCTPlayer@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTPlayer@@@std@@@3@@std@@MM@Z ENDP ; CTMap::GetUnitPlayer
_TEXT	ENDS
PUBLIC	?AddTNMTPlayer@CTMap@@QAEXPAUtagTOURNAMENTPLAYER@@@Z ; CTMap::AddTNMTPlayer
; Function compile flags: /Ogty
;	COMDAT ?AddTNMTPlayer@CTMap@@QAEXPAUtagTOURNAMENTPLAYER@@@Z
_TEXT	SEGMENT
$T237491 = -16						; size = 8
$T237492 = -8						; size = 8
_it$ = 8						; size = 4
_pPlayer$ = 8						; size = 4
?AddTNMTPlayer@CTMap@@QAEXPAUtagTOURNAMENTPLAYER@@@Z PROC NEAR ; CTMap::AddTNMTPlayer, COMDAT
; _this$ = ecx

; 1817 : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	55		 push	 ebp

; 1818 : 	m_mapTNMTPlayer.erase(pPlayer->m_dwCharID);

  00004	8b 6c 24 18	 mov	 ebp, DWORD PTR _pPlayer$[esp+16]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8d 7e 7c	 lea	 edi, DWORD PTR [esi+124]
  0000f	55		 push	 ebp
  00010	8b cf		 mov	 ecx, edi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase

; 1819 : 	m_mapTNMTPlayer.insert(MAPTOURNAMENTPLAYER::value_type(pPlayer->m_dwCharID, pPlayer));

  00017	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  0001a	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T237491[esp+28]
  0001e	51		 push	 ecx
  0001f	8d 54 24 18	 lea	 edx, DWORD PTR $T237492[esp+32]
  00023	52		 push	 edx
  00024	8b cf		 mov	 ecx, edi
  00026	89 44 24 14	 mov	 DWORD PTR $T237491[esp+36], eax
  0002a	89 6c 24 18	 mov	 DWORD PTR $T237491[esp+40], ebp
  0002e	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::insert

; 1820 : 	if(m_mapTNMTPlayer.size() == 1)

  00033	83 be 84 00 00
	00 01		 cmp	 DWORD PTR [esi+132], 1
  0003a	75 09		 jne	 SHORT $L179477

; 1821 : 		m_bBlueTeam = pPlayer->m_bSlot;

  0003c	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  0003f	88 86 a0 00 00
	00		 mov	 BYTE PTR [esi+160], al
$L179477:

; 1822 : 
; 1823 : 	MAPTOURNAMENTPLAYER::iterator it;
; 1824 : 	for(it=m_mapTNMTPlayer.begin(); it!=m_mapTNMTPlayer.end(); it++)

  00045	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0004b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004d	3b c1		 cmp	 eax, ecx
  0004f	89 44 24 20	 mov	 DWORD PTR _it$[esp+24], eax
  00053	74 68		 je	 SHORT $L179484
  00055	53		 push	 ebx
  00056	8a 5d 15	 mov	 bl, BYTE PTR [ebp+21]
  00059	8d a4 24 00 00
	00 00		 npad	 7
$L237550:

; 1825 : 	{
; 1826 : 		if((*it).second->m_bSlot == pPlayer->m_bSlot)

  00060	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00063	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00066	75 1f		 jne	 SHORT $L179485
  00068	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$[esp+28]
  0006c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::const_iterator::_Inc
  00071	8b 44 24 24	 mov	 eax, DWORD PTR _it$[esp+28]
  00075	3b 86 80 00 00
	00		 cmp	 eax, DWORD PTR [esi+128]
  0007b	75 e3		 jne	 SHORT $L237550
  0007d	5b		 pop	 ebx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5d		 pop	 ebp

; 1839 : 			break;
; 1840 : 		}
; 1841 : 	}
; 1842 : }

  00081	83 c4 10	 add	 esp, 16			; 00000010H
  00084	c2 04 00	 ret	 4
$L179485:

; 1827 : 			continue;
; 1828 : 
; 1829 : 		if((*it).second->m_bSlot < pPlayer->m_bSlot)

  00087	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0008a	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  0008d	3a cb		 cmp	 cl, bl
  0008f	73 19		 jae	 SHORT $L179486
  00091	5b		 pop	 ebx

; 1830 : 		{
; 1831 : 			m_bBlueTeam = (*it).second->m_bSlot;

  00092	88 8e a0 00 00
	00		 mov	 BYTE PTR [esi+160], cl

; 1832 : 			m_bRedTeam = pPlayer->m_bSlot;

  00098	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  0009b	5f		 pop	 edi
  0009c	88 86 a1 00 00
	00		 mov	 BYTE PTR [esi+161], al
  000a2	5e		 pop	 esi
  000a3	5d		 pop	 ebp

; 1839 : 			break;
; 1840 : 		}
; 1841 : 	}
; 1842 : }

  000a4	83 c4 10	 add	 esp, 16			; 00000010H
  000a7	c2 04 00	 ret	 4
$L179486:

; 1833 : 			break;
; 1834 : 		}
; 1835 : 		else
; 1836 : 		{
; 1837 : 			m_bBlueTeam = pPlayer->m_bSlot;

  000aa	88 9e a0 00 00
	00		 mov	 BYTE PTR [esi+160], bl

; 1838 : 			m_bRedTeam = (*it).second->m_bSlot;

  000b0	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b3	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  000b6	88 96 a1 00 00
	00		 mov	 BYTE PTR [esi+161], dl
  000bc	5b		 pop	 ebx
$L179484:
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5d		 pop	 ebp

; 1839 : 			break;
; 1840 : 		}
; 1841 : 	}
; 1842 : }

  000c0	83 c4 10	 add	 esp, 16			; 00000010H
  000c3	c2 04 00	 ret	 4
?AddTNMTPlayer@CTMap@@QAEXPAUtagTOURNAMENTPLAYER@@@Z ENDP ; CTMap::AddTNMTPlayer
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEXABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::push_back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?push_back@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEXABQAUtagSWITCH@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEXABQAUtagSWITCH@@@Z PROC NEAR ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L237653
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L237654
$L237653:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L237654:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L179752
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L179752

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L179752:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@QAEXABQAUtagSWITCH@@@Z ENDP ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEXABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::push_back
; Function compile flags: /Ogty
;	COMDAT ?push_back@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEXABQAUtagGATE@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEXABQAUtagGATE@@@Z PROC NEAR ; std::vector<tagGATE *,std::allocator<tagGATE *> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L237839
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L237840
$L237839:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L237840:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L179890
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L179890

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L179890:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@QAEXABQAUtagGATE@@@Z ENDP ; std::vector<tagGATE *,std::allocator<tagGATE *> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::push_back
; Function compile flags: /Ogty
;	COMDAT ?push_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXABQAVCTPlayer@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXABQAVCTPlayer@@@Z PROC NEAR ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L238025
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L238026
$L238025:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L238026:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L180018
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L180018

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L180018:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAEXABQAVCTPlayer@@@Z ENDP ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::push_back
; Function compile flags: /Ogty
;	COMDAT ?push_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXABQAVCTMonster@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXABQAVCTMonster@@@Z PROC NEAR ; std::vector<CTMonster *,std::allocator<CTMonster *> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L238211
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L238212
$L238211:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L238212:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L180210
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L180210

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L180210:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@QAEXABQAVCTMonster@@@Z ENDP ; std::vector<CTMonster *,std::allocator<CTMonster *> >::push_back
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238457 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238457[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238553 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238553[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238672 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238672[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238742 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238742[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238837 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238837[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T238932 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T238932[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T239027 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239027[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >
_TEXT	ENDS
PUBLIC	??0?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >::map<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T239287 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239287[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >::map<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T239548 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239548[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >
_TEXT	ENDS
PUBLIC	??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::~map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T239692 = -4						; size = 4
??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::~map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239692[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::~map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >
_TEXT	ENDS
PUBLIC	??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::~map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T239802 = -4						; size = 4
??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::~map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239802[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::~map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T239931 = -4						; size = 4
??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T239931[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::~map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T240060 = -4						; size = 4
??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T240060[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::~map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T240188 = -4						; size = 4
??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T240188[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::~map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::~map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T240316 = -4						; size = 4
??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::~map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T240316[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::~map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >
_TEXT	ENDS
PUBLIC	??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::~map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T240444 = -4						; size = 4
??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::~map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T240444[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::~map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >
_TEXT	ENDS
PUBLIC	??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::~map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T240572 = -4						; size = 4
??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::~map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T240572[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::~map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >
_TEXT	ENDS
PUBLIC	??1CTMap@@UAE@XZ				; CTMap::~CTMap
PUBLIC	??_7CTMap@@6B@					; CTMap::`vftable'
PUBLIC	??_GCTMap@@UAEPAXI@Z				; CTMap::`scalar deleting destructor'
EXTRN	??_ECTMap@@UAEPAXI@Z:NEAR			; CTMap::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T245998 DD	0ffffffffH
	DD	FLAT:$L240655
	DD	00H
	DD	FLAT:$L240656
	DD	01H
	DD	FLAT:$L240657
	DD	02H
	DD	FLAT:$L240658
	DD	03H
	DD	FLAT:$L240659
	DD	04H
	DD	FLAT:$L240660
	DD	05H
	DD	FLAT:$L240661
	DD	06H
	DD	FLAT:$L240662
	DD	07H
	DD	FLAT:$L240663
	DD	08H
	DD	FLAT:$L240664
	DD	09H
	DD	FLAT:$L240665
$T245928 DD	019930520H
	DD	0bH
	DD	FLAT:$T245998
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CTMap@@6B@
CONST	SEGMENT
??_7CTMap@@6B@ DD FLAT:??_ECTMap@@UAEPAXI@Z		; CTMap::`vftable'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
CONST	ENDS
;	COMDAT ??1CTMap@@UAE@XZ
_TEXT	SEGMENT
_this$ = -68						; size = 4
__Pnode$244140 = -64					; size = 4
$T240603 = -64						; size = 4
$T244299 = -60						; size = 4
$T244108 = -60						; size = 4
$T244013 = -60						; size = 4
_itSPAWN$ = -60						; size = 4
tv2588 = -56						; size = 4
$T244460 = -56						; size = 4
tv2566 = -52						; size = 4
$T244621 = -52						; size = 4
tv2610 = -48						; size = 4
$T245099 = -48						; size = 4
$T244939 = -48						; size = 4
$T244785 = -48						; size = 4
tv2478 = -44						; size = 4
$T245261 = -44						; size = 4
tv2456 = -40						; size = 4
$T245421 = -40						; size = 4
tv2522 = -36						; size = 4
$T245580 = -36						; size = 4
$T240604 = -36						; size = 8
tv2544 = -28						; size = 4
$T245741 = -28						; size = 4
__Where$241116 = -28					; size = 8
tv2500 = -20						; size = 4
$T245898 = -20						; size = 4
$T241119 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1CTMap@@UAE@XZ PROC NEAR				; CTMap::~CTMap, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$??1CTMap@@UAE@XZ
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	83 ec 3c	 sub	 esp, 60			; 0000003cH
  0001e	53		 push	 ebx
  0001f	55		 push	 ebp
  00020	56		 push	 esi
  00021	8b f1		 mov	 esi, ecx
  00023	57		 push	 edi
  00024	89 74 24 14	 mov	 DWORD PTR _this$[esp+88], esi
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTMap@@6B@

; 206  : 	MAPTMONSPAWN::iterator itSPAWN;
; 207  : 	MAPTCELL::iterator itCELL;
; 208  : 	MAPTSWITCH::iterator itSwc;
; 209  : 	MAPTGATE::iterator itGt;
; 210  : 	MAPTSELFOBJ::iterator itSfObj;
; 211  : 	MAPTGODTOWER::iterator itGT;
; 212  : 	MAPTGODBALL::iterator itGB;
; 213  : 	MAPTGODBALL::iterator itGBT;
; 214  : 
; 215  : 	for( itSPAWN = m_mapTMONSPAWN.begin(); itSPAWN != m_mapTMONSPAWN.end(); itSPAWN++)

  0002e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	8b e9		 mov	 ebp, ecx
  00035	33 db		 xor	 ebx, ebx
  00037	3b c8		 cmp	 ecx, eax
  00039	c7 44 24 54 0a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 10 ; 0000000aH
  00041	89 6c 24 1c	 mov	 DWORD PTR _itSPAWN$[esp+88], ebp
  00045	0f 84 db 00 00
	00		 je	 $L176297
  0004b	eb 03 8d 49 00	 npad	 5
$L240768:

; 216  : 	{
; 217  : 		if(itSPAWN->second->m_pSPAWN->m_bEvent == SE_DYNAMIC)

  00050	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  00053	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00056	80 78 5c 04	 cmp	 BYTE PTR [eax+92], 4
  0005a	0f 85 a1 00 00
	00		 jne	 $L176298

; 218  : 		{
; 219  : 			_AtlModule.m_mapTMONSPAWN.erase(itSPAWN->second->m_pSPAWN->m_wID);

  00060	83 c0 34	 add	 eax, 52			; 00000034H
  00063	50		 push	 eax
  00064	8d 4c 24 40	 lea	 ecx, DWORD PTR __Where$241116[esp+92]
  00068	51		 push	 ecx
  00069	b9 84 01 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A+388
  0006e	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@V123@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::equal_range
  00073	8b 54 24 3c	 mov	 edx, DWORD PTR __Where$241116[esp+88]
  00077	8b 7c 24 40	 mov	 edi, DWORD PTR __Where$241116[esp+92]
  0007b	3b d7		 cmp	 edx, edi
  0007d	8b ca		 mov	 ecx, edx
  0007f	74 44		 je	 SHORT $L241170
$L241162:
  00081	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00084	75 3b		 jne	 SHORT $L241133
  00086	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00089	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0008c	75 14		 jne	 SHORT $L245932
  0008e	8b c8		 mov	 ecx, eax
  00090	8b 01		 mov	 eax, DWORD PTR [ecx]
  00092	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00095	75 2a		 jne	 SHORT $L241133
$L241154:
  00097	8b c8		 mov	 ecx, eax
  00099	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009b	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0009e	74 f7		 je	 SHORT $L241154
  000a0	eb 1f		 jmp	 SHORT $L241133
$L245932:
  000a2	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000a5	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000a8	75 15		 jne	 SHORT $L241136
  000aa	8d 9b 00 00 00
	00		 npad	 6
$L241135:
  000b0	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000b3	75 0a		 jne	 SHORT $L241136
  000b5	8b c8		 mov	 ecx, eax
  000b7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ba	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  000bd	74 f1		 je	 SHORT $L241135
$L241136:
  000bf	8b c8		 mov	 ecx, eax
$L241133:
  000c1	3b cf		 cmp	 ecx, edi
  000c3	75 bc		 jne	 SHORT $L241162
$L241170:
  000c5	57		 push	 edi
  000c6	52		 push	 edx
  000c7	8d 54 24 4c	 lea	 edx, DWORD PTR $T241119[esp+96]
  000cb	52		 push	 edx
  000cc	b9 84 01 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A+388
  000d1	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTMONSPAWN@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSPAWN@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTMONSPAWN *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTMONSPAWN *> >,0> >::erase

; 220  : 			_AtlModule.m_mapExtraSpawnID.insert(MAPWORD::value_type(itSPAWN->second->m_pSPAWN->m_wID,itSPAWN->second->m_pSPAWN->m_wID));

  000d6	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	66 8b 48 34	 mov	 cx, WORD PTR [eax+52]
  000e0	66 8b d1	 mov	 dx, cx
  000e3	66 89 4c 24 18	 mov	 WORD PTR $T240603[esp+88], cx
  000e8	8d 44 24 18	 lea	 eax, DWORD PTR $T240603[esp+88]
  000ec	50		 push	 eax
  000ed	8d 4c 24 38	 lea	 ecx, DWORD PTR $T240604[esp+92]
  000f1	51		 push	 ecx
  000f2	b9 2c 10 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A+4140
  000f7	66 89 54 24 22	 mov	 WORD PTR $T240603[esp+98], dx
  000fc	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
$L176298:

; 221  : 		}
; 222  : 
; 223  : 		delete (*itSPAWN).second;

  00101	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00104	3b cb		 cmp	 ecx, ebx
  00106	74 06		 je	 SHORT $L176296
  00108	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010a	6a 01		 push	 1
  0010c	ff 12		 call	 DWORD PTR [edx]
$L176296:
  0010e	8d 4c 24 1c	 lea	 ecx, DWORD PTR _itSPAWN$[esp+88]
  00112	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc
  00117	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0011a	8b 6c 24 1c	 mov	 ebp, DWORD PTR _itSPAWN$[esp+88]
  0011e	3b e8		 cmp	 ebp, eax
  00120	0f 85 2a ff ff
	ff		 jne	 $L240768
$L176297:

; 224  : 	}
; 225  : 
; 226  : 	for( itCELL = m_mapTCELL.begin(); itCELL != m_mapTCELL.end(); itCELL++)

  00126	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00129	8b 38		 mov	 edi, DWORD PTR [eax]
  0012b	3b f8		 cmp	 edi, eax
  0012d	74 4d		 je	 SHORT $L176385
  0012f	90		 npad	 1
$L241421:

; 227  : 		delete (*itCELL).second;

  00130	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00133	3b cb		 cmp	 ecx, ebx
  00135	74 06		 je	 SHORT $L176384
  00137	8b 01		 mov	 eax, DWORD PTR [ecx]
  00139	6a 01		 push	 1
  0013b	ff 10		 call	 DWORD PTR [eax]
$L176384:
  0013d	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00140	75 35		 jne	 SHORT $L241431
  00142	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00145	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00148	75 14		 jne	 SHORT $L245935
  0014a	8b f8		 mov	 edi, eax
  0014c	8b 07		 mov	 eax, DWORD PTR [edi]
  0014e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00151	75 24		 jne	 SHORT $L241431

; 224  : 	}
; 225  : 
; 226  : 	for( itCELL = m_mapTCELL.begin(); itCELL != m_mapTCELL.end(); itCELL++)

$L241452:
  00153	8b f8		 mov	 edi, eax
  00155	8b 07		 mov	 eax, DWORD PTR [edi]
  00157	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0015a	74 f7		 je	 SHORT $L241452
  0015c	eb 19		 jmp	 SHORT $L241431
$L245935:
  0015e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00161	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00164	75 0f		 jne	 SHORT $L241434
$L241433:
  00166	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00169	75 0a		 jne	 SHORT $L241434
  0016b	8b f8		 mov	 edi, eax
  0016d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00170	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00173	74 f1		 je	 SHORT $L241433
$L241434:
  00175	8b f8		 mov	 edi, eax
$L241431:
  00177	3b 7e 44	 cmp	 edi, DWORD PTR [esi+68]
  0017a	75 b4		 jne	 SHORT $L241421
$L176385:

; 228  : 
; 229  : 	for(itSwc=m_mapTSWITCH.begin(); itSwc!=m_mapTSWITCH.end(); itSwc++)

  0017c	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0017f	8b 38		 mov	 edi, DWORD PTR [eax]
  00181	3b f8		 cmp	 edi, eax
  00183	74 68		 je	 SHORT $L176393
$L241696:

; 230  : 		delete (*itSwc).second;

  00185	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
  00188	3b eb		 cmp	 ebp, ebx
  0018a	74 22		 je	 SHORT $L176392
  0018c	8b 45 24	 mov	 eax, DWORD PTR [ebp+36]
  0018f	3b c3		 cmp	 eax, ebx
  00191	74 09		 je	 SHORT $L241795
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00199	83 c4 04	 add	 esp, 4
$L241795:
  0019c	55		 push	 ebp
  0019d	89 5d 24	 mov	 DWORD PTR [ebp+36], ebx
  001a0	89 5d 28	 mov	 DWORD PTR [ebp+40], ebx
  001a3	89 5d 2c	 mov	 DWORD PTR [ebp+44], ebx
  001a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ab	83 c4 04	 add	 esp, 4
$L176392:
  001ae	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  001b1	75 35		 jne	 SHORT $L241707
  001b3	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  001b6	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001b9	75 14		 jne	 SHORT $L245938
  001bb	8b f8		 mov	 edi, eax
  001bd	8b 07		 mov	 eax, DWORD PTR [edi]
  001bf	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001c2	75 24		 jne	 SHORT $L241707

; 228  : 
; 229  : 	for(itSwc=m_mapTSWITCH.begin(); itSwc!=m_mapTSWITCH.end(); itSwc++)

$L241688:
  001c4	8b f8		 mov	 edi, eax
  001c6	8b 07		 mov	 eax, DWORD PTR [edi]
  001c8	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001cb	74 f7		 je	 SHORT $L241688
  001cd	eb 19		 jmp	 SHORT $L241707
$L245938:
  001cf	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001d2	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001d5	75 0f		 jne	 SHORT $L241710
$L241709:
  001d7	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  001da	75 0a		 jne	 SHORT $L241710
  001dc	8b f8		 mov	 edi, eax
  001de	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001e1	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001e4	74 f1		 je	 SHORT $L241709
$L241710:
  001e6	8b f8		 mov	 edi, eax
$L241707:
  001e8	3b 7e 2c	 cmp	 edi, DWORD PTR [esi+44]
  001eb	75 98		 jne	 SHORT $L241696
$L176393:

; 231  : 
; 232  : 	for(itGt = m_mapTGATE.begin(); itGt != m_mapTGATE.end(); itGt++)

  001ed	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  001f0	8b 38		 mov	 edi, DWORD PTR [eax]
  001f2	3b f8		 cmp	 edi, eax
  001f4	74 68		 je	 SHORT $L176401
$L241982:

; 233  : 		delete (*itGt).second;

  001f6	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
  001f9	3b eb		 cmp	 ebp, ebx
  001fb	74 22		 je	 SHORT $L176400
  001fd	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00200	3b c3		 cmp	 eax, ebx
  00202	74 09		 je	 SHORT $L242099
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0020a	83 c4 04	 add	 esp, 4
$L242099:
  0020d	55		 push	 ebp
  0020e	89 5d 18	 mov	 DWORD PTR [ebp+24], ebx
  00211	89 5d 1c	 mov	 DWORD PTR [ebp+28], ebx
  00214	89 5d 20	 mov	 DWORD PTR [ebp+32], ebx
  00217	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0021c	83 c4 04	 add	 esp, 4
$L176400:
  0021f	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00222	75 35		 jne	 SHORT $L242016
  00224	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00227	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0022a	75 14		 jne	 SHORT $L245941
  0022c	8b f8		 mov	 edi, eax
  0022e	8b 07		 mov	 eax, DWORD PTR [edi]
  00230	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00233	75 24		 jne	 SHORT $L242016

; 231  : 
; 232  : 	for(itGt = m_mapTGATE.begin(); itGt != m_mapTGATE.end(); itGt++)

$L242004:
  00235	8b f8		 mov	 edi, eax
  00237	8b 07		 mov	 eax, DWORD PTR [edi]
  00239	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0023c	74 f7		 je	 SHORT $L242004
  0023e	eb 19		 jmp	 SHORT $L242016
$L245941:
  00240	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00243	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00246	75 0f		 jne	 SHORT $L242019
$L242018:
  00248	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  0024b	75 0a		 jne	 SHORT $L242019
  0024d	8b f8		 mov	 edi, eax
  0024f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00252	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00255	74 f1		 je	 SHORT $L242018
$L242019:
  00257	8b f8		 mov	 edi, eax
$L242016:
  00259	3b 7e 38	 cmp	 edi, DWORD PTR [esi+56]
  0025c	75 98		 jne	 SHORT $L241982
$L176401:

; 234  : 
; 235  : 	for(itGT = m_mapTGODTOWER.begin(); itGT != m_mapTGODTOWER.end(); itGT++)

  0025e	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  00261	8b 38		 mov	 edi, DWORD PTR [eax]
  00263	3b f8		 cmp	 edi, eax
  00265	0f 84 a2 00 00
	00		 je	 $L176409
  0026b	eb 03 8d 49 00	 npad	 5
$L242284:

; 236  : 	{
; 237  : 		if((*itGT).second->m_pGodBall)

  00270	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00273	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  00276	3b eb		 cmp	 ebp, ebx
  00278	74 26		 je	 SHORT $L240635

; 238  : 			delete (*itGT).second->m_pGodBall;

  0027a	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  0027d	83 e8 10	 sub	 eax, 16			; 00000010H
  00280	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00283	83 c9 ff	 or	 ecx, -1
  00286	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  0028a	49		 dec	 ecx
  0028b	85 c9		 test	 ecx, ecx
  0028d	7f 08		 jg	 SHORT $L242433
  0028f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00291	8b 11		 mov	 edx, DWORD PTR [ecx]
  00293	50		 push	 eax
  00294	ff 52 04	 call	 DWORD PTR [edx+4]
$L242433:
  00297	55		 push	 ebp
  00298	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0029d	83 c4 04	 add	 esp, 4
$L240635:

; 239  : 
; 240  : 		delete (*itGT).second;

  002a0	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
  002a3	3b eb		 cmp	 ebp, ebx
  002a5	74 22		 je	 SHORT $L176408
  002a7	8b 45 1c	 mov	 eax, DWORD PTR [ebp+28]
  002aa	3b c3		 cmp	 eax, ebx
  002ac	74 09		 je	 SHORT $L242490
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002b4	83 c4 04	 add	 esp, 4
$L242490:
  002b7	55		 push	 ebp
  002b8	89 5d 1c	 mov	 DWORD PTR [ebp+28], ebx
  002bb	89 5d 20	 mov	 DWORD PTR [ebp+32], ebx
  002be	89 5d 24	 mov	 DWORD PTR [ebp+36], ebx
  002c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002c6	83 c4 04	 add	 esp, 4
$L176408:
  002c9	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  002cc	75 36		 jne	 SHORT $L242319
  002ce	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  002d1	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002d4	75 15		 jne	 SHORT $L245944
  002d6	8b f8		 mov	 edi, eax
  002d8	8b 07		 mov	 eax, DWORD PTR [edi]
  002da	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002dd	75 25		 jne	 SHORT $L242319
  002df	90		 npad	 1

; 234  : 
; 235  : 	for(itGT = m_mapTGODTOWER.begin(); itGT != m_mapTGODTOWER.end(); itGT++)

$L242300:
  002e0	8b f8		 mov	 edi, eax
  002e2	8b 07		 mov	 eax, DWORD PTR [edi]
  002e4	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002e7	74 f7		 je	 SHORT $L242300
  002e9	eb 19		 jmp	 SHORT $L242319
$L245944:
  002eb	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002ee	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  002f1	75 0f		 jne	 SHORT $L242322
$L242321:
  002f3	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  002f6	75 0a		 jne	 SHORT $L242322
  002f8	8b f8		 mov	 edi, eax
  002fa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  002fd	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00300	74 f1		 je	 SHORT $L242321
$L242322:
  00302	8b f8		 mov	 edi, eax
$L242319:
  00304	3b 7e 68	 cmp	 edi, DWORD PTR [esi+104]
  00307	0f 85 63 ff ff
	ff		 jne	 $L242284
$L176409:

; 241  : 	}
; 242  : 
; 243  : 	for( itGB = m_mapTGODBALL.begin(); itGB != m_mapTGODBALL.end(); itGB++)

  0030d	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  00310	8b 38		 mov	 edi, DWORD PTR [eax]
  00312	3b f8		 cmp	 edi, eax
  00314	74 73		 je	 SHORT $L176420
$L242672:

; 244  : 		delete (*itGB).second;

  00316	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
  00319	3b eb		 cmp	 ebp, ebx
  0031b	74 26		 je	 SHORT $L176419
  0031d	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  00320	83 e8 10	 sub	 eax, 16			; 00000010H
  00323	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00326	83 ca ff	 or	 edx, -1
  00329	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0032d	4a		 dec	 edx
  0032e	85 d2		 test	 edx, edx
  00330	7f 08		 jg	 SHORT $L242800
  00332	8b 08		 mov	 ecx, DWORD PTR [eax]
  00334	8b 11		 mov	 edx, DWORD PTR [ecx]
  00336	50		 push	 eax
  00337	ff 52 04	 call	 DWORD PTR [edx+4]
$L242800:
  0033a	55		 push	 ebp
  0033b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00340	83 c4 04	 add	 esp, 4
$L176419:
  00343	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00346	75 3c		 jne	 SHORT $L242683
  00348	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0034b	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0034e	75 1b		 jne	 SHORT $L245947
  00350	8b f8		 mov	 edi, eax
  00352	8b 07		 mov	 eax, DWORD PTR [edi]
  00354	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00357	75 2b		 jne	 SHORT $L242683
  00359	8d a4 24 00 00
	00 00		 npad	 7

; 241  : 	}
; 242  : 
; 243  : 	for( itGB = m_mapTGODBALL.begin(); itGB != m_mapTGODBALL.end(); itGB++)

$L242697:
  00360	8b f8		 mov	 edi, eax
  00362	8b 07		 mov	 eax, DWORD PTR [edi]
  00364	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00367	74 f7		 je	 SHORT $L242697
  00369	eb 19		 jmp	 SHORT $L242683
$L245947:
  0036b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0036e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00371	75 0f		 jne	 SHORT $L242686
$L242685:
  00373	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00376	75 0a		 jne	 SHORT $L242686
  00378	8b f8		 mov	 edi, eax
  0037a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0037d	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00380	74 f1		 je	 SHORT $L242685
$L242686:
  00382	8b f8		 mov	 edi, eax
$L242683:
  00384	3b 7e 74	 cmp	 edi, DWORD PTR [esi+116]
  00387	75 8d		 jne	 SHORT $L242672
$L176420:

; 245  : 
; 246  : 	for( itGBT = m_mapTTEMPGODBALL.begin(); itGBT != m_mapTTEMPGODBALL.end(); itGBT++)

  00389	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0038c	8b 38		 mov	 edi, DWORD PTR [eax]
  0038e	3b f8		 cmp	 edi, eax
  00390	74 6c		 je	 SHORT $L176428
$L242987:

; 247  : 		delete (*itGBT).second;

  00392	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
  00395	3b eb		 cmp	 ebp, ebx
  00397	74 26		 je	 SHORT $L176427
  00399	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  0039c	83 e8 10	 sub	 eax, 16			; 00000010H
  0039f	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  003a2	83 ca ff	 or	 edx, -1
  003a5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  003a9	4a		 dec	 edx
  003aa	85 d2		 test	 edx, edx
  003ac	7f 08		 jg	 SHORT $L243121
  003ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b2	50		 push	 eax
  003b3	ff 52 04	 call	 DWORD PTR [edx+4]
$L243121:
  003b6	55		 push	 ebp
  003b7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003bc	83 c4 04	 add	 esp, 4
$L176427:
  003bf	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  003c2	75 35		 jne	 SHORT $L243021
  003c4	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  003c7	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  003ca	75 14		 jne	 SHORT $L245950
  003cc	8b f8		 mov	 edi, eax
  003ce	8b 07		 mov	 eax, DWORD PTR [edi]
  003d0	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  003d3	75 24		 jne	 SHORT $L243021

; 245  : 
; 246  : 	for( itGBT = m_mapTTEMPGODBALL.begin(); itGBT != m_mapTTEMPGODBALL.end(); itGBT++)

$L243002:
  003d5	8b f8		 mov	 edi, eax
  003d7	8b 07		 mov	 eax, DWORD PTR [edi]
  003d9	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  003dc	74 f7		 je	 SHORT $L243002
  003de	eb 19		 jmp	 SHORT $L243021
$L245950:
  003e0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  003e3	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  003e6	75 0f		 jne	 SHORT $L243024
$L243023:
  003e8	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  003eb	75 0a		 jne	 SHORT $L243024
  003ed	8b f8		 mov	 edi, eax
  003ef	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  003f2	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  003f5	74 f1		 je	 SHORT $L243023
$L243024:
  003f7	8b f8		 mov	 edi, eax
$L243021:
  003f9	3b 7e 5c	 cmp	 edi, DWORD PTR [esi+92]
  003fc	75 94		 jne	 SHORT $L242987
$L176428:

; 248  : 
; 249  : 	m_mapTSWITCH.clear();

  003fe	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00401	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  00404	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00407	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  0040a	89 7c 24 30	 mov	 DWORD PTR tv2456[esp+88], edi
  0040e	8b ee		 mov	 ebp, esi
  00410	75 20		 jne	 SHORT $L243194
$L243192:
  00412	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  00415	51		 push	 ecx
  00416	8b cf		 mov	 ecx, edi
  00418	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  0041d	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  00420	56		 push	 esi
  00421	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00426	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00429	83 c4 04	 add	 esp, 4
  0042c	3a c3		 cmp	 al, bl
  0042e	8b f5		 mov	 esi, ebp
  00430	74 e0		 je	 SHORT $L243192
$L243194:
  00432	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00435	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00438	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0043b	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0043e	89 00		 mov	 DWORD PTR [eax], eax
  00440	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00443	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 250  : 	m_mapTGATE.clear();

  00446	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  0044a	8b 57 38	 mov	 edx, DWORD PTR [edi+56]
  0044d	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00450	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00453	83 c7 34	 add	 edi, 52			; 00000034H
  00456	3a c3		 cmp	 al, bl
  00458	89 7c 24 2c	 mov	 DWORD PTR tv2478[esp+88], edi
  0045c	8b ee		 mov	 ebp, esi
  0045e	75 20		 jne	 SHORT $L243289
$L243287:
  00460	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00463	50		 push	 eax
  00464	8b cf		 mov	 ecx, edi
  00466	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Erase
  0046b	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  0046e	56		 push	 esi
  0046f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00474	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00477	83 c4 04	 add	 esp, 4
  0047a	3a c3		 cmp	 al, bl
  0047c	8b f5		 mov	 esi, ebp
  0047e	74 e0		 je	 SHORT $L243287
$L243289:
  00480	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00483	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00486	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00489	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0048c	89 00		 mov	 DWORD PTR [eax], eax
  0048e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00491	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 251  : 	m_mapTMONSPAWN.clear();

  00494	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  00498	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0049b	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0049e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  004a1	83 c7 04	 add	 edi, 4
  004a4	3a c3		 cmp	 al, bl
  004a6	89 7c 24 44	 mov	 DWORD PTR tv2500[esp+88], edi
  004aa	8b ee		 mov	 ebp, esi
  004ac	75 22		 jne	 SHORT $L243384
  004ae	8b ff		 npad	 2
$L243382:
  004b0	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]
  004b3	52		 push	 edx
  004b4	8b cf		 mov	 ecx, edi
  004b6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
  004bb	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  004be	56		 push	 esi
  004bf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004c4	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  004c7	83 c4 04	 add	 esp, 4
  004ca	3a c3		 cmp	 al, bl
  004cc	8b f5		 mov	 esi, ebp
  004ce	74 e0		 je	 SHORT $L243382
$L243384:
  004d0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  004d3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  004d6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  004d9	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  004dc	89 00		 mov	 DWORD PTR [eax], eax
  004de	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  004e1	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 252  : 	m_mapTMONSTER.clear();

  004e4	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  004e8	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  004eb	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  004ee	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  004f1	83 c7 1c	 add	 edi, 28			; 0000001cH
  004f4	3a c3		 cmp	 al, bl
  004f6	89 7c 24 34	 mov	 DWORD PTR tv2522[esp+88], edi
  004fa	8b ee		 mov	 ebp, esi
  004fc	75 22		 jne	 SHORT $L243488
  004fe	8b ff		 npad	 2
$L243486:
  00500	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  00503	51		 push	 ecx
  00504	8b cf		 mov	 ecx, edi
  00506	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  0050b	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  0050e	56		 push	 esi
  0050f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00514	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00517	83 c4 04	 add	 esp, 4
  0051a	3a c3		 cmp	 al, bl
  0051c	8b f5		 mov	 esi, ebp
  0051e	74 e0		 je	 SHORT $L243486
$L243488:
  00520	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00523	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00526	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00529	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0052c	89 00		 mov	 DWORD PTR [eax], eax
  0052e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00531	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 253  : 	m_mapTSPAWNPOS.clear();

  00534	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  00538	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  0053b	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0053e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00541	83 c7 10	 add	 edi, 16			; 00000010H
  00544	3a c3		 cmp	 al, bl
  00546	89 7c 24 3c	 mov	 DWORD PTR tv2544[esp+88], edi
  0054a	8b ee		 mov	 ebp, esi
  0054c	75 22		 jne	 SHORT $L243574
  0054e	8b ff		 npad	 2
$L243572:
  00550	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00553	50		 push	 eax
  00554	8b cf		 mov	 ecx, edi
  00556	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
  0055b	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  0055e	56		 push	 esi
  0055f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00564	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00567	83 c4 04	 add	 esp, 4
  0056a	3a c3		 cmp	 al, bl
  0056c	8b f5		 mov	 esi, ebp
  0056e	74 e0		 je	 SHORT $L243572
$L243574:
  00570	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00573	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00576	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00579	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0057c	89 00		 mov	 DWORD PTR [eax], eax
  0057e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00581	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 254  : 	m_mapTGODTOWER.clear();

  00584	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  00588	8b 4f 68	 mov	 ecx, DWORD PTR [edi+104]
  0058b	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0058e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00591	83 c7 64	 add	 edi, 100		; 00000064H
  00594	3a c3		 cmp	 al, bl
  00596	89 7c 24 24	 mov	 DWORD PTR tv2566[esp+88], edi
  0059a	8b ee		 mov	 ebp, esi
  0059c	75 22		 jne	 SHORT $L243669
  0059e	8b ff		 npad	 2
$L243667:
  005a0	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]
  005a3	52		 push	 edx
  005a4	8b cf		 mov	 ecx, edi
  005a6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase
  005ab	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  005ae	56		 push	 esi
  005af	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005b4	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  005b7	83 c4 04	 add	 esp, 4
  005ba	3a c3		 cmp	 al, bl
  005bc	8b f5		 mov	 esi, ebp
  005be	74 e0		 je	 SHORT $L243667
$L243669:
  005c0	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  005c3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  005c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  005c9	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  005cc	89 00		 mov	 DWORD PTR [eax], eax
  005ce	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  005d1	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 255  : 	m_mapTGODBALL.clear();

  005d4	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  005d8	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
  005db	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  005de	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  005e1	83 c7 70	 add	 edi, 112		; 00000070H
  005e4	3a c3		 cmp	 al, bl
  005e6	89 7c 24 20	 mov	 DWORD PTR tv2588[esp+88], edi
  005ea	8b ee		 mov	 ebp, esi
  005ec	75 22		 jne	 SHORT $L243760
  005ee	8b ff		 npad	 2
$L243758:
  005f0	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  005f3	51		 push	 ecx
  005f4	8b cf		 mov	 ecx, edi
  005f6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  005fb	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  005fe	56		 push	 esi
  005ff	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00604	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00607	83 c4 04	 add	 esp, 4
  0060a	3a c3		 cmp	 al, bl
  0060c	8b f5		 mov	 esi, ebp
  0060e	74 e0		 je	 SHORT $L243758
$L243760:
  00610	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00613	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00616	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00619	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0061c	89 00		 mov	 DWORD PTR [eax], eax
  0061e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00621	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 256  : 	m_mapTTEMPGODBALL.clear();

  00624	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  00628	8b 57 5c	 mov	 edx, DWORD PTR [edi+92]
  0062b	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0062e	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00631	83 c7 58	 add	 edi, 88			; 00000058H
  00634	3a c3		 cmp	 al, bl
  00636	89 7c 24 28	 mov	 DWORD PTR tv2610[esp+88], edi
  0063a	8b ee		 mov	 ebp, esi
  0063c	75 22		 jne	 SHORT $L243867
  0063e	8b ff		 npad	 2
$L243865:
  00640	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  00643	50		 push	 eax
  00644	8b cf		 mov	 ecx, edi
  00646	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  0064b	8b 6d 00	 mov	 ebp, DWORD PTR [ebp]
  0064e	56		 push	 esi
  0064f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00654	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00657	83 c4 04	 add	 esp, 4
  0065a	3a c3		 cmp	 al, bl
  0065c	8b f5		 mov	 esi, ebp
  0065e	74 e0		 je	 SHORT $L243865
$L243867:
  00660	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 257  : 	m_mapTNMTPlayer.clear();

  00663	8b 6c 24 14	 mov	 ebp, DWORD PTR _this$[esp+88]
  00667	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0066a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0066d	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00670	89 00		 mov	 DWORD PTR [eax], eax
  00672	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00675	89 7f 08	 mov	 DWORD PTR [edi+8], edi
  00678	8b 8d 80 00 00
	00		 mov	 ecx, DWORD PTR [ebp+128]
  0067e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00681	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00684	83 c5 7c	 add	 ebp, 124		; 0000007cH
  00687	3a c3		 cmp	 al, bl
  00689	8b fe		 mov	 edi, esi
  0068b	75 22		 jne	 SHORT $L243962
  0068d	8d 49 00	 npad	 3
$L243960:
  00690	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00693	52		 push	 edx
  00694	8b cd		 mov	 ecx, ebp
  00696	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  0069b	8b 3f		 mov	 edi, DWORD PTR [edi]
  0069d	56		 push	 esi
  0069e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006a3	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  006a6	83 c4 04	 add	 esp, 4
  006a9	3a c3		 cmp	 al, bl
  006ab	8b f7		 mov	 esi, edi
  006ad	74 e1		 je	 SHORT $L243960
$L243962:
  006af	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]

; 258  : 	m_mapTUNIT.clear();

  006b2	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+88]
  006b6	89 40 04	 mov	 DWORD PTR [eax+4], eax
  006b9	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  006bc	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  006bf	89 00		 mov	 DWORD PTR [eax], eax
  006c1	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  006c4	89 40 08	 mov	 DWORD PTR [eax+8], eax
  006c7	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  006ca	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  006cd	8a 46 11	 mov	 al, BYTE PTR [esi+17]
  006d0	83 c7 4c	 add	 edi, 76			; 0000004cH
  006d3	3a c3		 cmp	 al, bl
  006d5	89 74 24 1c	 mov	 DWORD PTR $T244013[esp+88], esi
  006d9	75 2a		 jne	 SHORT $L244057
  006db	eb 03 8d 49 00	 npad	 5
$L244055:
  006e0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  006e3	51		 push	 ecx
  006e4	8b cf		 mov	 ecx, edi
  006e6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
  006eb	8b 54 24 1c	 mov	 edx, DWORD PTR $T244013[esp+88]
  006ef	8b 36		 mov	 esi, DWORD PTR [esi]
  006f1	52		 push	 edx
  006f2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006f7	8a 46 11	 mov	 al, BYTE PTR [esi+17]
  006fa	83 c4 04	 add	 esp, 4
  006fd	3a c3		 cmp	 al, bl
  006ff	89 74 24 1c	 mov	 DWORD PTR $T244013[esp+88], esi
  00703	74 db		 je	 SHORT $L244055
$L244057:
  00705	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 259  : 	m_mapTCELL.clear();

  00708	8b 74 24 14	 mov	 esi, DWORD PTR _this$[esp+88]
  0070c	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0070f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00712	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00715	89 00		 mov	 DWORD PTR [eax], eax
  00717	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0071a	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0071d	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00720	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00723	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00726	83 c6 40	 add	 esi, 64			; 00000040H
  00729	3a cb		 cmp	 cl, bl
  0072b	89 44 24 1c	 mov	 DWORD PTR $T244108[esp+88], eax
  0072f	89 44 24 18	 mov	 DWORD PTR __Pnode$244140[esp+88], eax
  00733	75 35		 jne	 SHORT $L244143
$L244141:
  00735	8b 4c 24 18	 mov	 ecx, DWORD PTR __Pnode$244140[esp+88]
  00739	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0073c	52		 push	 edx
  0073d	8b ce		 mov	 ecx, esi
  0073f	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00744	8b 44 24 18	 mov	 eax, DWORD PTR __Pnode$244140[esp+88]
  00748	8b 54 24 1c	 mov	 edx, DWORD PTR $T244108[esp+88]
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	52		 push	 edx
  0074f	89 4c 24 1c	 mov	 DWORD PTR __Pnode$244140[esp+92], ecx
  00753	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00758	8b 44 24 1c	 mov	 eax, DWORD PTR __Pnode$244140[esp+92]
  0075c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0075f	83 c4 04	 add	 esp, 4
  00762	3a cb		 cmp	 cl, bl
  00764	89 44 24 1c	 mov	 DWORD PTR $T244108[esp+88], eax
  00768	74 cb		 je	 SHORT $L244141
$L244143:
  0076a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0076d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00770	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00773	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00776	89 00		 mov	 DWORD PTR [eax], eax
  00778	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0077b	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 260  : }

  0077e	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00781	8b 08		 mov	 ecx, DWORD PTR [eax]
  00783	50		 push	 eax
  00784	51		 push	 ecx
  00785	8d 44 24 24	 lea	 eax, DWORD PTR $T244299[esp+96]
  00789	50		 push	 eax
  0078a	8b cd		 mov	 ecx, ebp
  0078c	c6 44 24 60 09	 mov	 BYTE PTR __$EHRec$[esp+108], 9
  00791	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::erase
  00796	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00799	50		 push	 eax
  0079a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0079f	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  007a2	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  007a5	8b 6c 24 24	 mov	 ebp, DWORD PTR tv2588[esp+92]
  007a9	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  007ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ae	83 c4 04	 add	 esp, 4
  007b1	50		 push	 eax
  007b2	51		 push	 ecx
  007b3	8d 4c 24 28	 lea	 ecx, DWORD PTR $T244460[esp+96]
  007b7	51		 push	 ecx
  007b8	8b cd		 mov	 ecx, ebp
  007ba	c6 44 24 60 08	 mov	 BYTE PTR __$EHRec$[esp+108], 8
  007bf	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
  007c4	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  007c7	50		 push	 eax
  007c8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007cd	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  007d0	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  007d3	8b 6c 24 28	 mov	 ebp, DWORD PTR tv2566[esp+92]
  007d7	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  007da	8b 08		 mov	 ecx, DWORD PTR [eax]
  007dc	83 c4 04	 add	 esp, 4
  007df	50		 push	 eax
  007e0	51		 push	 ecx
  007e1	8d 54 24 2c	 lea	 edx, DWORD PTR $T244621[esp+96]
  007e5	52		 push	 edx
  007e6	8b cd		 mov	 ecx, ebp
  007e8	c6 44 24 60 07	 mov	 BYTE PTR __$EHRec$[esp+108], 7
  007ed	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::erase
  007f2	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  007f5	50		 push	 eax
  007f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007fb	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  007fe	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  00801	8b 6c 24 2c	 mov	 ebp, DWORD PTR tv2610[esp+92]
  00805	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00808	8b 08		 mov	 ecx, DWORD PTR [eax]
  0080a	83 c4 04	 add	 esp, 4
  0080d	50		 push	 eax
  0080e	51		 push	 ecx
  0080f	8d 44 24 30	 lea	 eax, DWORD PTR $T244785[esp+96]
  00813	50		 push	 eax
  00814	8b cd		 mov	 ecx, ebp
  00816	c6 44 24 60 06	 mov	 BYTE PTR __$EHRec$[esp+108], 6
  0081b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
  00820	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00823	50		 push	 eax
  00824	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00829	83 c4 04	 add	 esp, 4
  0082c	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  0082f	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  00832	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00835	8b 08		 mov	 ecx, DWORD PTR [eax]
  00837	50		 push	 eax
  00838	51		 push	 ecx
  00839	8d 4c 24 30	 lea	 ecx, DWORD PTR $T244939[esp+96]
  0083d	51		 push	 ecx
  0083e	8b cf		 mov	 ecx, edi
  00840	c6 44 24 60 05	 mov	 BYTE PTR __$EHRec$[esp+108], 5
  00845	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::erase
  0084a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0084d	50		 push	 eax
  0084e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00853	83 c4 04	 add	 esp, 4
  00856	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00859	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0085c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0085f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00861	50		 push	 eax
  00862	51		 push	 ecx
  00863	8d 54 24 30	 lea	 edx, DWORD PTR $T245099[esp+96]
  00867	52		 push	 edx
  00868	8b ce		 mov	 ecx, esi
  0086a	c6 44 24 60 04	 mov	 BYTE PTR __$EHRec$[esp+108], 4
  0086f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00874	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00877	50		 push	 eax
  00878	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0087d	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00880	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00883	8b 74 24 30	 mov	 esi, DWORD PTR tv2478[esp+92]
  00887	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0088a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0088c	83 c4 04	 add	 esp, 4
  0088f	50		 push	 eax
  00890	51		 push	 ecx
  00891	8d 44 24 34	 lea	 eax, DWORD PTR $T245261[esp+96]
  00895	50		 push	 eax
  00896	8b ce		 mov	 ecx, esi
  00898	c6 44 24 60 03	 mov	 BYTE PTR __$EHRec$[esp+108], 3
  0089d	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::erase
  008a2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  008a5	50		 push	 eax
  008a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  008ab	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  008ae	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  008b1	8b 74 24 34	 mov	 esi, DWORD PTR tv2456[esp+92]
  008b5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  008b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ba	83 c4 04	 add	 esp, 4
  008bd	50		 push	 eax
  008be	51		 push	 ecx
  008bf	8d 4c 24 38	 lea	 ecx, DWORD PTR $T245421[esp+96]
  008c3	51		 push	 ecx
  008c4	8b ce		 mov	 ecx, esi
  008c6	c6 44 24 60 02	 mov	 BYTE PTR __$EHRec$[esp+108], 2
  008cb	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::erase
  008d0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  008d3	50		 push	 eax
  008d4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  008d9	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  008dc	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  008df	8b 74 24 38	 mov	 esi, DWORD PTR tv2522[esp+92]
  008e3	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  008e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  008e8	83 c4 04	 add	 esp, 4
  008eb	50		 push	 eax
  008ec	51		 push	 ecx
  008ed	8d 54 24 3c	 lea	 edx, DWORD PTR $T245580[esp+96]
  008f1	52		 push	 edx
  008f2	8b ce		 mov	 ecx, esi
  008f4	c6 44 24 60 01	 mov	 BYTE PTR __$EHRec$[esp+108], 1
  008f9	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
  008fe	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00901	50		 push	 eax
  00902	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00907	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0090a	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0090d	8b 74 24 40	 mov	 esi, DWORD PTR tv2544[esp+92]
  00911	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00914	8b 08		 mov	 ecx, DWORD PTR [eax]
  00916	83 c4 04	 add	 esp, 4
  00919	50		 push	 eax
  0091a	51		 push	 ecx
  0091b	8d 44 24 44	 lea	 eax, DWORD PTR $T245741[esp+96]
  0091f	50		 push	 eax
  00920	8b ce		 mov	 ecx, esi
  00922	88 5c 24 60	 mov	 BYTE PTR __$EHRec$[esp+108], bl
  00926	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::erase
  0092b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0092e	50		 push	 eax
  0092f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00934	83 c4 04	 add	 esp, 4
  00937	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0093a	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  0093d	8b 74 24 44	 mov	 esi, DWORD PTR tv2500[esp+88]
  00941	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00944	8b 08		 mov	 ecx, DWORD PTR [eax]
  00946	50		 push	 eax
  00947	51		 push	 ecx
  00948	8d 4c 24 4c	 lea	 ecx, DWORD PTR $T245898[esp+96]
  0094c	51		 push	 ecx
  0094d	8b ce		 mov	 ecx, esi
  0094f	c7 44 24 60 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+108], -1
  00957	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
  0095c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0095f	52		 push	 edx
  00960	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00965	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  00969	83 c4 04	 add	 esp, 4
  0096c	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0096f	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  00972	5f		 pop	 edi
  00973	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0097a	5e		 pop	 esi
  0097b	5d		 pop	 ebp
  0097c	5b		 pop	 ebx
  0097d	8b e5		 mov	 esp, ebp
  0097f	5d		 pop	 ebp
  00980	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L240655:
  00000	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
$L240656:
  0000b	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
$L240657:
  00016	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
$L240658:
  00021	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
$L240659:
  0002c	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
$L240660:
  00037	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L240661:
  00042	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00048	e9 00 00 00 00	 jmp	 ??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
$L240662:
  0004d	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 58	 add	 ecx, 88			; 00000058H
  00053	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L240663:
  00058	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 64	 add	 ecx, 100		; 00000064H
  0005e	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
$L240664:
  00063	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 70	 add	 ecx, 112		; 00000070H
  00069	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L240665:
  0006e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00074	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
__ehhandler$??1CTMap@@UAE@XZ:
  00079	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T245928
  0007e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CTMap@@UAE@XZ ENDP					; CTMap::~CTMap
PUBLIC	?InitMap@CTMap@@QAEXPAVCSqlDatabase@@E@Z	; CTMap::InitMap
; Function compile flags: /Ogty
;	COMDAT ?InitMap@CTMap@@QAEXPAVCSqlDatabase@@E@Z
_TEXT	SEGMENT
_itUNIT$ = -4						; size = 4
_pDB$ = 8						; size = 4
_bServerID$ = 12					; size = 1
?InitMap@CTMap@@QAEXPAVCSqlDatabase@@E@Z PROC NEAR	; CTMap::InitMap, COMDAT
; _this$ = ecx

; 264  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 265  : 	MAPWORD::iterator itUNIT;
; 266  : 
; 267  : 	for( itUNIT = m_mapTUNIT.begin(); itUNIT != m_mapTUNIT.end(); itUNIT++)

  00002	8b 5c 24 10	 mov	 ebx, DWORD PTR _bServerID$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 4f 50	 mov	 ecx, DWORD PTR [edi+80]
  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	3b c1		 cmp	 eax, ecx
  00011	89 44 24 0c	 mov	 DWORD PTR _itUNIT$[esp+16], eax
  00015	74 29		 je	 SHORT $L176466
  00017	8b 74 24 14	 mov	 esi, DWORD PTR _pDB$[esp+12]
  0001b	eb 03 8d 49 00	 npad	 5
$L246055:

; 268  : 		InitCell( pDB, bServerID, (*itUNIT).second);

  00020	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00024	50		 push	 eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 ?InitCell@CTMap@@QAEXPAVCSqlDatabase@@EG@Z ; CTMap::InitCell
  0002e	8d 4c 24 0c	 lea	 ecx, DWORD PTR _itUNIT$[esp+16]
  00032	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc
  00037	8b 44 24 0c	 mov	 eax, DWORD PTR _itUNIT$[esp+16]
  0003b	3b 47 50	 cmp	 eax, DWORD PTR [edi+80]
  0003e	75 e0		 jne	 SHORT $L246055
$L176466:

; 269  : 
; 270  : 	for( itUNIT = m_mapTUNIT.begin(); itUNIT != m_mapTUNIT.end(); itUNIT++)

  00040	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  00043	8b 30		 mov	 esi, DWORD PTR [eax]
  00045	3b f0		 cmp	 esi, eax
  00047	74 66		 je	 SHORT $L246368
  00049	8d a4 24 00 00
	00 00		 npad	 7
$L246281:

; 271  : 		InitExtCell((*itUNIT).second);

  00050	33 c9		 xor	 ecx, ecx
  00052	66 8b 4e 0e	 mov	 cx, WORD PTR [esi+14]
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?InitExtCell@CTMap@@QAEXG@Z ; CTMap::InitExtCell
  0005e	8a 46 11	 mov	 al, BYTE PTR [esi+17]
  00061	84 c0		 test	 al, al
  00063	75 45		 jne	 SHORT $L246316
  00065	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00068	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  0006b	84 c9		 test	 cl, cl
  0006d	75 1e		 jne	 SHORT $L246363
  0006f	8b f0		 mov	 esi, eax
  00071	8b 06		 mov	 eax, DWORD PTR [esi]
  00073	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00076	84 c9		 test	 cl, cl
  00078	75 30		 jne	 SHORT $L246316
  0007a	8d 9b 00 00 00
	00		 npad	 6

; 269  : 
; 270  : 	for( itUNIT = m_mapTUNIT.begin(); itUNIT != m_mapTUNIT.end(); itUNIT++)

$L246295:
  00080	8b f0		 mov	 esi, eax
  00082	8b 06		 mov	 eax, DWORD PTR [esi]
  00084	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00087	84 c9		 test	 cl, cl
  00089	74 f5		 je	 SHORT $L246295
  0008b	eb 1d		 jmp	 SHORT $L246316
$L246363:
  0008d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00090	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00093	84 c9		 test	 cl, cl
  00095	75 11		 jne	 SHORT $L246319
$L246318:
  00097	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0009a	75 0c		 jne	 SHORT $L246319
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a1	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  000a4	84 c9		 test	 cl, cl
  000a6	74 ef		 je	 SHORT $L246318
$L246319:
  000a8	8b f0		 mov	 esi, eax
$L246316:
  000aa	3b 77 50	 cmp	 esi, DWORD PTR [edi+80]
  000ad	75 a1		 jne	 SHORT $L246281
$L246368:

; 272  : 
; 273  : 	m_bServerID = bServerID;

  000af	88 9f 8c 00 00
	00		 mov	 BYTE PTR [edi+140], bl
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx

; 274  : }

  000b8	59		 pop	 ecx
  000b9	c2 08 00	 ret	 8
?InitMap@CTMap@@QAEXPAVCSqlDatabase@@E@Z ENDP		; CTMap::InitMap
_TEXT	ENDS
PUBLIC	?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ; CTMap::InitMonster
EXTRN	?FindTMonster@CTMapSvrModule@@QAEPAUtagTMONSTER@@G@Z:NEAR ; CTMapSvrModule::FindTMonster
EXTRN	?FindTLevel@CTMapSvrModule@@QAEPAUtagTLEVEL@@E@Z:NEAR ; CTMapSvrModule::FindTLevel
EXTRN	?FindTClass@CTMapSvrModule@@QAEPAUtagTSTAT@@E@Z:NEAR ; CTMapSvrModule::FindTClass
EXTRN	?FindTRace@CTMapSvrModule@@QAEPAUtagTSTAT@@E@Z:NEAR ; CTMapSvrModule::FindTRace
EXTRN	?FindTItem@CTMapSvrModule@@QAEPAUtagTITEM@@G@Z:NEAR ; CTMapSvrModule::FindTItem
EXTRN	?FindTSkill@CTMapSvrModule@@QAEPAVCTSkillTemp@@G@Z:NEAR ; CTMapSvrModule::FindTSkill
EXTRN	?FindMonAttr@CTMapSvrModule@@QAEPAUtagTMONATTR@@K@Z:NEAR ; CTMapSvrModule::FindMonAttr
EXTRN	?Initialize@CTMonster@@QAEXXZ:NEAR		; CTMonster::Initialize
EXTRN	??0CTSkill@@QAE@XZ:NEAR				; CTSkill::CTSkill
EXTRN	??0CTInven@@QAE@XZ:NEAR				; CTInven::CTInven
EXTRN	??0CTMonster@@QAE@XZ:NEAR			; CTMonster::CTMonster
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T247255 DD	0ffffffffH
	DD	FLAT:$L246408
	DD	0ffffffffH
	DD	FLAT:$L246409
	DD	0ffffffffH
	DD	FLAT:$L246410
	DD	0ffffffffH
	DD	FLAT:$L246411
	DD	0ffffffffH
	DD	FLAT:$L246412
$T247240 DD	019930520H
	DD	05H
	DD	FLAT:$T247255
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
_TEXT	SEGMENT
_bIndex$ = -70						; size = 1
_i$177063 = -69						; size = 1
_this$ = -68						; size = 4
tv758 = -64						; size = 4
$T246406 = -64						; size = 8
tv834 = -56						; size = 4
$T246373 = -56						; size = 4
_pMON$177067 = -56					; size = 4
tv829 = -52						; size = 4
_pMON$177261 = -52					; size = 4
$T246401 = -48						; size = 4
$T246394 = -48						; size = 4
$T246386 = -48						; size = 4
$T246382 = -48						; size = 8
$T246377 = -48						; size = 4
$T246404 = -40						; size = 8
$T246380 = -40						; size = 8
$T246397 = -32						; size = 8
$T246383 = -32						; size = 8
$T246407 = -24						; size = 8
$T246405 = -24						; size = 8
$T246399 = -24						; size = 8
$T246384 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_pMonSpawn$ = 8						; size = 4
_pSPAWN$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_bCountry$ = 20						; size = 1
_bRegenType$ = 24					; size = 1
?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z PROC NEAR ; CTMap::InitMonster, COMDAT
; _this$ = ecx

; 556  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00013	50		 push	 eax
  00014	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0001b	83 ec 40	 sub	 esp, 64			; 00000040H
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi

; 557  : 	if( pSPAWN->m_vMAPMON.empty() )

  00021	8b 7d 0c	 mov	 edi, DWORD PTR _pSPAWN$[ebp]
  00024	89 4c 24 14	 mov	 DWORD PTR _this$[esp+88], ecx
  00028	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0002b	85 c9		 test	 ecx, ecx
  0002d	0f 84 f5 04 00
	00		 je	 $L246391
  00033	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00036	2b c1		 sub	 eax, ecx
  00038	c1 f8 02	 sar	 eax, 2
  0003b	85 c0		 test	 eax, eax
  0003d	0f 84 e5 04 00
	00		 je	 $L246391

; 558  : 		return;
; 559  : 
; 560  : 	BYTE bIndex = 0;
; 561  : 
; 562  : 	for( BYTE i=0; i<pSPAWN->m_bCount; i++)

  00043	8a 47 4f	 mov	 al, BYTE PTR [edi+79]
  00046	84 c0		 test	 al, al
  00048	c6 44 24 12 00	 mov	 BYTE PTR _bIndex$[esp+88], 0
  0004d	c6 44 24 13 00	 mov	 BYTE PTR _i$177063[esp+88], 0
  00052	0f 86 b8 01 00
	00		 jbe	 $L177066

; 592  : 		pMonSpawn->m_vTMON.push_back(pMON);

  00058	0f b6 55 18	 movzx	 edx, BYTE PTR _bRegenType$[ebp]
  0005c	8b 5d 08	 mov	 ebx, DWORD PTR _pMonSpawn$[ebp]
  0005f	33 c0		 xor	 eax, eax
  00061	8a 65 10	 mov	 ah, BYTE PTR _bChannel$[ebp]
  00064	c6 44 24 30 ff	 mov	 BYTE PTR $T246380[esp+88], 255 ; 000000ffH
  00069	83 c3 08	 add	 ebx, 8
  0006c	89 54 24 24	 mov	 DWORD PTR tv829[esp+88], edx
  00070	0f b7 c8	 movzx	 ecx, ax
  00073	89 4c 24 18	 mov	 DWORD PTR tv758[esp+88], ecx
  00077	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$L177064:
  00080	68 78 01 00 00	 push	 376			; 00000178H
  00085	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008a	83 c4 04	 add	 esp, 4
  0008d	89 44 24 20	 mov	 DWORD PTR $T246373[esp+88], eax
  00091	33 f6		 xor	 esi, esi
  00093	3b c6		 cmp	 eax, esi
  00095	89 74 24 54	 mov	 DWORD PTR __$EHRec$[esp+96], esi
  00099	74 09		 je	 SHORT $L246375
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??0CTMonster@@QAE@XZ	; CTMonster::CTMonster
  000a2	8b f0		 mov	 esi, eax
$L246375:
  000a4	0f b7 47 34	 movzx	 eax, WORD PTR [edi+52]
  000a8	0f b6 4c 24 12	 movzx	 ecx, BYTE PTR _bIndex$[esp+88]
  000ad	c1 e0 10	 shl	 eax, 16			; 00000010H
  000b0	0b c1		 or	 eax, ecx
  000b2	0b 44 24 18	 or	 eax, DWORD PTR tv758[esp+88]
  000b6	8a 4d 14	 mov	 cl, BYTE PTR _bCountry$[ebp]
  000b9	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000bc	8b 44 24 14	 mov	 eax, DWORD PTR _this$[esp+88]
  000c0	89 46 40	 mov	 DWORD PTR [esi+64], eax
  000c3	66 8b 90 8a 00
	00 00		 mov	 dx, WORD PTR [eax+138]
  000ca	66 89 96 90 00
	00 00		 mov	 WORD PTR [esi+144], dx
  000d1	8a 55 10	 mov	 dl, BYTE PTR _bChannel$[ebp]
  000d4	33 c0		 xor	 eax, eax
  000d6	89 46 50	 mov	 DWORD PTR [esi+80], eax
  000d9	89 46 48	 mov	 DWORD PTR [esi+72], eax
  000dc	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  000df	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  000e5	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  000eb	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  000ee	89 46 64	 mov	 DWORD PTR [esi+100], eax
  000f1	8b 45 08	 mov	 eax, DWORD PTR _pMonSpawn$[ebp]
  000f4	88 8e 9d 00 00
	00		 mov	 BYTE PTR [esi+157], cl
  000fa	88 56 74	 mov	 BYTE PTR [esi+116], dl
  000fd	c6 86 fc 00 00
	00 00		 mov	 BYTE PTR [esi+252], 0
  00104	6a 30		 push	 48			; 00000030H
  00106	c7 44 24 58 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+100], -1
  0010e	89 74 24 24	 mov	 DWORD PTR _pMON$177067[esp+92], esi
  00112	89 86 e8 00 00
	00		 mov	 DWORD PTR [esi+232], eax
  00118	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0011d	83 c4 04	 add	 esp, 4
  00120	89 44 24 28	 mov	 DWORD PTR $T246377[esp+88], eax
  00124	85 c0		 test	 eax, eax
  00126	c7 44 24 54 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 1
  0012e	74 0b		 je	 SHORT $L246378
  00130	8b c8		 mov	 ecx, eax
  00132	e8 00 00 00 00	 call	 ??0CTInven@@QAE@XZ	; CTInven::CTInven
  00137	8b f8		 mov	 edi, eax
  00139	eb 02		 jmp	 SHORT $L246379
$L246378:

; 563  : 	{
; 564  : 		CTMonster *pMON = new CTMonster();
; 565  : 
; 566  : 		pMON->m_dwID = MAKELONG( MAKEWORD( bIndex, bChannel), pSPAWN->m_wID);
; 567  : 		pMON->m_pMAP = this;
; 568  : 		pMON->m_wMapID = m_wMapID;
; 569  : 
; 570  : 		pMON->m_pTLEVEL = NULL;
; 571  : 		pMON->m_pTCLASS = NULL;
; 572  : 		pMON->m_pTRACE = NULL;
; 573  : 		pMON->m_pMON = NULL;
; 574  : 		pMON->m_pATTR = NULL;
; 575  : 
; 576  : 		pMON->m_dwRegion = pSPAWN->m_dwRegion;
; 577  : 		pMON->m_bCountry = bCountry;
; 578  : 		pMON->m_bChannel = bChannel;
; 579  : 
; 580  : 		pMON->m_bEssential = FALSE;
; 581  : 		pMON->m_pSPAWN = pMonSpawn;
; 582  : 
; 583  : 		CTInven *pInven = new CTInven();

  0013b	33 ff		 xor	 edi, edi
$L246379:

; 584  : 		pInven->m_bInvenID = INVEN_DEFAULT;
; 585  : 		pInven->m_wItemID = 3;
; 586  : 		pInven->m_pTITEM = _AtlModule.FindTItem(pInven->m_wItemID);

  0013d	6a 03		 push	 3
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  00144	c7 44 24 58 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+100], -1
  0014c	c6 47 18 ff	 mov	 BYTE PTR [edi+24], 255	; 000000ffH
  00150	66 c7 47 1a 03
	00		 mov	 WORD PTR [edi+26], 3
  00156	e8 00 00 00 00	 call	 ?FindTItem@CTMapSvrModule@@QAEPAUtagTITEM@@G@Z ; CTMapSvrModule::FindTItem

; 587  : 
; 588  : 		pMON->m_mapTINVEN.insert( MAPTINVEN::value_type( INVEN_DEFAULT, pInven));

  0015b	8d 4c 24 30	 lea	 ecx, DWORD PTR $T246380[esp+88]
  0015f	51		 push	 ecx
  00160	8d 54 24 2c	 lea	 edx, DWORD PTR $T246382[esp+92]
  00164	52		 push	 edx
  00165	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00168	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0016b	89 7c 24 3c	 mov	 DWORD PTR $T246380[esp+100], edi
  0016f	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::insert

; 589  : 		bIndex++;

  00174	8a 4c 24 12	 mov	 cl, BYTE PTR _bIndex$[esp+88]

; 590  : 
; 591  : 		m_mapTMONSTER.insert( MAPTMONSTER::value_type( pMON->m_dwID, pMON));

  00178	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0017b	fe c1		 inc	 cl
  0017d	88 4c 24 12	 mov	 BYTE PTR _bIndex$[esp+88], cl
  00181	8d 4c 24 38	 lea	 ecx, DWORD PTR $T246383[esp+88]
  00185	51		 push	 ecx
  00186	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$[esp+92]
  0018a	8d 54 24 44	 lea	 edx, DWORD PTR $T246384[esp+92]
  0018e	52		 push	 edx
  0018f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00192	89 44 24 40	 mov	 DWORD PTR $T246383[esp+96], eax
  00196	89 74 24 44	 mov	 DWORD PTR $T246383[esp+100], esi
  0019a	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert

; 592  : 		pMonSpawn->m_vTMON.push_back(pMON);

  0019f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  001a2	85 c0		 test	 eax, eax
  001a4	75 04		 jne	 SHORT $L246620
  001a6	33 d2		 xor	 edx, edx
  001a8	eb 08		 jmp	 SHORT $L246621
$L246620:
  001aa	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  001ad	2b d0		 sub	 edx, eax
  001af	c1 fa 02	 sar	 edx, 2
$L246621:
  001b2	85 c0		 test	 eax, eax
  001b4	74 19		 je	 SHORT $L246682
  001b6	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  001b9	2b c8		 sub	 ecx, eax
  001bb	c1 f9 02	 sar	 ecx, 2
  001be	3b d1		 cmp	 edx, ecx
  001c0	73 0d		 jae	 SHORT $L246682
  001c2	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001c5	89 30		 mov	 DWORD PTR [eax], esi
  001c7	83 c0 04	 add	 eax, 4
  001ca	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  001cd	eb 12		 jmp	 SHORT $L246676
$L246682:
  001cf	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001d2	8d 4c 24 20	 lea	 ecx, DWORD PTR _pMON$177067[esp+88]
  001d6	51		 push	 ecx
  001d7	6a 01		 push	 1
  001d9	50		 push	 eax
  001da	8b cb		 mov	 ecx, ebx
  001dc	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
$L246676:

; 593  : 
; 594  : 		switch(bRegenType)

  001e1	8b 44 24 24	 mov	 eax, DWORD PTR tv829[esp+88]
  001e5	83 e8 00	 sub	 eax, 0
  001e8	74 05		 je	 SHORT $L177253
  001ea	83 e8 02	 sub	 eax, 2
  001ed	75 07		 jne	 SHORT $L177065
$L177253:

; 595  : 		{
; 596  : 		case RT_ETERNAL		: 
; 597  : 			pMON->Initialize();

  001ef	8b ce		 mov	 ecx, esi
  001f1	e8 00 00 00 00	 call	 ?Initialize@CTMonster@@QAEXXZ ; CTMonster::Initialize
$L177065:
  001f6	8a 44 24 13	 mov	 al, BYTE PTR _i$177063[esp+88]
  001fa	8b 55 0c	 mov	 edx, DWORD PTR _pSPAWN$[ebp]
  001fd	8a 4a 4f	 mov	 cl, BYTE PTR [edx+79]
  00200	fe c0		 inc	 al
  00202	3a c1		 cmp	 al, cl
  00204	88 44 24 13	 mov	 BYTE PTR _i$177063[esp+88], al
  00208	8b fa		 mov	 edi, edx
  0020a	0f 82 70 fe ff
	ff		 jb	 $L177064
$L177066:

; 598  : 			break;
; 599  : 		case RT_TIMELIMIT	:
; 600  : 			{
; 601  : 				pMON->Initialize();
; 602  : //				pMON->OnEvent( AT_TIMEOUT, 0, 0, 0, 0);
; 603  : 			}
; 604  : 
; 605  : 			break;
; 606  : 		}
; 607  : 	}
; 608  : 
; 609  : 	for( i=0; i<INT(pSPAWN->m_vMAPMON.size()); i++)

  00210	c6 44 24 13 00	 mov	 BYTE PTR _i$177063[esp+88], 0
$L177255:
  00215	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00218	85 c9		 test	 ecx, ecx
  0021a	75 04		 jne	 SHORT $L246690
  0021c	33 c0		 xor	 eax, eax
  0021e	eb 08		 jmp	 SHORT $L246691
$L246690:
  00220	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00223	2b c1		 sub	 eax, ecx
  00225	c1 f8 02	 sar	 eax, 2
$L246691:
  00228	0f b6 54 24 13	 movzx	 edx, BYTE PTR _i$177063[esp+88]
  0022d	3b d0		 cmp	 edx, eax
  0022f	0f 8d f3 02 00
	00		 jge	 $L246391

; 610  : 		if(pSPAWN->m_vMAPMON[i]->m_bEssential)

  00235	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  0023c	8b 14 08	 mov	 edx, DWORD PTR [eax+ecx]
  0023f	8a 5a 05	 mov	 bl, BYTE PTR [edx+5]
  00242	84 db		 test	 bl, bl
  00244	89 44 24 20	 mov	 DWORD PTR tv834[esp+88], eax
  00248	0f 84 c5 02 00
	00		 je	 $L177256

; 611  : 		{
; 612  : 			LPTMONSTER pTEMP = _AtlModule.FindTMonster(pSPAWN->m_vMAPMON[i]->m_wMonID);

  0024e	33 c9		 xor	 ecx, ecx
  00250	8b c2		 mov	 eax, edx
  00252	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  00256	51		 push	 ecx
  00257	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  0025c	e8 00 00 00 00	 call	 ?FindTMonster@CTMapSvrModule@@QAEPAUtagTMONSTER@@G@Z ; CTMapSvrModule::FindTMonster
  00261	8b f8		 mov	 edi, eax

; 613  : 
; 614  : 			if(pTEMP)

  00263	85 ff		 test	 edi, edi
  00265	0f 84 a5 02 00
	00		 je	 $L247252

; 615  : 			{
; 616  : 				CTMonster *pMON = new CTMonster();

  0026b	68 78 01 00 00	 push	 376			; 00000178H
  00270	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00275	83 c4 04	 add	 esp, 4
  00278	89 44 24 28	 mov	 DWORD PTR $T246386[esp+88], eax
  0027c	85 c0		 test	 eax, eax
  0027e	c7 44 24 54 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 2
  00286	74 0b		 je	 SHORT $L246387
  00288	8b c8		 mov	 ecx, eax
  0028a	e8 00 00 00 00	 call	 ??0CTMonster@@QAE@XZ	; CTMonster::CTMonster
  0028f	8b f0		 mov	 esi, eax
  00291	eb 02		 jmp	 SHORT $L246388
$L246387:
  00293	33 f6		 xor	 esi, esi
$L246388:

; 617  : 
; 618  : 				pMON->m_dwID = MAKELONG( MAKEWORD( bIndex, bChannel), pSPAWN->m_wID);

  00295	8a 5d 10	 mov	 bl, BYTE PTR _bChannel$[ebp]
  00298	8b 55 0c	 mov	 edx, DWORD PTR _pSPAWN$[ebp]
  0029b	0f b7 42 34	 movzx	 eax, WORD PTR [edx+52]
  0029f	33 c9		 xor	 ecx, ecx
  002a1	8a eb		 mov	 ch, bl
  002a3	c1 e0 10	 shl	 eax, 16			; 00000010H
  002a6	c7 44 24 54 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+96], -1
  002ae	89 74 24 24	 mov	 DWORD PTR _pMON$177261[esp+88], esi
  002b2	0f b7 d1	 movzx	 edx, cx
  002b5	0f b6 4c 24 12	 movzx	 ecx, BYTE PTR _bIndex$[esp+88]
  002ba	0b c2		 or	 eax, edx
  002bc	0b c1		 or	 eax, ecx
  002be	89 46 44	 mov	 DWORD PTR [esi+68], eax

; 619  : 				pMON->m_pMON = pTEMP;
; 620  : 				pMON->m_pMAP = this;

  002c1	8b 44 24 14	 mov	 eax, DWORD PTR _this$[esp+88]
  002c5	89 be ec 00 00
	00		 mov	 DWORD PTR [esi+236], edi
  002cb	89 46 40	 mov	 DWORD PTR [esi+64], eax

; 621  : 				pMON->m_wMapID = m_wMapID;

  002ce	66 8b 90 8a 00
	00 00		 mov	 dx, WORD PTR [eax+138]
  002d5	66 89 96 90 00
	00 00		 mov	 WORD PTR [esi+144], dx

; 622  : 
; 623  : 				pMON->m_pTLEVEL = _AtlModule.FindTLevel(pMON->m_pMON->m_bLevel);

  002dc	8b 86 ec 00 00
	00		 mov	 eax, DWORD PTR [esi+236]
  002e2	33 c9		 xor	 ecx, ecx
  002e4	8a 48 2a	 mov	 cl, BYTE PTR [eax+42]
  002e7	51		 push	 ecx
  002e8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  002ed	e8 00 00 00 00	 call	 ?FindTLevel@CTMapSvrModule@@QAEPAUtagTLEVEL@@E@Z ; CTMapSvrModule::FindTLevel
  002f2	89 46 50	 mov	 DWORD PTR [esi+80], eax

; 624  : 				pMON->m_pTCLASS = _AtlModule.FindTClass(pMON->m_pMON->m_bClass);

  002f5	8b 96 ec 00 00
	00		 mov	 edx, DWORD PTR [esi+236]
  002fb	33 c0		 xor	 eax, eax
  002fd	8a 42 26	 mov	 al, BYTE PTR [edx+38]
  00300	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ?FindTClass@CTMapSvrModule@@QAEPAUtagTSTAT@@E@Z ; CTMapSvrModule::FindTClass
  0030b	89 46 48	 mov	 DWORD PTR [esi+72], eax

; 625  : 				pMON->m_pTRACE = _AtlModule.FindTRace(pMON->m_pMON->m_bRace);

  0030e	8b 8e ec 00 00
	00		 mov	 ecx, DWORD PTR [esi+236]
  00314	33 d2		 xor	 edx, edx
  00316	8a 51 2b	 mov	 dl, BYTE PTR [ecx+43]
  00319	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  0031e	52		 push	 edx
  0031f	e8 00 00 00 00	 call	 ?FindTRace@CTMapSvrModule@@QAEPAUtagTSTAT@@E@Z ; CTMapSvrModule::FindTRace
  00324	89 46 4c	 mov	 DWORD PTR [esi+76], eax

; 626  : 				pMON->m_pATTR = _AtlModule.FindMonAttr(MAKELONG(pMON->m_pMON->m_wMonAttr, pTEMP->m_bLevel));

  00327	8b 86 ec 00 00
	00		 mov	 eax, DWORD PTR [esi+236]
  0032d	0f b6 57 2a	 movzx	 edx, BYTE PTR [edi+42]
  00331	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  00335	c1 e2 10	 shl	 edx, 16			; 00000010H
  00338	0b ca		 or	 ecx, edx
  0033a	51		 push	 ecx
  0033b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  00340	e8 00 00 00 00	 call	 ?FindMonAttr@CTMapSvrModule@@QAEPAUtagTMONATTR@@K@Z ; CTMapSvrModule::FindMonAttr

; 627  : 
; 628  : 				if(!pMON->m_pATTR)

  00345	85 c0		 test	 eax, eax
  00347	89 86 f0 00 00
	00		 mov	 DWORD PTR [esi+240], eax
  0034d	0f 84 c9 01 00
	00		 je	 $L247246

; 632  : 					return;
; 633  : 				}
; 634  : 
; 635  : 				pMON->m_bLevel = pTEMP->m_bLevel;

  00353	8a 47 2a	 mov	 al, BYTE PTR [edi+42]

; 636  : 				pMON->m_pSPAWN = pMonSpawn;

  00356	8b 4d 08	 mov	 ecx, DWORD PTR _pMonSpawn$[ebp]

; 637  : 				pMON->m_bEssential = TRUE;
; 638  : 
; 639  : 				pMON->m_dwRegion = pSPAWN->m_dwRegion;

  00359	8b 55 0c	 mov	 edx, DWORD PTR _pSPAWN$[ebp]
  0035c	88 46 7b	 mov	 BYTE PTR [esi+123], al
  0035f	89 8e e8 00 00
	00		 mov	 DWORD PTR [esi+232], ecx

; 640  : 				pMON->m_bCountry = bCountry;

  00365	8a 4d 14	 mov	 cl, BYTE PTR _bCountry$[ebp]
  00368	c6 86 fc 00 00
	00 01		 mov	 BYTE PTR [esi+252], 1
  0036f	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00372	89 46 64	 mov	 DWORD PTR [esi+100], eax
  00375	88 8e 9d 00 00
	00		 mov	 BYTE PTR [esi+157], cl

; 641  : 				pMON->m_bChannel = bChannel;
; 642  : 
; 643  : 				CTInven *pInven = new CTInven();

  0037b	6a 30		 push	 48			; 00000030H
  0037d	88 5e 74	 mov	 BYTE PTR [esi+116], bl
  00380	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00385	83 c4 04	 add	 esp, 4
  00388	89 44 24 28	 mov	 DWORD PTR $T246394[esp+88], eax
  0038c	85 c0		 test	 eax, eax
  0038e	bb 03 00 00 00	 mov	 ebx, 3
  00393	89 5c 24 54	 mov	 DWORD PTR __$EHRec$[esp+96], ebx
  00397	74 0b		 je	 SHORT $L246395
  00399	8b c8		 mov	 ecx, eax
  0039b	e8 00 00 00 00	 call	 ??0CTInven@@QAE@XZ	; CTInven::CTInven
  003a0	8b f8		 mov	 edi, eax
  003a2	eb 02		 jmp	 SHORT $L246396
$L246395:
  003a4	33 ff		 xor	 edi, edi
$L246396:

; 644  : 				pInven->m_bInvenID = INVEN_DEFAULT;
; 645  : 				pInven->m_wItemID = 3;
; 646  : 				pInven->m_pTITEM = _AtlModule.FindTItem(pInven->m_wItemID);

  003a6	53		 push	 ebx
  003a7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  003ac	c7 44 24 58 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+100], -1
  003b4	c6 47 18 ff	 mov	 BYTE PTR [edi+24], 255	; 000000ffH
  003b8	66 89 5f 1a	 mov	 WORD PTR [edi+26], bx
  003bc	e8 00 00 00 00	 call	 ?FindTItem@CTMapSvrModule@@QAEPAUtagTITEM@@G@Z ; CTMapSvrModule::FindTItem

; 647  : 
; 648  : 				pMON->m_mapTINVEN.insert( MAPTINVEN::value_type( INVEN_DEFAULT, pInven));

  003c1	8d 54 24 38	 lea	 edx, DWORD PTR $T246397[esp+88]
  003c5	89 47 14	 mov	 DWORD PTR [edi+20], eax
  003c8	52		 push	 edx
  003c9	8d 44 24 44	 lea	 eax, DWORD PTR $T246399[esp+92]
  003cd	50		 push	 eax
  003ce	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  003d1	c6 44 24 40 ff	 mov	 BYTE PTR $T246397[esp+96], 255 ; 000000ffH
  003d6	89 7c 24 44	 mov	 DWORD PTR $T246397[esp+100], edi
  003da	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEPAVCTInven@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::insert

; 649  : 				bIndex++;

  003df	fe 44 24 12	 inc	 BYTE PTR _bIndex$[esp+88]

; 650  : 
; 651  : 				for( DWORD j=0; j<DWORD(pMON->m_pMON->m_vSKILL.size()); j++)

  003e3	33 db		 xor	 ebx, ebx
$L177304:
  003e5	8b 8e ec 00 00
	00		 mov	 ecx, DWORD PTR [esi+236]
  003eb	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  003ee	85 d2		 test	 edx, edx
  003f0	0f 84 84 00 00
	00		 je	 $L247250
  003f6	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  003f9	2b c2		 sub	 eax, edx
  003fb	d1 f8		 sar	 eax, 1
  003fd	3b d8		 cmp	 ebx, eax
  003ff	73 79		 jae	 SHORT $L247250

; 652  : 				{
; 653  : 					CTSkillTemp *pTSKILL = _AtlModule.FindTSkill(pMON->m_pMON->m_vSKILL[j]);

  00401	8b ca		 mov	 ecx, edx
  00403	0f b7 0c 59	 movzx	 ecx, WORD PTR [ecx+ebx*2]
  00407	51		 push	 ecx
  00408	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  0040d	e8 00 00 00 00	 call	 ?FindTSkill@CTMapSvrModule@@QAEPAVCTSkillTemp@@G@Z ; CTMapSvrModule::FindTSkill
  00412	8b f8		 mov	 edi, eax

; 654  : 
; 655  : 					if(pTSKILL)

  00414	85 ff		 test	 edi, edi
  00416	74 5c		 je	 SHORT $L177305

; 656  : 					{
; 657  : 						CTSkill *pSkill = new CTSkill();

  00418	6a 58		 push	 88			; 00000058H
  0041a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0041f	83 c4 04	 add	 esp, 4
  00422	89 44 24 28	 mov	 DWORD PTR $T246401[esp+88], eax
  00426	85 c0		 test	 eax, eax
  00428	c7 44 24 54 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+96], 4
  00430	74 09		 je	 SHORT $L246402
  00432	8b c8		 mov	 ecx, eax
  00434	e8 00 00 00 00	 call	 ??0CTSkill@@QAE@XZ	; CTSkill::CTSkill
  00439	eb 02		 jmp	 SHORT $L246403
$L246402:
  0043b	33 c0		 xor	 eax, eax
$L246403:

; 658  : 
; 659  : 						pSkill->m_pTSKILL = pTSKILL;

  0043d	89 78 54	 mov	 DWORD PTR [eax+84], edi

; 660  : 						pSkill->m_bLevel = 1;

  00440	c6 40 50 01	 mov	 BYTE PTR [eax+80], 1

; 661  : 						pMON->m_mapTSKILL.insert( MAPTSKILL::value_type( pMON->m_pMON->m_vSKILL[j], pSkill));

  00444	8b 96 ec 00 00
	00		 mov	 edx, DWORD PTR [esi+236]
  0044a	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0044d	66 8b 14 59	 mov	 dx, WORD PTR [ecx+ebx*2]
  00451	89 44 24 34	 mov	 DWORD PTR $T246404[esp+92], eax
  00455	8d 44 24 30	 lea	 eax, DWORD PTR $T246404[esp+88]
  00459	50		 push	 eax
  0045a	8d 4c 24 44	 lea	 ecx, DWORD PTR $T246405[esp+92]
  0045e	51		 push	 ecx
  0045f	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00462	c7 44 24 5c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+104], -1
  0046a	66 89 54 24 38	 mov	 WORD PTR $T246404[esp+96], dx
  0046f	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTSkill@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkill@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTSkill@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTSkill *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTSkill *> >,0> >::insert
$L177305:

; 650  : 
; 651  : 				for( DWORD j=0; j<DWORD(pMON->m_pMON->m_vSKILL.size()); j++)

  00474	43		 inc	 ebx
  00475	e9 6b ff ff ff	 jmp	 $L177304
$L247250:

; 662  : 					}
; 663  : 				}
; 664  : 
; 665  : 				m_mapTMONSTER.insert( MAPTMONSTER::value_type( pMON->m_dwID, pMON));

  0047a	8b 56 44	 mov	 edx, DWORD PTR [esi+68]
  0047d	8d 44 24 18	 lea	 eax, DWORD PTR $T246406[esp+88]
  00481	50		 push	 eax
  00482	8d 4c 24 44	 lea	 ecx, DWORD PTR $T246407[esp+92]
  00486	51		 push	 ecx
  00487	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+96]
  0048b	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0048e	89 54 24 20	 mov	 DWORD PTR $T246406[esp+96], edx
  00492	89 74 24 24	 mov	 DWORD PTR $T246406[esp+100], esi
  00496	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTMonster@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::insert

; 666  : 				pMonSpawn->m_vTMON.push_back(pMON);

  0049b	8b 5d 08	 mov	 ebx, DWORD PTR _pMonSpawn$[ebp]
  0049e	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  004a1	85 d2		 test	 edx, edx
  004a3	8d 4b 08	 lea	 ecx, DWORD PTR [ebx+8]
  004a6	75 04		 jne	 SHORT $L247119
  004a8	33 ff		 xor	 edi, edi
  004aa	eb 08		 jmp	 SHORT $L247120
$L247119:
  004ac	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  004af	2b fa		 sub	 edi, edx
  004b1	c1 ff 02	 sar	 edi, 2
$L247120:
  004b4	85 d2		 test	 edx, edx
  004b6	74 19		 je	 SHORT $L247181
  004b8	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  004bb	2b c2		 sub	 eax, edx
  004bd	c1 f8 02	 sar	 eax, 2
  004c0	3b f8		 cmp	 edi, eax
  004c2	73 0d		 jae	 SHORT $L247181
  004c4	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  004c7	89 30		 mov	 DWORD PTR [eax], esi
  004c9	83 c0 04	 add	 eax, 4
  004cc	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  004cf	eb 10		 jmp	 SHORT $L247173
$L247181:
  004d1	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  004d4	8d 54 24 24	 lea	 edx, DWORD PTR _pMON$177261[esp+88]
  004d8	52		 push	 edx
  004d9	6a 01		 push	 1
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
$L247173:

; 667  : 
; 668  : 				if(pSPAWN->m_vMAPMON[i]->m_bLeader)

  004e1	8b 45 0c	 mov	 eax, DWORD PTR _pSPAWN$[ebp]
  004e4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004e7	8b 54 24 20	 mov	 edx, DWORD PTR tv834[esp+88]
  004eb	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  004ee	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  004f1	84 c9		 test	 cl, cl
  004f3	74 06		 je	 SHORT $L177433

; 669  : 					pMonSpawn->m_dwLeader = pMON->m_dwID;

  004f5	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  004f8	89 4b 1c	 mov	 DWORD PTR [ebx+28], ecx
$L177433:

; 670  : 
; 671  : 				switch(bRegenType)

  004fb	0f b6 45 18	 movzx	 eax, BYTE PTR _bRegenType$[ebp]
  004ff	83 e8 00	 sub	 eax, 0
  00502	74 05		 je	 SHORT $L177438
  00504	83 e8 02	 sub	 eax, 2
  00507	75 07		 jne	 SHORT $L247252
$L177438:

; 672  : 				{
; 673  : 				case RT_ETERNAL		: pMON->Initialize(); break;

  00509	8b ce		 mov	 ecx, esi
  0050b	e8 00 00 00 00	 call	 ?Initialize@CTMonster@@QAEXXZ ; CTMonster::Initialize
$L247252:
  00510	8b 7d 0c	 mov	 edi, DWORD PTR _pSPAWN$[ebp]
$L177256:

; 598  : 			break;
; 599  : 		case RT_TIMELIMIT	:
; 600  : 			{
; 601  : 				pMON->Initialize();
; 602  : //				pMON->OnEvent( AT_TIMEOUT, 0, 0, 0, 0);
; 603  : 			}
; 604  : 
; 605  : 			break;
; 606  : 		}
; 607  : 	}
; 608  : 
; 609  : 	for( i=0; i<INT(pSPAWN->m_vMAPMON.size()); i++)

  00513	fe 44 24 13	 inc	 BYTE PTR _i$177063[esp+88]
  00517	e9 f9 fc ff ff	 jmp	 $L177255
$L247246:

; 629  : 				{
; 630  : 					ATLTRACE(_T("INITMONSTER ATTR NULL ID:%d ATTR ID:%d\n"), pMON->m_pMON->m_wID, MAKELONG(pMON->m_pMON->m_wMonAttr, pTEMP->m_bLevel));
; 631  : 					delete pMON;

  0051c	8b 16		 mov	 edx, DWORD PTR [esi]
  0051e	6a 01		 push	 1
  00520	8b ce		 mov	 ecx, esi
  00522	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]
$L246391:

; 674  : 				case RT_TIMELIMIT	:
; 675  : 					{
; 676  : 						pMON->Initialize();
; 677  : //						pMON->OnEvent( AT_TIMEOUT, 0, 0, 0, 0);
; 678  : 					}
; 679  : 
; 680  : 					break;
; 681  : 				}
; 682  : 			}
; 683  : 		}
; 684  : }

  00528	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0052c	5f		 pop	 edi
  0052d	5e		 pop	 esi
  0052e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00535	5b		 pop	 ebx
  00536	8b e5		 mov	 esp, ebp
  00538	5d		 pop	 ebp
  00539	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L246408:
  00000	8b 45 c8	 mov	 eax, DWORD PTR $T246373[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L246409:
  0000b	8b 45 d0	 mov	 eax, DWORD PTR $T246377[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L246410:
  00016	8b 45 d0	 mov	 eax, DWORD PTR $T246386[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L246411:
  00021	8b 45 d0	 mov	 eax, DWORD PTR $T246394[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
$L246412:
  0002c	8b 45 d0	 mov	 eax, DWORD PTR $T246401[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00035	59		 pop	 ecx
  00036	c3		 ret	 0
__ehhandler$?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z:
  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T247240
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ENDP ; CTMap::InitMonster
PUBLIC	?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
; Function compile flags: /Ogty
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_i$177730 = -20						; size = 4
_nPosX$ = -16						; size = 4
_nPosZ$ = -12						; size = 4
$T247260 = -8						; size = 4
_finder$177741 = -4					; size = 4
_nLocZ$177734 = 8					; size = 4
_pPLAYERS$ = 8						; size = 4
tv543 = 12						; size = 4
_fPosX$ = 12						; size = 4
tv259 = 16						; size = 4
_fPosZ$ = 16						; size = 4
?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z PROC NEAR ; CTMap::GetNeighbor, COMDAT
; _this$ = ecx

; 748  : {

  00000	83 ec 18	 sub	 esp, 24			; 00000018H

; 749  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00003	d9 44 24 20	 fld	 DWORD PTR _fPosX$[esp+20]
  00007	53		 push	 ebx
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	89 74 24 10	 mov	 DWORD PTR _this$[esp+40], esi
  00011	e8 00 00 00 00	 call	 __ftol2

; 750  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 44 24 34	 fld	 DWORD PTR _fPosZ$[esp+36]
  0001a	0f b7 f8	 movzx	 edi, ax
  0001d	c1 ef 06	 shr	 edi, 6
  00020	4f		 dec	 edi
  00021	89 7c 24 18	 mov	 DWORD PTR _nPosX$[esp+40], edi
  00025	e8 00 00 00 00	 call	 __ftol2

; 751  : 
; 752  : 	for( int i=0; i<3; i++)

  0002a	8b 5c 24 2c	 mov	 ebx, DWORD PTR _pPLAYERS$[esp+36]
  0002e	0f b7 c0	 movzx	 eax, ax
  00031	c1 e8 06	 shr	 eax, 6
  00034	48		 dec	 eax
  00035	33 c9		 xor	 ecx, ecx
  00037	89 44 24 1c	 mov	 DWORD PTR _nPosZ$[esp+40], eax

; 753  : 	{
; 754  : 		int nLocZ = nPosZ + i;

  0003b	03 c1		 add	 eax, ecx
  0003d	89 4c 24 14	 mov	 DWORD PTR _i$177730[esp+40], ecx
  00041	89 44 24 2c	 mov	 DWORD PTR _nLocZ$177734[esp+36], eax
  00045	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00049	c7 44 24 34 03
	00 00 00	 mov	 DWORD PTR tv259[esp+36], 3
  00051	eb 2d		 jmp	 SHORT $L177736
$L247835:

; 751  : 
; 752  : 	for( int i=0; i<3; i++)

  00053	8b 44 24 1c	 mov	 eax, DWORD PTR _nPosZ$[esp+40]
  00057	8b 7c 24 18	 mov	 edi, DWORD PTR _nPosX$[esp+40]
  0005b	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+40]

; 753  : 	{
; 754  : 		int nLocZ = nPosZ + i;

  0005f	03 c1		 add	 eax, ecx
  00061	89 44 24 2c	 mov	 DWORD PTR _nLocZ$177734[esp+36], eax
  00065	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00069	c7 44 24 34 03
	00 00 00	 mov	 DWORD PTR tv259[esp+36], 3
  00071	eb 0d		 jmp	 SHORT $L177736
$L247836:
  00073	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+40]
  00077	8b 44 24 2c	 mov	 eax, DWORD PTR _nLocZ$177734[esp+36]
  0007b	eb 03 8d 49 00	 npad	 5
$L177736:

; 757  : 		{
; 758  : 			int nLocX = nPosX + j;
; 759  : 
; 760  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00080	85 ff		 test	 edi, edi
  00082	0f 8c df 00 00
	00		 jl	 $L177737
  00088	85 c0		 test	 eax, eax
  0008a	0f 8c d7 00 00
	00		 jl	 $L177737

; 761  : 			{
; 762  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00090	0f b7 c0	 movzx	 eax, ax
  00093	0f b7 cf	 movzx	 ecx, di
  00096	c1 e0 10	 shl	 eax, 16			; 00000010H
  00099	0b c1		 or	 eax, ecx
  0009b	8d 54 24 20	 lea	 edx, DWORD PTR $T247260[esp+40]
  0009f	89 44 24 20	 mov	 DWORD PTR $T247260[esp+40], eax
  000a3	52		 push	 edx
  000a4	8d 44 24 28	 lea	 eax, DWORD PTR _finder$177741[esp+44]
  000a8	50		 push	 eax
  000a9	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000ac	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 763  : 
; 764  : 				if( finder != m_mapTCELL.end() )

  000b1	8b 44 24 24	 mov	 eax, DWORD PTR _finder$177741[esp+40]
  000b5	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  000b8	0f 84 a9 00 00
	00		 je	 $L177737

; 765  : 				{
; 766  : 					CTCell *pCell = (*finder).second;

  000be	8b 68 10	 mov	 ebp, DWORD PTR [eax+16]

; 767  : 					MAPPLAYER::iterator it;
; 768  : 
; 769  : 					for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

  000c1	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  000c4	8b 30		 mov	 esi, DWORD PTR [eax]
  000c6	3b f0		 cmp	 esi, eax
  000c8	0f 84 99 00 00
	00		 je	 $L177737
  000ce	8b ff		 npad	 2
$L247492:

; 770  : 						pPLAYERS->push_back((*it).second);

  000d0	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000d3	85 c9		 test	 ecx, ecx
  000d5	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  000d8	75 04		 jne	 SHORT $L247758
  000da	33 d2		 xor	 edx, edx
  000dc	eb 08		 jmp	 SHORT $L247759
$L247758:
  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	2b d1		 sub	 edx, ecx
  000e3	c1 fa 02	 sar	 edx, 2
$L247759:
  000e6	85 c9		 test	 ecx, ecx
  000e8	74 1b		 je	 SHORT $L247765
  000ea	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  000ed	2b c1		 sub	 eax, ecx
  000ef	c1 f8 02	 sar	 eax, 2
  000f2	3b d0		 cmp	 edx, eax
  000f4	73 0f		 jae	 SHORT $L247765
  000f6	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000f9	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx
  000fd	83 c0 04	 add	 eax, 4
  00100	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00103	eb 0e		 jmp	 SHORT $L177760
$L247765:
  00105	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00108	57		 push	 edi
  00109	6a 01		 push	 1
  0010b	50		 push	 eax
  0010c	8b cb		 mov	 ecx, ebx
  0010e	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
$L177760:
  00113	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00116	84 c0		 test	 al, al
  00118	75 40		 jne	 SHORT $L247527
  0011a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0011d	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00120	84 c9		 test	 cl, cl
  00122	75 19		 jne	 SHORT $L247827
  00124	8b f0		 mov	 esi, eax
  00126	8b 06		 mov	 eax, DWORD PTR [esi]
  00128	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0012b	84 c9		 test	 cl, cl
  0012d	75 2b		 jne	 SHORT $L247527
  0012f	90		 npad	 1

; 767  : 					MAPPLAYER::iterator it;
; 768  : 
; 769  : 					for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

$L247515:
  00130	8b f0		 mov	 esi, eax
  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00137	84 c9		 test	 cl, cl
  00139	74 f5		 je	 SHORT $L247515
  0013b	eb 1d		 jmp	 SHORT $L247527
$L247827:
  0013d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00140	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00143	84 c9		 test	 cl, cl
  00145	75 11		 jne	 SHORT $L247530
$L247529:
  00147	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0014a	75 0c		 jne	 SHORT $L247530
  0014c	8b f0		 mov	 esi, eax
  0014e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00151	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00154	84 c9		 test	 cl, cl
  00156	74 ef		 je	 SHORT $L247529
$L247530:
  00158	8b f0		 mov	 esi, eax
$L247527:
  0015a	3b 75 2c	 cmp	 esi, DWORD PTR [ebp+44]
  0015d	0f 85 6d ff ff
	ff		 jne	 $L247492
  00163	8b 7c 24 30	 mov	 edi, DWORD PTR tv543[esp+36]
$L177737:

; 755  : 
; 756  : 		for( int j=0; j<3; j++)

  00167	8b 44 24 34	 mov	 eax, DWORD PTR tv259[esp+36]
  0016b	47		 inc	 edi
  0016c	48		 dec	 eax
  0016d	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00171	89 44 24 34	 mov	 DWORD PTR tv259[esp+36], eax
  00175	0f 85 f8 fe ff
	ff		 jne	 $L247836
  0017b	8b 4c 24 14	 mov	 ecx, DWORD PTR _i$177730[esp+40]
  0017f	41		 inc	 ecx
  00180	83 f9 03	 cmp	 ecx, 3
  00183	89 4c 24 14	 mov	 DWORD PTR _i$177730[esp+40], ecx
  00187	0f 8c c6 fe ff
	ff		 jl	 $L247835
  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5d		 pop	 ebp
  00190	5b		 pop	 ebx

; 771  : 				}
; 772  : 			}
; 773  : 		}
; 774  : 	}
; 775  : }

  00191	83 c4 18	 add	 esp, 24			; 00000018H
  00194	c2 0c 00	 ret	 12			; 0000000cH
?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ENDP ; CTMap::GetNeighbor
_TEXT	ENDS
PUBLIC	?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z ; CTMap::GetNeighbor
; Function compile flags: /Ogty
;	COMDAT ?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_i$177770 = -20						; size = 4
_nPosX$ = -16						; size = 4
_nPosZ$ = -12						; size = 4
$T247840 = -8						; size = 4
_finder$177781 = -4					; size = 4
_nLocZ$177774 = 8					; size = 4
_pMONSTERS$ = 8						; size = 4
tv543 = 12						; size = 4
_fPosX$ = 12						; size = 4
tv259 = 16						; size = 4
_fPosZ$ = 16						; size = 4
?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z PROC NEAR ; CTMap::GetNeighbor, COMDAT
; _this$ = ecx

; 780  : {

  00000	83 ec 18	 sub	 esp, 24			; 00000018H

; 781  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00003	d9 44 24 20	 fld	 DWORD PTR _fPosX$[esp+20]
  00007	53		 push	 ebx
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	89 74 24 10	 mov	 DWORD PTR _this$[esp+40], esi
  00011	e8 00 00 00 00	 call	 __ftol2

; 782  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 44 24 34	 fld	 DWORD PTR _fPosZ$[esp+36]
  0001a	0f b7 f8	 movzx	 edi, ax
  0001d	c1 ef 06	 shr	 edi, 6
  00020	4f		 dec	 edi
  00021	89 7c 24 18	 mov	 DWORD PTR _nPosX$[esp+40], edi
  00025	e8 00 00 00 00	 call	 __ftol2

; 783  : 
; 784  : 	for( int i=0; i<3; i++)

  0002a	8b 5c 24 2c	 mov	 ebx, DWORD PTR _pMONSTERS$[esp+36]
  0002e	0f b7 c0	 movzx	 eax, ax
  00031	c1 e8 06	 shr	 eax, 6
  00034	48		 dec	 eax
  00035	33 c9		 xor	 ecx, ecx
  00037	89 44 24 1c	 mov	 DWORD PTR _nPosZ$[esp+40], eax

; 785  : 	{
; 786  : 		int nLocZ = nPosZ + i;

  0003b	03 c1		 add	 eax, ecx
  0003d	89 4c 24 14	 mov	 DWORD PTR _i$177770[esp+40], ecx
  00041	89 44 24 2c	 mov	 DWORD PTR _nLocZ$177774[esp+36], eax
  00045	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00049	c7 44 24 34 03
	00 00 00	 mov	 DWORD PTR tv259[esp+36], 3
  00051	eb 2d		 jmp	 SHORT $L177776
$L248415:

; 783  : 
; 784  : 	for( int i=0; i<3; i++)

  00053	8b 44 24 1c	 mov	 eax, DWORD PTR _nPosZ$[esp+40]
  00057	8b 7c 24 18	 mov	 edi, DWORD PTR _nPosX$[esp+40]
  0005b	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+40]

; 785  : 	{
; 786  : 		int nLocZ = nPosZ + i;

  0005f	03 c1		 add	 eax, ecx
  00061	89 44 24 2c	 mov	 DWORD PTR _nLocZ$177774[esp+36], eax
  00065	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00069	c7 44 24 34 03
	00 00 00	 mov	 DWORD PTR tv259[esp+36], 3
  00071	eb 0d		 jmp	 SHORT $L177776
$L248416:
  00073	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+40]
  00077	8b 44 24 2c	 mov	 eax, DWORD PTR _nLocZ$177774[esp+36]
  0007b	eb 03 8d 49 00	 npad	 5
$L177776:

; 789  : 		{
; 790  : 			int nLocX = nPosX + j;
; 791  : 
; 792  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00080	85 ff		 test	 edi, edi
  00082	0f 8c df 00 00
	00		 jl	 $L177777
  00088	85 c0		 test	 eax, eax
  0008a	0f 8c d7 00 00
	00		 jl	 $L177777

; 793  : 			{
; 794  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00090	0f b7 c0	 movzx	 eax, ax
  00093	0f b7 cf	 movzx	 ecx, di
  00096	c1 e0 10	 shl	 eax, 16			; 00000010H
  00099	0b c1		 or	 eax, ecx
  0009b	8d 54 24 20	 lea	 edx, DWORD PTR $T247840[esp+40]
  0009f	89 44 24 20	 mov	 DWORD PTR $T247840[esp+40], eax
  000a3	52		 push	 edx
  000a4	8d 44 24 28	 lea	 eax, DWORD PTR _finder$177781[esp+44]
  000a8	50		 push	 eax
  000a9	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000ac	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 795  : 
; 796  : 				if( finder != m_mapTCELL.end() )

  000b1	8b 44 24 24	 mov	 eax, DWORD PTR _finder$177781[esp+40]
  000b5	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  000b8	0f 84 a9 00 00
	00		 je	 $L177777

; 797  : 				{
; 798  : 					CTCell *pCell = (*finder).second;

  000be	8b 68 10	 mov	 ebp, DWORD PTR [eax+16]

; 799  : 					MAPTMONSTER::iterator it;
; 800  : 
; 801  : 					for( it = pCell->m_mapMONSTER.begin(); it != pCell->m_mapMONSTER.end(); it++)

  000c1	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  000c4	8b 30		 mov	 esi, DWORD PTR [eax]
  000c6	3b f0		 cmp	 esi, eax
  000c8	0f 84 99 00 00
	00		 je	 $L177777
  000ce	8b ff		 npad	 2
$L248073:

; 802  : 						pMONSTERS->push_back((*it).second);

  000d0	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000d3	85 c9		 test	 ecx, ecx
  000d5	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  000d8	75 04		 jne	 SHORT $L248337
  000da	33 d2		 xor	 edx, edx
  000dc	eb 08		 jmp	 SHORT $L248338
$L248337:
  000de	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e1	2b d1		 sub	 edx, ecx
  000e3	c1 fa 02	 sar	 edx, 2
$L248338:
  000e6	85 c9		 test	 ecx, ecx
  000e8	74 1b		 je	 SHORT $L248399
  000ea	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  000ed	2b c1		 sub	 eax, ecx
  000ef	c1 f8 02	 sar	 eax, 2
  000f2	3b d0		 cmp	 edx, eax
  000f4	73 0f		 jae	 SHORT $L248399
  000f6	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000f9	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx
  000fd	83 c0 04	 add	 eax, 4
  00100	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00103	eb 0e		 jmp	 SHORT $L177800
$L248399:
  00105	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00108	57		 push	 edi
  00109	6a 01		 push	 1
  0010b	50		 push	 eax
  0010c	8b cb		 mov	 ecx, ebx
  0010e	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
$L177800:
  00113	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00116	84 c0		 test	 al, al
  00118	75 40		 jne	 SHORT $L248106
  0011a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0011d	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00120	84 c9		 test	 cl, cl
  00122	75 19		 jne	 SHORT $L248407
  00124	8b f0		 mov	 esi, eax
  00126	8b 06		 mov	 eax, DWORD PTR [esi]
  00128	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0012b	84 c9		 test	 cl, cl
  0012d	75 2b		 jne	 SHORT $L248106
  0012f	90		 npad	 1

; 799  : 					MAPTMONSTER::iterator it;
; 800  : 
; 801  : 					for( it = pCell->m_mapMONSTER.begin(); it != pCell->m_mapMONSTER.end(); it++)

$L248094:
  00130	8b f0		 mov	 esi, eax
  00132	8b 06		 mov	 eax, DWORD PTR [esi]
  00134	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00137	84 c9		 test	 cl, cl
  00139	74 f5		 je	 SHORT $L248094
  0013b	eb 1d		 jmp	 SHORT $L248106
$L248407:
  0013d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00140	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00143	84 c9		 test	 cl, cl
  00145	75 11		 jne	 SHORT $L248109
$L248108:
  00147	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0014a	75 0c		 jne	 SHORT $L248109
  0014c	8b f0		 mov	 esi, eax
  0014e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00151	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00154	84 c9		 test	 cl, cl
  00156	74 ef		 je	 SHORT $L248108
$L248109:
  00158	8b f0		 mov	 esi, eax
$L248106:
  0015a	3b 75 20	 cmp	 esi, DWORD PTR [ebp+32]
  0015d	0f 85 6d ff ff
	ff		 jne	 $L248073
  00163	8b 7c 24 30	 mov	 edi, DWORD PTR tv543[esp+36]
$L177777:

; 787  : 
; 788  : 		for( int j=0; j<3; j++)

  00167	8b 44 24 34	 mov	 eax, DWORD PTR tv259[esp+36]
  0016b	47		 inc	 edi
  0016c	48		 dec	 eax
  0016d	89 7c 24 30	 mov	 DWORD PTR tv543[esp+36], edi
  00171	89 44 24 34	 mov	 DWORD PTR tv259[esp+36], eax
  00175	0f 85 f8 fe ff
	ff		 jne	 $L248416
  0017b	8b 4c 24 14	 mov	 ecx, DWORD PTR _i$177770[esp+40]
  0017f	41		 inc	 ecx
  00180	83 f9 03	 cmp	 ecx, 3
  00183	89 4c 24 14	 mov	 DWORD PTR _i$177770[esp+40], ecx
  00187	0f 8c c6 fe ff
	ff		 jl	 $L248415
  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5d		 pop	 ebp
  00190	5b		 pop	 ebx

; 803  : 				}
; 804  : 			}
; 805  : 		}
; 806  : 	}
; 807  : }

  00191	83 c4 18	 add	 esp, 24			; 00000018H
  00194	c2 0c 00	 ret	 12			; 0000000cH
?GetNeighbor@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z ENDP ; CTMap::GetNeighbor
_TEXT	ENDS
PUBLIC	__real@42800000
PUBLIC	?GetNeerPlayer@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ; CTMap::GetNeerPlayer
;	COMDAT __real@42800000
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
CONST	ENDS
;	COMDAT ?GetNeerPlayer@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
tv284 = -28						; size = 4
_i$177810 = -24						; size = 4
_nPosZ$ = -20						; size = 4
_nPosX$ = -16						; size = 4
_nLocZ$177814 = -12					; size = 4
$T248420 = -8						; size = 4
_finder$177821 = -4					; size = 4
tv598 = 8						; size = 4
_pPLAYERS$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosZ$ = 16						; size = 4
?GetNeerPlayer@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z PROC NEAR ; CTMap::GetNeerPlayer, COMDAT
; _this$ = ecx

; 812  : {

  00000	83 ec 20	 sub	 esp, 32			; 00000020H

; 813  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00003	d9 44 24 28	 fld	 DWORD PTR _fPosX$[esp+28]
  00007	53		 push	 ebx
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	89 74 24 10	 mov	 DWORD PTR _this$[esp+48], esi
  00011	e8 00 00 00 00	 call	 __ftol2

; 814  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 44 24 3c	 fld	 DWORD PTR _fPosZ$[esp+44]
  0001a	0f b7 f8	 movzx	 edi, ax
  0001d	c1 ef 06	 shr	 edi, 6
  00020	4f		 dec	 edi
  00021	89 7c 24 20	 mov	 DWORD PTR _nPosX$[esp+48], edi
  00025	e8 00 00 00 00	 call	 __ftol2

; 815  : 
; 816  : 	for( int i=0; i<3; i++)

  0002a	8b 5c 24 34	 mov	 ebx, DWORD PTR _pPLAYERS$[esp+44]
  0002e	0f b7 c0	 movzx	 eax, ax
  00031	c1 e8 06	 shr	 eax, 6
  00034	48		 dec	 eax
  00035	33 c9		 xor	 ecx, ecx
  00037	89 44 24 1c	 mov	 DWORD PTR _nPosZ$[esp+48], eax

; 817  : 	{
; 818  : 		int nLocZ = nPosZ + i;

  0003b	03 c1		 add	 eax, ecx
  0003d	89 4c 24 18	 mov	 DWORD PTR _i$177810[esp+48], ecx
  00041	89 44 24 24	 mov	 DWORD PTR _nLocZ$177814[esp+48], eax
  00045	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  00049	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR tv284[esp+48], 3
  00051	eb 2d		 jmp	 SHORT $L177816
$L249039:

; 815  : 
; 816  : 	for( int i=0; i<3; i++)

  00053	8b 44 24 1c	 mov	 eax, DWORD PTR _nPosZ$[esp+48]
  00057	8b 7c 24 20	 mov	 edi, DWORD PTR _nPosX$[esp+48]
  0005b	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+48]

; 817  : 	{
; 818  : 		int nLocZ = nPosZ + i;

  0005f	03 c1		 add	 eax, ecx
  00061	89 44 24 24	 mov	 DWORD PTR _nLocZ$177814[esp+48], eax
  00065	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  00069	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR tv284[esp+48], 3
  00071	eb 0d		 jmp	 SHORT $L177816
$L249040:
  00073	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+48]
  00077	8b 44 24 24	 mov	 eax, DWORD PTR _nLocZ$177814[esp+48]
  0007b	eb 03 8d 49 00	 npad	 5
$L177816:

; 821  : 		{
; 822  : 			int nLocX = nPosX + j;
; 823  : 
; 824  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00080	85 ff		 test	 edi, edi
  00082	0f 8c 18 01 00
	00		 jl	 $L177817
  00088	85 c0		 test	 eax, eax
  0008a	0f 8c 10 01 00
	00		 jl	 $L177817

; 825  : 			{
; 826  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00090	0f b7 c0	 movzx	 eax, ax
  00093	0f b7 cf	 movzx	 ecx, di
  00096	c1 e0 10	 shl	 eax, 16			; 00000010H
  00099	0b c1		 or	 eax, ecx
  0009b	8d 54 24 28	 lea	 edx, DWORD PTR $T248420[esp+48]
  0009f	89 44 24 28	 mov	 DWORD PTR $T248420[esp+48], eax
  000a3	52		 push	 edx
  000a4	8d 44 24 30	 lea	 eax, DWORD PTR _finder$177821[esp+52]
  000a8	50		 push	 eax
  000a9	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000ac	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 827  : 
; 828  : 				if( finder != m_mapTCELL.end() )

  000b1	8b 44 24 2c	 mov	 eax, DWORD PTR _finder$177821[esp+48]
  000b5	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  000b8	0f 84 e2 00 00
	00		 je	 $L177817

; 829  : 				{
; 830  : 					CTCell *pCell = (*finder).second;

  000be	8b 68 10	 mov	 ebp, DWORD PTR [eax+16]

; 831  : 					MAPPLAYER::iterator it;
; 832  : 
; 833  : 					for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

  000c1	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  000c4	8b 30		 mov	 esi, DWORD PTR [eax]
  000c6	3b f0		 cmp	 esi, eax
  000c8	0f 84 d2 00 00
	00		 je	 $L177817
  000ce	8b ff		 npad	 2
$L248652:

; 834  : 					{
; 835  : 						if(GetDistance(fPosX, fPosZ, (*it).second->m_fPosX, (*it).second->m_fPosZ) <= CELL_SIZE)

  000d0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000d3	d9 44 24 38	 fld	 DWORD PTR _fPosX$[esp+44]
  000d7	d8 a0 7c 01 01
	00		 fsub	 DWORD PTR [eax+65916]
  000dd	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  000e0	d9 44 24 3c	 fld	 DWORD PTR _fPosZ$[esp+44]
  000e4	d8 a0 84 01 01
	00		 fsub	 DWORD PTR [eax+65924]
  000ea	d9 c0		 fld	 ST(0)
  000ec	d8 c9		 fmul	 ST(0), ST(1)
  000ee	d9 c2		 fld	 ST(2)
  000f0	d8 cb		 fmul	 ST(0), ST(3)
  000f2	de c1		 faddp	 ST(1), ST(0)
  000f4	d9 fa		 fsqrt
  000f6	dd da		 fstp	 ST(2)
  000f8	dd d8		 fstp	 ST(0)
  000fa	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@42800000
  00100	df e0		 fnstsw	 ax
  00102	f6 c4 41	 test	 ah, 65			; 00000041H
  00105	7a 40		 jp	 SHORT $L177840

; 836  : 							pPLAYERS->push_back((*it).second);

  00107	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0010a	85 d2		 test	 edx, edx
  0010c	75 04		 jne	 SHORT $L249011
  0010e	33 c9		 xor	 ecx, ecx
  00110	eb 08		 jmp	 SHORT $L249012
$L249011:
  00112	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00115	2b ca		 sub	 ecx, edx
  00117	c1 f9 02	 sar	 ecx, 2
$L249012:
  0011a	85 d2		 test	 edx, edx
  0011c	74 1b		 je	 SHORT $L249004
  0011e	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00121	2b c2		 sub	 eax, edx
  00123	c1 f8 02	 sar	 eax, 2
  00126	3b c8		 cmp	 ecx, eax
  00128	73 0f		 jae	 SHORT $L249004
  0012a	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0012d	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0012f	89 08		 mov	 DWORD PTR [eax], ecx
  00131	83 c0 04	 add	 eax, 4
  00134	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00137	eb 0e		 jmp	 SHORT $L177840
$L249004:
  00139	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013c	57		 push	 edi
  0013d	6a 01		 push	 1
  0013f	50		 push	 eax
  00140	8b cb		 mov	 ecx, ebx
  00142	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
$L177840:
  00147	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  0014a	84 c0		 test	 al, al
  0014c	75 45		 jne	 SHORT $L248662
  0014e	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00151	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00154	84 c0		 test	 al, al
  00156	75 18		 jne	 SHORT $L249029
  00158	8b 01		 mov	 eax, DWORD PTR [ecx]
  0015a	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0015d	84 d2		 test	 dl, dl
  0015f	75 0b		 jne	 SHORT $L248684

; 831  : 					MAPPLAYER::iterator it;
; 832  : 
; 833  : 					for( it = pCell->m_mapPLAYER.begin(); it != pCell->m_mapPLAYER.end(); it++)

$L248683:
  00161	8b c8		 mov	 ecx, eax
  00163	8b 01		 mov	 eax, DWORD PTR [ecx]
  00165	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00168	84 d2		 test	 dl, dl
  0016a	74 f5		 je	 SHORT $L248683
$L248684:
  0016c	8b f1		 mov	 esi, ecx
  0016e	eb 23		 jmp	 SHORT $L248662
$L249029:
  00170	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00173	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00176	84 c9		 test	 cl, cl
  00178	75 17		 jne	 SHORT $L248665
  0017a	8d 9b 00 00 00
	00		 npad	 6
$L248664:
  00180	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00183	75 0c		 jne	 SHORT $L248665
  00185	8b f0		 mov	 esi, eax
  00187	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0018a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0018d	84 c9		 test	 cl, cl
  0018f	74 ef		 je	 SHORT $L248664
$L248665:
  00191	8b f0		 mov	 esi, eax
$L248662:
  00193	3b 75 2c	 cmp	 esi, DWORD PTR [ebp+44]
  00196	0f 85 34 ff ff
	ff		 jne	 $L248652
  0019c	8b 7c 24 34	 mov	 edi, DWORD PTR tv598[esp+44]
$L177817:

; 819  : 
; 820  : 		for( int j=0; j<3; j++)

  001a0	8b 44 24 14	 mov	 eax, DWORD PTR tv284[esp+48]
  001a4	47		 inc	 edi
  001a5	48		 dec	 eax
  001a6	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  001aa	89 44 24 14	 mov	 DWORD PTR tv284[esp+48], eax
  001ae	0f 85 bf fe ff
	ff		 jne	 $L249040
  001b4	8b 4c 24 18	 mov	 ecx, DWORD PTR _i$177810[esp+48]
  001b8	41		 inc	 ecx
  001b9	83 f9 03	 cmp	 ecx, 3
  001bc	89 4c 24 18	 mov	 DWORD PTR _i$177810[esp+48], ecx
  001c0	0f 8c 8d fe ff
	ff		 jl	 $L249039
  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5d		 pop	 ebp
  001c9	5b		 pop	 ebx

; 837  : 					}
; 838  : 				}
; 839  : 			}
; 840  : 		}
; 841  : 	}
; 842  : }

  001ca	83 c4 20	 add	 esp, 32			; 00000020H
  001cd	c2 0c 00	 ret	 12			; 0000000cH
?GetNeerPlayer@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@MM@Z ENDP ; CTMap::GetNeerPlayer
_TEXT	ENDS
PUBLIC	?GetNeerMonster@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z ; CTMap::GetNeerMonster
; Function compile flags: /Ogty
;	COMDAT ?GetNeerMonster@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
tv284 = -28						; size = 4
_i$177851 = -24						; size = 4
_nPosZ$ = -20						; size = 4
_nPosX$ = -16						; size = 4
_nLocZ$177855 = -12					; size = 4
$T249044 = -8						; size = 4
_finder$177862 = -4					; size = 4
tv598 = 8						; size = 4
_pMONSTERS$ = 8						; size = 4
_fPosX$ = 12						; size = 4
_fPosZ$ = 16						; size = 4
?GetNeerMonster@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z PROC NEAR ; CTMap::GetNeerMonster, COMDAT
; _this$ = ecx

; 847  : {

  00000	83 ec 20	 sub	 esp, 32			; 00000020H

; 848  : 	int nPosX = WORD(fPosX) / CELL_SIZE - 1;

  00003	d9 44 24 28	 fld	 DWORD PTR _fPosX$[esp+28]
  00007	53		 push	 ebx
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	57		 push	 edi
  0000d	89 74 24 10	 mov	 DWORD PTR _this$[esp+48], esi
  00011	e8 00 00 00 00	 call	 __ftol2

; 849  : 	int nPosZ = WORD(fPosZ) / CELL_SIZE - 1;

  00016	d9 44 24 3c	 fld	 DWORD PTR _fPosZ$[esp+44]
  0001a	0f b7 f8	 movzx	 edi, ax
  0001d	c1 ef 06	 shr	 edi, 6
  00020	4f		 dec	 edi
  00021	89 7c 24 20	 mov	 DWORD PTR _nPosX$[esp+48], edi
  00025	e8 00 00 00 00	 call	 __ftol2

; 850  : 
; 851  : 	for( int i=0; i<3; i++)

  0002a	8b 5c 24 34	 mov	 ebx, DWORD PTR _pMONSTERS$[esp+44]
  0002e	0f b7 c0	 movzx	 eax, ax
  00031	c1 e8 06	 shr	 eax, 6
  00034	48		 dec	 eax
  00035	33 c9		 xor	 ecx, ecx
  00037	89 44 24 1c	 mov	 DWORD PTR _nPosZ$[esp+48], eax

; 852  : 	{
; 853  : 		int nLocZ = nPosZ + i;

  0003b	03 c1		 add	 eax, ecx
  0003d	89 4c 24 18	 mov	 DWORD PTR _i$177851[esp+48], ecx
  00041	89 44 24 24	 mov	 DWORD PTR _nLocZ$177855[esp+48], eax
  00045	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  00049	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR tv284[esp+48], 3
  00051	eb 2d		 jmp	 SHORT $L177857
$L249661:

; 850  : 
; 851  : 	for( int i=0; i<3; i++)

  00053	8b 44 24 1c	 mov	 eax, DWORD PTR _nPosZ$[esp+48]
  00057	8b 7c 24 20	 mov	 edi, DWORD PTR _nPosX$[esp+48]
  0005b	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+48]

; 852  : 	{
; 853  : 		int nLocZ = nPosZ + i;

  0005f	03 c1		 add	 eax, ecx
  00061	89 44 24 24	 mov	 DWORD PTR _nLocZ$177855[esp+48], eax
  00065	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  00069	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR tv284[esp+48], 3
  00071	eb 0d		 jmp	 SHORT $L177857
$L249662:
  00073	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+48]
  00077	8b 44 24 24	 mov	 eax, DWORD PTR _nLocZ$177855[esp+48]
  0007b	eb 03 8d 49 00	 npad	 5
$L177857:

; 856  : 		{
; 857  : 			int nLocX = nPosX + j;
; 858  : 
; 859  : 			if( 0 <= nLocX && 0 <= nLocZ )

  00080	85 ff		 test	 edi, edi
  00082	0f 8c 18 01 00
	00		 jl	 $L177858
  00088	85 c0		 test	 eax, eax
  0008a	0f 8c 10 01 00
	00		 jl	 $L177858

; 860  : 			{
; 861  : 				MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG((WORD) nLocX, (WORD) nLocZ));

  00090	0f b7 c0	 movzx	 eax, ax
  00093	0f b7 cf	 movzx	 ecx, di
  00096	c1 e0 10	 shl	 eax, 16			; 00000010H
  00099	0b c1		 or	 eax, ecx
  0009b	8d 54 24 28	 lea	 edx, DWORD PTR $T249044[esp+48]
  0009f	89 44 24 28	 mov	 DWORD PTR $T249044[esp+48], eax
  000a3	52		 push	 edx
  000a4	8d 44 24 30	 lea	 eax, DWORD PTR _finder$177862[esp+52]
  000a8	50		 push	 eax
  000a9	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000ac	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 862  : 
; 863  : 				if( finder != m_mapTCELL.end() )

  000b1	8b 44 24 2c	 mov	 eax, DWORD PTR _finder$177862[esp+48]
  000b5	3b 46 44	 cmp	 eax, DWORD PTR [esi+68]
  000b8	0f 84 e2 00 00
	00		 je	 $L177858

; 864  : 				{
; 865  : 					CTCell *pCell = (*finder).second;

  000be	8b 68 10	 mov	 ebp, DWORD PTR [eax+16]

; 866  : 					MAPTMONSTER::iterator it;
; 867  : 
; 868  : 					for( it = pCell->m_mapMONSTER.begin(); it != pCell->m_mapMONSTER.end(); it++)

  000c1	8b 45 20	 mov	 eax, DWORD PTR [ebp+32]
  000c4	8b 30		 mov	 esi, DWORD PTR [eax]
  000c6	3b f0		 cmp	 esi, eax
  000c8	0f 84 d2 00 00
	00		 je	 $L177858
  000ce	8b ff		 npad	 2
$L249276:

; 869  : 					{
; 870  : 						if(GetDistance(fPosX, fPosZ, (*it).second->m_fPosX, (*it).second->m_fPosZ) <= CELL_SIZE)

  000d0	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000d3	d9 44 24 38	 fld	 DWORD PTR _fPosX$[esp+44]
  000d7	d8 60 7c	 fsub	 DWORD PTR [eax+124]
  000da	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  000dd	d9 44 24 3c	 fld	 DWORD PTR _fPosZ$[esp+44]
  000e1	d8 a0 84 00 00
	00		 fsub	 DWORD PTR [eax+132]
  000e7	d9 c0		 fld	 ST(0)
  000e9	d8 c9		 fmul	 ST(0), ST(1)
  000eb	d9 c2		 fld	 ST(2)
  000ed	d8 cb		 fmul	 ST(0), ST(3)
  000ef	de c1		 faddp	 ST(1), ST(0)
  000f1	d9 fa		 fsqrt
  000f3	dd da		 fstp	 ST(2)
  000f5	dd d8		 fstp	 ST(0)
  000f7	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@42800000
  000fd	df e0		 fnstsw	 ax
  000ff	f6 c4 41	 test	 ah, 65			; 00000041H
  00102	7a 40		 jp	 SHORT $L177881

; 871  : 							pMONSTERS->push_back((*it).second);

  00104	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00107	85 d2		 test	 edx, edx
  00109	75 04		 jne	 SHORT $L249583
  0010b	33 c9		 xor	 ecx, ecx
  0010d	eb 08		 jmp	 SHORT $L249584
$L249583:
  0010f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00112	2b ca		 sub	 ecx, edx
  00114	c1 f9 02	 sar	 ecx, 2
$L249584:
  00117	85 d2		 test	 edx, edx
  00119	74 1b		 je	 SHORT $L249645
  0011b	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  0011e	2b c2		 sub	 eax, edx
  00120	c1 f8 02	 sar	 eax, 2
  00123	3b c8		 cmp	 ecx, eax
  00125	73 0f		 jae	 SHORT $L249645
  00127	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0012a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0012c	89 08		 mov	 DWORD PTR [eax], ecx
  0012e	83 c0 04	 add	 eax, 4
  00131	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00134	eb 0e		 jmp	 SHORT $L177881
$L249645:
  00136	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00139	57		 push	 edi
  0013a	6a 01		 push	 1
  0013c	50		 push	 eax
  0013d	8b cb		 mov	 ecx, ebx
  0013f	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@IAEXViterator@12@IABQAVCTMonster@@@Z ; std::vector<CTMonster *,std::allocator<CTMonster *> >::_Insert_n
$L177881:
  00144	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00147	84 c0		 test	 al, al
  00149	75 48		 jne	 SHORT $L249310
  0014b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0014e	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00151	84 c0		 test	 al, al
  00153	75 1a		 jne	 SHORT $L249653
  00155	8b 01		 mov	 eax, DWORD PTR [ecx]
  00157	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0015a	84 d2		 test	 dl, dl
  0015c	75 0d		 jne	 SHORT $L249299
  0015e	8b ff		 npad	 2

; 866  : 					MAPTMONSTER::iterator it;
; 867  : 
; 868  : 					for( it = pCell->m_mapMONSTER.begin(); it != pCell->m_mapMONSTER.end(); it++)

$L249298:
  00160	8b c8		 mov	 ecx, eax
  00162	8b 01		 mov	 eax, DWORD PTR [ecx]
  00164	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00167	84 d2		 test	 dl, dl
  00169	74 f5		 je	 SHORT $L249298
$L249299:
  0016b	8b f1		 mov	 esi, ecx
  0016d	eb 24		 jmp	 SHORT $L249310
$L249653:
  0016f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00172	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00175	84 c9		 test	 cl, cl
  00177	75 18		 jne	 SHORT $L249313
  00179	8d a4 24 00 00
	00 00		 npad	 7
$L249312:
  00180	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00183	75 0c		 jne	 SHORT $L249313
  00185	8b f0		 mov	 esi, eax
  00187	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0018a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0018d	84 c9		 test	 cl, cl
  0018f	74 ef		 je	 SHORT $L249312
$L249313:
  00191	8b f0		 mov	 esi, eax
$L249310:
  00193	3b 75 20	 cmp	 esi, DWORD PTR [ebp+32]
  00196	0f 85 34 ff ff
	ff		 jne	 $L249276
  0019c	8b 7c 24 34	 mov	 edi, DWORD PTR tv598[esp+44]
$L177858:

; 854  : 
; 855  : 		for( int j=0; j<3; j++)

  001a0	8b 44 24 14	 mov	 eax, DWORD PTR tv284[esp+48]
  001a4	47		 inc	 edi
  001a5	48		 dec	 eax
  001a6	89 7c 24 34	 mov	 DWORD PTR tv598[esp+44], edi
  001aa	89 44 24 14	 mov	 DWORD PTR tv284[esp+48], eax
  001ae	0f 85 bf fe ff
	ff		 jne	 $L249662
  001b4	8b 4c 24 18	 mov	 ecx, DWORD PTR _i$177851[esp+48]
  001b8	41		 inc	 ecx
  001b9	83 f9 03	 cmp	 ecx, 3
  001bc	89 4c 24 18	 mov	 DWORD PTR _i$177851[esp+48], ecx
  001c0	0f 8c 8d fe ff
	ff		 jl	 $L249661
  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5d		 pop	 ebp
  001c9	5b		 pop	 ebx

; 872  : 					}
; 873  : 				}
; 874  : 			}
; 875  : 		}
; 876  : 	}
; 877  : }

  001ca	83 c4 20	 add	 esp, 32			; 00000020H
  001cd	c2 0c 00	 ret	 12			; 0000000cH
?GetNeerMonster@CTMap@@QAEXPAV?$vector@PAVCTMonster@@V?$allocator@PAVCTMonster@@@std@@@std@@MM@Z ENDP ; CTMap::GetNeerMonster
_TEXT	ENDS
PUBLIC	??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::~map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T249766 = -4						; size = 4
??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::~map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T249766[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::~map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >
_TEXT	ENDS
PUBLIC	?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z ; CTMap::GetMapPlayers
; Function compile flags: /Ogty
;	COMDAT ?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vPlayers$ = 8						; size = 4
?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z PROC NEAR ; CTMap::GetMapPlayers, COMDAT
; _this$ = ecx

; 1645 : {

  00000	51		 push	 ecx
  00001	8b d1		 mov	 edx, ecx

; 1646 : 	MAPTCELL::iterator itC;
; 1647 : 	MAPPLAYER::iterator itP;
; 1648 : 	for(itC = m_mapTCELL.begin(); itC != m_mapTCELL.end(); itC++)

  00003	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00006	55		 push	 ebp
  00007	8b 28		 mov	 ebp, DWORD PTR [eax]
  00009	3b e8		 cmp	 ebp, eax
  0000b	89 54 24 04	 mov	 DWORD PTR _this$[esp+8], edx
  0000f	0f 84 0a 01 00
	00		 je	 $L179234
  00015	53		 push	 ebx
  00016	8b 5c 24 10	 mov	 ebx, DWORD PTR _vPlayers$[esp+8]
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8d 64 24 00	 npad	 4
$L249996:

; 1649 : 	{
; 1650 : 		for(itP=(*itC).second->m_mapPLAYER.begin(); itP != (*itC).second->m_mapPLAYER.end(); itP++)

  00020	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  00023	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00026	8b 30		 mov	 esi, DWORD PTR [eax]
  00028	3b f0		 cmp	 esi, eax
  0002a	0f 84 9a 00 00
	00		 je	 $L179233
$L250257:

; 1651 : 			vPlayers->push_back((*itP).second);

  00030	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00033	85 c9		 test	 ecx, ecx
  00035	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  00038	75 04		 jne	 SHORT $L250537
  0003a	33 d2		 xor	 edx, edx
  0003c	eb 08		 jmp	 SHORT $L250538
$L250537:
  0003e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00041	2b d1		 sub	 edx, ecx
  00043	c1 fa 02	 sar	 edx, 2
$L250538:
  00046	85 c9		 test	 ecx, ecx
  00048	74 1b		 je	 SHORT $L250599
  0004a	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  0004d	2b c1		 sub	 eax, ecx
  0004f	c1 f8 02	 sar	 eax, 2
  00052	3b d0		 cmp	 edx, eax
  00054	73 0f		 jae	 SHORT $L250599
  00056	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00059	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	83 c0 04	 add	 eax, 4
  00060	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00063	eb 0e		 jmp	 SHORT $L179239
$L250599:
  00065	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00068	57		 push	 edi
  00069	6a 01		 push	 1
  0006b	50		 push	 eax
  0006c	8b cb		 mov	 ecx, ebx
  0006e	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@IAEXViterator@12@IABQAVCTPlayer@@@Z ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::_Insert_n
$L179239:
  00073	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00076	84 c0		 test	 al, al
  00078	75 40		 jne	 SHORT $L250290
  0007a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0007d	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00080	84 c9		 test	 cl, cl
  00082	75 19		 jne	 SHORT $L250606
  00084	8b f0		 mov	 esi, eax
  00086	8b 06		 mov	 eax, DWORD PTR [esi]
  00088	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0008b	84 c9		 test	 cl, cl
  0008d	75 2b		 jne	 SHORT $L250290
  0008f	90		 npad	 1

; 1649 : 	{
; 1650 : 		for(itP=(*itC).second->m_mapPLAYER.begin(); itP != (*itC).second->m_mapPLAYER.end(); itP++)

$L250278:
  00090	8b f0		 mov	 esi, eax
  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00097	84 c9		 test	 cl, cl
  00099	74 f5		 je	 SHORT $L250278
  0009b	eb 1d		 jmp	 SHORT $L250290
$L250606:
  0009d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000a3	84 c9		 test	 cl, cl
  000a5	75 11		 jne	 SHORT $L250293
$L250292:
  000a7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000aa	75 0c		 jne	 SHORT $L250293
  000ac	8b f0		 mov	 esi, eax
  000ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000b4	84 c9		 test	 cl, cl
  000b6	74 ef		 je	 SHORT $L250292
$L250293:
  000b8	8b f0		 mov	 esi, eax
$L250290:
  000ba	8b 55 10	 mov	 edx, DWORD PTR [ebp+16]
  000bd	3b 72 2c	 cmp	 esi, DWORD PTR [edx+44]
  000c0	0f 85 6a ff ff
	ff		 jne	 $L250257
  000c6	8b 54 24 10	 mov	 edx, DWORD PTR _this$[esp+20]
$L179233:

; 1646 : 	MAPTCELL::iterator itC;
; 1647 : 	MAPPLAYER::iterator itP;
; 1648 : 	for(itC = m_mapTCELL.begin(); itC != m_mapTCELL.end(); itC++)

  000ca	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  000cd	84 c0		 test	 al, al
  000cf	75 42		 jne	 SHORT $L250022
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  000d4	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  000d7	84 c0		 test	 al, al
  000d9	75 16		 jne	 SHORT $L250608
  000db	8b 01		 mov	 eax, DWORD PTR [ecx]
  000dd	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  000e1	75 0a		 jne	 SHORT $L250011
$L250010:
  000e3	8b c8		 mov	 ecx, eax
  000e5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e7	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  000eb	74 f6		 je	 SHORT $L250010
$L250011:
  000ed	8b e9		 mov	 ebp, ecx
  000ef	eb 22		 jmp	 SHORT $L250022
$L250608:
  000f1	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000f4	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000f7	84 c9		 test	 cl, cl
  000f9	75 16		 jne	 SHORT $L250025
  000fb	eb 03 8d 49 00	 npad	 5
$L250024:
  00100	3b 68 08	 cmp	 ebp, DWORD PTR [eax+8]
  00103	75 0c		 jne	 SHORT $L250025
  00105	8b e8		 mov	 ebp, eax
  00107	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0010a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0010d	84 c9		 test	 cl, cl
  0010f	74 ef		 je	 SHORT $L250024
$L250025:
  00111	8b e8		 mov	 ebp, eax
$L250022:
  00113	3b 6a 44	 cmp	 ebp, DWORD PTR [edx+68]
  00116	0f 85 04 ff ff
	ff		 jne	 $L249996
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
$L179234:
  0011f	5d		 pop	 ebp

; 1652 : 	}
; 1653 : }

  00120	59		 pop	 ecx
  00121	c2 04 00	 ret	 4
?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z ENDP ; CTMap::GetMapPlayers
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >::map<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >::map<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >::map<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> > >
_TEXT	ENDS
PUBLIC	??0?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >::map<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> > >
_TEXT	ENDS
PUBLIC	??0?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >::map<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >::map<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> > >
_TEXT	ENDS
PUBLIC	??0?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >::map<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> > >
_TEXT	ENDS
PUBLIC	??0?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >::map<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> > >
_TEXT	ENDS
PUBLIC	??0?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ PROC NEAR ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >::map<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> > >
_TEXT	ENDS
PUBLIC	??0CTMap@@QAE@XZ				; CTMap::CTMap
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T254969 DD	0ffffffffH
	DD	FLAT:$L252104
	DD	00H
	DD	FLAT:$L252105
	DD	01H
	DD	FLAT:$L252106
	DD	02H
	DD	FLAT:$L252107
	DD	03H
	DD	FLAT:$L252108
	DD	04H
	DD	FLAT:$L252109
	DD	05H
	DD	FLAT:$L252110
	DD	06H
	DD	FLAT:$L252111
	DD	07H
	DD	FLAT:$L252112
	DD	08H
	DD	FLAT:$L252113
	DD	09H
	DD	FLAT:$L252114
$T254967 DD	019930520H
	DD	0bH
	DD	FLAT:$T254969
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ??0CTMap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTMap@@QAE@XZ PROC NEAR				; CTMap::CTMap, COMDAT
; _this$ = ecx

; 9    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTMap@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b f1		 mov	 esi, ecx
  0001b	57		 push	 edi
  0001c	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  0001f	8b cf		 mov	 ecx, edi
  00021	89 74 24 10	 mov	 DWORD PTR _this$[esp+32], esi
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTMap@@6B@
  0002b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
  00030	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00033	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00037	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003a	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0003d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00040	89 00		 mov	 DWORD PTR [eax], eax
  00042	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00045	33 db		 xor	 ebx, ebx
  00047	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0004a	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0004d	8d 6e 10	 lea	 ebp, DWORD PTR [esi+16]
  00050	8b cd		 mov	 ecx, ebp
  00052	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00056	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
  0005b	89 45 04	 mov	 DWORD PTR [ebp+4], eax
  0005e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00062	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00065	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00068	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0006b	89 00		 mov	 DWORD PTR [eax], eax
  0006d	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00070	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00073	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  00076	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00079	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  0007e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00083	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00086	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0008a	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0008d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00090	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00093	89 00		 mov	 DWORD PTR [eax], eax
  00095	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00098	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0009b	89 5e 24	 mov	 DWORD PTR [esi+36], ebx
  0009e	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  000a1	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  000a6	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  000ab	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  000ae	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000b2	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000b5	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000b8	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000bb	89 00		 mov	 DWORD PTR [eax], eax
  000bd	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000c0	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000c3	89 5e 30	 mov	 DWORD PTR [esi+48], ebx
  000c6	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  000c9	c6 44 24 1c 03	 mov	 BYTE PTR __$EHRec$[esp+40], 3
  000ce	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  000d3	89 46 38	 mov	 DWORD PTR [esi+56], eax
  000d6	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000da	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  000dd	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000e0	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  000e3	89 00		 mov	 DWORD PTR [eax], eax
  000e5	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  000e8	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000eb	89 5e 3c	 mov	 DWORD PTR [esi+60], ebx
  000ee	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  000f1	c6 44 24 1c 04	 mov	 BYTE PTR __$EHRec$[esp+40], 4
  000f6	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  000fb	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000fe	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00102	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00105	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00108	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0010b	89 00		 mov	 DWORD PTR [eax], eax
  0010d	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00110	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00113	89 5e 48	 mov	 DWORD PTR [esi+72], ebx
  00116	8d 4e 4c	 lea	 ecx, DWORD PTR [esi+76]
  00119	c6 44 24 1c 05	 mov	 BYTE PTR __$EHRec$[esp+40], 5
  0011e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
  00123	89 46 50	 mov	 DWORD PTR [esi+80], eax
  00126	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1
  0012a	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  0012d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00130	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00133	89 00		 mov	 DWORD PTR [eax], eax
  00135	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00138	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0013b	89 5e 54	 mov	 DWORD PTR [esi+84], ebx
  0013e	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00141	c6 44 24 1c 06	 mov	 BYTE PTR __$EHRec$[esp+40], 6
  00146	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  0014b	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  0014e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00152	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00155	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00158	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0015b	89 00		 mov	 DWORD PTR [eax], eax
  0015d	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00160	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00163	89 5e 60	 mov	 DWORD PTR [esi+96], ebx
  00166	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00169	c6 44 24 1c 07	 mov	 BYTE PTR __$EHRec$[esp+40], 7
  0016e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
  00173	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00176	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0017a	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  0017d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00180	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  00183	89 00		 mov	 DWORD PTR [eax], eax
  00185	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  00188	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0018b	89 5e 6c	 mov	 DWORD PTR [esi+108], ebx
  0018e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00191	c6 44 24 1c 08	 mov	 BYTE PTR __$EHRec$[esp+40], 8
  00196	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  0019b	89 46 74	 mov	 DWORD PTR [esi+116], eax
  0019e	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  001a2	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001a5	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001a8	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001ab	89 00		 mov	 DWORD PTR [eax], eax
  001ad	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001b0	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001b3	89 5e 78	 mov	 DWORD PTR [esi+120], ebx
  001b6	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  001b9	c6 44 24 1c 09	 mov	 BYTE PTR __$EHRec$[esp+40], 9
  001be	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
  001c3	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  001c9	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  001cd	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  001d3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001d6	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  001dc	89 00		 mov	 DWORD PTR [eax], eax
  001de	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  001e4	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001e7	89 9e 84 00 00
	00		 mov	 DWORD PTR [esi+132], ebx

; 10   : 	m_mapTMONSPAWN.clear();

  001ed	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001f0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001f3	51		 push	 ecx
  001f4	8b cf		 mov	 ecx, edi
  001f6	c6 44 24 20 0a	 mov	 BYTE PTR __$EHRec$[esp+44], 10 ; 0000000aH
  001fb	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
  00200	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00203	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00206	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00209	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0020c	89 00		 mov	 DWORD PTR [eax], eax
  0020e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00211	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 11   : 	m_mapTMONSTER.clear();

  00214	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  00217	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0021a	8d 7e 1c	 lea	 edi, DWORD PTR [esi+28]
  0021d	50		 push	 eax
  0021e	8b cf		 mov	 ecx, edi
  00220	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  00225	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00228	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0022b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0022e	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00231	89 00		 mov	 DWORD PTR [eax], eax
  00233	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00236	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 12   : 	m_mapTSPAWNPOS.clear();

  00239	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  0023c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0023f	52		 push	 edx
  00240	8b cd		 mov	 ecx, ebp
  00242	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
  00247	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0024a	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0024d	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00250	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  00253	89 00		 mov	 DWORD PTR [eax], eax
  00255	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]
  00258	89 6d 08	 mov	 DWORD PTR [ebp+8], ebp

; 13   : 	m_mapTSWITCH.clear();

  0025b	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0025e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00261	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  00264	51		 push	 ecx
  00265	8b cf		 mov	 ecx, edi
  00267	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Erase
  0026c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0026f	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00272	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00275	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00278	89 00		 mov	 DWORD PTR [eax], eax
  0027a	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0027d	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 14   : 	m_mapTGODTOWER.clear();

  00280	8b 56 68	 mov	 edx, DWORD PTR [esi+104]
  00283	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00286	8d 7e 64	 lea	 edi, DWORD PTR [esi+100]
  00289	50		 push	 eax
  0028a	8b cf		 mov	 ecx, edi
  0028c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Erase
  00291	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00294	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00297	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0029a	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0029d	89 00		 mov	 DWORD PTR [eax], eax
  0029f	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  002a2	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 15   : 	m_mapTGODBALL.clear();

  002a5	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  002a8	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002ab	8d 7e 70	 lea	 edi, DWORD PTR [esi+112]
  002ae	52		 push	 edx
  002af	8b cf		 mov	 ecx, edi
  002b1	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  002b6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002b9	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002bc	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002bf	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  002c2	89 00		 mov	 DWORD PTR [eax], eax
  002c4	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  002c7	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 16   : 	m_mapTTEMPGODBALL.clear();

  002ca	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  002cd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002d0	8d 7e 58	 lea	 edi, DWORD PTR [esi+88]
  002d3	51		 push	 ecx
  002d4	8b cf		 mov	 ecx, edi
  002d6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  002db	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002de	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002e1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002e4	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  002e7	89 00		 mov	 DWORD PTR [eax], eax
  002e9	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  002ec	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 17   : 	m_mapTNMTPlayer.clear();

  002ef	8d 7e 7c	 lea	 edi, DWORD PTR [esi+124]
  002f2	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  002f5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002f8	50		 push	 eax
  002f9	8b cf		 mov	 ecx, edi
  002fb	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  00300	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00303	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00306	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00309	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0030c	89 00		 mov	 DWORD PTR [eax], eax
  0030e	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00311	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 18   : 
; 19   : 	m_mapTUNIT.clear();

  00314	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00317	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0031a	8d 7e 4c	 lea	 edi, DWORD PTR [esi+76]
  0031d	52		 push	 edx
  0031e	8b cf		 mov	 ecx, edi
  00320	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
  00325	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00328	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0032b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0032e	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00331	89 00		 mov	 DWORD PTR [eax], eax
  00333	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00336	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 20   : 	m_mapTCELL.clear();

  00339	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0033c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0033f	8d 7e 40	 lea	 edi, DWORD PTR [esi+64]
  00342	51		 push	 ecx
  00343	8b cf		 mov	 ecx, edi
  00345	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  0034a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0034d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00350	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 21   : 
; 22   : 	m_wPartyID = 0;
; 23   : 	m_wMapID = 0;
; 24   : 
; 25   : 	m_bType = MAP_WORLD;
; 26   : 	m_bServerID = 0;
; 27   : 	m_bChannel = 0;
; 28   : 
; 29   : 	m_bDefBallMax = 0;
; 30   : 	m_bAtkBallMax = 0;
; 31   : 	m_bBlueTeam = TOURNAMENT_SLOT;
; 32   : 	m_bRedTeam = TOURNAMENT_SLOT;
; 33   : 
; 34   : 	m_pCastle = NULL;
; 35   : 	m_dwDefPower = 0;
; 36   : 	m_dwAtkPower = 0;
; 37   : 	m_wDefKillPoint = 0;
; 38   : 	m_wAtkKillPoint = 0;
; 39   : 	m_dwBlueHideTick = 0;
; 40   : 	m_dwRedHideTick = 0;
; 41   : 
; 42   : 	m_dwEndTick = 0;
; 43   : }

  00353	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00357	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0035a	89 00		 mov	 DWORD PTR [eax], eax
  0035c	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0035f	89 7f 08	 mov	 DWORD PTR [edi+8], edi
  00362	5f		 pop	 edi
  00363	66 89 9e 88 00
	00 00		 mov	 WORD PTR [esi+136], bx
  0036a	66 89 9e 8a 00
	00 00		 mov	 WORD PTR [esi+138], bx
  00371	88 9e 8e 00 00
	00		 mov	 BYTE PTR [esi+142], bl
  00377	88 9e 8c 00 00
	00		 mov	 BYTE PTR [esi+140], bl
  0037d	88 9e 8d 00 00
	00		 mov	 BYTE PTR [esi+141], bl
  00383	88 9e 94 00 00
	00		 mov	 BYTE PTR [esi+148], bl
  00389	88 9e 95 00 00
	00		 mov	 BYTE PTR [esi+149], bl
  0038f	89 9e 90 00 00
	00		 mov	 DWORD PTR [esi+144], ebx
  00395	89 9e 98 00 00
	00		 mov	 DWORD PTR [esi+152], ebx
  0039b	89 9e 9c 00 00
	00		 mov	 DWORD PTR [esi+156], ebx
  003a1	66 89 9e a2 00
	00 00		 mov	 WORD PTR [esi+162], bx
  003a8	66 89 9e a4 00
	00 00		 mov	 WORD PTR [esi+164], bx
  003af	89 9e a8 00 00
	00		 mov	 DWORD PTR [esi+168], ebx
  003b5	89 9e ac 00 00
	00		 mov	 DWORD PTR [esi+172], ebx
  003bb	89 9e b0 00 00
	00		 mov	 DWORD PTR [esi+176], ebx
  003c1	c6 86 a0 00 00
	00 08		 mov	 BYTE PTR [esi+160], 8
  003c8	c6 86 a1 00 00
	00 08		 mov	 BYTE PTR [esi+161], 8
  003cf	8b c6		 mov	 eax, esi
  003d1	5e		 pop	 esi
  003d2	5d		 pop	 ebp
  003d3	5b		 pop	 ebx
  003d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003db	83 c4 10	 add	 esp, 16			; 00000010H
  003de	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L252104:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
$L252105:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
$L252106:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
$L252107:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
$L252108:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
$L252109:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L252110:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00048	e9 00 00 00 00	 jmp	 ??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
$L252111:
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 58	 add	 ecx, 88			; 00000058H
  00053	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L252112:
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 64	 add	 ecx, 100		; 00000064H
  0005e	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
$L252113:
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 70	 add	 ecx, 112		; 00000070H
  00069	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L252114:
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00074	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
__ehhandler$??0CTMap@@QAE@XZ:
  00079	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T254967
  0007e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTMap@@QAE@XZ ENDP					; CTMap::CTMap
; Function compile flags: /Ogty
;	COMDAT ??_GCTMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTMap@@UAEPAXI@Z PROC NEAR				; CTMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTMap@@UAE@XZ	; CTMap::~CTMap
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L254975
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L254975:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTMap@@UAEPAXI@Z ENDP				; CTMap::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ; CTMap::AddTimelimitedMon
EXTRN	??0CTMonSpawn@@QAE@XZ:NEAR			; CTMonSpawn::CTMonSpawn
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T255285 DD	0ffffffffH
	DD	FLAT:$L254987
$T255279 DD	019930520H
	DD	01H
	DD	FLAT:$T255285
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T254985 = -28						; size = 8
$T254986 = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T254982 = 8						; size = 4
_finder$ = 8						; size = 4
_itSp$176980 = 8					; size = 4
_pSPAWN$ = 8						; size = 4
_bChannel$ = 12						; size = 1
_bCountry$ = 16						; size = 1
_bRegenType$ = 20					; size = 1
?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z PROC NEAR ; CTMap::AddTimelimitedMon, COMDAT
; _this$ = ecx

; 459  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 14	 sub	 esp, 20			; 00000014H
  00018	53		 push	 ebx
  00019	55		 push	 ebp

; 460  : 	if(pSPAWN->m_lpvGroup && !pSPAWN->m_lpvGroup->empty() )

  0001a	8b 6c 24 2c	 mov	 ebp, DWORD PTR _pSPAWN$[esp+36]
  0001e	56		 push	 esi
  0001f	8b 75 10	 mov	 esi, DWORD PTR [ebp+16]
  00022	85 f6		 test	 esi, esi
  00024	8b d9		 mov	 ebx, ecx
  00026	57		 push	 edi
  00027	89 5c 24 10	 mov	 DWORD PTR _this$[esp+48], ebx
  0002b	0f 84 9d 00 00
	00		 je	 $L176989
  00031	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00034	85 c9		 test	 ecx, ecx
  00036	0f 84 92 00 00
	00		 je	 $L176989
  0003c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003f	2b c1		 sub	 eax, ecx
  00041	c1 f8 02	 sar	 eax, 2
  00044	85 c0		 test	 eax, eax
  00046	0f 84 82 00 00
	00		 je	 $L176989

; 461  : 	{
; 462  : 		MAPTMONSPAWN::iterator itSp = m_mapTMONSPAWN.find(pSPAWN->m_lpvGroup->at(0)->m_wID);

  0004c	85 c9		 test	 ecx, ecx
  0004e	74 0c		 je	 SHORT $L255280
  00050	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00053	2b c1		 sub	 eax, ecx
  00055	c1 f8 02	 sar	 eax, 2
  00058	85 c0		 test	 eax, eax
  0005a	77 07		 ja	 SHORT $L255069
$L255280:
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran
$L255286:
$L255069:
  00063	8b 01		 mov	 eax, DWORD PTR [ecx]
  00065	83 c0 34	 add	 eax, 52			; 00000034H
  00068	50		 push	 eax
  00069	8d 4c 24 38	 lea	 ecx, DWORD PTR _itSp$176980[esp+48]
  0006d	51		 push	 ecx
  0006e	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00071	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 463  : 		if(itSp != m_mapTMONSPAWN.end())

  00076	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00079	8b 7c 24 34	 mov	 edi, DWORD PTR _itSp$176980[esp+44]
  0007d	3b f8		 cmp	 edi, eax

; 464  : 		{
; 465  : 			BYTE bGroupOrder = (*itSp).second->m_bGroupOrder + 1;
; 466  : 			BYTE bSize = (BYTE)pSPAWN->m_lpvGroup->size();

  0007f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00082	74 31		 je	 SHORT $L176983
  00084	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00087	8a 5a 20	 mov	 bl, BYTE PTR [edx+32]
  0008a	fe c3		 inc	 bl
  0008c	85 c9		 test	 ecx, ecx
  0008e	74 7d		 je	 SHORT $L176996
  00090	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00093	2b c1		 sub	 eax, ecx
  00095	c1 f8 02	 sar	 eax, 2

; 467  : 
; 468  : 			if(bGroupOrder < bSize)	

  00098	3a d8		 cmp	 bl, al
  0009a	73 71		 jae	 SHORT $L176996

; 469  : 			{
; 470  : 				pSPAWN = pSPAWN->m_lpvGroup->at(bGroupOrder);

  0009c	0f b6 c3	 movzx	 eax, bl
  0009f	50		 push	 eax
  000a0	8b ce		 mov	 ecx, esi
  000a2	e8 00 00 00 00	 call	 ?at@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@QAEAAPAUtagTMONSPAWN@@I@Z ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::at

; 471  : 				(*itSp).second->m_bGroupOrder = bGroupOrder;

  000a7	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000aa	8b 28		 mov	 ebp, DWORD PTR [eax]
  000ac	88 59 20	 mov	 BYTE PTR [ecx+32], bl

; 472  : 			}
; 473  : 			else
; 474  : 				return NULL;
; 475  : 		}
; 476  : 		else

  000af	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+48]
  000b3	eb 19		 jmp	 SHORT $L176989
$L176983:

; 477  : 			pSPAWN = pSPAWN->m_lpvGroup->at(0);

  000b5	85 c9		 test	 ecx, ecx
  000b7	74 0c		 je	 SHORT $L255281
  000b9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bc	2b c1		 sub	 eax, ecx
  000be	c1 f8 02	 sar	 eax, 2
  000c1	85 c0		 test	 eax, eax
  000c3	77 07		 ja	 SHORT $L255201
$L255281:
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?_Xran@?$vector@PAUtagTMONSPAWN@@V?$allocator@PAUtagTMONSPAWN@@@std@@@std@@IBEXXZ ; std::vector<tagTMONSPAWN *,std::allocator<tagTMONSPAWN *> >::_Xran
$L255287:
$L255201:
  000cc	8b 29		 mov	 ebp, DWORD PTR [ecx]
$L176989:

; 478  : 	}
; 479  : 
; 480  : 	MAPTMONSPAWN::iterator finder = m_mapTMONSPAWN.find(pSPAWN->m_wID);

  000ce	8d 75 34	 lea	 esi, DWORD PTR [ebp+52]
  000d1	56		 push	 esi
  000d2	8d 54 24 38	 lea	 edx, DWORD PTR _finder$[esp+48]
  000d6	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  000d9	52		 push	 edx
  000da	8b cf		 mov	 ecx, edi
  000dc	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 481  : 	CTMonSpawn *pMonSpawn = NULL;
; 482  : 
; 483  : 	if( finder != m_mapTMONSPAWN.end() )

  000e1	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  000e4	8b 4c 24 34	 mov	 ecx, DWORD PTR _finder$[esp+44]
  000e8	3b c8		 cmp	 ecx, eax
  000ea	74 38		 je	 SHORT $L176994

; 484  : 	{
; 485  : 		if( bRegenType == RT_WAITSPAWN || !(*finder).second->m_vTMON.empty() )

  000ec	80 7c 24 40 01	 cmp	 BYTE PTR _bRegenType$[esp+44], 1
  000f1	74 1a		 je	 SHORT $L176996
  000f3	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  000f6	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000f9	85 d2		 test	 edx, edx
  000fb	74 0c		 je	 SHORT $L255282
  000fd	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00100	2b c2		 sub	 eax, edx
  00102	c1 f8 02	 sar	 eax, 2
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L176996
$L255282:

; 487  : 
; 488  : 		pMonSpawn = (*finder).second;

  00109	8b d9		 mov	 ebx, ecx

; 489  : 	}
; 490  : 	else

  0010b	eb 63		 jmp	 SHORT $L176997
$L176996:
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5d		 pop	 ebp

; 486  : 			return NULL;

  00110	33 c0		 xor	 eax, eax
  00112	5b		 pop	 ebx

; 507  : 
; 508  : 	return pMonSpawn;
; 509  : }

  00113	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00117	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0011e	83 c4 20	 add	 esp, 32			; 00000020H
  00121	c2 10 00	 ret	 16			; 00000010H
$L176994:

; 491  : 	{
; 492  : 		pMonSpawn = new CTMonSpawn();

  00124	6a 24		 push	 36			; 00000024H
  00126	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0012b	83 c4 04	 add	 esp, 4
  0012e	89 44 24 34	 mov	 DWORD PTR $T254982[esp+44], eax
  00132	85 c0		 test	 eax, eax
  00134	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 0
  0013c	74 09		 je	 SHORT $L254983
  0013e	8b c8		 mov	 ecx, eax
  00140	e8 00 00 00 00	 call	 ??0CTMonSpawn@@QAE@XZ	; CTMonSpawn::CTMonSpawn
  00145	eb 02		 jmp	 SHORT $L254984
$L254983:
  00147	33 c0		 xor	 eax, eax
$L254984:

; 493  : 		m_mapTMONSPAWN.insert( MAPTMONSPAWN::value_type( pSPAWN->m_wID, pMonSpawn));

  00149	66 8b 0e	 mov	 cx, WORD PTR [esi]
  0014c	8d 54 24 14	 lea	 edx, DWORD PTR $T254985[esp+48]
  00150	8b d8		 mov	 ebx, eax
  00152	89 44 24 18	 mov	 DWORD PTR $T254985[esp+52], eax
  00156	52		 push	 edx
  00157	8d 44 24 20	 lea	 eax, DWORD PTR $T254986[esp+52]
  0015b	66 89 4c 24 18	 mov	 WORD PTR $T254985[esp+52], cx
  00160	50		 push	 eax
  00161	8b cf		 mov	 ecx, edi
  00163	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0016b	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::insert
$L176997:

; 494  : 	}
; 495  : 
; 496  : 	if( bRegenType == RT_WAITSPAWN )

  00170	80 7c 24 40 01	 cmp	 BYTE PTR _bRegenType$[esp+44], 1
  00175	75 05		 jne	 SHORT $L177024

; 497  : 		bRegenType = RT_ETERNAL;

  00177	c6 44 24 40 00	 mov	 BYTE PTR _bRegenType$[esp+44], 0
$L177024:

; 498  : 
; 499  : 	pMonSpawn->m_pSPAWN = pSPAWN;
; 500  : 
; 501  : 	InitMonster(
; 502  : 		pMonSpawn,
; 503  : 		pSPAWN,
; 504  : 		bChannel,
; 505  : 		bCountry,
; 506  : 		bRegenType);

  0017c	8b 4c 24 40	 mov	 ecx, DWORD PTR _bRegenType$[esp+44]
  00180	8b 54 24 3c	 mov	 edx, DWORD PTR _bCountry$[esp+44]
  00184	8b 44 24 38	 mov	 eax, DWORD PTR _bChannel$[esp+44]
  00188	51		 push	 ecx
  00189	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+52]
  0018d	52		 push	 edx
  0018e	50		 push	 eax
  0018f	55		 push	 ebp
  00190	53		 push	 ebx
  00191	89 6b 04	 mov	 DWORD PTR [ebx+4], ebp
  00194	e8 00 00 00 00	 call	 ?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ; CTMap::InitMonster

; 507  : 
; 508  : 	return pMonSpawn;
; 509  : }

  00199	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	5d		 pop	 ebp
  001a0	8b c3		 mov	 eax, ebx
  001a2	5b		 pop	 ebx
  001a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001aa	83 c4 20	 add	 esp, 32			; 00000020H
  001ad	c2 10 00	 ret	 16			; 00000010H
$L255284:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L254987:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T254982[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T255279
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddTimelimitedMon@CTMap@@QAEPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ENDP ; CTMap::AddTimelimitedMon
PUBLIC	?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z	; CTMap::AddMonSpawn
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
xdata$x	SEGMENT
$T255413 DD	0ffffffffH
	DD	FLAT:$L255300
$T255410 DD	019930520H
	DD	01H
	DD	FLAT:$T255413
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z
_TEXT	SEGMENT
$T255298 = -28						; size = 8
$T255295 = -28						; size = 4
$T255299 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_bRegenType$ = 8					; size = 1
_finder$ = 8						; size = 4
_pSPAWN$ = 8						; size = 4
_bChannel$ = 12						; size = 1
_bCountry$ = 16						; size = 1
?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z PROC NEAR	; CTMap::AddMonSpawn, COMDAT
; _this$ = ecx

; 514  : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx

; 515  : 	MAPTMONSPAWN::iterator finder = m_mapTMONSPAWN.find(pSPAWN->m_wID);

  00019	8b 5c 24 24	 mov	 ebx, DWORD PTR _pSPAWN$[esp+28]
  0001d	55		 push	 ebp
  0001e	57		 push	 edi
  0001f	8d 6b 34	 lea	 ebp, DWORD PTR [ebx+52]
  00022	8b f9		 mov	 edi, ecx
  00024	55		 push	 ebp
  00025	8d 44 24 30	 lea	 eax, DWORD PTR _finder$[esp+40]
  00029	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 516  : 	if( finder != m_mapTMONSPAWN.end() )

  00032	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00035	39 44 24 2c	 cmp	 DWORD PTR _finder$[esp+36], eax
  00039	0f 85 a2 00 00
	00		 jne	 $L177044

; 517  : 		return;
; 518  : 
; 519  : 	BYTE bRegenType = RT_ETERNAL;
; 520  : 
; 521  : 	if(pSPAWN->m_lpvGroup &&
; 522  : 		!pSPAWN->m_lpvGroup->empty() &&
; 523  : 		pSPAWN->m_lpvGroup->back()->m_wID != pSPAWN->m_wID)

  0003f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00042	56		 push	 esi
  00043	33 f6		 xor	 esi, esi
  00045	3b ce		 cmp	 ecx, esi
  00047	c6 44 24 30 00	 mov	 BYTE PTR _bRegenType$[esp+40], 0
  0004c	74 28		 je	 SHORT $L177036
  0004e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00051	3b d6		 cmp	 edx, esi
  00053	74 21		 je	 SHORT $L177036
  00055	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00058	2b c2		 sub	 eax, edx
  0005a	c1 f8 02	 sar	 eax, 2
  0005d	3b c6		 cmp	 eax, esi
  0005f	74 15		 je	 SHORT $L177036
  00061	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00064	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00067	66 8b 51 34	 mov	 dx, WORD PTR [ecx+52]
  0006b	66 3b 55 00	 cmp	 dx, WORD PTR [ebp]
  0006f	74 05		 je	 SHORT $L177036

; 524  : 		bRegenType = RT_WAITSPAWN;

  00071	c6 44 24 30 01	 mov	 BYTE PTR _bRegenType$[esp+40], 1
$L177036:

; 525  : 
; 526  : 	CTMonSpawn *pMonSpawn = new CTMonSpawn();

  00076	6a 24		 push	 36			; 00000024H
  00078	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007d	83 c4 04	 add	 esp, 4
  00080	89 44 24 10	 mov	 DWORD PTR $T255295[esp+44], eax
  00084	3b c6		 cmp	 eax, esi
  00086	89 74 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], esi
  0008a	74 09		 je	 SHORT $L255297
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??0CTMonSpawn@@QAE@XZ	; CTMonSpawn::CTMonSpawn
  00093	8b f0		 mov	 esi, eax
$L255297:

; 527  : 	pMonSpawn->m_pSPAWN = pSPAWN;
; 528  : 	m_mapTMONSPAWN.insert( MAPTMONSPAWN::value_type( pMonSpawn->m_pSPAWN->m_wID, pMonSpawn));

  00095	8d 4c 24 10	 lea	 ecx, DWORD PTR $T255298[esp+44]
  00099	51		 push	 ecx
  0009a	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  0009d	66 8b 45 00	 mov	 ax, WORD PTR [ebp]
  000a1	8d 54 24 1c	 lea	 edx, DWORD PTR $T255299[esp+48]
  000a5	52		 push	 edx
  000a6	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  000a9	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  000b1	66 89 44 24 18	 mov	 WORD PTR $T255298[esp+52], ax
  000b6	89 74 24 1c	 mov	 DWORD PTR $T255298[esp+56], esi
  000ba	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAVCTMonSpawn@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::insert

; 529  : 
; 530  : 	if( m_bType != MAP_INDUNTEMP )

  000bf	80 bf 8e 00 00
	00 01		 cmp	 BYTE PTR [edi+142], 1
  000c6	74 18		 je	 SHORT $L255412

; 531  : 	{
; 532  : 		InitMonster(
; 533  : 			pMonSpawn,
; 534  : 			pSPAWN,
; 535  : 			bChannel,
; 536  : 			bCountry,
; 537  : 			bRegenType);

  000c8	8b 44 24 30	 mov	 eax, DWORD PTR _bRegenType$[esp+40]
  000cc	8b 4c 24 38	 mov	 ecx, DWORD PTR _bCountry$[esp+40]
  000d0	8b 54 24 34	 mov	 edx, DWORD PTR _bChannel$[esp+40]
  000d4	50		 push	 eax
  000d5	51		 push	 ecx
  000d6	52		 push	 edx
  000d7	53		 push	 ebx
  000d8	56		 push	 esi
  000d9	8b cf		 mov	 ecx, edi
  000db	e8 00 00 00 00	 call	 ?InitMonster@CTMap@@QAEXPAVCTMonSpawn@@PAUtagTMONSPAWN@@EEE@Z ; CTMap::InitMonster
$L255412:
  000e0	5e		 pop	 esi
$L177044:

; 538  : 	}
; 539  : }

  000e1	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  000e5	5f		 pop	 edi
  000e6	5d		 pop	 ebp
  000e7	5b		 pop	 ebx
  000e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ef	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f2	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L255300:
  00000	8b 45 e4	 mov	 eax, DWORD PTR $T255295[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T255410
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z ENDP	; CTMap::AddMonSpawn
PUBLIC	?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z		; CTMap::EnterMAP
EXTRN	?SendCS_ADDGODTOWER_ACK@CTPlayer@@QAEXPAUtagGODTOWER@@@Z:NEAR ; CTPlayer::SendCS_ADDGODTOWER_ACK
EXTRN	?SendCS_ADDGODBALL_ACK@CTPlayer@@QAEXPAUtagGODBALL@@@Z:NEAR ; CTPlayer::SendCS_ADDGODBALL_ACK
EXTRN	?IsEnable@CTCell@@QAEEE@Z:NEAR			; CTCell::IsEnable
EXTRN	?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z:NEAR	; CTCell::AddPlayer
EXTRN	?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z:NEAR ; CTCell::EnterPlayer
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T256333 DD	0ffffffffH
	DD	FLAT:$L255430
$T256321 DD	019930520H
	DD	01H
	DD	FLAT:$T256333
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z
_TEXT	SEGMENT
_finder$ = -28						; size = 4
_mapTCELL$177952 = -24					; size = 12
__$EHRec$ = -12						; size = 12
_itGt$177944 = 8					; size = 4
_itGb$177937 = 8					; size = 4
$T255419 = 8						; size = 4
_pPlayer$ = 8						; size = 4
_bNewMember$ = 12					; size = 1
$T256293 = 12						; size = 4
?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z PROC NEAR		; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 907  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 908  : 	pPlayer->m_pMAP = this;

  0001c	8b 7c 24 30	 mov	 edi, DWORD PTR _pPlayer$[esp+40]

; 909  : 
; 910  : 	WORD wPosX = WORD(pPlayer->m_fPosX) / CELL_SIZE;

  00020	d9 87 7c 01 01
	00		 fld	 DWORD PTR [edi+65916]
  00026	8b f1		 mov	 esi, ecx
  00028	89 b7 40 01 01
	00		 mov	 DWORD PTR [edi+65856], esi
  0002e	e8 00 00 00 00	 call	 __ftol2

; 911  : 	WORD wPosZ = WORD(pPlayer->m_fPosZ) / CELL_SIZE;

  00033	d9 87 84 01 01
	00		 fld	 DWORD PTR [edi+65924]
  00039	66 8b d8	 mov	 bx, ax
  0003c	66 c1 eb 06	 shr	 bx, 6
  00040	e8 00 00 00 00	 call	 __ftol2
  00045	66 c1 e8 06	 shr	 ax, 6

; 912  : 
; 913  : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  00049	0f b7 c0	 movzx	 eax, ax
  0004c	0f b7 cb	 movzx	 ecx, bx
  0004f	c1 e0 10	 shl	 eax, 16			; 00000010H
  00052	0b c1		 or	 eax, ecx
  00054	8d 54 24 30	 lea	 edx, DWORD PTR $T255419[esp+40]
  00058	89 44 24 30	 mov	 DWORD PTR $T255419[esp+40], eax
  0005c	52		 push	 edx
  0005d	8d 44 24 14	 lea	 eax, DWORD PTR _finder$[esp+48]
  00061	50		 push	 eax
  00062	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00065	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 914  : 	if( finder != m_mapTCELL.end() &&
; 915  : 		(*finder).second->IsEnable(pPlayer->m_bChannel))

  0006a	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0006d	8b 6c 24 10	 mov	 ebp, DWORD PTR _finder$[esp+44]
  00071	3b e8		 cmp	 ebp, eax
  00073	0f 84 6a 01 00
	00		 je	 $L256318
  00079	33 c9		 xor	 ecx, ecx
  0007b	8a 8f 74 01 01
	00		 mov	 cl, BYTE PTR [edi+65908]
  00081	51		 push	 ecx
  00082	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00085	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  0008a	84 c0		 test	 al, al
  0008c	0f 84 51 01 00
	00		 je	 $L256318

; 916  : 	{
; 917  : 		if(m_pCastle && bNewMember)

  00092	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00098	33 db		 xor	 ebx, ebx
  0009a	3b c3		 cmp	 eax, ebx
  0009c	74 61		 je	 SHORT $L177950
  0009e	38 5c 24 34	 cmp	 BYTE PTR _bNewMember$[esp+40], bl
  000a2	74 5b		 je	 SHORT $L177950

; 918  : 		{
; 919  : 			MAPTGODBALL::iterator itGb;
; 920  : 			for(itGb = m_mapTGODBALL.begin(); itGb!=m_mapTGODBALL.end(); itGb++)

  000a4	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  000a7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a9	3b c1		 cmp	 eax, ecx
  000ab	89 44 24 30	 mov	 DWORD PTR _itGb$177937[esp+40], eax
  000af	74 1f		 je	 SHORT $L177943
$L255516:

; 921  : 				pPlayer->SendCS_ADDGODBALL_ACK((*itGb).second);

  000b1	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000b4	52		 push	 edx
  000b5	8b cf		 mov	 ecx, edi
  000b7	e8 00 00 00 00	 call	 ?SendCS_ADDGODBALL_ACK@CTPlayer@@QAEXPAUtagGODBALL@@@Z ; CTPlayer::SendCS_ADDGODBALL_ACK
  000bc	8d 4c 24 30	 lea	 ecx, DWORD PTR _itGb$177937[esp+40]
  000c0	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  000c5	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  000c8	8b 44 24 30	 mov	 eax, DWORD PTR _itGb$177937[esp+40]
  000cc	3b c1		 cmp	 eax, ecx
  000ce	75 e1		 jne	 SHORT $L255516
$L177943:

; 922  : 
; 923  : 			MAPTGODTOWER::iterator itGt;
; 924  : 			for(itGt = m_mapTGODTOWER.begin(); itGt!=m_mapTGODTOWER.end(); itGt++)

  000d0	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  000d3	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d5	3b c1		 cmp	 eax, ecx
  000d7	89 44 24 30	 mov	 DWORD PTR _itGt$177944[esp+40], eax
  000db	74 22		 je	 SHORT $L177950
  000dd	8d 49 00	 npad	 3
$L255608:

; 925  : 				pPlayer->SendCS_ADDGODTOWER_ACK((*itGt).second);

  000e0	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000e3	50		 push	 eax
  000e4	8b cf		 mov	 ecx, edi
  000e6	e8 00 00 00 00	 call	 ?SendCS_ADDGODTOWER_ACK@CTPlayer@@QAEXPAUtagGODTOWER@@@Z ; CTPlayer::SendCS_ADDGODTOWER_ACK
  000eb	8d 4c 24 30	 lea	 ecx, DWORD PTR _itGt$177944[esp+40]
  000ef	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
  000f4	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  000f7	8b 44 24 30	 mov	 eax, DWORD PTR _itGt$177944[esp+40]
  000fb	3b c1		 cmp	 eax, ecx
  000fd	75 e1		 jne	 SHORT $L255608
$L177950:

; 926  : 		}
; 927  : 
; 928  : 		MAPTCELL::iterator it;
; 929  : 		MAPTCELL mapTCELL;

  000ff	8d 4c 24 14	 lea	 ecx, DWORD PTR _mapTCELL$177952[esp+44]
  00103	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  00108	89 44 24 18	 mov	 DWORD PTR _mapTCELL$177952[esp+48], eax
  0010c	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00110	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177952[esp+48]
  00114	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00117	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177952[esp+48]
  0011b	89 00		 mov	 DWORD PTR [eax], eax
  0011d	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177952[esp+48]
  00121	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00124	89 5c 24 1c	 mov	 DWORD PTR _mapTCELL$177952[esp+52], ebx

; 930  : 
; 931  : 		(*finder).second->AddPlayer(pPlayer);

  00128	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  0012b	57		 push	 edi
  0012c	89 5c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], ebx
  00130	e8 00 00 00 00	 call	 ?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z ; CTCell::AddPlayer

; 932  : 		GetNeighbor(
; 933  : 			&mapTCELL,
; 934  : 			pPlayer->m_fPosX,
; 935  : 			pPlayer->m_fPosZ);

  00135	8b 8f 84 01 01
	00		 mov	 ecx, DWORD PTR [edi+65924]
  0013b	8b 97 7c 01 01
	00		 mov	 edx, DWORD PTR [edi+65916]
  00141	51		 push	 ecx
  00142	52		 push	 edx
  00143	8d 44 24 1c	 lea	 eax, DWORD PTR _mapTCELL$177952[esp+52]
  00147	50		 push	 eax
  00148	8b ce		 mov	 ecx, esi
  0014a	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 936  : 
; 937  : 		for( it = mapTCELL.begin(); it != mapTCELL.end(); it++)

  0014f	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177952[esp+48]
  00153	8b 30		 mov	 esi, DWORD PTR [eax]
  00155	3b f0		 cmp	 esi, eax
  00157	74 63		 je	 SHORT $L177958
  00159	8d a4 24 00 00
	00 00		 npad	 7
$L256104:

; 938  : 			(*it).second->EnterPlayer( pPlayer, (*finder).second, bNewMember, _AtlModule.m_dwTick);

  00160	8b 0d 48 a9 02
	00		 mov	 ecx, DWORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174408
  00166	8b 54 24 34	 mov	 edx, DWORD PTR _bNewMember$[esp+40]
  0016a	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  0016d	51		 push	 ecx
  0016e	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00171	52		 push	 edx
  00172	50		 push	 eax
  00173	57		 push	 edi
  00174	e8 00 00 00 00	 call	 ?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z ; CTCell::EnterPlayer
  00179	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  0017c	75 36		 jne	 SHORT $L256068
  0017e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00181	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00184	75 15		 jne	 SHORT $L256326
  00186	8b f0		 mov	 esi, eax
  00188	8b 06		 mov	 eax, DWORD PTR [esi]
  0018a	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0018d	75 25		 jne	 SHORT $L256068
  0018f	90		 npad	 1

; 936  : 
; 937  : 		for( it = mapTCELL.begin(); it != mapTCELL.end(); it++)

$L256089:
  00190	8b f0		 mov	 esi, eax
  00192	8b 06		 mov	 eax, DWORD PTR [esi]
  00194	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00197	74 f7		 je	 SHORT $L256089
  00199	eb 19		 jmp	 SHORT $L256068
$L256326:
  0019b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0019e	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001a1	75 0f		 jne	 SHORT $L256071
$L256070:
  001a3	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001a6	75 0a		 jne	 SHORT $L256071
  001a8	8b f0		 mov	 esi, eax
  001aa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ad	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  001b0	74 f1		 je	 SHORT $L256070
$L256071:
  001b2	8b f0		 mov	 esi, eax
$L256068:
  001b4	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177952[esp+48]
  001b8	3b f0		 cmp	 esi, eax
  001ba	75 a4		 jne	 SHORT $L256104
$L177958:

; 939  : 	}

  001bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001be	50		 push	 eax
  001bf	51		 push	 ecx
  001c0	8d 4c 24 3c	 lea	 ecx, DWORD PTR $T256293[esp+48]
  001c4	51		 push	 ecx
  001c5	8d 4c 24 20	 lea	 ecx, DWORD PTR _mapTCELL$177952[esp+56]
  001c9	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  001d1	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  001d6	8b 54 24 18	 mov	 edx, DWORD PTR _mapTCELL$177952[esp+48]
  001da	52		 push	 edx
  001db	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e0	83 c4 04	 add	 esp, 4
$L256318:

; 940  : }

  001e3	8b 4c 24 20	 mov	 ecx, DWORD PTR __$EHRec$[esp+44]
  001e7	5f		 pop	 edi
  001e8	5e		 pop	 esi
  001e9	5d		 pop	 ebp
  001ea	5b		 pop	 ebx
  001eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001f2	83 c4 1c	 add	 esp, 28			; 0000001cH
  001f5	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L255430:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapTCELL$177952[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
__ehhandler$?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T256321
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?EnterMAP@CTMap@@QAEXPAVCTPlayer@@E@Z ENDP		; CTMap::EnterMAP
PUBLIC	?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z		; CTMap::EnterMAP
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
EXTRN	?IsMainCell@CTCell@@QAEEE@Z:NEAR		; CTCell::IsMainCell
EXTRN	?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z:NEAR	; CTCell::AddMonster
EXTRN	?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z:NEAR ; CTCell::EnterMonster
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T256895 DD	0ffffffffH
	DD	FLAT:$L256344
$T256891 DD	019930520H
	DD	01H
	DD	FLAT:$T256895
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z
_TEXT	SEGMENT
_finder$ = -28						; size = 4
_mapTCELL$177980 = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T256865 = 8						; size = 4
_it$177979 = 8						; size = 4
$T256339 = 8						; size = 4
_pMON$ = 8						; size = 4
?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z PROC NEAR		; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 943  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi

; 944  : 	WORD wPosX = WORD(pMON->m_fPosX) / CELL_SIZE;

  0001b	8b 74 24 2c	 mov	 esi, DWORD PTR _pMON$[esp+36]
  0001f	d9 46 7c	 fld	 DWORD PTR [esi+124]
  00022	57		 push	 edi
  00023	8b e9		 mov	 ebp, ecx
  00025	e8 00 00 00 00	 call	 __ftol2

; 945  : 	WORD wPosZ = WORD(pMON->m_fPosZ) / CELL_SIZE;

  0002a	d9 86 84 00 00
	00		 fld	 DWORD PTR [esi+132]
  00030	66 8b f8	 mov	 di, ax
  00033	66 c1 ef 06	 shr	 di, 6
  00037	e8 00 00 00 00	 call	 __ftol2
  0003c	66 c1 e8 06	 shr	 ax, 6

; 946  : 
; 947  : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  00040	0f b7 c0	 movzx	 eax, ax
  00043	0f b7 cf	 movzx	 ecx, di
  00046	c1 e0 10	 shl	 eax, 16			; 00000010H
  00049	0b c1		 or	 eax, ecx
  0004b	8d 54 24 30	 lea	 edx, DWORD PTR $T256339[esp+40]
  0004f	89 44 24 30	 mov	 DWORD PTR $T256339[esp+40], eax
  00053	52		 push	 edx
  00054	8d 44 24 14	 lea	 eax, DWORD PTR _finder$[esp+48]
  00058	50		 push	 eax
  00059	8d 4d 40	 lea	 ecx, DWORD PTR [ebp+64]
  0005c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 948  : 	if( pMON->m_bType == OT_RECALL )

  00061	8a 46 77	 mov	 al, BYTE PTR [esi+119]
  00064	33 db		 xor	 ebx, ebx
  00066	3c 07		 cmp	 al, 7
  00068	75 06		 jne	 SHORT $L177974

; 949  : 		((CTRecallMon *) pMON)->m_bMain = FALSE;

  0006a	88 9e 7e 01 00
	00		 mov	 BYTE PTR [esi+382], bl
$L177974:

; 950  : 
; 951  : 	if( finder != m_mapTCELL.end() &&
; 952  : 		(pMON->m_bType != OT_RECALL ||
; 953  : 		(*finder).second->IsEnable(pMON->m_bChannel)))

  00070	8b 4d 44	 mov	 ecx, DWORD PTR [ebp+68]
  00073	8b 7c 24 10	 mov	 edi, DWORD PTR _finder$[esp+44]
  00077	3b f9		 cmp	 edi, ecx
  00079	0f 84 ea 00 00
	00		 je	 $L256861
  0007f	3c 07		 cmp	 al, 7
  00081	75 16		 jne	 SHORT $L177978
  00083	33 c9		 xor	 ecx, ecx
  00085	8a 4e 74	 mov	 cl, BYTE PTR [esi+116]
  00088	51		 push	 ecx
  00089	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0008c	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  00091	84 c0		 test	 al, al
  00093	0f 84 d0 00 00
	00		 je	 $L256861
$L177978:

; 954  : 	{
; 955  : 		MAPTCELL::iterator it;
; 956  : 		MAPTCELL mapTCELL;

  00099	8d 4c 24 14	 lea	 ecx, DWORD PTR _mapTCELL$177980[esp+44]
  0009d	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  000a2	89 44 24 18	 mov	 DWORD PTR _mapTCELL$177980[esp+48], eax
  000a6	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000aa	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177980[esp+48]
  000ae	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000b1	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177980[esp+48]
  000b5	89 00		 mov	 DWORD PTR [eax], eax
  000b7	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177980[esp+48]
  000bb	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000be	89 5c 24 1c	 mov	 DWORD PTR _mapTCELL$177980[esp+52], ebx

; 957  : 
; 958  : 		if( pMON->m_bType == OT_RECALL )

  000c2	80 7e 77 07	 cmp	 BYTE PTR [esi+119], 7
  000c6	89 5c 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], ebx
  000ca	75 14		 jne	 SHORT $L177981

; 959  : 			((CTRecallMon *) pMON)->m_bMain = (*finder).second->IsMainCell(pMON->m_bChannel);

  000cc	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000cf	33 d2		 xor	 edx, edx
  000d1	8a 56 74	 mov	 dl, BYTE PTR [esi+116]
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  000da	88 86 7e 01 00
	00		 mov	 BYTE PTR [esi+382], al
$L177981:

; 960  : 
; 961  : 		(*finder).second->AddMonster(pMON);

  000e0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000e3	56		 push	 esi
  000e4	e8 00 00 00 00	 call	 ?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z ; CTCell::AddMonster

; 962  : 
; 963  : 		GetNeighbor(
; 964  : 			&mapTCELL,
; 965  : 			pMON->m_fPosX,
; 966  : 			pMON->m_fPosZ);

  000e9	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  000ef	8b 4e 7c	 mov	 ecx, DWORD PTR [esi+124]
  000f2	50		 push	 eax
  000f3	51		 push	 ecx
  000f4	8d 54 24 1c	 lea	 edx, DWORD PTR _mapTCELL$177980[esp+52]
  000f8	52		 push	 edx
  000f9	8b cd		 mov	 ecx, ebp
  000fb	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 967  : 
; 968  : 		for( it = mapTCELL.begin(); it != mapTCELL.end(); it++)

  00100	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177980[esp+48]
  00104	8b 08		 mov	 ecx, DWORD PTR [eax]
  00106	3b c8		 cmp	 ecx, eax
  00108	89 4c 24 30	 mov	 DWORD PTR _it$177979[esp+40], ecx
  0010c	74 2c		 je	 SHORT $L177988
  0010e	8b ff		 npad	 2
$L256670:

; 969  : 			(*it).second->EnterMonster( pMON, (*finder).second, TRUE, _AtlModule.m_dwTick);

  00110	a1 48 a9 02 00	 mov	 eax, DWORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174408
  00115	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00118	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0011b	50		 push	 eax
  0011c	6a 01		 push	 1
  0011e	52		 push	 edx
  0011f	56		 push	 esi
  00120	e8 00 00 00 00	 call	 ?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z ; CTCell::EnterMonster
  00125	8d 4c 24 30	 lea	 ecx, DWORD PTR _it$177979[esp+40]
  00129	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
  0012e	8b 4c 24 30	 mov	 ecx, DWORD PTR _it$177979[esp+40]
  00132	8b 44 24 18	 mov	 eax, DWORD PTR _mapTCELL$177980[esp+48]
  00136	3b c8		 cmp	 ecx, eax
  00138	75 d6		 jne	 SHORT $L256670
$L177988:

; 970  : 	}

  0013a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013c	50		 push	 eax
  0013d	51		 push	 ecx
  0013e	8d 44 24 38	 lea	 eax, DWORD PTR $T256865[esp+48]
  00142	50		 push	 eax
  00143	8d 4c 24 20	 lea	 ecx, DWORD PTR _mapTCELL$177980[esp+56]
  00147	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0014f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00154	8b 4c 24 18	 mov	 ecx, DWORD PTR _mapTCELL$177980[esp+48]
  00158	51		 push	 ecx
  00159	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0015e	83 c4 04	 add	 esp, 4
  00161	89 5c 24 18	 mov	 DWORD PTR _mapTCELL$177980[esp+48], ebx
  00165	89 5c 24 1c	 mov	 DWORD PTR _mapTCELL$177980[esp+52], ebx
$L256861:

; 971  : 	pMON->m_pMAP = this;
; 972  : 
; 973  : 	if( pMON->m_bType == OT_MON )

  00169	80 7e 77 02	 cmp	 BYTE PTR [esi+119], 2
  0016d	89 6e 40	 mov	 DWORD PTR [esi+64], ebp
  00170	75 0d		 jne	 SHORT $L177989

; 974  : 		pMON->OnEvent( AT_ENTER, 0, 0, 0, 0);

  00172	53		 push	 ebx
  00173	53		 push	 ebx
  00174	53		 push	 ebx
  00175	53		 push	 ebx
  00176	6a 07		 push	 7
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
$L177989:

; 975  : }

  0017f	8b 4c 24 20	 mov	 ecx, DWORD PTR __$EHRec$[esp+44]
  00183	5f		 pop	 edi
  00184	5e		 pop	 esi
  00185	5d		 pop	 ebp
  00186	5b		 pop	 ebx
  00187	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0018e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00191	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L256344:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapTCELL$177980[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
__ehhandler$?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T256891
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?EnterMAP@CTMap@@QAEXPAVCTMonster@@@Z ENDP		; CTMap::EnterMAP
PUBLIC	?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z		; CTMap::EnterMAP
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T257160 DD	0ffffffffH
	DD	FLAT:$L256905
$T257154 DD	019930520H
	DD	01H
	DD	FLAT:$T257160
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z
_TEXT	SEGMENT
$T256902 = -44						; size = 8
_this$ = -44						; size = 4
$T256903 = -36						; size = 8
_vPlayer$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_itGB$ = 8						; size = 4
_pGodBall$ = 8						; size = 4
?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z PROC NEAR	; CTMap::EnterMAP, COMDAT
; _this$ = ecx

; 1020 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 20	 sub	 esp, 32			; 00000020H
  00018	53		 push	 ebx

; 1021 : 	pGodBall->m_pMAP = this;

  00019	8b 5c 24 34	 mov	 ebx, DWORD PTR _pGodBall$[esp+44]
  0001d	55		 push	 ebp
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	89 4c 24 10	 mov	 DWORD PTR _this$[esp+60], ecx
  00024	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx

; 1022 : 	pGodBall->m_bGround = TRUE;

  00027	c6 43 34 01	 mov	 BYTE PTR [ebx+52], 1

; 1023 : 
; 1024 : 	VPLAYER vPlayer;

  0002b	33 c0		 xor	 eax, eax
  0002d	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax

; 1025 : 	vPlayer.clear();

  00031	89 44 24 24	 mov	 DWORD PTR _vPlayer$[esp+64], eax
  00035	89 44 24 28	 mov	 DWORD PTR _vPlayer$[esp+68], eax
  00039	89 44 24 2c	 mov	 DWORD PTR _vPlayer$[esp+72], eax

; 1026 : 	GetMapPlayers(&vPlayer);

  0003d	8d 44 24 20	 lea	 eax, DWORD PTR _vPlayer$[esp+60]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z ; CTMap::GetMapPlayers
  00047	8b 6c 24 24	 mov	 ebp, DWORD PTR _vPlayer$[esp+64]
  0004b	8b 7c 24 28	 mov	 edi, DWORD PTR _vPlayer$[esp+68]
  0004f	90		 npad	 1
$L178104:

; 1027 : 	while(!vPlayer.empty())

  00050	85 ed		 test	 ebp, ebp
  00052	74 21		 je	 SHORT $L257156
  00054	8b f7		 mov	 esi, edi
  00056	2b f5		 sub	 esi, ebp
  00058	c1 fe 02	 sar	 esi, 2
  0005b	85 f6		 test	 esi, esi
  0005d	74 16		 je	 SHORT $L257156

; 1028 : 	{
; 1029 : 		CTPlayer * pChar = vPlayer.back();
; 1030 : 		pChar->SendCS_ADDGODBALL_ACK( pGodBall );

  0005f	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
  00062	53		 push	 ebx
  00063	e8 00 00 00 00	 call	 ?SendCS_ADDGODBALL_ACK@CTPlayer@@QAEXPAUtagGODBALL@@@Z ; CTPlayer::SendCS_ADDGODBALL_ACK

; 1031 : 		vPlayer.pop_back();

  00068	85 f6		 test	 esi, esi
  0006a	74 e4		 je	 SHORT $L178104
  0006c	83 ef 04	 sub	 edi, 4
  0006f	89 7c 24 28	 mov	 DWORD PTR _vPlayer$[esp+68], edi

; 1032 : 	}

  00073	eb db		 jmp	 SHORT $L178104
$L257156:

; 1033 : 
; 1034 : 	MAPTGODBALL::iterator itGB = m_mapTGODBALL.find(pGodBall->m_wID);

  00075	8b 7c 24 10	 mov	 edi, DWORD PTR _this$[esp+60]
  00079	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  0007c	56		 push	 esi
  0007d	8d 4c 24 44	 lea	 ecx, DWORD PTR _itGB$[esp+60]
  00081	83 c7 70	 add	 edi, 112		; 00000070H
  00084	51		 push	 ecx
  00085	8b cf		 mov	 ecx, edi
  00087	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::find

; 1035 : 	if(itGB == m_mapTGODBALL.end())

  0008c	8b 44 24 10	 mov	 eax, DWORD PTR _this$[esp+60]
  00090	8b 54 24 40	 mov	 edx, DWORD PTR _itGB$[esp+56]
  00094	3b 50 74	 cmp	 edx, DWORD PTR [eax+116]
  00097	75 1d		 jne	 SHORT $L178110

; 1036 : 		m_mapTGODBALL.insert( MAPTGODBALL::value_type( pGodBall->m_wID, pGodBall));

  00099	66 8b 0e	 mov	 cx, WORD PTR [esi]
  0009c	8d 54 24 10	 lea	 edx, DWORD PTR $T256902[esp+60]
  000a0	52		 push	 edx
  000a1	8d 44 24 1c	 lea	 eax, DWORD PTR $T256903[esp+64]
  000a5	66 89 4c 24 14	 mov	 WORD PTR $T256902[esp+64], cx
  000aa	50		 push	 eax
  000ab	8b cf		 mov	 ecx, edi
  000ad	89 5c 24 1c	 mov	 DWORD PTR $T256902[esp+72], ebx
  000b1	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::insert
$L178110:

; 1037 : 
; 1038 : 	return TRUE;

  000b6	85 ed		 test	 ebp, ebp
  000b8	74 09		 je	 SHORT $L257157
  000ba	55		 push	 ebp
  000bb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c0	83 c4 04	 add	 esp, 4
$L257157:

; 1039 : }

  000c3	8b 4c 24 30	 mov	 ecx, DWORD PTR __$EHRec$[esp+60]
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5d		 pop	 ebp
  000ca	b0 01		 mov	 al, 1
  000cc	5b		 pop	 ebx
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 2c	 add	 esp, 44			; 0000002cH
  000d7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L256905:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _vPlayer$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
__ehhandler$?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T257154
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z ENDP		; CTMap::EnterMAP
PUBLIC	?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z		; CTMap::LeaveMAP
EXTRN	?DelPlayer@CTCell@@QAEXK@Z:NEAR			; CTCell::DelPlayer
EXTRN	?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z:NEAR	; CTCell::LeavePlayer
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T257825 DD	0ffffffffH
	DD	FLAT:$L257171
$T257819 DD	019930520H
	DD	01H
	DD	FLAT:$T257825
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z
_TEXT	SEGMENT
_finder$ = -28						; size = 4
_mapTCELL$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T257793 = 8						; size = 4
_it$ = 8						; size = 4
$T257166 = 8						; size = 4
_pPlayer$ = 8						; size = 4
?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z PROC NEAR		; CTMap::LeaveMAP, COMDAT
; _this$ = ecx

; 1042 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	56		 push	 esi

; 1043 : 	WORD wPosX = WORD(pPlayer->m_fPosX) / CELL_SIZE;

  0001a	8b 74 24 28	 mov	 esi, DWORD PTR _pPlayer$[esp+32]
  0001e	d9 86 7c 01 01
	00		 fld	 DWORD PTR [esi+65916]
  00024	57		 push	 edi
  00025	8b f9		 mov	 edi, ecx
  00027	e8 00 00 00 00	 call	 __ftol2

; 1044 : 	WORD wPosZ = WORD(pPlayer->m_fPosZ) / CELL_SIZE;

  0002c	d9 86 84 01 01
	00		 fld	 DWORD PTR [esi+65924]
  00032	66 8b d8	 mov	 bx, ax
  00035	66 c1 eb 06	 shr	 bx, 6
  00039	e8 00 00 00 00	 call	 __ftol2
  0003e	66 c1 e8 06	 shr	 ax, 6

; 1045 : 
; 1046 : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  00042	0f b7 c0	 movzx	 eax, ax
  00045	0f b7 cb	 movzx	 ecx, bx
  00048	c1 e0 10	 shl	 eax, 16			; 00000010H
  0004b	0b c1		 or	 eax, ecx
  0004d	8d 54 24 2c	 lea	 edx, DWORD PTR $T257166[esp+36]
  00051	89 44 24 2c	 mov	 DWORD PTR $T257166[esp+36], eax
  00055	52		 push	 edx
  00056	8d 44 24 10	 lea	 eax, DWORD PTR _finder$[esp+44]
  0005a	50		 push	 eax
  0005b	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0005e	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1047 : 	if( finder != m_mapTCELL.end() )

  00063	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  00066	8b 4c 24 0c	 mov	 ecx, DWORD PTR _finder$[esp+40]
  0006a	3b c8		 cmp	 ecx, eax
  0006c	74 0f		 je	 SHORT $L178130

; 1048 : 		(*finder).second->DelPlayer(pPlayer->m_dwID);

  0006e	8b 96 44 01 01
	00		 mov	 edx, DWORD PTR [esi+65860]
  00074	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00077	52		 push	 edx
  00078	e8 00 00 00 00	 call	 ?DelPlayer@CTCell@@QAEXK@Z ; CTCell::DelPlayer
$L178130:

; 1049 : 
; 1050 : 	MAPTCELL::iterator it;
; 1051 : 	MAPTCELL mapTCELL;

  0007d	8d 4c 24 10	 lea	 ecx, DWORD PTR _mapTCELL$[esp+40]
  00081	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  00086	89 44 24 14	 mov	 DWORD PTR _mapTCELL$[esp+44], eax
  0008a	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0008e	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00092	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00095	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00099	89 00		 mov	 DWORD PTR [eax], eax
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  0009f	33 db		 xor	 ebx, ebx
  000a1	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000a4	89 5c 24 18	 mov	 DWORD PTR _mapTCELL$[esp+48], ebx

; 1052 : 	mapTCELL.clear();

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000ac	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000af	51		 push	 ecx
  000b0	8d 4c 24 14	 lea	 ecx, DWORD PTR _mapTCELL$[esp+44]
  000b4	89 5c 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], ebx
  000b8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  000bd	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000c1	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000c4	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000c8	89 5c 24 18	 mov	 DWORD PTR _mapTCELL$[esp+48], ebx
  000cc	89 00		 mov	 DWORD PTR [eax], eax
  000ce	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000d2	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1053 : 
; 1054 : 	GetNeighbor(
; 1055 : 		&mapTCELL,
; 1056 : 		pPlayer->m_fPosX,
; 1057 : 		pPlayer->m_fPosZ);

  000d5	8b 96 84 01 01
	00		 mov	 edx, DWORD PTR [esi+65924]
  000db	8b 86 7c 01 01
	00		 mov	 eax, DWORD PTR [esi+65916]
  000e1	52		 push	 edx
  000e2	50		 push	 eax
  000e3	8d 4c 24 18	 lea	 ecx, DWORD PTR _mapTCELL$[esp+48]
  000e7	51		 push	 ecx
  000e8	8b cf		 mov	 ecx, edi
  000ea	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1058 : 
; 1059 : 	for( it = mapTCELL.begin(); it != mapTCELL.end(); it++)

  000ef	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f5	3b c8		 cmp	 ecx, eax
  000f7	89 4c 24 2c	 mov	 DWORD PTR _it$[esp+36], ecx
  000fb	74 23		 je	 SHORT $L178138
  000fd	8d 49 00	 npad	 3
$L257519:

; 1060 : 		(*it).second->LeavePlayer( pPlayer, TRUE);

  00100	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00103	6a 01		 push	 1
  00105	56		 push	 esi
  00106	e8 00 00 00 00	 call	 ?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z ; CTCell::LeavePlayer
  0010b	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+36]
  0010f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
  00114	8b 4c 24 2c	 mov	 ecx, DWORD PTR _it$[esp+36]
  00118	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  0011c	3b c8		 cmp	 ecx, eax
  0011e	75 e0		 jne	 SHORT $L257519
$L178138:

; 1061 : 
; 1062 : 	pPlayer->m_pMAP = NULL;

  00120	89 9e 40 01 01
	00		 mov	 DWORD PTR [esi+65856], ebx

; 1063 : 
; 1064 : 	mapTCELL.clear();

  00126	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00129	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  0012c	8b f7		 mov	 esi, edi
  0012e	75 25		 jne	 SHORT $L257636
$L257634:
  00130	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00133	52		 push	 edx
  00134	8d 4c 24 14	 lea	 ecx, DWORD PTR _mapTCELL$[esp+44]
  00138	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  0013d	8b 36		 mov	 esi, DWORD PTR [esi]
  0013f	57		 push	 edi
  00140	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00145	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00148	83 c4 04	 add	 esp, 4
  0014b	3a c3		 cmp	 al, bl
  0014d	8b fe		 mov	 edi, esi
  0014f	74 df		 je	 SHORT $L257634
  00151	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
$L257636:
  00155	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00158	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  0015c	89 5c 24 18	 mov	 DWORD PTR _mapTCELL$[esp+48], ebx
  00160	89 00		 mov	 DWORD PTR [eax], eax
  00162	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00166	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1065 : }

  00169	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  0016d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016f	50		 push	 eax
  00170	51		 push	 ecx
  00171	8d 44 24 34	 lea	 eax, DWORD PTR $T257793[esp+44]
  00175	50		 push	 eax
  00176	8d 4c 24 1c	 lea	 ecx, DWORD PTR _mapTCELL$[esp+52]
  0017a	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00182	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00187	8b 4c 24 14	 mov	 ecx, DWORD PTR _mapTCELL$[esp+44]
  0018b	51		 push	 ecx
  0018c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00191	8b 4c 24 20	 mov	 ecx, DWORD PTR __$EHRec$[esp+44]
  00195	83 c4 04	 add	 esp, 4
  00198	5f		 pop	 edi
  00199	5e		 pop	 esi
  0019a	5b		 pop	 ebx
  0019b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a2	83 c4 1c	 add	 esp, 28			; 0000001cH
  001a5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L257171:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapTCELL$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
__ehhandler$?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T257819
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LeaveMAP@CTMap@@QAEXPAVCTPlayer@@@Z ENDP		; CTMap::LeaveMAP
PUBLIC	?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z		; CTMap::LeaveMAP
EXTRN	?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z:NEAR	; CTCell::DelMonster
EXTRN	?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z:NEAR ; CTCell::LeaveMonster
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T258342 DD	0ffffffffH
	DD	FLAT:$L257836
$T258338 DD	019930520H
	DD	01H
	DD	FLAT:$T258342
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z
_TEXT	SEGMENT
_finder$ = -28						; size = 4
_mapTCELL$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T258310 = 8						; size = 4
_it$ = 8						; size = 4
$T257831 = 8						; size = 4
_pMON$ = 8						; size = 4
_bExitMap$ = 12						; size = 1
?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z PROC NEAR	; CTMap::LeaveMAP, COMDAT
; _this$ = ecx

; 1068 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	53		 push	 ebx
  00019	56		 push	 esi

; 1069 : 	WORD wPosX = WORD(pMON->m_fPosX) / CELL_SIZE;

  0001a	8b 74 24 28	 mov	 esi, DWORD PTR _pMON$[esp+32]
  0001e	d9 46 7c	 fld	 DWORD PTR [esi+124]
  00021	57		 push	 edi
  00022	8b f9		 mov	 edi, ecx
  00024	e8 00 00 00 00	 call	 __ftol2

; 1070 : 	WORD wPosZ = WORD(pMON->m_fPosZ) / CELL_SIZE;

  00029	d9 86 84 00 00
	00		 fld	 DWORD PTR [esi+132]
  0002f	66 8b d8	 mov	 bx, ax
  00032	66 c1 eb 06	 shr	 bx, 6
  00036	e8 00 00 00 00	 call	 __ftol2
  0003b	66 c1 e8 06	 shr	 ax, 6

; 1071 : 
; 1072 : 	MAPTCELL::iterator finder = m_mapTCELL.find(MAKELONG( wPosX, wPosZ));

  0003f	0f b7 c0	 movzx	 eax, ax
  00042	0f b7 cb	 movzx	 ecx, bx
  00045	c1 e0 10	 shl	 eax, 16			; 00000010H
  00048	0b c1		 or	 eax, ecx
  0004a	8d 54 24 2c	 lea	 edx, DWORD PTR $T257831[esp+36]
  0004e	89 44 24 2c	 mov	 DWORD PTR $T257831[esp+36], eax
  00052	52		 push	 edx
  00053	8d 44 24 10	 lea	 eax, DWORD PTR _finder$[esp+44]
  00057	50		 push	 eax
  00058	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0005b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1073 : 	if( finder != m_mapTCELL.end() )

  00060	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  00063	8b 4c 24 0c	 mov	 ecx, DWORD PTR _finder$[esp+40]
  00067	3b c8		 cmp	 ecx, eax
  00069	74 09		 je	 SHORT $L178156

; 1074 : 		(*finder).second->DelMonster(pMON);

  0006b	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z ; CTCell::DelMonster
$L178156:

; 1075 : 
; 1076 : 	MAPTCELL::iterator it;
; 1077 : 	MAPTCELL mapTCELL;

  00074	8d 4c 24 10	 lea	 ecx, DWORD PTR _mapTCELL$[esp+40]
  00078	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  0007d	89 44 24 14	 mov	 DWORD PTR _mapTCELL$[esp+44], eax
  00081	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00085	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00089	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0008c	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00090	89 00		 mov	 DWORD PTR [eax], eax
  00092	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  00096	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00099	33 c0		 xor	 eax, eax
  0009b	89 44 24 18	 mov	 DWORD PTR _mapTCELL$[esp+48], eax

; 1078 : 
; 1079 : 	GetNeighbor(
; 1080 : 		&mapTCELL,
; 1081 : 		pMON->m_fPosX,
; 1082 : 		pMON->m_fPosZ);

  0009f	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  000a5	8b 56 7c	 mov	 edx, DWORD PTR [esi+124]
  000a8	51		 push	 ecx
  000a9	89 44 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], eax
  000ad	52		 push	 edx
  000ae	8d 44 24 18	 lea	 eax, DWORD PTR _mapTCELL$[esp+48]
  000b2	50		 push	 eax
  000b3	8b cf		 mov	 ecx, edi
  000b5	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1083 : 
; 1084 : 	for( it = mapTCELL.begin(); it != mapTCELL.end(); it++)

  000ba	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	3b c8		 cmp	 ecx, eax
  000c2	89 4c 24 2c	 mov	 DWORD PTR _it$[esp+36], ecx
  000c6	74 27		 je	 SHORT $L178164
  000c8	8b 7c 24 30	 mov	 edi, DWORD PTR _bExitMap$[esp+36]
  000cc	8d 64 24 00	 npad	 4
$L258137:

; 1085 : 		(*it).second->LeaveMonster( pMON, bExitMap);

  000d0	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  000d3	57		 push	 edi
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 ?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z ; CTCell::LeaveMonster
  000da	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+36]
  000de	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
  000e3	8b 4c 24 2c	 mov	 ecx, DWORD PTR _it$[esp+36]
  000e7	8b 44 24 14	 mov	 eax, DWORD PTR _mapTCELL$[esp+44]
  000eb	3b c8		 cmp	 ecx, eax
  000ed	75 e1		 jne	 SHORT $L258137
$L178164:

; 1086 : }

  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	50		 push	 eax
  000f2	51		 push	 ecx
  000f3	8d 4c 24 34	 lea	 ecx, DWORD PTR $T258310[esp+44]
  000f7	51		 push	 ecx
  000f8	8d 4c 24 1c	 lea	 ecx, DWORD PTR _mapTCELL$[esp+52]
  000fc	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00104	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00109	8b 54 24 14	 mov	 edx, DWORD PTR _mapTCELL$[esp+44]
  0010d	52		 push	 edx
  0010e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00113	8b 4c 24 20	 mov	 ecx, DWORD PTR __$EHRec$[esp+44]
  00117	83 c4 04	 add	 esp, 4
  0011a	5f		 pop	 edi
  0011b	5e		 pop	 esi
  0011c	5b		 pop	 ebx
  0011d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00124	83 c4 1c	 add	 esp, 28			; 0000001cH
  00127	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L257836:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapTCELL$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
__ehhandler$?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T258338
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z ENDP		; CTMap::LeaveMAP
PUBLIC	?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z		; CTMap::LeaveMAP
EXTRN	?SendCS_DELGODBALL_ACK@CTPlayer@@QAEXG@Z:NEAR	; CTPlayer::SendCS_DELGODBALL_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T258582 DD	0ffffffffH
	DD	FLAT:$L258348
$T258574 DD	019930520H
	DD	01H
	DD	FLAT:$T258582
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
_vPlayer$178171 = -28					; size = 16
__$EHRec$ = -12						; size = 12
_pGodBall$ = 8						; size = 4
_bErase$ = 12						; size = 1
?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z PROC NEAR	; CTMap::LeaveMAP, COMDAT
; _this$ = ecx

; 1089 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 14	 sub	 esp, 20			; 00000014H
  00018	53		 push	 ebx

; 1090 : 	if(pGodBall->m_bGround)

  00019	8b 5c 24 28	 mov	 ebx, DWORD PTR _pGodBall$[esp+32]
  0001d	8a 43 34	 mov	 al, BYTE PTR [ebx+52]
  00020	84 c0		 test	 al, al
  00022	89 4c 24 04	 mov	 DWORD PTR _this$[esp+36], ecx
  00026	74 6f		 je	 SHORT $L258579
  00028	55		 push	 ebp
  00029	57		 push	 edi

; 1091 : 	{
; 1092 : 		VPLAYER vPlayer;

  0002a	33 c0		 xor	 eax, eax
  0002c	89 44 24 28	 mov	 DWORD PTR __$EHRec$[esp+52], eax

; 1093 : 		vPlayer.clear();

  00030	89 44 24 14	 mov	 DWORD PTR _vPlayer$178171[esp+48], eax
  00034	89 44 24 18	 mov	 DWORD PTR _vPlayer$178171[esp+52], eax
  00038	89 44 24 1c	 mov	 DWORD PTR _vPlayer$178171[esp+56], eax

; 1094 : 		GetMapPlayers(&vPlayer);

  0003c	8d 44 24 10	 lea	 eax, DWORD PTR _vPlayer$178171[esp+44]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?GetMapPlayers@CTMap@@QAEXPAV?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@@Z ; CTMap::GetMapPlayers
  00046	8b 6c 24 14	 mov	 ebp, DWORD PTR _vPlayer$178171[esp+48]
  0004a	8b 7c 24 18	 mov	 edi, DWORD PTR _vPlayer$178171[esp+52]
  0004e	56		 push	 esi
  0004f	90		 npad	 1
$L178173:

; 1095 : 		while(!vPlayer.empty())

  00050	85 ed		 test	 ebp, ebp
  00052	74 27		 je	 SHORT $L258578
  00054	8b f7		 mov	 esi, edi
  00056	2b f5		 sub	 esi, ebp
  00058	c1 fe 02	 sar	 esi, 2
  0005b	85 f6		 test	 esi, esi
  0005d	74 1c		 je	 SHORT $L258578

; 1096 : 		{
; 1097 : 			CTPlayer * pChar = vPlayer.back();
; 1098 : 			pChar->SendCS_DELGODBALL_ACK( pGodBall->m_wID );

  0005f	33 c9		 xor	 ecx, ecx
  00061	66 8b 4b 04	 mov	 cx, WORD PTR [ebx+4]
  00065	51		 push	 ecx
  00066	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
  00069	e8 00 00 00 00	 call	 ?SendCS_DELGODBALL_ACK@CTPlayer@@QAEXG@Z ; CTPlayer::SendCS_DELGODBALL_ACK

; 1099 : 			vPlayer.pop_back();

  0006e	85 f6		 test	 esi, esi
  00070	74 de		 je	 SHORT $L178173
  00072	83 ef 04	 sub	 edi, 4
  00075	89 7c 24 1c	 mov	 DWORD PTR _vPlayer$178171[esp+56], edi

; 1100 : 		}

  00079	eb d5		 jmp	 SHORT $L178173
$L258578:

; 1101 : 
; 1102 : 		pGodBall->m_bGround = FALSE;
; 1103 : 	}

  0007b	85 ed		 test	 ebp, ebp
  0007d	c6 43 34 00	 mov	 BYTE PTR [ebx+52], 0
  00081	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00089	5e		 pop	 esi
  0008a	74 09		 je	 SHORT $L258581
  0008c	55		 push	 ebp
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00092	83 c4 04	 add	 esp, 4
$L258581:
  00095	5f		 pop	 edi
  00096	5d		 pop	 ebp
$L258579:

; 1104 : 
; 1105 : 	if(bErase)

  00097	8a 44 24 2c	 mov	 al, BYTE PTR _bErase$[esp+32]
  0009b	84 c0		 test	 al, al
  0009d	74 10		 je	 SHORT $L178176

; 1106 : 		m_mapTGODBALL.erase(pGodBall->m_wID);

  0009f	8b 4c 24 04	 mov	 ecx, DWORD PTR _this$[esp+36]
  000a3	83 c3 04	 add	 ebx, 4
  000a6	53		 push	 ebx
  000a7	83 c1 70	 add	 ecx, 112		; 00000070H
  000aa	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEIABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::erase
$L178176:

; 1107 : }

  000af	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  000b3	5b		 pop	 ebx
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bb	83 c4 20	 add	 esp, 32			; 00000020H
  000be	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L258348:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _vPlayer$178171[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@QAE@XZ ; std::vector<CTPlayer *,std::allocator<CTPlayer *> >::~vector<CTPlayer *,std::allocator<CTPlayer *> >
__ehhandler$?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T258574
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z ENDP		; CTMap::LeaveMAP
PUBLIC	?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z		; CTMap::OnMove
EXTRN	?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z:NEAR ; CTMapSvrModule::SendMW_CHECKCONNECT_ACK
EXTRN	?CloseSession@CSession@@QAEHXZ:NEAR		; CSession::CloseSession
EXTRN	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z:NEAR	; CTCell::LeaveChannel
EXTRN	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z:NEAR ; CTCell::LeaveChannel
EXTRN	?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z:NEAR	; CTCell::LeaveChannel
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T262063 DD	0ffffffffH
	DD	FLAT:$L258616
	DD	0ffffffffH
	DD	FLAT:$L258617
	DD	01H
	DD	FLAT:$L258618
	DD	02H
	DD	FLAT:$L258619
$T262021 DD	019930520H
	DD	04H
	DD	FLAT:$T262063
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z
_TEXT	SEGMENT
_i$178825 = -84						; size = 1
$T258594 = -84						; size = 2
$T258592 = -84						; size = 2
_dwNEW$ = -84						; size = 4
$T258596 = -80						; size = 2
_dwOLD$ = -80						; size = 4
_pNEW$178763 = -76					; size = 4
_this$ = -72						; size = 4
$T259205 = -68						; size = 4
$T258605 = -68						; size = 4
$T258601 = -68						; size = 4
$T258597 = -68						; size = 8
$T258595 = -68						; size = 8
$T258593 = -68						; size = 8
$T258590 = -68						; size = 4
$T258588 = -68						; size = 4
_mapCH$178823 = -60					; size = 12
_mapNEW$178822 = -48					; size = 12
_mapOLD$178821 = -36					; size = 12
_mapCON$178772 = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T261995 = 8						; size = 4
$T261836 = 8						; size = 4
$T261676 = 8						; size = 4
$T258606 = 8						; size = 4
_bLeaveCH$178851 = 8					; size = 1
_pPlayer$ = 8						; size = 4
$T258611 = 12						; size = 4
_i$178842 = 12						; size = 1
_fPosX$ = 12						; size = 4
$T258603 = 16						; size = 4
_fPosZ$ = 16						; size = 4
?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z PROC NEAR		; CTMap::OnMove, COMDAT
; _this$ = ecx

; 1112 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 48	 sub	 esp, 72			; 00000048H
  00018	53		 push	 ebx
  00019	55		 push	 ebp

; 1113 : 	WORD wCellX = WORD(pPlayer->m_fPosX) / CELL_SIZE;

  0001a	8b 6c 24 60	 mov	 ebp, DWORD PTR _pPlayer$[esp+88]
  0001e	d9 85 7c 01 01
	00		 fld	 DWORD PTR [ebp+65916]
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	89 4c 24 1c	 mov	 DWORD PTR _this$[esp+100], ecx
  0002a	e8 00 00 00 00	 call	 __ftol2

; 1114 : 	WORD wCellZ = WORD(pPlayer->m_fPosZ) / CELL_SIZE;

  0002f	d9 85 84 01 01
	00		 fld	 DWORD PTR [ebp+65924]
  00035	66 8b f0	 mov	 si, ax
  00038	66 c1 ee 06	 shr	 si, 6
  0003c	e8 00 00 00 00	 call	 __ftol2

; 1115 : 	WORD wNewX = WORD(fPosX) / CELL_SIZE;

  00041	d9 44 24 6c	 fld	 DWORD PTR _fPosX$[esp+96]
  00045	66 8b f8	 mov	 di, ax
  00048	66 c1 ef 06	 shr	 di, 6
  0004c	e8 00 00 00 00	 call	 __ftol2

; 1116 : 	WORD wNewZ = WORD(fPosZ) / CELL_SIZE;

  00051	d9 44 24 70	 fld	 DWORD PTR _fPosZ$[esp+96]
  00055	66 8b d8	 mov	 bx, ax
  00058	66 c1 eb 06	 shr	 bx, 6
  0005c	e8 00 00 00 00	 call	 __ftol2
  00061	66 c1 e8 06	 shr	 ax, 6

; 1117 : 
; 1118 : 	DWORD dwOLD = MAKELONG( wCellX, wCellZ);

  00065	0f b7 cf	 movzx	 ecx, di
  00068	0f b7 d6	 movzx	 edx, si
  0006b	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0006e	0b ca		 or	 ecx, edx

; 1119 : 	DWORD dwNEW = MAKELONG( wNewX, wNewZ);

  00070	0f b7 c0	 movzx	 eax, ax
  00073	0f b7 d3	 movzx	 edx, bx
  00076	c1 e0 10	 shl	 eax, 16			; 00000010H
  00079	0b c2		 or	 eax, edx

; 1120 : 
; 1121 : 	if( dwOLD != dwNEW )

  0007b	3b c8		 cmp	 ecx, eax
  0007d	89 4c 24 14	 mov	 DWORD PTR _dwOLD$[esp+100], ecx
  00081	89 44 24 10	 mov	 DWORD PTR _dwNEW$[esp+100], eax
  00085	0f 84 ce 07 00
	00		 je	 $L178201

; 1122 : 	{
; 1123 : 		MAPTCELL::iterator finder;
; 1124 : 		MAPTCELL::iterator it;
; 1125 : 		MAPBYTE::iterator itCH;
; 1126 : 
; 1127 : 		CTCell *pOLD = NULL;
; 1128 : 		CTCell *pNEW = NULL;
; 1129 : 
; 1130 : 		finder = m_mapTCELL.find(dwOLD);

  0008b	8b 74 24 1c	 mov	 esi, DWORD PTR _this$[esp+100]
  0008f	8d 44 24 14	 lea	 eax, DWORD PTR _dwOLD$[esp+100]
  00093	50		 push	 eax
  00094	8d 4c 24 24	 lea	 ecx, DWORD PTR $T258588[esp+104]
  00098	83 c6 40	 add	 esi, 64			; 00000040H
  0009b	51		 push	 ecx
  0009c	33 db		 xor	 ebx, ebx
  0009e	8b ce		 mov	 ecx, esi
  000a0	33 ed		 xor	 ebp, ebp
  000a2	89 5c 24 20	 mov	 DWORD PTR _pNEW$178763[esp+108], ebx
  000a6	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
  000ab	8b 38		 mov	 edi, DWORD PTR [eax]

; 1131 : 		if( finder != m_mapTCELL.end() && (*finder).second->IsEnable(pPlayer->m_bChannel) )

  000ad	8b 54 24 1c	 mov	 edx, DWORD PTR _this$[esp+100]
  000b1	3b 7a 44	 cmp	 edi, DWORD PTR [edx+68]
  000b4	74 1c		 je	 SHORT $L178766
  000b6	8b 44 24 68	 mov	 eax, DWORD PTR _pPlayer$[esp+96]
  000ba	33 c9		 xor	 ecx, ecx
  000bc	8a 88 74 01 01
	00		 mov	 cl, BYTE PTR [eax+65908]
  000c2	51		 push	 ecx
  000c3	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  000c6	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  000cb	84 c0		 test	 al, al
  000cd	74 03		 je	 SHORT $L178766

; 1132 : 			pOLD = (*finder).second;

  000cf	8b 6f 10	 mov	 ebp, DWORD PTR [edi+16]
$L178766:

; 1133 : 
; 1134 : 		finder = m_mapTCELL.find(dwNEW);

  000d2	8d 54 24 10	 lea	 edx, DWORD PTR _dwNEW$[esp+100]
  000d6	52		 push	 edx
  000d7	8d 44 24 24	 lea	 eax, DWORD PTR $T258590[esp+104]
  000db	50		 push	 eax
  000dc	8b ce		 mov	 ecx, esi
  000de	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
  000e3	8b 30		 mov	 esi, DWORD PTR [eax]

; 1135 : 		if( finder != m_mapTCELL.end() && (*finder).second->IsEnable(pPlayer->m_bChannel) )

  000e5	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+100]
  000e9	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  000ec	3b f0		 cmp	 esi, eax
  000ee	8b 7c 24 68	 mov	 edi, DWORD PTR _pPlayer$[esp+96]
  000f2	0f 84 22 03 00
	00		 je	 $L262056
  000f8	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000fb	33 d2		 xor	 edx, edx
  000fd	8a 97 74 01 01
	00		 mov	 dl, BYTE PTR [edi+65908]
  00103	52		 push	 edx
  00104	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  00109	84 c0		 test	 al, al
  0010b	0f 84 09 03 00
	00		 je	 $L262056

; 1136 : 			pNEW = (*finder).second;

  00111	8b 76 10	 mov	 esi, DWORD PTR [esi+16]

; 1137 : 
; 1138 : 		if(!pNEW && m_bType == MAP_INDUN)

  00114	3b f3		 cmp	 esi, ebx
  00116	89 74 24 18	 mov	 DWORD PTR _pNEW$178763[esp+100], esi
  0011a	0f 84 fe 02 00
	00		 je	 $L262057
$L178770:

; 1141 : 			return;
; 1142 : 		};
; 1143 : 
; 1144 : 		if(pPlayer->m_bMain) // Check connection

  00120	38 9f a8 04 01
	00		 cmp	 BYTE PTR [edi+66728], bl
  00126	0f 84 82 01 00
	00		 je	 $L262058

; 1145 : 		{
; 1146 : 			MAPBYTE mapCON;

  0012c	8d 4c 24 4c	 lea	 ecx, DWORD PTR _mapCON$178772[esp+100]
  00130	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00135	89 44 24 50	 mov	 DWORD PTR _mapCON$178772[esp+104], eax
  00139	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1
  0013d	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00141	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00144	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00148	89 00		 mov	 DWORD PTR [eax], eax
  0014a	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  0014e	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00151	89 5c 24 54	 mov	 DWORD PTR _mapCON$178772[esp+108], ebx

; 1147 : 			mapCON.clear();

  00155	8b 4c 24 50	 mov	 ecx, DWORD PTR _mapCON$178772[esp+104]
  00159	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0015c	52		 push	 edx
  0015d	8d 4c 24 50	 lea	 ecx, DWORD PTR _mapCON$178772[esp+104]
  00161	89 5c 24 64	 mov	 DWORD PTR __$EHRec$[esp+112], ebx
  00165	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase

; 1148 : 
; 1149 : 			if( pNEW && pNEW->IsMainCell(pPlayer->m_bChannel) )

  0016a	3b f3		 cmp	 esi, ebx
  0016c	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00170	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00173	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00177	89 5c 24 54	 mov	 DWORD PTR _mapCON$178772[esp+108], ebx
  0017b	89 00		 mov	 DWORD PTR [eax], eax
  0017d	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00181	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00184	0f 84 8f 00 00
	00		 je	 $L178773
  0018a	33 c0		 xor	 eax, eax
  0018c	8a 87 74 01 01
	00		 mov	 al, BYTE PTR [edi+65908]
  00192	8b ce		 mov	 ecx, esi
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  0019a	84 c0		 test	 al, al
  0019c	74 7b		 je	 SHORT $L178773

; 1150 : 			{
; 1151 : 				for( BYTE i=0; i<UD_COUNT; i++)

  0019e	33 f6		 xor	 esi, esi
  001a0	bf 08 00 00 00	 mov	 edi, 8
  001a5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$L178775:

; 1152 : 					if(pNEW->m_vServerID[i][pPlayer->m_bChannel])

  001b0	8b 4c 24 68	 mov	 ecx, DWORD PTR _pPlayer$[esp+96]
  001b4	0f b6 91 74 01
	01 00		 movzx	 edx, BYTE PTR [ecx+65908]
  001bb	8b 44 24 18	 mov	 eax, DWORD PTR _pNEW$178763[esp+100]
  001bf	03 d6		 add	 edx, esi
  001c1	8a 4c 02 4c	 mov	 cl, BYTE PTR [edx+eax+76]
  001c5	3a cb		 cmp	 cl, bl
  001c7	8d 44 02 4c	 lea	 eax, DWORD PTR [edx+eax+76]
  001cb	74 1d		 je	 SHORT $L178776

; 1153 : 						mapCON.insert( MAPBYTE::value_type( pNEW->m_vServerID[i][pPlayer->m_bChannel], pNEW->m_vServerID[i][pPlayer->m_bChannel]));

  001cd	8a d1		 mov	 dl, cl
  001cf	88 4c 24 10	 mov	 BYTE PTR $T258592[esp+100], cl
  001d3	8d 44 24 10	 lea	 eax, DWORD PTR $T258592[esp+100]
  001d7	50		 push	 eax
  001d8	8d 4c 24 24	 lea	 ecx, DWORD PTR $T258593[esp+104]
  001dc	51		 push	 ecx
  001dd	8d 4c 24 54	 lea	 ecx, DWORD PTR _mapCON$178772[esp+108]
  001e1	88 54 24 19	 mov	 BYTE PTR $T258592[esp+109], dl
  001e5	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
$L178776:
  001ea	83 c6 1e	 add	 esi, 30			; 0000001eH
  001ed	4f		 dec	 edi
  001ee	75 c0		 jne	 SHORT $L178775

; 1154 : 				mapCON.insert( MAPBYTE::value_type( m_bServerID, m_bServerID));

  001f0	8b 54 24 1c	 mov	 edx, DWORD PTR _this$[esp+100]
  001f4	8a 82 8c 00 00
	00		 mov	 al, BYTE PTR [edx+140]
  001fa	88 44 24 10	 mov	 BYTE PTR $T258594[esp+100], al
  001fe	88 44 24 11	 mov	 BYTE PTR $T258594[esp+101], al
  00202	8d 44 24 10	 lea	 eax, DWORD PTR $T258594[esp+100]
  00206	50		 push	 eax
  00207	8d 4c 24 24	 lea	 ecx, DWORD PTR $T258595[esp+104]
  0020b	51		 push	 ecx
  0020c	8d 4c 24 54	 lea	 ecx, DWORD PTR _mapCON$178772[esp+108]
  00210	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
  00215	8b 7c 24 68	 mov	 edi, DWORD PTR _pPlayer$[esp+96]
$L178773:

; 1155 : 			}
; 1156 : 
; 1157 : 			_AtlModule.SendMW_CHECKCONNECT_ACK(
; 1158 : 				pPlayer->m_dwID,
; 1159 : 				pPlayer->m_dwKEY,
; 1160 : 				pPlayer->m_bChannel,
; 1161 : 				pPlayer->m_wMapID,
; 1162 : 				fPosX,
; 1163 : 				pPlayer->m_fPosY,
; 1164 : 				fPosZ,
; 1165 : 				&mapCON);

  00219	8b 44 24 70	 mov	 eax, DWORD PTR _fPosZ$[esp+96]
  0021d	8b 8f 80 01 01
	00		 mov	 ecx, DWORD PTR [edi+65920]
  00223	8d 54 24 4c	 lea	 edx, DWORD PTR _mapCON$178772[esp+100]
  00227	52		 push	 edx
  00228	8b 54 24 70	 mov	 edx, DWORD PTR _fPosX$[esp+100]
  0022c	50		 push	 eax
  0022d	51		 push	 ecx
  0022e	33 c0		 xor	 eax, eax
  00230	66 8b 87 90 01
	01 00		 mov	 ax, WORD PTR [edi+65936]
  00237	33 c9		 xor	 ecx, ecx
  00239	8a 8f 74 01 01
	00		 mov	 cl, BYTE PTR [edi+65908]
  0023f	52		 push	 edx
  00240	8b 97 b0 03 01
	00		 mov	 edx, DWORD PTR [edi+66480]
  00246	50		 push	 eax
  00247	8b 87 44 01 01
	00		 mov	 eax, DWORD PTR [edi+65860]
  0024d	51		 push	 ecx
  0024e	52		 push	 edx
  0024f	50		 push	 eax
  00250	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  00255	e8 00 00 00 00	 call	 ?SendMW_CHECKCONNECT_ACK@CTMapSvrModule@@QAEXKKEGMMMPAV?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@@Z ; CTMapSvrModule::SendMW_CHECKCONNECT_ACK

; 1166 : 
; 1167 : 			mapCON.clear();

  0025a	8b 4c 24 50	 mov	 ecx, DWORD PTR _mapCON$178772[esp+104]
  0025e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00261	52		 push	 edx
  00262	8d 4c 24 50	 lea	 ecx, DWORD PTR _mapCON$178772[esp+104]
  00266	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
  0026b	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  0026f	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00272	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00276	89 5c 24 54	 mov	 DWORD PTR _mapCON$178772[esp+108], ebx
  0027a	89 00		 mov	 DWORD PTR [eax], eax
  0027c	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00280	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1168 : 		}

  00283	8b 44 24 50	 mov	 eax, DWORD PTR _mapCON$178772[esp+104]
  00287	8b 08		 mov	 ecx, DWORD PTR [eax]
  00289	50		 push	 eax
  0028a	51		 push	 ecx
  0028b	8d 44 24 28	 lea	 eax, DWORD PTR $T259205[esp+108]
  0028f	50		 push	 eax
  00290	8d 4c 24 58	 lea	 ecx, DWORD PTR _mapCON$178772[esp+112]
  00294	c7 44 24 6c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+120], -1
  0029c	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  002a1	8b 4c 24 50	 mov	 ecx, DWORD PTR _mapCON$178772[esp+104]
  002a5	51		 push	 ecx
  002a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002ab	83 c4 04	 add	 esp, 4
$L262058:

; 1169 : 
; 1170 : 		MAPTCELL mapOLD;

  002ae	8d 4c 24 40	 lea	 ecx, DWORD PTR _mapOLD$178821[esp+100]
  002b2	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  002b7	89 44 24 44	 mov	 DWORD PTR _mapOLD$178821[esp+104], eax
  002bb	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  002bf	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  002c3	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002c6	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  002ca	89 00		 mov	 DWORD PTR [eax], eax
  002cc	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  002d0	89 40 08	 mov	 DWORD PTR [eax+8], eax
  002d3	89 5c 24 48	 mov	 DWORD PTR _mapOLD$178821[esp+108], ebx

; 1171 : 		MAPTCELL mapNEW;

  002d7	8d 4c 24 34	 lea	 ecx, DWORD PTR _mapNEW$178822[esp+100]
  002db	c7 44 24 60 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+108], 1
  002e3	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  002e8	89 44 24 38	 mov	 DWORD PTR _mapNEW$178822[esp+104], eax
  002ec	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  002f0	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  002f4	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002f7	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  002fb	89 00		 mov	 DWORD PTR [eax], eax
  002fd	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  00301	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00304	89 5c 24 3c	 mov	 DWORD PTR _mapNEW$178822[esp+108], ebx

; 1172 : 		MAPBYTE mapCH;

  00308	8d 4c 24 28	 lea	 ecx, DWORD PTR _mapCH$178823[esp+100]
  0030c	c6 44 24 60 02	 mov	 BYTE PTR __$EHRec$[esp+108], 2
  00311	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00316	89 44 24 2c	 mov	 DWORD PTR _mapCH$178823[esp+104], eax
  0031a	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1
  0031e	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  00322	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00325	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  00329	89 00		 mov	 DWORD PTR [eax], eax
  0032b	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  0032f	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00332	89 5c 24 30	 mov	 DWORD PTR _mapCH$178823[esp+108], ebx

; 1173 : 
; 1174 : 		mapOLD.clear();

  00336	8b 54 24 44	 mov	 edx, DWORD PTR _mapOLD$178821[esp+104]
  0033a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0033d	50		 push	 eax
  0033e	8d 4c 24 44	 lea	 ecx, DWORD PTR _mapOLD$178821[esp+104]
  00342	c6 44 24 64 03	 mov	 BYTE PTR __$EHRec$[esp+112], 3
  00347	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  0034c	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  00350	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00353	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  00357	89 5c 24 48	 mov	 DWORD PTR _mapOLD$178821[esp+108], ebx
  0035b	89 00		 mov	 DWORD PTR [eax], eax
  0035d	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  00361	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1175 : 		mapNEW.clear();

  00364	8b 4c 24 38	 mov	 ecx, DWORD PTR _mapNEW$178822[esp+104]
  00368	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0036b	52		 push	 edx
  0036c	8d 4c 24 38	 lea	 ecx, DWORD PTR _mapNEW$178822[esp+104]
  00370	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00375	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  00379	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0037c	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  00380	89 5c 24 3c	 mov	 DWORD PTR _mapNEW$178822[esp+108], ebx
  00384	89 00		 mov	 DWORD PTR [eax], eax
  00386	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  0038a	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1176 : 		mapCH.clear();

  0038d	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  00391	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00394	51		 push	 ecx
  00395	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178823[esp+104]
  00399	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase

; 1177 : 
; 1178 : 		if(pOLD)

  0039e	3b eb		 cmp	 ebp, ebx
  003a0	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  003a4	89 40 04	 mov	 DWORD PTR [eax+4], eax
  003a7	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  003ab	89 5c 24 30	 mov	 DWORD PTR _mapCH$178823[esp+108], ebx
  003af	89 00		 mov	 DWORD PTR [eax], eax
  003b1	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  003b5	89 40 08	 mov	 DWORD PTR [eax+8], eax
  003b8	0f 84 a3 00 00
	00		 je	 $L178824

; 1179 : 		{
; 1180 : 			for( BYTE i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  003be	88 5c 24 10	 mov	 BYTE PTR _i$178825[esp+100], bl
$L178826:
  003c2	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  003c8	3b fb		 cmp	 edi, ebx
  003ca	74 7f		 je	 SHORT $L262051
  003cc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  003d1	8a 4c 24 10	 mov	 cl, BYTE PTR _i$178825[esp+100]
  003d5	2b c7		 sub	 eax, edi
  003d7	3a c8		 cmp	 cl, al
  003d9	73 70		 jae	 SHORT $L262051

; 1249 : 		pPlayer->m_fPosZ = fPosZ;

  003db	0f b6 f1	 movzx	 esi, cl
  003de	33 d2		 xor	 edx, edx
  003e0	8a 14 3e	 mov	 dl, BYTE PTR [esi+edi]
  003e3	8b cd		 mov	 ecx, ebp
  003e5	52		 push	 edx
  003e6	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  003eb	84 c0		 test	 al, al
  003ed	74 25		 je	 SHORT $L178827
  003ef	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  003f4	8a 0c 06	 mov	 cl, BYTE PTR [esi+eax]
  003f7	8a d1		 mov	 dl, cl
  003f9	88 4c 24 14	 mov	 BYTE PTR $T258596[esp+100], cl
  003fd	8d 44 24 14	 lea	 eax, DWORD PTR $T258596[esp+100]
  00401	50		 push	 eax
  00402	8d 4c 24 24	 lea	 ecx, DWORD PTR $T258597[esp+104]
  00406	51		 push	 ecx
  00407	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapCH$178823[esp+108]
  0040b	88 54 24 1d	 mov	 BYTE PTR $T258596[esp+109], dl
  0040f	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
$L178827:
  00414	fe 44 24 10	 inc	 BYTE PTR _i$178825[esp+100]
  00418	eb a8		 jmp	 SHORT $L178826
$L262056:

; 1137 : 
; 1138 : 		if(!pNEW && m_bType == MAP_INDUN)

  0041a	8b 74 24 18	 mov	 esi, DWORD PTR _pNEW$178763[esp+100]
$L262057:
  0041e	8b 44 24 1c	 mov	 eax, DWORD PTR _this$[esp+100]
  00422	80 b8 8e 00 00
	00 02		 cmp	 BYTE PTR [eax+142], 2
  00429	0f 85 f1 fc ff
	ff		 jne	 $L178770

; 1139 : 		{
; 1140 : 			pPlayer->CloseSession();

  0042f	8b cf		 mov	 ecx, edi
  00431	e8 00 00 00 00	 call	 ?CloseSession@CSession@@QAEHXZ ; CSession::CloseSession
  00436	5f		 pop	 edi
  00437	5e		 pop	 esi
  00438	5d		 pop	 ebp
  00439	5b		 pop	 ebx

; 1250 : 	}
; 1251 : }

  0043a	8b 4c 24 48	 mov	 ecx, DWORD PTR __$EHRec$[esp+84]
  0043e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00445	83 c4 54	 add	 esp, 84			; 00000054H
  00448	c2 0c 00	 ret	 12			; 0000000cH
$L262051:

; 1181 : 				if(pOLD->IsMainCell(m_vTCHANNEL[i]))
; 1182 : 					mapCH.insert( MAPBYTE::value_type( m_vTCHANNEL[i], m_vTCHANNEL[i]));
; 1183 : 
; 1184 : 			pOLD->DelPlayer(pPlayer->m_dwID);

  0044b	8b 54 24 68	 mov	 edx, DWORD PTR _pPlayer$[esp+96]
  0044f	8b 82 44 01 01
	00		 mov	 eax, DWORD PTR [edx+65860]
  00455	50		 push	 eax
  00456	8b cd		 mov	 ecx, ebp
  00458	e8 00 00 00 00	 call	 ?DelPlayer@CTCell@@QAEXK@Z ; CTCell::DelPlayer
  0045d	8b 7c 24 68	 mov	 edi, DWORD PTR _pPlayer$[esp+96]
$L178824:

; 1185 : 		}
; 1186 : 
; 1187 : 		GetNeighbor(
; 1188 : 			&mapOLD,
; 1189 : 			pPlayer->m_fPosX,
; 1190 : 			pPlayer->m_fPosZ);

  00461	8b 8f 84 01 01
	00		 mov	 ecx, DWORD PTR [edi+65924]
  00467	8b 97 7c 01 01
	00		 mov	 edx, DWORD PTR [edi+65916]
  0046d	8b 74 24 1c	 mov	 esi, DWORD PTR _this$[esp+100]
  00471	51		 push	 ecx
  00472	52		 push	 edx
  00473	8d 44 24 48	 lea	 eax, DWORD PTR _mapOLD$178821[esp+108]
  00477	50		 push	 eax
  00478	8b ce		 mov	 ecx, esi
  0047a	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1191 : 
; 1192 : 		GetNeighbor(
; 1193 : 			&mapNEW,
; 1194 : 			fPosX,
; 1195 : 			fPosZ);

  0047f	8b 4c 24 70	 mov	 ecx, DWORD PTR _fPosZ$[esp+96]
  00483	8b 54 24 6c	 mov	 edx, DWORD PTR _fPosX$[esp+96]
  00487	51		 push	 ecx
  00488	52		 push	 edx
  00489	8d 44 24 3c	 lea	 eax, DWORD PTR _mapNEW$178822[esp+108]
  0048d	50		 push	 eax
  0048e	8b ce		 mov	 ecx, esi
  00490	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1196 : 
; 1197 : 		for( it = mapOLD.begin(); it != mapOLD.end(); it++)

  00495	8b 6c 24 44	 mov	 ebp, DWORD PTR _mapOLD$178821[esp+104]
  00499	8b 75 00	 mov	 esi, DWORD PTR [ebp]
  0049c	3b f5		 cmp	 esi, ebp
  0049e	74 68		 je	 SHORT $L262053
$L260376:

; 1198 : 		{
; 1199 : 			finder = mapNEW.find((*it).first);

  004a0	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  004a3	51		 push	 ecx
  004a4	8d 54 24 24	 lea	 edx, DWORD PTR $T258601[esp+104]
  004a8	52		 push	 edx
  004a9	8d 4c 24 3c	 lea	 ecx, DWORD PTR _mapNEW$178822[esp+108]
  004ad	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1200 : 
; 1201 : 			if( finder == mapNEW.end() )

  004b2	8b 00		 mov	 eax, DWORD PTR [eax]
  004b4	3b 44 24 38	 cmp	 eax, DWORD PTR _mapNEW$178822[esp+104]
  004b8	75 0e		 jne	 SHORT $L178836

; 1202 : 				(*it).second->LeavePlayer( pPlayer, FALSE);

  004ba	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  004bd	53		 push	 ebx
  004be	57		 push	 edi
  004bf	e8 00 00 00 00	 call	 ?LeavePlayer@CTCell@@QAEXPAVCTPlayer@@E@Z ; CTCell::LeavePlayer
  004c4	8b 6c 24 44	 mov	 ebp, DWORD PTR _mapOLD$178821[esp+104]
$L178836:
  004c8	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  004cb	75 37		 jne	 SHORT $L260410
  004cd	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  004d0	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  004d3	75 16		 jne	 SHORT $L262026
  004d5	8b f0		 mov	 esi, eax
  004d7	8b 06		 mov	 eax, DWORD PTR [esi]
  004d9	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  004dc	75 26		 jne	 SHORT $L260410
  004de	8b ff		 npad	 2

; 1196 : 
; 1197 : 		for( it = mapOLD.begin(); it != mapOLD.end(); it++)

$L260398:
  004e0	8b f0		 mov	 esi, eax
  004e2	8b 06		 mov	 eax, DWORD PTR [esi]
  004e4	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  004e7	74 f7		 je	 SHORT $L260398
  004e9	eb 19		 jmp	 SHORT $L260410
$L262026:
  004eb	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  004ee	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  004f1	75 0f		 jne	 SHORT $L260413
$L260412:
  004f3	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  004f6	75 0a		 jne	 SHORT $L260413
  004f8	8b f0		 mov	 esi, eax
  004fa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  004fd	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00500	74 f1		 je	 SHORT $L260412
$L260413:
  00502	8b f0		 mov	 esi, eax
$L260410:
  00504	3b f5		 cmp	 esi, ebp
  00506	75 98		 jne	 SHORT $L260376
$L262053:

; 1203 : 		}
; 1204 : 
; 1205 : 		pPlayer->m_fPosX = fPosX;
; 1206 : 		pPlayer->m_fPosZ = fPosZ;
; 1207 : 
; 1208 : 		if(pNEW)

  00508	39 5c 24 18	 cmp	 DWORD PTR _pNEW$178763[esp+100], ebx
  0050c	8b 4c 24 6c	 mov	 ecx, DWORD PTR _fPosX$[esp+96]
  00510	8b 54 24 70	 mov	 edx, DWORD PTR _fPosZ$[esp+96]
  00514	89 8f 7c 01 01
	00		 mov	 DWORD PTR [edi+65916], ecx
  0051a	89 97 84 01 01
	00		 mov	 DWORD PTR [edi+65924], edx
  00520	0f 84 82 00 00
	00		 je	 $L262059

; 1209 : 		{
; 1210 : 			for( BYTE i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  00526	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0052c	88 5c 24 6c	 mov	 BYTE PTR _i$178842[esp+96], bl
$L178843:
  00530	3b f3		 cmp	 esi, ebx
  00532	74 6a		 je	 SHORT $L262052
  00534	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00539	8a 4c 24 6c	 mov	 cl, BYTE PTR _i$178842[esp+96]
  0053d	2b c6		 sub	 eax, esi
  0053f	3a c8		 cmp	 cl, al
  00541	73 5b		 jae	 SHORT $L262052

; 1249 : 		pPlayer->m_fPosZ = fPosZ;

  00543	0f b6 f9	 movzx	 edi, cl
  00546	8b 4c 24 18	 mov	 ecx, DWORD PTR _pNEW$178763[esp+100]
  0054a	33 c0		 xor	 eax, eax
  0054c	8a 04 37	 mov	 al, BYTE PTR [edi+esi]
  0054f	50		 push	 eax
  00550	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  00555	84 c0		 test	 al, al
  00557	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0055d	74 2f		 je	 SHORT $L178844
  0055f	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00562	50		 push	 eax
  00563	8d 4c 24 74	 lea	 ecx, DWORD PTR $T258603[esp+100]
  00567	51		 push	 ecx
  00568	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapCH$178823[esp+108]
  0056c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	3b 44 24 2c	 cmp	 eax, DWORD PTR _mapCH$178823[esp+104]
  00577	74 15		 je	 SHORT $L178844
  00579	50		 push	 eax
  0057a	8d 54 24 24	 lea	 edx, DWORD PTR $T258605[esp+104]
  0057e	52		 push	 edx
  0057f	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapCH$178823[esp+108]
  00583	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  00588	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$L178844:
  0058e	8a 44 24 6c	 mov	 al, BYTE PTR _i$178842[esp+96]
  00592	8b 7c 24 68	 mov	 edi, DWORD PTR _pPlayer$[esp+96]
  00596	fe c0		 inc	 al
  00598	88 44 24 6c	 mov	 BYTE PTR _i$178842[esp+96], al
  0059c	eb 92		 jmp	 SHORT $L178843
$L262052:

; 1211 : 				if(pNEW->IsMainCell(m_vTCHANNEL[i]))
; 1212 : 				{
; 1213 : 					itCH = mapCH.find(m_vTCHANNEL[i]);
; 1214 : 
; 1215 : 					if( itCH != mapCH.end() )
; 1216 : 						mapCH.erase(itCH);
; 1217 : 				}
; 1218 : 
; 1219 : 			pNEW->AddPlayer(pPlayer);

  0059e	8b 4c 24 18	 mov	 ecx, DWORD PTR _pNEW$178763[esp+100]
  005a2	57		 push	 edi
  005a3	e8 00 00 00 00	 call	 ?AddPlayer@CTCell@@QAEXPAVCTPlayer@@@Z ; CTCell::AddPlayer
$L262059:

; 1220 : 		}
; 1221 : 		BYTE bLeaveCH = mapCH.find(pPlayer->m_bChannel) != mapCH.end() ? TRUE : FALSE;

  005a8	8b 6c 24 68	 mov	 ebp, DWORD PTR _pPlayer$[esp+96]
  005ac	8d 85 74 01 01
	00		 lea	 eax, DWORD PTR [ebp+65908]
  005b2	50		 push	 eax
  005b3	8d 4c 24 6c	 lea	 ecx, DWORD PTR $T258606[esp+100]
  005b7	51		 push	 ecx
  005b8	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapCH$178823[esp+108]
  005bc	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
  005c1	8b 10		 mov	 edx, DWORD PTR [eax]
  005c3	8b 74 24 2c	 mov	 esi, DWORD PTR _mapCH$178823[esp+104]

; 1222 : 
; 1223 : 		for( it = mapNEW.begin(); it != mapNEW.end(); it++)

  005c7	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  005cb	8b 38		 mov	 edi, DWORD PTR [eax]
  005cd	3b d6		 cmp	 edx, esi
  005cf	0f 95 44 24 68	 setne	 BYTE PTR _bLeaveCH$178851[esp+96]
  005d4	3b f8		 cmp	 edi, eax
  005d6	0f 84 02 01 00
	00		 je	 $L178859
  005dc	8d 64 24 00	 npad	 4
$L260835:

; 1224 : 		{
; 1225 : 			finder = mapOLD.find((*it).first);

  005e0	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  005e3	50		 push	 eax
  005e4	8d 4c 24 70	 lea	 ecx, DWORD PTR $T258611[esp+100]
  005e8	51		 push	 ecx
  005e9	8d 4c 24 48	 lea	 ecx, DWORD PTR _mapOLD$178821[esp+108]
  005ed	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1226 : 
; 1227 : 			if( finder == mapOLD.end() && pNEW )

  005f2	8b 54 24 44	 mov	 edx, DWORD PTR _mapOLD$178821[esp+104]
  005f6	39 10		 cmp	 DWORD PTR [eax], edx
  005f8	75 1a		 jne	 SHORT $L178862
  005fa	8b 44 24 18	 mov	 eax, DWORD PTR _pNEW$178763[esp+100]
  005fe	3b c3		 cmp	 eax, ebx
  00600	74 12		 je	 SHORT $L178862

; 1228 : 				(*it).second->EnterPlayer( pPlayer, pNEW, FALSE, _AtlModule.m_dwTick);

  00602	8b 0d 48 a9 02
	00		 mov	 ecx, DWORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174408
  00608	51		 push	 ecx
  00609	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0060c	53		 push	 ebx
  0060d	50		 push	 eax
  0060e	55		 push	 ebp
  0060f	e8 00 00 00 00	 call	 ?EnterPlayer@CTCell@@QAEXPAVCTPlayer@@PAV1@EK@Z ; CTCell::EnterPlayer
$L178862:

; 1229 : 
; 1230 : 			if(!bLeaveCH)

  00614	38 5c 24 68	 cmp	 BYTE PTR _bLeaveCH$178851[esp+96], bl
  00618	75 71		 jne	 SHORT $L178863

; 1231 : 			{
; 1232 : 				for( itCH = mapCH.begin(); itCH != mapCH.end(); itCH++)

  0061a	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  0061e	8b 30		 mov	 esi, DWORD PTR [eax]
  00620	3b f0		 cmp	 esi, eax
  00622	74 56		 je	 SHORT $L178869
$L261136:

; 1233 : 					(*it).second->LeaveChannel( pPlayer, (*itCH).second, FALSE);

  00624	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00627	33 d2		 xor	 edx, edx
  00629	8a 56 0d	 mov	 dl, BYTE PTR [esi+13]
  0062c	53		 push	 ebx
  0062d	52		 push	 edx
  0062e	55		 push	 ebp
  0062f	e8 00 00 00 00	 call	 ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@EE@Z ; CTCell::LeaveChannel
  00634	38 5e 0f	 cmp	 BYTE PTR [esi+15], bl
  00637	75 3b		 jne	 SHORT $L261147
  00639	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0063c	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  0063f	75 1a		 jne	 SHORT $L262031
  00641	8b f0		 mov	 esi, eax
  00643	8b 06		 mov	 eax, DWORD PTR [esi]
  00645	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00648	75 2a		 jne	 SHORT $L261147
  0064a	8d 9b 00 00 00
	00		 npad	 6

; 1231 : 			{
; 1232 : 				for( itCH = mapCH.begin(); itCH != mapCH.end(); itCH++)

$L261161:
  00650	8b f0		 mov	 esi, eax
  00652	8b 06		 mov	 eax, DWORD PTR [esi]
  00654	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00657	74 f7		 je	 SHORT $L261161
  00659	eb 19		 jmp	 SHORT $L261147
$L262031:
  0065b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0065e	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00661	75 0f		 jne	 SHORT $L261150
$L261149:
  00663	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00666	75 0a		 jne	 SHORT $L261150
  00668	8b f0		 mov	 esi, eax
  0066a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0066d	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00670	74 f1		 je	 SHORT $L261149
$L261150:
  00672	8b f0		 mov	 esi, eax
$L261147:
  00674	3b 74 24 2c	 cmp	 esi, DWORD PTR _mapCH$178823[esp+104]
  00678	75 aa		 jne	 SHORT $L261136
$L178869:

; 1234 : 
; 1235 : 				if(!mapCH.empty())

  0067a	39 5c 24 30	 cmp	 DWORD PTR _mapCH$178823[esp+108], ebx
  0067e	74 15		 je	 SHORT $L178858

; 1236 : 					(*it).second->LeaveChannel(pPlayer);

  00680	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00683	55		 push	 ebp
  00684	e8 00 00 00 00	 call	 ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@@Z ; CTCell::LeaveChannel

; 1237 : 			}
; 1238 : 			else

  00689	eb 0a		 jmp	 SHORT $L178858
$L178863:

; 1239 : 				(*it).second->LeaveChannel( pPlayer, FALSE);

  0068b	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0068e	53		 push	 ebx
  0068f	55		 push	 ebp
  00690	e8 00 00 00 00	 call	 ?LeaveChannel@CTCell@@QAEXPAVCTPlayer@@E@Z ; CTCell::LeaveChannel
$L178858:
  00695	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00698	75 3a		 jne	 SHORT $L260845
  0069a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0069d	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  006a0	75 19		 jne	 SHORT $L262033
  006a2	8b f8		 mov	 edi, eax
  006a4	8b 07		 mov	 eax, DWORD PTR [edi]
  006a6	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  006a9	75 29		 jne	 SHORT $L260845
  006ab	eb 03 8d 49 00	 npad	 5

; 1222 : 
; 1223 : 		for( it = mapNEW.begin(); it != mapNEW.end(); it++)

$L260866:
  006b0	8b f8		 mov	 edi, eax
  006b2	8b 07		 mov	 eax, DWORD PTR [edi]
  006b4	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  006b7	74 f7		 je	 SHORT $L260866
  006b9	eb 19		 jmp	 SHORT $L260845
$L262033:
  006bb	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  006be	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  006c1	75 0f		 jne	 SHORT $L260848
$L260847:
  006c3	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  006c6	75 0a		 jne	 SHORT $L260848
  006c8	8b f8		 mov	 edi, eax
  006ca	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  006cd	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  006d0	74 f1		 je	 SHORT $L260847
$L260848:
  006d2	8b f8		 mov	 edi, eax
$L260845:
  006d4	3b 7c 24 38	 cmp	 edi, DWORD PTR _mapNEW$178822[esp+104]
  006d8	0f 85 02 ff ff
	ff		 jne	 $L260835
$L178859:

; 1240 : 		}
; 1241 : 
; 1242 : 		mapOLD.clear();

  006de	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  006e2	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  006e5	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  006e8	8b f7		 mov	 esi, edi
  006ea	75 25		 jne	 SHORT $L262061
  006ec	8d 64 24 00	 npad	 4
$L261339:
  006f0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  006f3	51		 push	 ecx
  006f4	8d 4c 24 44	 lea	 ecx, DWORD PTR _mapOLD$178821[esp+104]
  006f8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  006fd	8b 36		 mov	 esi, DWORD PTR [esi]
  006ff	57		 push	 edi
  00700	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00705	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00708	83 c4 04	 add	 esp, 4
  0070b	3a c3		 cmp	 al, bl
  0070d	8b fe		 mov	 edi, esi
  0070f	74 df		 je	 SHORT $L261339
$L262061:
  00711	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  00715	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00718	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  0071c	89 5c 24 48	 mov	 DWORD PTR _mapOLD$178821[esp+108], ebx
  00720	89 00		 mov	 DWORD PTR [eax], eax
  00722	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  00726	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1243 : 		mapNEW.clear();

  00729	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  0072d	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00730	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00733	8b f7		 mov	 esi, edi
  00735	75 25		 jne	 SHORT $L261435
$L261433:
  00737	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0073a	52		 push	 edx
  0073b	8d 4c 24 38	 lea	 ecx, DWORD PTR _mapNEW$178822[esp+104]
  0073f	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00744	8b 36		 mov	 esi, DWORD PTR [esi]
  00746	57		 push	 edi
  00747	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0074c	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  0074f	83 c4 04	 add	 esp, 4
  00752	3a c3		 cmp	 al, bl
  00754	8b fe		 mov	 edi, esi
  00756	74 df		 je	 SHORT $L261433
  00758	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
$L261435:
  0075c	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0075f	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  00763	89 5c 24 3c	 mov	 DWORD PTR _mapNEW$178822[esp+108], ebx
  00767	89 00		 mov	 DWORD PTR [eax], eax
  00769	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178822[esp+104]
  0076d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1244 : 		mapCH.clear();

  00770	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  00774	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00777	38 5f 0f	 cmp	 BYTE PTR [edi+15], bl
  0077a	8b f7		 mov	 esi, edi
  0077c	75 27		 jne	 SHORT $L261520
  0077e	8b ff		 npad	 2
$L261518:
  00780	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00783	50		 push	 eax
  00784	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178823[esp+104]
  00788	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
  0078d	8b 36		 mov	 esi, DWORD PTR [esi]
  0078f	57		 push	 edi
  00790	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00795	8a 46 0f	 mov	 al, BYTE PTR [esi+15]
  00798	83 c4 04	 add	 esp, 4
  0079b	3a c3		 cmp	 al, bl
  0079d	8b fe		 mov	 edi, esi
  0079f	74 df		 je	 SHORT $L261518
  007a1	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
$L261520:
  007a5	89 40 04	 mov	 DWORD PTR [eax+4], eax
  007a8	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  007ac	89 5c 24 30	 mov	 DWORD PTR _mapCH$178823[esp+108], ebx
  007b0	89 00		 mov	 DWORD PTR [eax], eax
  007b2	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  007b6	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1245 : 	}

  007b9	8b 44 24 2c	 mov	 eax, DWORD PTR _mapCH$178823[esp+104]
  007bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  007bf	50		 push	 eax
  007c0	51		 push	 ecx
  007c1	8d 4c 24 70	 lea	 ecx, DWORD PTR $T261676[esp+104]
  007c5	51		 push	 ecx
  007c6	8d 4c 24 34	 lea	 ecx, DWORD PTR _mapCH$178823[esp+112]
  007ca	c6 44 24 6c 02	 mov	 BYTE PTR __$EHRec$[esp+120], 2
  007cf	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  007d4	8b 54 24 2c	 mov	 edx, DWORD PTR _mapCH$178823[esp+104]
  007d8	52		 push	 edx
  007d9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007de	8b 44 24 3c	 mov	 eax, DWORD PTR _mapNEW$178822[esp+108]
  007e2	83 c4 04	 add	 esp, 4
  007e5	50		 push	 eax
  007e6	89 5c 24 30	 mov	 DWORD PTR _mapCH$178823[esp+108], ebx
  007ea	89 5c 24 34	 mov	 DWORD PTR _mapCH$178823[esp+112], ebx
  007ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  007f0	51		 push	 ecx
  007f1	8d 44 24 70	 lea	 eax, DWORD PTR $T261836[esp+104]
  007f5	50		 push	 eax
  007f6	8d 4c 24 40	 lea	 ecx, DWORD PTR _mapNEW$178822[esp+112]
  007fa	c6 44 24 6c 01	 mov	 BYTE PTR __$EHRec$[esp+120], 1
  007ff	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00804	8b 4c 24 38	 mov	 ecx, DWORD PTR _mapNEW$178822[esp+104]
  00808	51		 push	 ecx
  00809	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0080e	8b 44 24 48	 mov	 eax, DWORD PTR _mapOLD$178821[esp+108]
  00812	83 c4 04	 add	 esp, 4
  00815	89 5c 24 38	 mov	 DWORD PTR _mapNEW$178822[esp+104], ebx
  00819	89 5c 24 3c	 mov	 DWORD PTR _mapNEW$178822[esp+108], ebx
  0081d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0081f	50		 push	 eax
  00820	51		 push	 ecx
  00821	8d 54 24 70	 lea	 edx, DWORD PTR $T261995[esp+104]
  00825	52		 push	 edx
  00826	8d 4c 24 4c	 lea	 ecx, DWORD PTR _mapOLD$178821[esp+112]
  0082a	c7 44 24 6c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+120], -1
  00832	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00837	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178821[esp+104]
  0083b	50		 push	 eax
  0083c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00841	83 c4 04	 add	 esp, 4
  00844	5f		 pop	 edi
  00845	5e		 pop	 esi
  00846	5d		 pop	 ebp
  00847	5b		 pop	 ebx

; 1250 : 	}
; 1251 : }

  00848	8b 4c 24 48	 mov	 ecx, DWORD PTR __$EHRec$[esp+84]
  0084c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00853	83 c4 54	 add	 esp, 84			; 00000054H
  00856	c2 0c 00	 ret	 12			; 0000000cH
$L178201:

; 1246 : 	else
; 1247 : 	{
; 1248 : 		pPlayer->m_fPosX = fPosX;

  00859	8b 4c 24 6c	 mov	 ecx, DWORD PTR _fPosX$[esp+96]

; 1249 : 		pPlayer->m_fPosZ = fPosZ;

  0085d	8b 54 24 70	 mov	 edx, DWORD PTR _fPosZ$[esp+96]
  00861	5f		 pop	 edi
  00862	89 8d 7c 01 01
	00		 mov	 DWORD PTR [ebp+65916], ecx

; 1250 : 	}
; 1251 : }

  00868	8b 4c 24 54	 mov	 ecx, DWORD PTR __$EHRec$[esp+96]
  0086c	5e		 pop	 esi
  0086d	89 95 84 01 01
	00		 mov	 DWORD PTR [ebp+65924], edx
  00873	5d		 pop	 ebp
  00874	5b		 pop	 ebx
  00875	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0087c	83 c4 54	 add	 esp, 84			; 00000054H
  0087f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L258616:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapCON$178772[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
$L258617:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR _mapOLD$178821[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L258618:
  00010	8d 4d d0	 lea	 ecx, DWORD PTR _mapNEW$178822[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L258619:
  00018	8d 4d c4	 lea	 ecx, DWORD PTR _mapCH$178823[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
__ehhandler$?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z:
  00020	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T262021
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMove@CTMap@@QAEXPAVCTPlayer@@MM@Z ENDP		; CTMap::OnMove
PUBLIC	?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z		; CTMap::OnMove
EXTRN	?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z:NEAR ; CTMapSvrModule::SendMW_RECALLMONDATA_ACK
EXTRN	?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z:NEAR ; CTCell::LeaveChannel
EXTRN	?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z:NEAR ; CTCell::LeaveChannel
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T265012 DD	0ffffffffH
	DD	FLAT:$L262094
	DD	00H
	DD	FLAT:$L262095
	DD	01H
	DD	FLAT:$L262096
$T264978 DD	019930520H
	DD	03H
	DD	FLAT:$T265012
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z
_TEXT	SEGMENT
_bEnterCH$178929 = -65					; size = 1
_i$178909 = -65						; size = 1
_pCell$178928 = -64					; size = 4
$T262070 = -64						; size = 2
_it$178902 = -64					; size = 4
_dwOLD$ = -64						; size = 4
tv1345 = -60						; size = 4
$T262083 = -60						; size = 4
$T262075 = -60						; size = 4
$T262071 = -60						; size = 8
_finder$178900 = -60					; size = 4
$T262081 = -52						; size = 4
$T262079 = -52						; size = 4
_dwNEW$ = -52						; size = 4
_mapCH$178906 = -48					; size = 12
_mapNEW$178905 = -36					; size = 12
_mapOLD$178904 = -24					; size = 12
__$EHRec$ = -12						; size = 12
$T264952 = 8						; size = 4
$T264792 = 8						; size = 4
$T264633 = 8						; size = 4
_pMON$ = 8						; size = 4
$T262092 = 12						; size = 4
$T262084 = 12						; size = 4
_i$178931 = 12						; size = 1
$T262077 = 12						; size = 4
_fPosX$ = 12						; size = 4
_bLeaveCH$178930 = 16					; size = 1
_fPosZ$ = 16						; size = 4
?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z PROC NEAR		; CTMap::OnMove, COMDAT
; _this$ = ecx

; 1256 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 38	 sub	 esp, 56			; 00000038H
  00018	53		 push	 ebx

; 1257 : 	WORD wCellX = WORD(pMON->m_fPosX) / CELL_SIZE;

  00019	8b 5c 24 4c	 mov	 ebx, DWORD PTR _pMON$[esp+68]
  0001d	d9 43 7c	 fld	 DWORD PTR [ebx+124]
  00020	55		 push	 ebp
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	8b f1		 mov	 esi, ecx
  00025	e8 00 00 00 00	 call	 __ftol2

; 1258 : 	WORD wCellZ = WORD(pMON->m_fPosZ) / CELL_SIZE;

  0002a	d9 83 84 00 00
	00		 fld	 DWORD PTR [ebx+132]
  00030	66 8b f8	 mov	 di, ax
  00033	66 c1 ef 06	 shr	 di, 6
  00037	e8 00 00 00 00	 call	 __ftol2

; 1259 : 	WORD wNewX = WORD(fPosX) / CELL_SIZE;

  0003c	d9 44 24 5c	 fld	 DWORD PTR _fPosX$[esp+80]
  00040	66 8b d8	 mov	 bx, ax
  00043	66 c1 eb 06	 shr	 bx, 6
  00047	e8 00 00 00 00	 call	 __ftol2

; 1260 : 	WORD wNewZ = WORD(fPosZ) / CELL_SIZE;

  0004c	d9 44 24 60	 fld	 DWORD PTR _fPosZ$[esp+80]
  00050	66 8b e8	 mov	 bp, ax
  00053	66 c1 ed 06	 shr	 bp, 6
  00057	e8 00 00 00 00	 call	 __ftol2
  0005c	66 c1 e8 06	 shr	 ax, 6

; 1261 : 
; 1262 : 	DWORD dwOLD = MAKELONG( wCellX, wCellZ);

  00060	0f b7 cb	 movzx	 ecx, bx
  00063	0f b7 d7	 movzx	 edx, di
  00066	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00069	0b ca		 or	 ecx, edx

; 1263 : 	DWORD dwNEW = MAKELONG( wNewX, wNewZ);

  0006b	0f b7 c0	 movzx	 eax, ax
  0006e	0f b7 d5	 movzx	 edx, bp
  00071	c1 e0 10	 shl	 eax, 16			; 00000010H
  00074	0b c2		 or	 eax, edx

; 1264 : 
; 1265 : 	if( dwOLD != dwNEW )

  00076	3b c8		 cmp	 ecx, eax
  00078	89 4c 24 14	 mov	 DWORD PTR _dwOLD$[esp+84], ecx
  0007c	89 44 24 20	 mov	 DWORD PTR _dwNEW$[esp+84], eax
  00080	0f 84 52 06 00
	00		 je	 $L178899

; 1266 : 	{
; 1267 : 		MAPTCELL::iterator finder = m_mapTCELL.find(dwOLD);

  00086	8d 44 24 14	 lea	 eax, DWORD PTR _dwOLD$[esp+84]
  0008a	50		 push	 eax
  0008b	8d 4c 24 1c	 lea	 ecx, DWORD PTR _finder$178900[esp+88]
  0008f	8d 7e 40	 lea	 edi, DWORD PTR [esi+64]
  00092	51		 push	 ecx
  00093	8b cf		 mov	 ecx, edi
  00095	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1268 : 		MAPTCELL::iterator it;
; 1269 : 		MAPBYTE::iterator itCH;
; 1270 : 
; 1271 : 		MAPTCELL mapOLD;

  0009a	8d 4c 24 3c	 lea	 ecx, DWORD PTR _mapOLD$178904[esp+84]
  0009e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  000a3	89 44 24 40	 mov	 DWORD PTR _mapOLD$178904[esp+88], eax
  000a7	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000ab	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  000af	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000b2	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  000b6	89 00		 mov	 DWORD PTR [eax], eax
  000b8	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  000bc	33 db		 xor	 ebx, ebx
  000be	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000c1	89 5c 24 44	 mov	 DWORD PTR _mapOLD$178904[esp+92], ebx

; 1272 : 		MAPTCELL mapNEW;

  000c5	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapNEW$178905[esp+84]
  000c9	89 5c 24 50	 mov	 DWORD PTR __$EHRec$[esp+92], ebx
  000cd	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  000d2	89 44 24 34	 mov	 DWORD PTR _mapNEW$178905[esp+88], eax
  000d6	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000da	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  000de	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000e1	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  000e5	89 00		 mov	 DWORD PTR [eax], eax
  000e7	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  000eb	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000ee	89 5c 24 38	 mov	 DWORD PTR _mapNEW$178905[esp+92], ebx

; 1273 : 		MAPBYTE mapCH;

  000f2	8d 4c 24 24	 lea	 ecx, DWORD PTR _mapCH$178906[esp+84]
  000f6	c6 44 24 50 01	 mov	 BYTE PTR __$EHRec$[esp+92], 1
  000fb	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Buynode
  00100	89 44 24 28	 mov	 DWORD PTR _mapCH$178906[esp+88], eax
  00104	c6 40 0f 01	 mov	 BYTE PTR [eax+15], 1
  00108	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0010c	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0010f	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  00113	89 00		 mov	 DWORD PTR [eax], eax
  00115	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  00119	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0011c	89 5c 24 2c	 mov	 DWORD PTR _mapCH$178906[esp+92], ebx

; 1274 : 
; 1275 : 		mapOLD.clear();

  00120	8b 54 24 40	 mov	 edx, DWORD PTR _mapOLD$178904[esp+88]
  00124	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00127	50		 push	 eax
  00128	8d 4c 24 40	 lea	 ecx, DWORD PTR _mapOLD$178904[esp+88]
  0012c	c6 44 24 54 02	 mov	 BYTE PTR __$EHRec$[esp+96], 2
  00131	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00136	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  0013a	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0013d	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  00141	89 5c 24 44	 mov	 DWORD PTR _mapOLD$178904[esp+92], ebx
  00145	89 00		 mov	 DWORD PTR [eax], eax
  00147	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  0014b	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1276 : 		mapNEW.clear();

  0014e	8b 4c 24 34	 mov	 ecx, DWORD PTR _mapNEW$178905[esp+88]
  00152	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00155	52		 push	 edx
  00156	8d 4c 24 34	 lea	 ecx, DWORD PTR _mapNEW$178905[esp+88]
  0015a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  0015f	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  00163	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00166	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  0016a	89 5c 24 38	 mov	 DWORD PTR _mapNEW$178905[esp+92], ebx
  0016e	89 00		 mov	 DWORD PTR [eax], eax
  00170	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  00174	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1277 : 		mapCH.clear();

  00177	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0017b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0017e	51		 push	 ecx
  0017f	8d 4c 24 28	 lea	 ecx, DWORD PTR _mapCH$178906[esp+88]
  00183	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
  00188	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0018c	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0018f	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  00193	89 5c 24 2c	 mov	 DWORD PTR _mapCH$178906[esp+92], ebx
  00197	89 00		 mov	 DWORD PTR [eax], eax
  00199	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]

; 1278 : 
; 1279 : 		if( finder != m_mapTCELL.end() && (*finder).second->IsEnable(pMON->m_bChannel) )

  0019d	8b 6c 24 18	 mov	 ebp, DWORD PTR _finder$178900[esp+84]
  001a1	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001a4	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  001a7	3b e8		 cmp	 ebp, eax
  001a9	0f 84 8e 00 00
	00		 je	 $L265009
  001af	8b 54 24 58	 mov	 edx, DWORD PTR _pMON$[esp+80]
  001b3	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  001b6	33 c0		 xor	 eax, eax
  001b8	8a 42 74	 mov	 al, BYTE PTR [edx+116]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  001c1	84 c0		 test	 al, al
  001c3	74 78		 je	 SHORT $L265009

; 1280 : 		{
; 1281 : 			for( BYTE i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  001c5	88 5c 24 13	 mov	 BYTE PTR _i$178909[esp+84], bl
  001c9	8d a4 24 00 00
	00 00		 npad	 7
$L178910:
  001d0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  001d6	3b cb		 cmp	 ecx, ebx
  001d8	74 56		 je	 SHORT $L265003
  001da	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  001df	8a 54 24 13	 mov	 dl, BYTE PTR _i$178909[esp+84]
  001e3	2b c1		 sub	 eax, ecx
  001e5	3a d0		 cmp	 dl, al
  001e7	73 47		 jae	 SHORT $L265003

; 1368 : 		pMON->m_fPosZ = fPosZ;

  001e9	0f b6 c2	 movzx	 eax, dl
  001ec	0f b6 0c 08	 movzx	 ecx, BYTE PTR [eax+ecx]
  001f0	51		 push	 ecx
  001f1	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  001f4	89 44 24 1c	 mov	 DWORD PTR tv1345[esp+88], eax
  001f8	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  001fd	84 c0		 test	 al, al
  001ff	74 29		 je	 SHORT $L178911
  00201	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00206	8b 4c 24 18	 mov	 ecx, DWORD PTR tv1345[esp+84]
  0020a	8a 14 01	 mov	 dl, BYTE PTR [ecx+eax]
  0020d	8a c2		 mov	 al, dl
  0020f	8d 4c 24 14	 lea	 ecx, DWORD PTR $T262070[esp+84]
  00213	88 54 24 14	 mov	 BYTE PTR $T262070[esp+84], dl
  00217	51		 push	 ecx
  00218	8d 54 24 1c	 lea	 edx, DWORD PTR $T262071[esp+88]
  0021c	52		 push	 edx
  0021d	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178906[esp+92]
  00221	88 44 24 1d	 mov	 BYTE PTR $T262070[esp+93], al
  00225	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBEE@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::insert
$L178911:
  0022a	fe 44 24 13	 inc	 BYTE PTR _i$178909[esp+84]
  0022e	eb a0		 jmp	 SHORT $L178910
$L265003:

; 1282 : 				if((*finder).second->IsMainCell(m_vTCHANNEL[i]))
; 1283 : 					mapCH.insert( MAPBYTE::value_type( m_vTCHANNEL[i], m_vTCHANNEL[i]));
; 1284 : 
; 1285 : 			(*finder).second->DelMonster(pMON);

  00230	8b 44 24 58	 mov	 eax, DWORD PTR _pMON$[esp+80]
  00234	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?DelMonster@CTCell@@QAEXPAVCTMonster@@@Z ; CTCell::DelMonster
$L265009:

; 1286 : 		}
; 1287 : 
; 1288 : 		GetNeighbor(
; 1289 : 			&mapOLD,
; 1290 : 			pMON->m_fPosX,
; 1291 : 			pMON->m_fPosZ);

  0023d	8b 44 24 58	 mov	 eax, DWORD PTR _pMON$[esp+80]
  00241	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00247	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  0024a	51		 push	 ecx
  0024b	52		 push	 edx
  0024c	8d 44 24 44	 lea	 eax, DWORD PTR _mapOLD$178904[esp+92]
  00250	50		 push	 eax
  00251	8b ce		 mov	 ecx, esi
  00253	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1292 : 
; 1293 : 		GetNeighbor(
; 1294 : 			&mapNEW,
; 1295 : 			fPosX,
; 1296 : 			fPosZ);

  00258	8b 4c 24 60	 mov	 ecx, DWORD PTR _fPosZ$[esp+80]
  0025c	8b 54 24 5c	 mov	 edx, DWORD PTR _fPosX$[esp+80]
  00260	51		 push	 ecx
  00261	52		 push	 edx
  00262	8d 44 24 38	 lea	 eax, DWORD PTR _mapNEW$178905[esp+92]
  00266	50		 push	 eax
  00267	8b ce		 mov	 ecx, esi
  00269	e8 00 00 00 00	 call	 ?GetNeighbor@CTMap@@QAEXPAV?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@MM@Z ; CTMap::GetNeighbor

; 1297 : 
; 1298 : 		for( it = mapOLD.begin(); it != mapOLD.end(); it++)

  0026e	8b 4c 24 40	 mov	 ecx, DWORD PTR _mapOLD$178904[esp+88]
  00272	8b 29		 mov	 ebp, DWORD PTR [ecx]
  00274	8b c1		 mov	 eax, ecx
  00276	3b e8		 cmp	 ebp, eax
  00278	89 6c 24 14	 mov	 DWORD PTR _it$178902[esp+84], ebp
  0027c	74 3d		 je	 SHORT $L178921
  0027e	8b ff		 npad	 2
$L263188:

; 1299 : 		{
; 1300 : 			finder = mapNEW.find((*it).first);

  00280	8d 55 0c	 lea	 edx, DWORD PTR [ebp+12]
  00283	52		 push	 edx
  00284	8d 44 24 1c	 lea	 eax, DWORD PTR $T262075[esp+88]
  00288	50		 push	 eax
  00289	8d 4c 24 38	 lea	 ecx, DWORD PTR _mapNEW$178905[esp+92]
  0028d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find

; 1301 : 
; 1302 : 			if( finder == mapNEW.end() )

  00292	8b 08		 mov	 ecx, DWORD PTR [eax]
  00294	3b 4c 24 34	 cmp	 ecx, DWORD PTR _mapNEW$178905[esp+88]
  00298	75 0e		 jne	 SHORT $L178920

; 1303 : 				(*it).second->LeaveMonster( pMON, FALSE);

  0029a	8b 54 24 58	 mov	 edx, DWORD PTR _pMON$[esp+80]
  0029e	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  002a1	53		 push	 ebx
  002a2	52		 push	 edx
  002a3	e8 00 00 00 00	 call	 ?LeaveMonster@CTCell@@QAEXPAVCTMonster@@E@Z ; CTCell::LeaveMonster
$L178920:
  002a8	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$178902[esp+84]
  002ac	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::const_iterator::_Inc
  002b1	8b 6c 24 14	 mov	 ebp, DWORD PTR _it$178902[esp+84]
  002b5	3b 6c 24 40	 cmp	 ebp, DWORD PTR _mapOLD$178904[esp+88]
  002b9	75 c5		 jne	 SHORT $L263188
$L178921:

; 1304 : 		}
; 1305 : 
; 1306 : 		pMON->m_fPosX = fPosX;

  002bb	8b 4c 24 5c	 mov	 ecx, DWORD PTR _fPosX$[esp+80]
  002bf	8b 44 24 58	 mov	 eax, DWORD PTR _pMON$[esp+80]

; 1307 : 		pMON->m_fPosZ = fPosZ;

  002c3	8b 54 24 60	 mov	 edx, DWORD PTR _fPosZ$[esp+80]
  002c7	89 48 7c	 mov	 DWORD PTR [eax+124], ecx
  002ca	89 90 84 00 00
	00		 mov	 DWORD PTR [eax+132], edx

; 1308 : 
; 1309 : 		finder = m_mapTCELL.find(dwNEW);

  002d0	8d 44 24 20	 lea	 eax, DWORD PTR _dwNEW$[esp+84]
  002d4	50		 push	 eax
  002d5	8d 4c 24 60	 lea	 ecx, DWORD PTR $T262077[esp+84]
  002d9	51		 push	 ecx
  002da	8b cf		 mov	 ecx, edi
  002dc	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
  002e1	8b 28		 mov	 ebp, DWORD PTR [eax]

; 1310 : 		if( finder != m_mapTCELL.end() && (*finder).second->IsEnable(pMON->m_bChannel) )

  002e3	3b 6e 44	 cmp	 ebp, DWORD PTR [esi+68]
  002e6	0f 84 64 02 00
	00		 je	 $L178958
  002ec	8b 44 24 58	 mov	 eax, DWORD PTR _pMON$[esp+80]
  002f0	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  002f3	83 c0 74	 add	 eax, 116		; 00000074H
  002f6	33 d2		 xor	 edx, edx
  002f8	8a 10		 mov	 dl, BYTE PTR [eax]
  002fa	52		 push	 edx
  002fb	e8 00 00 00 00	 call	 ?IsEnable@CTCell@@QAEEE@Z ; CTCell::IsEnable
  00300	84 c0		 test	 al, al
  00302	0f 84 48 02 00
	00		 je	 $L178958

; 1311 : 		{
; 1312 : 			CTCell *pCell = (*finder).second;

  00308	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]

; 1313 : 
; 1314 : 			BYTE bEnterCH = FALSE;
; 1315 : 			BYTE bLeaveCH = FALSE;
; 1316 : 
; 1317 : 			for( BYTE i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  0030b	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00311	89 44 24 14	 mov	 DWORD PTR _pCell$178928[esp+84], eax
  00315	88 5c 24 13	 mov	 BYTE PTR _bEnterCH$178929[esp+84], bl
  00319	88 5c 24 60	 mov	 BYTE PTR _bLeaveCH$178930[esp+80], bl
  0031d	88 5c 24 5c	 mov	 BYTE PTR _i$178931[esp+80], bl
$L178932:
  00321	3b f3		 cmp	 esi, ebx
  00323	74 4f		 je	 SHORT $L265006
  00325	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  0032a	8a 4c 24 5c	 mov	 cl, BYTE PTR _i$178931[esp+80]
  0032e	2b c6		 sub	 eax, esi
  00330	3a c8		 cmp	 cl, al
  00332	73 40		 jae	 SHORT $L265006

; 1368 : 		pMON->m_fPosZ = fPosZ;

  00334	0f b6 f9	 movzx	 edi, cl
  00337	33 c9		 xor	 ecx, ecx
  00339	8a 0c 37	 mov	 cl, BYTE PTR [edi+esi]
  0033c	51		 push	 ecx
  0033d	8b 4c 24 18	 mov	 ecx, DWORD PTR _pCell$178928[esp+88]
  00341	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  00346	84 c0		 test	 al, al
  00348	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  0034e	74 19		 je	 SHORT $L178933
  00350	03 fe		 add	 edi, esi
  00352	57		 push	 edi
  00353	8d 54 24 24	 lea	 edx, DWORD PTR $T262079[esp+88]
  00357	52		 push	 edx
  00358	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178906[esp+92]
  0035c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
  00361	8b 4c 24 28	 mov	 ecx, DWORD PTR _mapCH$178906[esp+88]
  00365	39 08		 cmp	 DWORD PTR [eax], ecx
  00367	74 06		 je	 SHORT $L264992
$L178933:

; 1313 : 
; 1314 : 			BYTE bEnterCH = FALSE;
; 1315 : 			BYTE bLeaveCH = FALSE;
; 1316 : 
; 1317 : 			for( BYTE i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  00369	fe 44 24 5c	 inc	 BYTE PTR _i$178931[esp+80]
  0036d	eb b2		 jmp	 SHORT $L178932
$L264992:

; 1318 : 				if( pCell->IsMainCell(m_vTCHANNEL[i]) && mapCH.find(m_vTCHANNEL[i]) == mapCH.end() )
; 1319 : 				{
; 1320 : 					bEnterCH = TRUE;

  0036f	c6 44 24 13 01	 mov	 BYTE PTR _bEnterCH$178929[esp+84], 1
$L265006:

; 1321 : 					break;
; 1322 : 				}
; 1323 : 
; 1324 : 			for( i=0; i<BYTE(m_vTCHANNEL.size()); i++)

  00374	88 5c 24 5c	 mov	 BYTE PTR _i$178931[esp+80], bl
$L178938:
  00378	3b f3		 cmp	 esi, ebx
  0037a	74 5f		 je	 SHORT $L265005
  0037c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8
  00381	8a 4c 24 5c	 mov	 cl, BYTE PTR _i$178931[esp+80]
  00385	2b c6		 sub	 eax, esi
  00387	3a c8		 cmp	 cl, al
  00389	73 50		 jae	 SHORT $L265005

; 1368 : 		pMON->m_fPosZ = fPosZ;

  0038b	0f b6 f9	 movzx	 edi, cl
  0038e	8b 4c 24 14	 mov	 ecx, DWORD PTR _pCell$178928[esp+84]
  00392	33 d2		 xor	 edx, edx
  00394	8a 14 37	 mov	 dl, BYTE PTR [edi+esi]
  00397	52		 push	 edx
  00398	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  0039d	84 c0		 test	 al, al
  0039f	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  003a5	74 2e		 je	 SHORT $L178939
  003a7	03 fe		 add	 edi, esi
  003a9	57		 push	 edi
  003aa	8d 44 24 24	 lea	 eax, DWORD PTR $T262081[esp+88]
  003ae	50		 push	 eax
  003af	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178906[esp+92]
  003b3	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
  003b8	8b 00		 mov	 eax, DWORD PTR [eax]
  003ba	3b 44 24 28	 cmp	 eax, DWORD PTR _mapCH$178906[esp+88]
  003be	74 15		 je	 SHORT $L178939
  003c0	50		 push	 eax
  003c1	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T262083[esp+88]
  003c5	51		 push	 ecx
  003c6	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178906[esp+92]
  003ca	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  003cf	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
$L178939:
  003d5	fe 44 24 5c	 inc	 BYTE PTR _i$178931[esp+80]
  003d9	eb 9d		 jmp	 SHORT $L178938
$L265005:

; 1325 : 				if(pCell->IsMainCell(m_vTCHANNEL[i]))
; 1326 : 				{
; 1327 : 					itCH = mapCH.find(m_vTCHANNEL[i]);
; 1328 : 
; 1329 : 					if( itCH != mapCH.end() )
; 1330 : 						mapCH.erase(itCH);
; 1331 : 				}
; 1332 : 
; 1333 : 			if( pMON->m_bType == OT_RECALL )

  003db	8b 74 24 58	 mov	 esi, DWORD PTR _pMON$[esp+80]
  003df	80 7e 77 07	 cmp	 BYTE PTR [esi+119], 7
  003e3	75 49		 jne	 SHORT $L178946

; 1334 : 			{
; 1335 : //				BYTE bPrevMain = ((CTRecallMon *) pMON)->m_bMain;
; 1336 : //				((CTRecallMon *) pMON)->m_bMain = pCell->IsMainCell(pMON->m_bChannel);
; 1337 : 				if(((CTRecallMon *) pMON)->m_bMain && !pCell->IsMainCell(pMON->m_bChannel))

  003e5	38 9e 7e 01 00
	00		 cmp	 BYTE PTR [esi+382], bl
  003eb	74 24		 je	 SHORT $L265008
  003ed	8b 4c 24 14	 mov	 ecx, DWORD PTR _pCell$178928[esp+84]
  003f1	33 d2		 xor	 edx, edx
  003f3	8a 56 74	 mov	 dl, BYTE PTR [esi+116]
  003f6	52		 push	 edx
  003f7	e8 00 00 00 00	 call	 ?IsMainCell@CTCell@@QAEEE@Z ; CTCell::IsMainCell
  003fc	84 c0		 test	 al, al
  003fe	75 11		 jne	 SHORT $L265008

; 1338 : 				{
; 1339 : 					_AtlModule.SendMW_RECALLMONDATA_ACK((CTRecallMon *) pMON);

  00400	56		 push	 esi
  00401	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTMapSvrModule@@A
  00406	e8 00 00 00 00	 call	 ?SendMW_RECALLMONDATA_ACK@CTMapSvrModule@@QAEXPAVCTRecallMon@@@Z ; CTMapSvrModule::SendMW_RECALLMONDATA_ACK

; 1340 : 					((CTRecallMon *) pMON)->m_bMain = FALSE;

  0040b	88 9e 7e 01 00
	00		 mov	 BYTE PTR [esi+382], bl
$L265008:

; 1341 : 				}
; 1342 : 
; 1343 : 				bLeaveCH = mapCH.find(pMON->m_bChannel) != mapCH.end() ? TRUE : FALSE;

  00411	8d 46 74	 lea	 eax, DWORD PTR [esi+116]
  00414	50		 push	 eax
  00415	8d 44 24 60	 lea	 eax, DWORD PTR $T262084[esp+84]
  00419	50		 push	 eax
  0041a	8d 4c 24 2c	 lea	 ecx, DWORD PTR _mapCH$178906[esp+92]
  0041e	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::find
  00423	8b 08		 mov	 ecx, DWORD PTR [eax]
  00425	3b 4c 24 28	 cmp	 ecx, DWORD PTR _mapCH$178906[esp+88]
  00429	0f 95 44 24 60	 setne	 BYTE PTR _bLeaveCH$178930[esp+80]
$L178946:

; 1344 : 			}
; 1345 : 			(*finder).second->AddMonster(pMON);

  0042e	8b 54 24 58	 mov	 edx, DWORD PTR _pMON$[esp+80]
  00432	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00435	52		 push	 edx
  00436	e8 00 00 00 00	 call	 ?AddMonster@CTCell@@QAEXPAVCTMonster@@@Z ; CTCell::AddMonster

; 1346 : 
; 1347 : 			for( it = mapNEW.begin(); it != mapNEW.end(); it++)

  0043b	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  0043f	8b 38		 mov	 edi, DWORD PTR [eax]
  00441	3b f8		 cmp	 edi, eax
  00443	0f 84 07 01 00
	00		 je	 $L178958
  00449	8d a4 24 00 00
	00 00		 npad	 7
$L263815:

; 1348 : 			{
; 1349 : 				if(!bLeaveCH)

  00450	38 5c 24 60	 cmp	 BYTE PTR _bLeaveCH$178930[esp+80], bl
  00454	75 66		 jne	 SHORT $L178959

; 1350 : 					for( itCH = mapCH.begin(); itCH != mapCH.end(); itCH++)

  00456	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0045a	8b 30		 mov	 esi, DWORD PTR [eax]
  0045c	3b f0		 cmp	 esi, eax
  0045e	74 6a		 je	 SHORT $L265010
$L264059:

; 1351 : 						(*it).second->LeaveChannel( pMON, (*itCH).second, FALSE);

  00460	8b 4c 24 58	 mov	 ecx, DWORD PTR _pMON$[esp+80]
  00464	33 c0		 xor	 eax, eax
  00466	8a 46 0d	 mov	 al, BYTE PTR [esi+13]
  00469	53		 push	 ebx
  0046a	50		 push	 eax
  0046b	51		 push	 ecx
  0046c	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0046f	e8 00 00 00 00	 call	 ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@EE@Z ; CTCell::LeaveChannel
  00474	38 5e 0f	 cmp	 BYTE PTR [esi+15], bl
  00477	75 3b		 jne	 SHORT $L264070
  00479	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0047c	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  0047f	75 1a		 jne	 SHORT $L264986
  00481	8b f0		 mov	 esi, eax
  00483	8b 06		 mov	 eax, DWORD PTR [esi]
  00485	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00488	75 2a		 jne	 SHORT $L264070
  0048a	8d 9b 00 00 00
	00		 npad	 6

; 1350 : 					for( itCH = mapCH.begin(); itCH != mapCH.end(); itCH++)

$L264084:
  00490	8b f0		 mov	 esi, eax
  00492	8b 06		 mov	 eax, DWORD PTR [esi]
  00494	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  00497	74 f7		 je	 SHORT $L264084
  00499	eb 19		 jmp	 SHORT $L264070
$L264986:
  0049b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0049e	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  004a1	75 0f		 jne	 SHORT $L264073
$L264072:
  004a3	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  004a6	75 0a		 jne	 SHORT $L264073
  004a8	8b f0		 mov	 esi, eax
  004aa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  004ad	38 58 0f	 cmp	 BYTE PTR [eax+15], bl
  004b0	74 f1		 je	 SHORT $L264072
$L264073:
  004b2	8b f0		 mov	 esi, eax
$L264070:
  004b4	3b 74 24 28	 cmp	 esi, DWORD PTR _mapCH$178906[esp+88]
  004b8	75 a6		 jne	 SHORT $L264059

; 1351 : 						(*it).second->LeaveChannel( pMON, (*itCH).second, FALSE);

  004ba	eb 0e		 jmp	 SHORT $L265010
$L178959:

; 1352 : 				else
; 1353 : 					(*it).second->LeaveChannel( pMON, FALSE);

  004bc	8b 54 24 58	 mov	 edx, DWORD PTR _pMON$[esp+80]
  004c0	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  004c3	53		 push	 ebx
  004c4	52		 push	 edx
  004c5	e8 00 00 00 00	 call	 ?LeaveChannel@CTCell@@QAEXPAVCTMonster@@E@Z ; CTCell::LeaveChannel
$L265010:

; 1354 : 
; 1355 : 				if( bEnterCH || bLeaveCH || mapOLD.find((*it).first) == mapOLD.end() )

  004ca	38 5c 24 13	 cmp	 BYTE PTR _bEnterCH$178929[esp+84], bl
  004ce	75 20		 jne	 SHORT $L178970
  004d0	38 5c 24 60	 cmp	 BYTE PTR _bLeaveCH$178930[esp+80], bl
  004d4	75 1a		 jne	 SHORT $L178970
  004d6	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  004d9	50		 push	 eax
  004da	8d 4c 24 60	 lea	 ecx, DWORD PTR $T262092[esp+84]
  004de	51		 push	 ecx
  004df	8d 4c 24 44	 lea	 ecx, DWORD PTR _mapOLD$178904[esp+92]
  004e3	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
  004e8	8b 10		 mov	 edx, DWORD PTR [eax]
  004ea	3b 54 24 40	 cmp	 edx, DWORD PTR _mapOLD$178904[esp+88]
  004ee	75 19		 jne	 SHORT $L178957
$L178970:

; 1356 : 					(*it).second->EnterMonster( pMON, pCell, FALSE, _AtlModule.m_dwTick);

  004f0	a1 48 a9 02 00	 mov	 eax, DWORD PTR ?_AtlModule@@3VCTMapSvrModule@@A+174408
  004f5	8b 4c 24 14	 mov	 ecx, DWORD PTR _pCell$178928[esp+84]
  004f9	8b 54 24 58	 mov	 edx, DWORD PTR _pMON$[esp+80]
  004fd	50		 push	 eax
  004fe	53		 push	 ebx
  004ff	51		 push	 ecx
  00500	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00503	52		 push	 edx
  00504	e8 00 00 00 00	 call	 ?EnterMonster@CTCell@@QAEXPAVCTMonster@@PAV1@EK@Z ; CTCell::EnterMonster
$L178957:
  00509	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  0050c	75 38		 jne	 SHORT $L263832
  0050e	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00511	38 59 15	 cmp	 BYTE PTR [ecx+21], bl
  00514	75 17		 jne	 SHORT $L264988
  00516	8b 01		 mov	 eax, DWORD PTR [ecx]
  00518	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  0051b	75 0c		 jne	 SHORT $L263847
  0051d	8d 49 00	 npad	 3

; 1346 : 
; 1347 : 			for( it = mapNEW.begin(); it != mapNEW.end(); it++)

$L263846:
  00520	8b c8		 mov	 ecx, eax
  00522	8b 01		 mov	 eax, DWORD PTR [ecx]
  00524	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00527	74 f7		 je	 SHORT $L263846
$L263847:
  00529	8b f9		 mov	 edi, ecx
  0052b	eb 19		 jmp	 SHORT $L263832
$L264988:
  0052d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00530	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00533	75 0f		 jne	 SHORT $L263837
$L263836:
  00535	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00538	75 0a		 jne	 SHORT $L263837
  0053a	8b f8		 mov	 edi, eax
  0053c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0053f	38 58 15	 cmp	 BYTE PTR [eax+21], bl
  00542	74 f1		 je	 SHORT $L263836
$L263837:
  00544	8b f8		 mov	 edi, eax
$L263832:
  00546	3b 7c 24 34	 cmp	 edi, DWORD PTR _mapNEW$178905[esp+88]
  0054a	0f 85 00 ff ff
	ff		 jne	 $L263815
$L178958:

; 1357 : 			}
; 1358 : 		}
; 1359 : 		pMON->OnEvent(AT_LEAVE, 0, 0, 0, 0);

  00550	8b 4c 24 58	 mov	 ecx, DWORD PTR _pMON$[esp+80]
  00554	53		 push	 ebx
  00555	53		 push	 ebx
  00556	53		 push	 ebx
  00557	53		 push	 ebx
  00558	6a 08		 push	 8
  0055a	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent

; 1360 : 
; 1361 : 		mapOLD.clear();

  0055f	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  00563	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00566	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00569	8b f7		 mov	 esi, edi
  0056b	75 28		 jne	 SHORT $L264298
  0056d	8d 49 00	 npad	 3
$L264296:
  00570	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00573	50		 push	 eax
  00574	8d 4c 24 40	 lea	 ecx, DWORD PTR _mapOLD$178904[esp+88]
  00578	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  0057d	8b 36		 mov	 esi, DWORD PTR [esi]
  0057f	57		 push	 edi
  00580	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00585	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00588	83 c4 04	 add	 esp, 4
  0058b	3a c3		 cmp	 al, bl
  0058d	8b fe		 mov	 edi, esi
  0058f	74 df		 je	 SHORT $L264296
  00591	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
$L264298:
  00595	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00598	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  0059c	89 5c 24 44	 mov	 DWORD PTR _mapOLD$178904[esp+92], ebx
  005a0	89 00		 mov	 DWORD PTR [eax], eax
  005a2	8b 44 24 40	 mov	 eax, DWORD PTR _mapOLD$178904[esp+88]
  005a6	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1362 : 		mapNEW.clear();

  005a9	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  005ad	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  005b0	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  005b3	8b f7		 mov	 esi, edi
  005b5	75 25		 jne	 SHORT $L264392
$L264390:
  005b7	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  005ba	51		 push	 ecx
  005bb	8d 4c 24 34	 lea	 ecx, DWORD PTR _mapNEW$178905[esp+88]
  005bf	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  005c4	8b 36		 mov	 esi, DWORD PTR [esi]
  005c6	57		 push	 edi
  005c7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005cc	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  005cf	83 c4 04	 add	 esp, 4
  005d2	3a c3		 cmp	 al, bl
  005d4	8b fe		 mov	 edi, esi
  005d6	74 df		 je	 SHORT $L264390
  005d8	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
$L264392:
  005dc	89 40 04	 mov	 DWORD PTR [eax+4], eax
  005df	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  005e3	89 5c 24 38	 mov	 DWORD PTR _mapNEW$178905[esp+92], ebx
  005e7	89 00		 mov	 DWORD PTR [eax], eax
  005e9	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  005ed	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1363 : 		mapCH.clear();

  005f0	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  005f4	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  005f7	38 5f 0f	 cmp	 BYTE PTR [edi+15], bl
  005fa	8b f7		 mov	 esi, edi
  005fc	75 27		 jne	 SHORT $L264477
  005fe	8b ff		 npad	 2
$L264475:
  00600	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00603	52		 push	 edx
  00604	8d 4c 24 28	 lea	 ecx, DWORD PTR _mapCH$178906[esp+88]
  00608	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::_Erase
  0060d	8b 36		 mov	 esi, DWORD PTR [esi]
  0060f	57		 push	 edi
  00610	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00615	8a 46 0f	 mov	 al, BYTE PTR [esi+15]
  00618	83 c4 04	 add	 esp, 4
  0061b	3a c3		 cmp	 al, bl
  0061d	8b fe		 mov	 edi, esi
  0061f	74 df		 je	 SHORT $L264475
  00621	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
$L264477:
  00625	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00628	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0062c	89 5c 24 2c	 mov	 DWORD PTR _mapCH$178906[esp+92], ebx
  00630	89 00		 mov	 DWORD PTR [eax], eax
  00632	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  00636	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1364 : 	}

  00639	8b 44 24 28	 mov	 eax, DWORD PTR _mapCH$178906[esp+88]
  0063d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0063f	50		 push	 eax
  00640	51		 push	 ecx
  00641	8d 44 24 60	 lea	 eax, DWORD PTR $T264633[esp+88]
  00645	50		 push	 eax
  00646	8d 4c 24 30	 lea	 ecx, DWORD PTR _mapCH$178906[esp+96]
  0064a	c6 44 24 5c 01	 mov	 BYTE PTR __$EHRec$[esp+104], 1
  0064f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,unsigned char,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,unsigned char> >,0> >::erase
  00654	8b 4c 24 28	 mov	 ecx, DWORD PTR _mapCH$178906[esp+88]
  00658	51		 push	 ecx
  00659	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0065e	8b 44 24 38	 mov	 eax, DWORD PTR _mapNEW$178905[esp+92]
  00662	83 c4 04	 add	 esp, 4
  00665	89 5c 24 28	 mov	 DWORD PTR _mapCH$178906[esp+88], ebx
  00669	89 5c 24 2c	 mov	 DWORD PTR _mapCH$178906[esp+92], ebx
  0066d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0066f	50		 push	 eax
  00670	51		 push	 ecx
  00671	8d 54 24 60	 lea	 edx, DWORD PTR $T264792[esp+88]
  00675	52		 push	 edx
  00676	8d 4c 24 3c	 lea	 ecx, DWORD PTR _mapNEW$178905[esp+96]
  0067a	88 5c 24 5c	 mov	 BYTE PTR __$EHRec$[esp+104], bl
  0067e	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  00683	8b 44 24 34	 mov	 eax, DWORD PTR _mapNEW$178905[esp+88]
  00687	50		 push	 eax
  00688	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0068d	8b 44 24 44	 mov	 eax, DWORD PTR _mapOLD$178904[esp+92]
  00691	83 c4 04	 add	 esp, 4
  00694	89 5c 24 34	 mov	 DWORD PTR _mapNEW$178905[esp+88], ebx
  00698	89 5c 24 38	 mov	 DWORD PTR _mapNEW$178905[esp+92], ebx
  0069c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069e	50		 push	 eax
  0069f	51		 push	 ecx
  006a0	8d 4c 24 60	 lea	 ecx, DWORD PTR $T264952[esp+88]
  006a4	51		 push	 ecx
  006a5	8d 4c 24 48	 lea	 ecx, DWORD PTR _mapOLD$178904[esp+96]
  006a9	c7 44 24 5c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+104], -1
  006b1	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::erase
  006b6	8b 54 24 40	 mov	 edx, DWORD PTR _mapOLD$178904[esp+88]
  006ba	52		 push	 edx
  006bb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006c0	83 c4 04	 add	 esp, 4
  006c3	5f		 pop	 edi
  006c4	5e		 pop	 esi
  006c5	5d		 pop	 ebp
  006c6	5b		 pop	 ebx

; 1369 : 	}
; 1370 : }

  006c7	8b 4c 24 38	 mov	 ecx, DWORD PTR __$EHRec$[esp+68]
  006cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006d2	83 c4 44	 add	 esp, 68			; 00000044H
  006d5	c2 0c 00	 ret	 12			; 0000000cH
$L178899:

; 1365 : 	else
; 1366 : 	{
; 1367 : 		pMON->m_fPosX = fPosX;

  006d8	8b 4c 24 5c	 mov	 ecx, DWORD PTR _fPosX$[esp+80]
  006dc	8b 44 24 58	 mov	 eax, DWORD PTR _pMON$[esp+80]

; 1368 : 		pMON->m_fPosZ = fPosZ;

  006e0	8b 54 24 60	 mov	 edx, DWORD PTR _fPosZ$[esp+80]
  006e4	5f		 pop	 edi
  006e5	5e		 pop	 esi
  006e6	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 1369 : 	}
; 1370 : }

  006e9	8b 4c 24 40	 mov	 ecx, DWORD PTR __$EHRec$[esp+76]
  006ed	5d		 pop	 ebp
  006ee	89 90 84 00 00
	00		 mov	 DWORD PTR [eax+132], edx
  006f4	5b		 pop	 ebx
  006f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006fc	83 c4 44	 add	 esp, 68			; 00000044H
  006ff	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L262094:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _mapOLD$178904[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L262095:
  00008	8d 4d dc	 lea	 ecx, DWORD PTR _mapNEW$178905[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L262096:
  00010	8d 4d d0	 lea	 ecx, DWORD PTR _mapCH$178906[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$map@EEU?$less@E@std@@V?$allocator@U?$pair@$$CBEE@std@@@2@@std@@QAE@XZ
__ehhandler$?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z:
  00018	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T264978
  0001d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMove@CTMap@@QAEXPAVCTMonster@@MM@Z ENDP		; CTMap::OnMove
PUBLIC	?InitGodBall@CTMap@@QAEXEKG@Z			; CTMap::InitGodBall
; Function compile flags: /Ogty
;	COMDAT ?InitGodBall@CTMap@@QAEXEKG@Z
_TEXT	SEGMENT
_wID$ = -4						; size = 2
_bCamp$ = 8						; size = 1
_dwGuild$ = 12						; size = 4
_wCastle$ = 16						; size = 2
?InitGodBall@CTMap@@QAEXEKG@Z PROC NEAR			; CTMap::InitGodBall, COMDAT
; _this$ = ecx

; 1481 : {

  00000	51		 push	 ecx
  00001	55		 push	 ebp
  00002	57		 push	 edi
  00003	8b e9		 mov	 ebp, ecx

; 1482 : 	WORD wID = 0;
; 1483 : 	LPTGODBALL pTemp = GenGodBall(bCamp, wID);

  00005	8b 4c 24 10	 mov	 ecx, DWORD PTR _bCamp$[esp+8]
  00009	8d 44 24 08	 lea	 eax, DWORD PTR _wID$[esp+12]
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	8b cd		 mov	 ecx, ebp
  00011	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR _wID$[esp+20], 0
  00019	e8 00 00 00 00	 call	 ?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z ; CTMap::GenGodBall
  0001e	8b f8		 mov	 edi, eax

; 1484 : 	if(pTemp)

  00020	85 ff		 test	 edi, edi
  00022	0f 84 8e 00 00
	00		 je	 $L179062

; 1485 : 	{
; 1486 : 		if(wID)

  00028	66 83 7c 24 08
	00		 cmp	 WORD PTR _wID$[esp+12], 0
  0002e	0f 84 82 00 00
	00		 je	 $L179062
  00034	56		 push	 esi

; 1487 : 		{
; 1488 : 			LPTGODBALL pBall = new TGODBALL();

  00035	6a 38		 push	 56			; 00000038H
  00037	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003c	83 c4 04	 add	 esp, 4
  0003f	85 c0		 test	 eax, eax
  00041	74 0b		 je	 SHORT $L265019
  00043	8b c8		 mov	 ecx, eax
  00045	e8 00 00 00 00	 call	 ??0tagGODBALL@@QAE@XZ
  0004a	8b f0		 mov	 esi, eax
  0004c	eb 02		 jmp	 SHORT $L265020
$L265019:
  0004e	33 f6		 xor	 esi, esi
$L265020:

; 1489 : 			pBall->m_wTempID = pTemp->m_wID;

  00050	66 8b 57 04	 mov	 dx, WORD PTR [edi+4]

; 1490 : 			pBall->m_bCamp = bCamp;

  00054	8a 44 24 14	 mov	 al, BYTE PTR _bCamp$[esp+12]

; 1491 : 			pBall->m_dwGuildID = dwGuild;

  00058	8b 4c 24 18	 mov	 ecx, DWORD PTR _dwGuild$[esp+12]
  0005c	66 89 56 32	 mov	 WORD PTR [esi+50], dx

; 1492 : 			pBall->m_dwKEY = 0;
; 1493 : 			pBall->m_wID = wID;

  00060	66 8b 54 24 0c	 mov	 dx, WORD PTR _wID$[esp+16]
  00065	88 46 08	 mov	 BYTE PTR [esi+8], al
  00068	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  0006b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00071	66 89 56 04	 mov	 WORD PTR [esi+4], dx

; 1494 : 			pBall->m_fPosX = pTemp->m_fPosX;

  00075	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00078	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 1495 : 			pBall->m_fPosY = pTemp->m_fPosY;

  0007b	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]

; 1496 : 			pBall->m_fPosZ = pTemp->m_fPosZ;
; 1497 : 			pBall->m_wCastle = wCastle;

  0007e	66 8b 44 24 1c	 mov	 ax, WORD PTR _wCastle$[esp+12]
  00083	89 4e 18	 mov	 DWORD PTR [esi+24], ecx
  00086	8b 57 1c	 mov	 edx, DWORD PTR [edi+28]

; 1498 : 			pBall->m_strOwner = NAME_NULL;

  00089	6a 00		 push	 0
  0008b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00090	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00093	89 56 1c	 mov	 DWORD PTR [esi+28], edx
  00096	66 89 46 06	 mov	 WORD PTR [esi+6], ax
  0009a	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 1499 : 			pBall->m_dlTime = 0;
; 1500 : 			EnterMAP(pBall);

  0009f	56		 push	 esi
  000a0	8b cd		 mov	 ecx, ebp
  000a2	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  000a9	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  000b0	e8 00 00 00 00	 call	 ?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z ; CTMap::EnterMAP
  000b5	5e		 pop	 esi
$L179062:
  000b6	5f		 pop	 edi
  000b7	5d		 pop	 ebp

; 1501 : 		}
; 1502 : 	}
; 1503 : }

  000b8	59		 pop	 ecx
  000b9	c2 0c 00	 ret	 12			; 0000000cH
?InitGodBall@CTMap@@QAEXEKG@Z ENDP			; CTMap::InitGodBall
_TEXT	ENDS
PUBLIC	?MoveGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z	; CTMap::MoveGodBall
; Function compile flags: /Ogty
;	COMDAT ?MoveGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_wID$179099 = 8						; size = 2
_bCount$ = 8						; size = 1
_pBall$ = 8						; size = 4
?MoveGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z PROC NEAR	; CTMap::MoveGodBall, COMDAT
; _this$ = ecx

; 1520 : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp
  00003	56		 push	 esi

; 1521 : 	LeaveMAP(pBall, TRUE);

  00004	8b 74 24 14	 mov	 esi, DWORD PTR _pBall$[esp+12]
  00008	57		 push	 edi
  00009	6a 01		 push	 1
  0000b	56		 push	 esi
  0000c	8b f9		 mov	 edi, ecx
  0000e	e8 00 00 00 00	 call	 ?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z ; CTMap::LeaveMAP

; 1522 : 
; 1523 : 	BYTE bCount = 0;
; 1524 : 	MAPTGODBALL::iterator it;
; 1525 : 	for(it=m_mapTGODBALL.begin(); it!=m_mapTGODBALL.end(); it++)

  00013	8b 6f 74	 mov	 ebp, DWORD PTR [edi+116]
  00016	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00019	3b c5		 cmp	 eax, ebp
  0001b	c6 44 24 18 00	 mov	 BYTE PTR _bCount$[esp+16], 0
  00020	89 44 24 10	 mov	 DWORD PTR _it$[esp+20], eax
  00024	74 27		 je	 SHORT $L179095
  00026	8a 5e 08	 mov	 bl, BYTE PTR [esi+8]
  00029	8d a4 24 00 00
	00 00		 npad	 7
$L265199:

; 1526 : 	{
; 1527 : 		if((*it).second->m_bCamp == pBall->m_bCamp)

  00030	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00033	38 58 08	 cmp	 BYTE PTR [eax+8], bl
  00036	75 04		 jne	 SHORT $L179094

; 1528 : 			bCount++;

  00038	fe 44 24 18	 inc	 BYTE PTR _bCount$[esp+16]
$L179094:
  0003c	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+20]
  00040	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  00045	8b 44 24 10	 mov	 eax, DWORD PTR _it$[esp+20]
  00049	3b c5		 cmp	 eax, ebp
  0004b	75 e3		 jne	 SHORT $L265199
$L179095:

; 1529 : 	}
; 1530 : 
; 1531 : 	BYTE bMaxCount = pBall->m_bCamp == CAMP_DEFEND ? m_bDefBallMax : m_bAtkBallMax;

  0004d	8a 46 08	 mov	 al, BYTE PTR [esi+8]
  00050	3c 01		 cmp	 al, 1
  00052	75 08		 jne	 SHORT $L265057
  00054	8a 8f 94 00 00
	00		 mov	 cl, BYTE PTR [edi+148]
  0005a	eb 06		 jmp	 SHORT $L265058
$L265057:
  0005c	8a 8f 95 00 00
	00		 mov	 cl, BYTE PTR [edi+149]
$L265058:

; 1532 : 	if(bCount < bMaxCount)

  00062	38 4c 24 18	 cmp	 BYTE PTR _bCount$[esp+16], cl
  00066	73 64		 jae	 SHORT $L179098

; 1533 : 	{
; 1534 : 		WORD wID = pBall->m_wID;

  00068	33 c9		 xor	 ecx, ecx
  0006a	66 8b 4e 04	 mov	 cx, WORD PTR [esi+4]

; 1535 : 		LPTGODBALL pTemp = GenGodBall(pBall->m_bCamp, wID);

  0006e	8d 54 24 18	 lea	 edx, DWORD PTR _wID$179099[esp+16]
  00072	52		 push	 edx
  00073	50		 push	 eax
  00074	89 4c 24 20	 mov	 DWORD PTR _wID$179099[esp+24], ecx
  00078	8b cf		 mov	 ecx, edi
  0007a	e8 00 00 00 00	 call	 ?GenGodBall@CTMap@@QAEPAUtagGODBALL@@EAAG@Z ; CTMap::GenGodBall

; 1536 : 
; 1537 : 		if(pTemp)

  0007f	33 db		 xor	 ebx, ebx
  00081	3b c3		 cmp	 eax, ebx
  00083	74 47		 je	 SHORT $L179098

; 1538 : 		{
; 1539 : 			pBall->m_wID = wID;

  00085	66 8b 4c 24 18	 mov	 cx, WORD PTR _wID$179099[esp+16]
  0008a	66 89 4e 04	 mov	 WORD PTR [esi+4], cx

; 1540 : 			pBall->m_fPosX = pTemp->m_fPosX;

  0008e	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00091	89 56 14	 mov	 DWORD PTR [esi+20], edx

; 1541 : 			pBall->m_fPosY = pTemp->m_fPosY;

  00094	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00097	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 1542 : 			pBall->m_fPosZ = pTemp->m_fPosZ;

  0009a	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0009d	89 56 1c	 mov	 DWORD PTR [esi+28], edx

; 1543 : 			pBall->m_wTempID = pTemp->m_wID;

  000a0	66 8b 40 04	 mov	 ax, WORD PTR [eax+4]

; 1544 : 			pBall->m_strOwner = NAME_NULL;

  000a4	53		 push	 ebx
  000a5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000aa	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  000ad	66 89 46 32	 mov	 WORD PTR [esi+50], ax
  000b1	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 1545 : 			pBall->m_dlTime = 0;
; 1546 : 			EnterMAP(pBall);

  000b6	56		 push	 esi
  000b7	8b cf		 mov	 ecx, edi
  000b9	89 5e 28	 mov	 DWORD PTR [esi+40], ebx
  000bc	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  000bf	e8 00 00 00 00	 call	 ?EnterMAP@CTMap@@QAEEPAUtagGODBALL@@@Z ; CTMap::EnterMAP
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5d		 pop	 ebp
  000c7	5b		 pop	 ebx

; 1553 : }

  000c8	59		 pop	 ecx
  000c9	c2 04 00	 ret	 4
$L179098:

; 1547 : 		}
; 1548 : 		else
; 1549 : 			delete pBall;
; 1550 : 	}
; 1551 : 	else
; 1552 : 		delete pBall;

  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ??1tagGODBALL@@QAE@XZ
  000d3	56		 push	 esi
  000d4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d9	83 c4 04	 add	 esp, 4
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5d		 pop	 ebp
  000df	5b		 pop	 ebx

; 1553 : }

  000e0	59		 pop	 ecx
  000e1	c2 04 00	 ret	 4
?MoveGodBall@CTMap@@QAEXPAUtagGODBALL@@@Z ENDP		; CTMap::MoveGodBall
_TEXT	ENDS
PUBLIC	?StartWar@CTMap@@QAEXGEKGKGK@Z			; CTMap::StartWar
; Function compile flags: /Ogty
;	COMDAT ?StartWar@CTMap@@QAEXGEKGKGK@Z
_TEXT	SEGMENT
_wCastle$ = 8						; size = 2
_bDefCountry$ = 12					; size = 1
_dwDefGuild$ = 16					; size = 4
_wDefPoint$ = 20					; size = 2
_dwAtkGuild$ = 24					; size = 4
_wAtkPoint$ = 28					; size = 2
_dwEndTick$ = 32					; size = 4
?StartWar@CTMap@@QAEXGEKGKGK@Z PROC NEAR		; CTMap::StartWar, COMDAT
; _this$ = ecx

; 1685 : 	WORD wBonus = GetLocalBonus(bDefCountry, wDefPoint, wAtkPoint);

  00000	8a 44 24 08	 mov	 al, BYTE PTR _bDefCountry$[esp-4]
  00004	53		 push	 ebx
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	33 db		 xor	 ebx, ebx
  00009	3a c3		 cmp	 al, bl
  0000b	57		 push	 edi
  0000c	8b f1		 mov	 esi, ecx
  0000e	75 0a		 jne	 SHORT $L265207
  00010	8b 44 24 20	 mov	 eax, DWORD PTR _wDefPoint$[esp+12]
  00014	8b 4c 24 28	 mov	 ecx, DWORD PTR _wAtkPoint$[esp+12]
  00018	eb 08		 jmp	 SHORT $L265208
$L265207:
  0001a	8b 44 24 28	 mov	 eax, DWORD PTR _wAtkPoint$[esp+12]
  0001e	8b 4c 24 20	 mov	 ecx, DWORD PTR _wDefPoint$[esp+12]
$L265208:
  00022	0f b7 d1	 movzx	 edx, cx
  00025	0f b7 f8	 movzx	 edi, ax
  00028	03 d7		 add	 edx, edi
  0002a	75 07		 jne	 SHORT $L265209
  0002c	b9 20 03 00 00	 mov	 ecx, 800		; 00000320H
  00031	8b c1		 mov	 eax, ecx
$L265209:
  00033	0f b7 c0	 movzx	 eax, ax
  00036	0f b7 c9	 movzx	 ecx, cx
  00039	03 c8		 add	 ecx, eax
  0003b	69 c0 20 03 00
	00		 imul	 eax, 800		; 00000320H
  00041	33 d2		 xor	 edx, edx
  00043	f7 f1		 div	 ecx
  00045	8b 7c 24 14	 mov	 edi, DWORD PTR _wCastle$[esp+12]

; 1686 : 	m_dwDefPower = DEFAULT_WARPOWER + wBonus;
; 1687 : 	m_dwAtkPower = DEFAULT_WARPOWER + TLOCALBONUS_POINT - wBonus;

  00049	b9 28 0a 00 00	 mov	 ecx, 2600		; 00000a28H

; 1688 : 	m_wDefKillPoint = 0;

  0004e	66 89 9e a2 00
	00 00		 mov	 WORD PTR [esi+162], bx

; 1689 : 	m_wAtkKillPoint = 0;

  00055	66 89 9e a4 00
	00 00		 mov	 WORD PTR [esi+164], bx

; 1690 : 	m_dwBlueHideTick = 0;

  0005c	89 9e a8 00 00
	00		 mov	 DWORD PTR [esi+168], ebx

; 1691 : 	m_dwRedHideTick = 0;

  00062	89 9e ac 00 00
	00		 mov	 DWORD PTR [esi+172], ebx
  00068	8b 5c 24 1c	 mov	 ebx, DWORD PTR _dwDefGuild$[esp+12]

; 1692 : 
; 1693 : 	m_dwEndTick = dwEndTick;
; 1694 : 
; 1695 : 	BYTE bInitBall = 2;
; 1696 : 	m_bDefBallMax = m_bAtkBallMax = bInitBall;

  0006c	c6 86 95 00 00
	00 02		 mov	 BYTE PTR [esi+149], 2
  00073	c6 86 94 00 00
	00 02		 mov	 BYTE PTR [esi+148], 2
  0007a	bd 02 00 00 00	 mov	 ebp, 2
  0007f	0f b7 c0	 movzx	 eax, ax
  00082	8d 90 08 07 00
	00		 lea	 edx, DWORD PTR [eax+1800]
  00088	89 96 98 00 00
	00		 mov	 DWORD PTR [esi+152], edx
  0008e	8b 54 24 2c	 mov	 edx, DWORD PTR _dwEndTick$[esp+12]
  00092	2b c8		 sub	 ecx, eax
  00094	89 8e 9c 00 00
	00		 mov	 DWORD PTR [esi+156], ecx
  0009a	89 96 b0 00 00
	00		 mov	 DWORD PTR [esi+176], edx
$L179265:

; 1697 : 	for(BYTE i=0; i<bInitBall; i++)
; 1698 : 		InitGodBall(CAMP_DEFEND, dwDefGuild, wCastle);

  000a0	57		 push	 edi
  000a1	53		 push	 ebx
  000a2	6a 01		 push	 1
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ?InitGodBall@CTMap@@QAEXEKG@Z ; CTMap::InitGodBall
  000ab	4d		 dec	 ebp
  000ac	75 f2		 jne	 SHORT $L179265

; 1699 : 
; 1700 : 	for(i=0; i<bInitBall; i++)

  000ae	8b 5c 24 24	 mov	 ebx, DWORD PTR _dwAtkGuild$[esp+12]
  000b2	bd 02 00 00 00	 mov	 ebp, 2
$L179268:

; 1701 : 		InitGodBall(CAMP_ATTACK, dwAtkGuild, wCastle);

  000b7	57		 push	 edi
  000b8	53		 push	 ebx
  000b9	6a 02		 push	 2
  000bb	8b ce		 mov	 ecx, esi
  000bd	e8 00 00 00 00	 call	 ?InitGodBall@CTMap@@QAEXEKG@Z ; CTMap::InitGodBall
  000c2	4d		 dec	 ebp
  000c3	75 f2		 jne	 SHORT $L179268
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5d		 pop	 ebp
  000c8	5b		 pop	 ebx

; 1702 : }

  000c9	c2 1c 00	 ret	 28			; 0000001cH
?StartWar@CTMap@@QAEXGEKGKGK@Z ENDP			; CTMap::StartWar
_TEXT	ENDS
PUBLIC	?EndWar@CTMap@@QAEXXZ				; CTMap::EndWar
EXTRN	?RemoveGodBall@CTPlayer@@QAEXPAUtagGODBALL@@@Z:NEAR ; CTPlayer::RemoveGodBall
; Function compile flags: /Ogty
;	COMDAT ?EndWar@CTMap@@QAEXXZ
_TEXT	SEGMENT
_itTemp$265376 = -8					; size = 4
_it$ = -8						; size = 4
_this$ = -4						; size = 4
?EndWar@CTMap@@QAEXXZ PROC NEAR				; CTMap::EndWar, COMDAT
; _this$ = ecx

; 1705 : {

  00000	83 ec 08	 sub	 esp, 8

; 1706 : 	m_bDefBallMax = 0;
; 1707 : 	m_bAtkBallMax = 0;
; 1708 : 	m_dwDefPower = 0;

  00003	33 c0		 xor	 eax, eax
  00005	53		 push	 ebx
  00006	55		 push	 ebp
  00007	8b e9		 mov	 ebp, ecx

; 1709 : 	m_dwAtkPower = 0;
; 1710 : 	m_wDefKillPoint = 0;
; 1711 : 	m_wAtkKillPoint = 0;
; 1712 : 	m_dwBlueHideTick = 0;
; 1713 : 	m_dwRedHideTick = 0;
; 1714 : 
; 1715 : 	m_dwEndTick = 0;
; 1716 : 	
; 1717 : 	ResetTempGodBall();

  00009	8b 4d 5c	 mov	 ecx, DWORD PTR [ebp+92]
  0000c	c6 85 94 00 00
	00 00		 mov	 BYTE PTR [ebp+148], 0
  00013	c6 85 95 00 00
	00 00		 mov	 BYTE PTR [ebp+149], 0
  0001a	89 85 98 00 00
	00		 mov	 DWORD PTR [ebp+152], eax
  00020	89 85 9c 00 00
	00		 mov	 DWORD PTR [ebp+156], eax
  00026	66 89 85 a2 00
	00 00		 mov	 WORD PTR [ebp+162], ax
  0002d	66 89 85 a4 00
	00 00		 mov	 WORD PTR [ebp+164], ax
  00034	89 85 a8 00 00
	00		 mov	 DWORD PTR [ebp+168], eax
  0003a	89 85 ac 00 00
	00		 mov	 DWORD PTR [ebp+172], eax
  00040	89 85 b0 00 00
	00		 mov	 DWORD PTR [ebp+176], eax
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
  00048	3b c1		 cmp	 eax, ecx
  0004a	56		 push	 esi
  0004b	57		 push	 edi
  0004c	89 6c 24 14	 mov	 DWORD PTR _this$[esp+24], ebp
  00050	89 44 24 10	 mov	 DWORD PTR _itTemp$265376[esp+24], eax
  00054	74 22		 je	 SHORT $L265379
  00056	b3 01		 mov	 bl, 1
  00058	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L265357:
  00060	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00063	8d 4c 24 10	 lea	 ecx, DWORD PTR _itTemp$265376[esp+24]
  00067	88 58 30	 mov	 BYTE PTR [eax+48], bl
  0006a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::const_iterator::_Inc
  0006f	8b 44 24 10	 mov	 eax, DWORD PTR _itTemp$265376[esp+24]
  00073	3b 45 5c	 cmp	 eax, DWORD PTR [ebp+92]
  00076	75 e8		 jne	 SHORT $L265357
$L265379:

; 1718 : 
; 1719 : 	MAPTGODTOWER::iterator it;
; 1720 : 	for(it=m_mapTGODTOWER.begin(); it!=m_mapTGODTOWER.end(); it++)

  00078	8b 45 68	 mov	 eax, DWORD PTR [ebp+104]
  0007b	8b 38		 mov	 edi, DWORD PTR [eax]
  0007d	3b f8		 cmp	 edi, eax
  0007f	89 7c 24 10	 mov	 DWORD PTR _it$[esp+24], edi
  00083	74 36		 je	 SHORT $L179280
$L265426:

; 1721 : 		if((*it).second->m_pGodBall)

  00085	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00088	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0008b	85 f6		 test	 esi, esi
  0008d	74 1a		 je	 SHORT $L179279

; 1722 : 		{
; 1723 : 			delete (*it).second->m_pGodBall;

  0008f	8b ce		 mov	 ecx, esi
  00091	e8 00 00 00 00	 call	 ??1tagGODBALL@@QAE@XZ
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1724 : 			(*it).second->m_pGodBall = NULL;

  0009c	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0009f	83 c4 04	 add	 esp, 4
  000a2	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
$L179279:
  000a9	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+24]
  000ad	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::const_iterator::_Inc
  000b2	8b 7c 24 10	 mov	 edi, DWORD PTR _it$[esp+24]
  000b6	3b 7d 68	 cmp	 edi, DWORD PTR [ebp+104]
  000b9	75 ca		 jne	 SHORT $L265426
$L179280:

; 1725 : 		}
; 1726 : 
; 1727 : 	MAPTGODBALL::iterator itGB;
; 1728 : 	for(itGB=m_mapTGODBALL.begin(); itGB!=m_mapTGODBALL.end(); itGB++)

  000bb	8b 45 74	 mov	 eax, DWORD PTR [ebp+116]
  000be	8b 30		 mov	 esi, DWORD PTR [eax]
  000c0	3b f0		 cmp	 esi, eax
  000c2	74 74		 je	 SHORT $L179290
$L265694:

; 1729 : 	{
; 1730 : 		LeaveMAP((*itGB).second, FALSE);

  000c4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000c7	6a 00		 push	 0
  000c9	50		 push	 eax
  000ca	8b cd		 mov	 ecx, ebp
  000cc	e8 00 00 00 00	 call	 ?LeaveMAP@CTMap@@QAEXPAUtagGODBALL@@E@Z ; CTMap::LeaveMAP

; 1731 : 		delete (*itGB).second;

  000d1	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  000d4	85 ff		 test	 edi, edi
  000d6	74 10		 je	 SHORT $L179289
  000d8	8b cf		 mov	 ecx, edi
  000da	e8 00 00 00 00	 call	 ??1tagGODBALL@@QAE@XZ
  000df	57		 push	 edi
  000e0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e5	83 c4 04	 add	 esp, 4
$L179289:
  000e8	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000eb	84 c0		 test	 al, al
  000ed	75 44		 jne	 SHORT $L265728
  000ef	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000f2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000f5	84 c9		 test	 cl, cl
  000f7	75 18		 jne	 SHORT $L266455
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 06		 mov	 eax, DWORD PTR [esi]
  000fd	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00100	84 c9		 test	 cl, cl
  00102	75 2f		 jne	 SHORT $L265728

; 1725 : 		}
; 1726 : 
; 1727 : 	MAPTGODBALL::iterator itGB;
; 1728 : 	for(itGB=m_mapTGODBALL.begin(); itGB!=m_mapTGODBALL.end(); itGB++)

$L265709:
  00104	8b f0		 mov	 esi, eax
  00106	8b 06		 mov	 eax, DWORD PTR [esi]
  00108	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0010b	84 c9		 test	 cl, cl
  0010d	74 f5		 je	 SHORT $L265709
  0010f	eb 22		 jmp	 SHORT $L265728
$L266455:
  00111	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00114	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00117	84 c9		 test	 cl, cl
  00119	75 16		 jne	 SHORT $L265731
  0011b	eb 03 8d 49 00	 npad	 5
$L265730:
  00120	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00123	75 0c		 jne	 SHORT $L265731
  00125	8b f0		 mov	 esi, eax
  00127	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0012a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0012d	84 c9		 test	 cl, cl
  0012f	74 ef		 je	 SHORT $L265730
$L265731:
  00131	8b f0		 mov	 esi, eax
$L265728:
  00133	3b 75 74	 cmp	 esi, DWORD PTR [ebp+116]
  00136	75 8c		 jne	 SHORT $L265694
$L179290:

; 1732 : 	}
; 1733 : 	m_mapTGODBALL.clear();

  00138	8b 4d 74	 mov	 ecx, DWORD PTR [ebp+116]
  0013b	8d 75 70	 lea	 esi, DWORD PTR [ebp+112]
  0013e	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  00141	8a 45 15	 mov	 al, BYTE PTR [ebp+21]
  00144	84 c0		 test	 al, al
  00146	8b fd		 mov	 edi, ebp
  00148	75 25		 jne	 SHORT $L265863
  0014a	8d 9b 00 00 00
	00		 npad	 6
$L265861:
  00150	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00153	52		 push	 edx
  00154	8b ce		 mov	 ecx, esi
  00156	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Erase
  0015b	8b 3f		 mov	 edi, DWORD PTR [edi]
  0015d	55		 push	 ebp
  0015e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00163	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00166	83 c4 04	 add	 esp, 4
  00169	84 c0		 test	 al, al
  0016b	8b ef		 mov	 ebp, edi
  0016d	74 e1		 je	 SHORT $L265861
$L265863:
  0016f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 1734 : 
; 1735 : 	MAPTCELL::iterator itCell;
; 1736 : 	for(itCell=m_mapTCELL.begin(); itCell!=m_mapTCELL.end(); itCell++)

  00172	8b 6c 24 14	 mov	 ebp, DWORD PTR _this$[esp+24]
  00176	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00179	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0017c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00183	89 00		 mov	 DWORD PTR [eax], eax
  00185	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00188	89 76 08	 mov	 DWORD PTR [esi+8], esi
  0018b	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  0018e	8b 38		 mov	 edi, DWORD PTR [eax]
  00190	3b f8		 cmp	 edi, eax
  00192	0f 84 d4 00 00
	00		 je	 $L179299
$L266075:

; 1737 : 	{
; 1738 : 		CTCell * pCell = (*itCell).second;

  00198	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]

; 1739 : 		MAPPLAYER::iterator itChar;
; 1740 : 		for(itChar=pCell->m_mapPLAYER.begin(); itChar != pCell->m_mapPLAYER.end(); itChar++)

  0019b	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0019e	8b 30		 mov	 esi, DWORD PTR [eax]
  001a0	3b f0		 cmp	 esi, eax
  001a2	74 6b		 je	 SHORT $L179298
$L266475:

; 1741 : 		{
; 1742 : 			if((*itChar).second->m_bMain && (*itChar).second->m_wGodBall)

  001a4	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  001a7	8a 81 a8 04 01
	00		 mov	 al, BYTE PTR [ecx+66728]
  001ad	84 c0		 test	 al, al
  001af	74 11		 je	 SHORT $L179306
  001b1	66 83 b9 60 04
	01 00 00	 cmp	 WORD PTR [ecx+66656], 0
  001b9	74 07		 je	 SHORT $L179306

; 1743 : 				(*itChar).second->RemoveGodBall();

  001bb	6a 00		 push	 0
  001bd	e8 00 00 00 00	 call	 ?RemoveGodBall@CTPlayer@@QAEXPAUtagGODBALL@@@Z ; CTPlayer::RemoveGodBall
$L179306:
  001c2	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  001c5	84 c0		 test	 al, al
  001c7	75 41		 jne	 SHORT $L266343
  001c9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001cc	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001cf	84 c9		 test	 cl, cl
  001d1	75 1a		 jne	 SHORT $L266460
  001d3	8b f0		 mov	 esi, eax
  001d5	8b 06		 mov	 eax, DWORD PTR [esi]
  001d7	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001da	84 c9		 test	 cl, cl
  001dc	75 2c		 jne	 SHORT $L266343
  001de	8b ff		 npad	 2

; 1739 : 		MAPPLAYER::iterator itChar;
; 1740 : 		for(itChar=pCell->m_mapPLAYER.begin(); itChar != pCell->m_mapPLAYER.end(); itChar++)

$L266357:
  001e0	8b f0		 mov	 esi, eax
  001e2	8b 06		 mov	 eax, DWORD PTR [esi]
  001e4	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001e7	84 c9		 test	 cl, cl
  001e9	74 f5		 je	 SHORT $L266357
  001eb	eb 1d		 jmp	 SHORT $L266343
$L266460:
  001ed	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001f0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001f3	84 c9		 test	 cl, cl
  001f5	75 11		 jne	 SHORT $L266346
$L266345:
  001f7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001fa	75 0c		 jne	 SHORT $L266346
  001fc	8b f0		 mov	 esi, eax
  001fe	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00201	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00204	84 c9		 test	 cl, cl
  00206	74 ef		 je	 SHORT $L266345
$L266346:
  00208	8b f0		 mov	 esi, eax
$L266343:
  0020a	3b 73 2c	 cmp	 esi, DWORD PTR [ebx+44]
  0020d	75 95		 jne	 SHORT $L266475
$L179298:

; 1734 : 
; 1735 : 	MAPTCELL::iterator itCell;
; 1736 : 	for(itCell=m_mapTCELL.begin(); itCell!=m_mapTCELL.end(); itCell++)

  0020f	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00212	84 c0		 test	 al, al
  00214	75 4d		 jne	 SHORT $L266085
  00216	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00219	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0021c	84 c0		 test	 al, al
  0021e	75 1f		 jne	 SHORT $L266462
  00220	8b 01		 mov	 eax, DWORD PTR [ecx]
  00222	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00225	84 d2		 test	 dl, dl
  00227	75 12		 jne	 SHORT $L266107
  00229	8d a4 24 00 00
	00 00		 npad	 7
$L266106:
  00230	8b c8		 mov	 ecx, eax
  00232	8b 01		 mov	 eax, DWORD PTR [ecx]
  00234	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00237	84 d2		 test	 dl, dl
  00239	74 f5		 je	 SHORT $L266106
$L266107:
  0023b	8b f9		 mov	 edi, ecx
  0023d	eb 24		 jmp	 SHORT $L266085
$L266462:
  0023f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00242	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00245	84 c9		 test	 cl, cl
  00247	75 18		 jne	 SHORT $L266088
  00249	8d a4 24 00 00
	00 00		 npad	 7
$L266087:
  00250	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00253	75 0c		 jne	 SHORT $L266088
  00255	8b f8		 mov	 edi, eax
  00257	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0025a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0025d	84 c9		 test	 cl, cl
  0025f	74 ef		 je	 SHORT $L266087
$L266088:
  00261	8b f8		 mov	 edi, eax
$L266085:
  00263	3b 7d 44	 cmp	 edi, DWORD PTR [ebp+68]
  00266	0f 85 2c ff ff
	ff		 jne	 $L266075
$L179299:
  0026c	5f		 pop	 edi
  0026d	5e		 pop	 esi
  0026e	5d		 pop	 ebp
  0026f	5b		 pop	 ebx

; 1744 : 		}
; 1745 : 	}
; 1746 : }

  00270	83 c4 08	 add	 esp, 8
  00273	c3		 ret	 0
?EndWar@CTMap@@QAEXXZ ENDP				; CTMap::EndWar
_TEXT	ENDS
PUBLIC	??0CTMap@@QAE@PAV0@E@Z				; CTMap::CTMap
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T274044 DD	0ffffffffH
	DD	FLAT:$L266532
	DD	00H
	DD	FLAT:$L266533
	DD	01H
	DD	FLAT:$L266534
	DD	02H
	DD	FLAT:$L266535
	DD	03H
	DD	FLAT:$L266536
	DD	04H
	DD	FLAT:$L266537
	DD	05H
	DD	FLAT:$L266538
	DD	06H
	DD	FLAT:$L266539
	DD	07H
	DD	FLAT:$L266540
	DD	08H
	DD	FLAT:$L266541
	DD	09H
	DD	FLAT:$L266542
	DD	0aH
	DD	FLAT:$L266543
	DD	0aH
	DD	FLAT:$L266544
	DD	0aH
	DD	FLAT:$L266545
	DD	0aH
	DD	FLAT:$L266546
$T273978 DD	019930520H
	DD	0fH
	DD	FLAT:$T274044
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmap.cpp
xdata$x	ENDS
;	COMDAT ??0CTMap@@QAE@PAV0@E@Z
_TEXT	SEGMENT
$T266518 = -68						; size = 4
$T266511 = -64						; size = 4
$T266502 = -60						; size = 4
tv2270 = -56						; size = 4
_pSwitch$176065 = -56					; size = 4
tv4906 = -52						; size = 4
tv3541 = -52						; size = 4
_itUNIT$ = -52						; size = 4
_finder$270487 = -48					; size = 4
tv785 = -48						; size = 4
_i$175979 = -48						; size = 4
$T266482 = -48						; size = 4
tv1991 = -44						; size = 4
$T271423 = -44						; size = 4
$T270811 = -44						; size = 4
$T270462 = -44						; size = 4
_pTGATE$176070 = -44					; size = 4
$T266492 = -44						; size = 4
_itSPAWN$ = -44						; size = 4
_finder$270809 = -40					; size = 4
_itGATE$176060 = -36					; size = 4
$T273519 = -32						; size = 8
$T270465 = -32						; size = 8
$T266528 = -32						; size = 8
_pTSWITCH$175977 = -32					; size = 4
$T266496 = -32						; size = 8
$T266488 = -32						; size = 8
$T273518 = -24						; size = 8
_finder$271421 = -24					; size = 4
$T270464 = -24						; size = 8
$T266527 = -24						; size = 8
$T266497 = -24						; size = 8
$T266493 = -24						; size = 4
$T266487 = -24						; size = 8
$T266483 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pTEMP$ = 8						; size = 4
_bCountryID$ = 12					; size = 1
??0CTMap@@QAE@PAV0@E@Z PROC NEAR			; CTMap::CTMap, COMDAT
; _this$ = ecx

; 46   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTMap@@QAE@PAV0@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 38	 sub	 esp, 56			; 00000038H
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	8b f1		 mov	 esi, ecx
  0001d	8d 6e 04	 lea	 ebp, DWORD PTR [esi+4]
  00020	57		 push	 edi
  00021	8b cd		 mov	 ecx, ebp
  00023	89 74 24 44	 mov	 DWORD PTR _this$[esp+84], esi
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTMap@@6B@
  0002d	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Buynode
  00032	89 45 04	 mov	 DWORD PTR [ebp+4], eax
  00035	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00039	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0003c	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0003f	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00042	89 00		 mov	 DWORD PTR [eax], eax
  00044	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00047	33 ff		 xor	 edi, edi
  00049	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0004c	89 7d 08	 mov	 DWORD PTR [ebp+8], edi
  0004f	8d 5e 10	 lea	 ebx, DWORD PTR [esi+16]
  00052	8b cb		 mov	 ecx, ebx
  00054	89 7c 24 50	 mov	 DWORD PTR __$EHRec$[esp+92], edi
  00058	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Buynode
  0005d	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00060	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00064	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00067	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0006a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0006d	89 00		 mov	 DWORD PTR [eax], eax
  0006f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00072	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00075	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00078	8d 5e 1c	 lea	 ebx, DWORD PTR [esi+28]
  0007b	8b cb		 mov	 ecx, ebx
  0007d	c6 44 24 50 01	 mov	 BYTE PTR __$EHRec$[esp+92], 1
  00082	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Buynode
  00087	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0008a	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0008e	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00091	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00094	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00097	89 00		 mov	 DWORD PTR [eax], eax
  00099	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0009c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0009f	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  000a2	8d 7e 28	 lea	 edi, DWORD PTR [esi+40]
  000a5	8b cf		 mov	 ecx, edi
  000a7	c6 44 24 50 02	 mov	 BYTE PTR __$EHRec$[esp+92], 2
  000ac	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::_Buynode
  000b1	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000b4	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000be	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c1	89 00		 mov	 DWORD PTR [eax], eax
  000c3	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c6	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000c9	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  000d0	8d 7e 34	 lea	 edi, DWORD PTR [esi+52]
  000d3	8b cf		 mov	 ecx, edi
  000d5	c6 44 24 50 03	 mov	 BYTE PTR __$EHRec$[esp+92], 3
  000da	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::_Buynode
  000df	89 47 04	 mov	 DWORD PTR [edi+4], eax
  000e2	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000e6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000e9	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000ec	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ef	89 00		 mov	 DWORD PTR [eax], eax
  000f1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000f4	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000f7	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  000fe	8d 7e 40	 lea	 edi, DWORD PTR [esi+64]
  00101	8b cf		 mov	 ecx, edi
  00103	c6 44 24 50 04	 mov	 BYTE PTR __$EHRec$[esp+92], 4
  00108	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Buynode
  0010d	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00110	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  00114	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00117	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0011a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0011d	89 00		 mov	 DWORD PTR [eax], eax
  0011f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00122	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00125	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0012c	8d 7e 4c	 lea	 edi, DWORD PTR [esi+76]
  0012f	8b cf		 mov	 ecx, edi
  00131	c6 44 24 50 05	 mov	 BYTE PTR __$EHRec$[esp+92], 5
  00136	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
  0013b	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0013e	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1
  00142	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00145	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00148	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0014b	89 00		 mov	 DWORD PTR [eax], eax
  0014d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00150	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00153	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0015a	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  0015d	c6 44 24 50 06	 mov	 BYTE PTR __$EHRec$[esp+92], 6
  00162	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  00167	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  0016a	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0016e	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00171	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00174	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  00177	89 00		 mov	 DWORD PTR [eax], eax
  00179	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0017c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0017f	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
  00186	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00189	c6 44 24 50 07	 mov	 BYTE PTR __$EHRec$[esp+92], 7
  0018e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::_Buynode
  00193	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00196	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0019a	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  0019d	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001a0	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  001a3	89 00		 mov	 DWORD PTR [eax], eax
  001a5	8b 46 68	 mov	 eax, DWORD PTR [esi+104]
  001a8	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001ab	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
  001b2	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  001b5	c6 44 24 50 08	 mov	 BYTE PTR __$EHRec$[esp+92], 8
  001ba	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::_Buynode
  001bf	89 46 74	 mov	 DWORD PTR [esi+116], eax
  001c2	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  001c6	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001c9	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001cc	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001cf	89 00		 mov	 DWORD PTR [eax], eax
  001d1	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  001d4	89 40 08	 mov	 DWORD PTR [eax+8], eax
  001d7	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0
  001de	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  001e1	c6 44 24 50 09	 mov	 BYTE PTR __$EHRec$[esp+92], 9
  001e6	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Buynode
  001eb	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  001f1	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  001f5	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  001fb	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001fe	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  00204	89 00		 mov	 DWORD PTR [eax], eax
  00206	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  0020c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0020f	33 c0		 xor	 eax, eax
  00211	89 86 84 00 00
	00		 mov	 DWORD PTR [esi+132], eax
  00217	c6 44 24 50 0a	 mov	 BYTE PTR __$EHRec$[esp+92], 10 ; 0000000aH

; 47   : 	m_bDefBallMax = 0;

  0021c	88 86 94 00 00
	00		 mov	 BYTE PTR [esi+148], al

; 48   : 	m_bAtkBallMax = 0;

  00222	88 86 95 00 00
	00		 mov	 BYTE PTR [esi+149], al

; 49   : 	m_bBlueTeam = TOURNAMENT_SLOT;

  00228	c6 86 a0 00 00
	00 08		 mov	 BYTE PTR [esi+160], 8

; 50   : 	m_bRedTeam = TOURNAMENT_SLOT;

  0022f	c6 86 a1 00 00
	00 08		 mov	 BYTE PTR [esi+161], 8

; 51   : 
; 52   : 	m_pCastle = NULL;

  00236	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax

; 53   : 	m_dwDefPower = 0;

  0023c	89 86 98 00 00
	00		 mov	 DWORD PTR [esi+152], eax

; 54   : 	m_dwAtkPower = 0;

  00242	89 86 9c 00 00
	00		 mov	 DWORD PTR [esi+156], eax

; 55   : 	m_wDefKillPoint = 0;

  00248	66 89 86 a2 00
	00 00		 mov	 WORD PTR [esi+162], ax

; 56   : 	m_wAtkKillPoint = 0;

  0024f	66 89 86 a4 00
	00 00		 mov	 WORD PTR [esi+164], ax

; 57   : 	m_dwBlueHideTick = 0;

  00256	89 86 a8 00 00
	00		 mov	 DWORD PTR [esi+168], eax

; 58   : 	m_dwRedHideTick = 0;

  0025c	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax

; 59   : 
; 60   : 	m_dwEndTick = 0;

  00262	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax

; 61   : 
; 62   : 	m_mapTMONSPAWN.clear();

  00268	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0026b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0026e	51		 push	 ecx
  0026f	8b cd		 mov	 ecx, ebp
  00271	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::_Erase
  00276	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00279	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0027c	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  0027f	c7 45 08 00 00
	00 00		 mov	 DWORD PTR [ebp+8], 0
  00286	89 00		 mov	 DWORD PTR [eax], eax
  00288	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]
  0028b	89 6d 08	 mov	 DWORD PTR [ebp+8], ebp

; 63   : 	m_mapTMONSTER.clear();

  0028e	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00291	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00294	50		 push	 eax
  00295	8b cb		 mov	 ecx, ebx
  00297	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::_Erase
  0029c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0029f	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002a2	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002a5	33 ed		 xor	 ebp, ebp
  002a7	89 6b 08	 mov	 DWORD PTR [ebx+8], ebp
  002aa	89 00		 mov	 DWORD PTR [eax], eax
  002ac	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  002af	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx

; 64   : 	m_mapTSPAWNPOS.clear();

  002b2	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  002b5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002b8	8d 5e 10	 lea	 ebx, DWORD PTR [esi+16]
  002bb	52		 push	 edx
  002bc	8b cb		 mov	 ecx, ebx
  002be	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::_Erase
  002c3	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002c6	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002c9	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002cc	89 6b 08	 mov	 DWORD PTR [ebx+8], ebp
  002cf	89 00		 mov	 DWORD PTR [eax], eax
  002d1	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  002d4	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx

; 65   : 	m_mapTNMTPlayer.clear();

  002d7	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  002dd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002e0	8d 5e 7c	 lea	 ebx, DWORD PTR [esi+124]
  002e3	51		 push	 ecx
  002e4	8b cb		 mov	 ecx, ebx
  002e6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTOURNAMENTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTOURNAMENTPLAYER *> >,0> >::_Erase
  002eb	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002ee	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002f1	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002f4	89 6b 08	 mov	 DWORD PTR [ebx+8], ebp
  002f7	89 00		 mov	 DWORD PTR [eax], eax
  002f9	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  002fc	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx

; 66   : 
; 67   : 	m_mapTUNIT.clear();

  002ff	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00302	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00305	50		 push	 eax
  00306	8b cf		 mov	 ecx, edi
  00308	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Erase
  0030d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00310	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00313	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00316	89 6f 08	 mov	 DWORD PTR [edi+8], ebp
  00319	89 00		 mov	 DWORD PTR [eax], eax
  0031b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0031e	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 68   : 	m_mapTCELL.clear();

  00321	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00324	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00327	8d 5e 40	 lea	 ebx, DWORD PTR [esi+64]
  0032a	52		 push	 edx
  0032b	8b cb		 mov	 ecx, ebx
  0032d	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::_Erase
  00332	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00335	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00338	89 6b 08	 mov	 DWORD PTR [ebx+8], ebp
  0033b	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0033e	89 00		 mov	 DWORD PTR [eax], eax
  00340	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]

; 69   : 	m_wPartyID = 0;
; 70   : 
; 71   : 	m_bServerID = pTEMP->m_bServerID;

  00343	8b 44 24 58	 mov	 eax, DWORD PTR _pTEMP$[esp+80]
  00347	89 5b 08	 mov	 DWORD PTR [ebx+8], ebx
  0034a	66 89 ae 88 00
	00 00		 mov	 WORD PTR [esi+136], bp
  00351	8a 88 8c 00 00
	00		 mov	 cl, BYTE PTR [eax+140]
  00357	88 8e 8c 00 00
	00		 mov	 BYTE PTR [esi+140], cl

; 72   : 	m_bChannel = pTEMP->m_bChannel;

  0035d	8a 90 8d 00 00
	00		 mov	 dl, BYTE PTR [eax+141]
  00363	88 96 8d 00 00
	00		 mov	 BYTE PTR [esi+141], dl

; 73   : 	m_wMapID = pTEMP->m_wMapID;

  00369	66 8b 88 8a 00
	00 00		 mov	 cx, WORD PTR [eax+138]
  00370	66 89 8e 8a 00
	00 00		 mov	 WORD PTR [esi+138], cx

; 74   : 	m_bType = MAP_INDUN;

  00377	c6 86 8e 00 00
	00 02		 mov	 BYTE PTR [esi+142], 2

; 75   : 
; 76   : 	MAPTMONSPAWN::iterator itSPAWN;
; 77   : 	MAPTSPAWNPOS::iterator itPOS;
; 78   : 	MAPTSWITCH::iterator itSWITCH;
; 79   : 	MAPTCELL::iterator itCELL;
; 80   : 	MAPWORD::iterator itUNIT;
; 81   : 	MAPTGODTOWER::iterator itGT;
; 82   : 	MAPTGODBALL::iterator itGB;
; 83   : 
; 84   : 	for( itUNIT = pTEMP->m_mapTUNIT.begin(); itUNIT != pTEMP->m_mapTUNIT.end(); itUNIT++)

  0037e	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  00381	8b 08		 mov	 ecx, DWORD PTR [eax]
  00383	3b c8		 cmp	 ecx, eax
  00385	89 4c 24 20	 mov	 DWORD PTR _itUNIT$[esp+84], ecx
  00389	74 3c		 je	 SHORT $L274039
  0038b	8b 5c 24 58	 mov	 ebx, DWORD PTR _pTEMP$[esp+80]
  0038f	90		 npad	 1
$L269280:

; 85   : 		m_mapTUNIT.insert( MAPWORD::value_type( (*itUNIT).first, (*itUNIT).second));

  00390	66 8b 51 0c	 mov	 dx, WORD PTR [ecx+12]
  00394	66 8b 41 0e	 mov	 ax, WORD PTR [ecx+14]
  00398	8d 4c 24 24	 lea	 ecx, DWORD PTR $T266482[esp+84]
  0039c	66 89 54 24 24	 mov	 WORD PTR $T266482[esp+84], dx
  003a1	51		 push	 ecx
  003a2	8d 54 24 40	 lea	 edx, DWORD PTR $T266483[esp+88]
  003a6	52		 push	 edx
  003a7	8b cf		 mov	 ecx, edi
  003a9	66 89 44 24 2e	 mov	 WORD PTR $T266482[esp+94], ax
  003ae	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
  003b3	8d 4c 24 20	 lea	 ecx, DWORD PTR _itUNIT$[esp+84]
  003b7	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Inc
  003bc	8b 43 50	 mov	 eax, DWORD PTR [ebx+80]
  003bf	8b 4c 24 20	 mov	 ecx, DWORD PTR _itUNIT$[esp+84]
  003c3	3b c8		 cmp	 ecx, eax
  003c5	75 c9		 jne	 SHORT $L269280
$L274039:

; 86   : 
; 87   : 	for( itPOS = pTEMP->m_mapTSPAWNPOS.begin(); itPOS != pTEMP->m_mapTSPAWNPOS.end(); itPOS++)

  003c7	8b 6c 24 58	 mov	 ebp, DWORD PTR _pTEMP$[esp+80]
  003cb	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  003ce	8b 38		 mov	 edi, DWORD PTR [eax]
  003d0	3b f8		 cmp	 edi, eax
  003d2	74 74		 je	 SHORT $L175841
$L269527:

; 88   : 		m_mapTSPAWNPOS.insert( MAPTSPAWNPOS::value_type( (*itPOS).first, (*itPOS).second));

  003d4	66 8b 47 0c	 mov	 ax, WORD PTR [edi+12]
  003d8	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  003db	8d 54 24 3c	 lea	 edx, DWORD PTR $T266487[esp+84]
  003df	66 89 44 24 3c	 mov	 WORD PTR $T266487[esp+84], ax
  003e4	52		 push	 edx
  003e5	8d 44 24 38	 lea	 eax, DWORD PTR $T266488[esp+88]
  003e9	89 4c 24 44	 mov	 DWORD PTR $T266487[esp+92], ecx
  003ed	50		 push	 eax
  003ee	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  003f1	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagTSPAWNPOS@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTSPAWNPOS *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTSPAWNPOS *> >,0> >::insert
  003f6	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  003f9	84 c0		 test	 al, al
  003fb	75 46		 jne	 SHORT $L269560
  003fd	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00400	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00403	84 c9		 test	 cl, cl
  00405	75 18		 jne	 SHORT $L273982
  00407	8b f8		 mov	 edi, eax
  00409	8b 07		 mov	 eax, DWORD PTR [edi]
  0040b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0040e	84 c9		 test	 cl, cl
  00410	75 31		 jne	 SHORT $L269560

; 86   : 
; 87   : 	for( itPOS = pTEMP->m_mapTSPAWNPOS.begin(); itPOS != pTEMP->m_mapTSPAWNPOS.end(); itPOS++)

$L269548:
  00412	8b f8		 mov	 edi, eax
  00414	8b 07		 mov	 eax, DWORD PTR [edi]
  00416	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00419	84 c9		 test	 cl, cl
  0041b	74 f5		 je	 SHORT $L269548
  0041d	eb 24		 jmp	 SHORT $L269560
$L273982:
  0041f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00422	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00425	84 c9		 test	 cl, cl
  00427	75 18		 jne	 SHORT $L269563
  00429	8d a4 24 00 00
	00 00		 npad	 7
$L269562:
  00430	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00433	75 0c		 jne	 SHORT $L269563
  00435	8b f8		 mov	 edi, eax
  00437	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0043a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0043d	84 c9		 test	 cl, cl
  0043f	74 ef		 je	 SHORT $L269562
$L269563:
  00441	8b f8		 mov	 edi, eax
$L269560:
  00443	3b 7d 14	 cmp	 edi, DWORD PTR [ebp+20]
  00446	75 8c		 jne	 SHORT $L269527
$L175841:

; 89   : 
; 90   : 	for( itCELL = pTEMP->m_mapTCELL.begin(); itCELL != pTEMP->m_mapTCELL.end(); itCELL++)

  00448	8b 45 44	 mov	 eax, DWORD PTR [ebp+68]
  0044b	8b 38		 mov	 edi, DWORD PTR [eax]
  0044d	3b f8		 cmp	 edi, eax
  0044f	0f 84 2d 01 00
	00		 je	 $L274034
$L274035:

; 91   : 	{
; 92   : 		CTCell *pTCELL = new CTCell();

  00455	68 7c 01 00 00	 push	 380			; 0000017cH
  0045a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0045f	83 c4 04	 add	 esp, 4
  00462	89 44 24 3c	 mov	 DWORD PTR $T266493[esp+84], eax
  00466	85 c0		 test	 eax, eax
  00468	c6 44 24 50 0b	 mov	 BYTE PTR __$EHRec$[esp+92], 11 ; 0000000bH
  0046d	74 09		 je	 SHORT $L266494
  0046f	8b c8		 mov	 ecx, eax
  00471	e8 00 00 00 00	 call	 ??0CTCell@@QAE@XZ	; CTCell::CTCell
  00476	eb 02		 jmp	 SHORT $L274043
$L266494:
  00478	33 c0		 xor	 eax, eax
$L274043:
  0047a	8d 90 3c 01 00
	00		 lea	 edx, DWORD PTR [eax+316]
  00480	89 44 24 28	 mov	 DWORD PTR $T266492[esp+84], eax
  00484	c6 44 24 50 0a	 mov	 BYTE PTR __$EHRec$[esp+92], 10 ; 0000000aH
  00489	33 ed		 xor	 ebp, ebp
  0048b	89 54 24 20	 mov	 DWORD PTR tv4906[esp+84], edx
  0048f	c7 44 24 1c 1e
	00 00 00	 mov	 DWORD PTR tv2270[esp+84], 30 ; 0000001eH
  00497	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$L274036:

; 93   : 
; 94   : 		for( BYTE i=0; i<MAX_CHANNEL; i++)
; 95   : 		{
; 96   : 			for( BYTE j=0; j<UD_COUNT; j++)

  004a0	33 c9		 xor	 ecx, ecx
  004a2	81 c2 10 ff ff
	ff		 add	 edx, -240		; ffffff10H
  004a8	c7 44 24 24 08
	00 00 00	 mov	 DWORD PTR tv785[esp+84], 8
$L175899:

; 97   : 				pTCELL->m_vServerID[j][i] = (*itCELL).second->m_vServerID[j][i];

  004b0	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  004b3	8d 04 29	 lea	 eax, DWORD PTR [ecx+ebp]
  004b6	8a 44 18 4c	 mov	 al, BYTE PTR [eax+ebx+76]
  004ba	88 02		 mov	 BYTE PTR [edx], al
  004bc	8b 44 24 24	 mov	 eax, DWORD PTR tv785[esp+84]
  004c0	83 c1 1e	 add	 ecx, 30			; 0000001eH
  004c3	83 c2 1e	 add	 edx, 30			; 0000001eH
  004c6	48		 dec	 eax
  004c7	89 44 24 24	 mov	 DWORD PTR tv785[esp+84], eax
  004cb	75 e3		 jne	 SHORT $L175899

; 98   : 
; 99   : 			pTCELL->m_vExtCell[i] = (*itCELL).second->m_vExtCell[i];

  004cd	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  004d0	8a 84 29 3c 01
	00 00		 mov	 al, BYTE PTR [ecx+ebp+316]
  004d7	8b 54 24 20	 mov	 edx, DWORD PTR tv4906[esp+84]
  004db	88 02		 mov	 BYTE PTR [edx], al

; 100  : 			pTCELL->m_vEnable[i] = (*itCELL).second->m_vEnable[i];

  004dd	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  004e0	8a 84 29 5a 01
	00 00		 mov	 al, BYTE PTR [ecx+ebp+346]
  004e7	88 42 1e	 mov	 BYTE PTR [edx+30], al
  004ea	8b 44 24 1c	 mov	 eax, DWORD PTR tv2270[esp+84]
  004ee	45		 inc	 ebp
  004ef	42		 inc	 edx
  004f0	48		 dec	 eax
  004f1	89 54 24 20	 mov	 DWORD PTR tv4906[esp+84], edx
  004f5	89 44 24 1c	 mov	 DWORD PTR tv2270[esp+84], eax
  004f9	75 a5		 jne	 SHORT $L274036

; 101  : 		}
; 102  : 		pTCELL->m_dwID = (*itCELL).second->m_dwID;

  004fb	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  004fe	8b 91 78 01 00
	00		 mov	 edx, DWORD PTR [ecx+376]
  00504	8b 44 24 28	 mov	 eax, DWORD PTR $T266492[esp+84]

; 103  : 
; 104  : 		m_mapTCELL.insert( MAPTCELL::value_type( pTCELL->m_dwID, pTCELL));

  00508	8b ca		 mov	 ecx, edx
  0050a	89 90 78 01 00
	00		 mov	 DWORD PTR [eax+376], edx
  00510	8d 54 24 34	 lea	 edx, DWORD PTR $T266496[esp+84]
  00514	89 44 24 38	 mov	 DWORD PTR $T266496[esp+88], eax
  00518	52		 push	 edx
  00519	8d 44 24 40	 lea	 eax, DWORD PTR $T266497[esp+88]
  0051d	89 4c 24 38	 mov	 DWORD PTR $T266496[esp+88], ecx
  00521	50		 push	 eax
  00522	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00525	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAVCTCell@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::insert
  0052a	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0052d	84 c0		 test	 al, al
  0052f	75 42		 jne	 SHORT $L269839
  00531	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00534	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00537	84 c9		 test	 cl, cl
  00539	75 18		 jne	 SHORT $L273987
  0053b	8b f8		 mov	 edi, eax
  0053d	8b 07		 mov	 eax, DWORD PTR [edi]
  0053f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00542	84 c9		 test	 cl, cl
  00544	75 2d		 jne	 SHORT $L269839

; 89   : 
; 90   : 	for( itCELL = pTEMP->m_mapTCELL.begin(); itCELL != pTEMP->m_mapTCELL.end(); itCELL++)

$L269827:
  00546	8b f8		 mov	 edi, eax
  00548	8b 07		 mov	 eax, DWORD PTR [edi]
  0054a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0054d	84 c9		 test	 cl, cl
  0054f	74 f5		 je	 SHORT $L269827
  00551	eb 20		 jmp	 SHORT $L269839
$L273987:
  00553	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00556	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00559	84 c9		 test	 cl, cl
  0055b	75 14		 jne	 SHORT $L269842
  0055d	8d 49 00	 npad	 3
$L269841:
  00560	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00563	75 0c		 jne	 SHORT $L269842
  00565	8b f8		 mov	 edi, eax
  00567	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0056a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0056d	84 c9		 test	 cl, cl
  0056f	74 ef		 je	 SHORT $L269841
$L269842:
  00571	8b f8		 mov	 edi, eax
$L269839:
  00573	8b 4c 24 58	 mov	 ecx, DWORD PTR _pTEMP$[esp+80]
  00577	3b 79 44	 cmp	 edi, DWORD PTR [ecx+68]
  0057a	0f 85 d5 fe ff
	ff		 jne	 $L274035
  00580	8b e9		 mov	 ebp, ecx
$L274034:

; 105  : 	}
; 106  : 
; 107  : 	for( itSWITCH = pTEMP->m_mapTSWITCH.begin(); itSWITCH != pTEMP->m_mapTSWITCH.end(); itSWITCH++)

  00582	8b 45 2c	 mov	 eax, DWORD PTR [ebp+44]
  00585	8b 18		 mov	 ebx, DWORD PTR [eax]
  00587	3b d8		 cmp	 ebx, eax
  00589	0f 84 34 01 00
	00		 je	 $L274037
  0058f	90		 npad	 1
$L270113:

; 108  : 	{
; 109  : 		LPTSWITCH pTSWITCH = new TSWITCH();

  00590	6a 30		 push	 48			; 00000030H
  00592	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00597	83 c4 04	 add	 esp, 4
  0059a	33 c9		 xor	 ecx, ecx
  0059c	3b c1		 cmp	 eax, ecx
  0059e	74 0d		 je	 SHORT $L266503
  005a0	89 48 24	 mov	 DWORD PTR [eax+36], ecx
  005a3	89 48 28	 mov	 DWORD PTR [eax+40], ecx
  005a6	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  005a9	8b f8		 mov	 edi, eax
  005ab	eb 02		 jmp	 SHORT $L266504
$L266503:
  005ad	33 ff		 xor	 edi, edi
$L266504:

; 110  : 
; 111  : 		pTSWITCH->m_bLockOnClose = (*itSWITCH).second->m_bLockOnClose;

  005af	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005b2	8a 42 13	 mov	 al, BYTE PTR [edx+19]
  005b5	88 47 13	 mov	 BYTE PTR [edi+19], al

; 112  : 		pTSWITCH->m_bLockOnOpen = (*itSWITCH).second->m_bLockOnOpen;

  005b8	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005bb	8a 42 12	 mov	 al, BYTE PTR [edx+18]
  005be	88 47 12	 mov	 BYTE PTR [edi+18], al

; 113  : 		pTSWITCH->m_dwSwitchID = (*itSWITCH).second->m_dwSwitchID;

  005c1	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005c4	8b 02		 mov	 eax, DWORD PTR [edx]
  005c6	89 07		 mov	 DWORD PTR [edi], eax

; 114  : 		pTSWITCH->m_dwDuration = (*itSWITCH).second->m_dwDuration;

  005c8	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005cb	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  005ce	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 115  : 		pTSWITCH->m_bOpened = (*itSWITCH).second->m_bOpened;

  005d1	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005d4	8a 42 1c	 mov	 al, BYTE PTR [edx+28]
  005d7	88 47 1c	 mov	 BYTE PTR [edi+28], al

; 116  : 		pTSWITCH->m_wPosX = (*itSWITCH).second->m_wPosX;

  005da	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005dd	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  005e1	66 89 47 0c	 mov	 WORD PTR [edi+12], ax

; 117  : 		pTSWITCH->m_wPosY = (*itSWITCH).second->m_wPosY;

  005e5	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005e8	66 8b 42 0e	 mov	 ax, WORD PTR [edx+14]
  005ec	66 89 47 0e	 mov	 WORD PTR [edi+14], ax

; 118  : 		pTSWITCH->m_wPosZ = (*itSWITCH).second->m_wPosZ;

  005f0	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  005f3	66 8b 42 10	 mov	 ax, WORD PTR [edx+16]
  005f7	66 89 47 10	 mov	 WORD PTR [edi+16], ax

; 119  : 
; 120  : 		pTSWITCH->m_wMapID = m_wMapID;

  005fb	66 8b 96 8a 00
	00 00		 mov	 dx, WORD PTR [esi+138]

; 121  : 		pTSWITCH->m_dwStartTime = 0;
; 122  : 
; 123  : 		EnterMAP(pTSWITCH);

  00602	66 8b 47 0c	 mov	 ax, WORD PTR [edi+12]
  00606	89 4f 18	 mov	 DWORD PTR [edi+24], ecx
  00609	66 8b 4f 10	 mov	 cx, WORD PTR [edi+16]
  0060d	66 c1 e9 06	 shr	 cx, 6
  00611	0f b7 c9	 movzx	 ecx, cx
  00614	66 c1 e8 06	 shr	 ax, 6
  00618	66 89 57 04	 mov	 WORD PTR [edi+4], dx
  0061c	0f b7 d0	 movzx	 edx, ax
  0061f	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00622	0b ca		 or	 ecx, edx
  00624	89 4c 24 28	 mov	 DWORD PTR $T270462[esp+84], ecx
  00628	8d 44 24 28	 lea	 eax, DWORD PTR $T270462[esp+84]
  0062c	50		 push	 eax
  0062d	8d 4c 24 28	 lea	 ecx, DWORD PTR _finder$270487[esp+88]
  00631	51		 push	 ecx
  00632	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00635	c6 44 24 58 0a	 mov	 BYTE PTR __$EHRec$[esp+100], 10 ; 0000000aH
  0063a	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTCell *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTCell *> >,0> >::find
  0063f	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00642	8b 4c 24 24	 mov	 ecx, DWORD PTR _finder$270487[esp+84]
  00646	3b c8		 cmp	 ecx, eax
  00648	74 09		 je	 SHORT $L270488
  0064a	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0064d	57		 push	 edi
  0064e	e8 00 00 00 00	 call	 ?AddSwitch@CTCell@@QAEXPAUtagSWITCH@@@Z ; CTCell::AddSwitch
$L270488:
  00653	8b 17		 mov	 edx, DWORD PTR [edi]
  00655	8d 44 24 3c	 lea	 eax, DWORD PTR $T270464[esp+84]
  00659	50		 push	 eax
  0065a	8d 4c 24 38	 lea	 ecx, DWORD PTR $T270465[esp+88]
  0065e	51		 push	 ecx
  0065f	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  00662	89 77 08	 mov	 DWORD PTR [edi+8], esi
  00665	89 54 24 44	 mov	 DWORD PTR $T270464[esp+92], edx
  00669	89 7c 24 48	 mov	 DWORD PTR $T270464[esp+96], edi
  0066d	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagSWITCH@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::insert
  00672	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00675	84 c0		 test	 al, al
  00677	75 41		 jne	 SHORT $L270123
  00679	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0067c	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0067f	84 c9		 test	 cl, cl
  00681	75 1a		 jne	 SHORT $L273990
  00683	8b d8		 mov	 ebx, eax
  00685	8b 03		 mov	 eax, DWORD PTR [ebx]
  00687	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0068a	84 c9		 test	 cl, cl
  0068c	75 2c		 jne	 SHORT $L270123
  0068e	8b ff		 npad	 2

; 105  : 	}
; 106  : 
; 107  : 	for( itSWITCH = pTEMP->m_mapTSWITCH.begin(); itSWITCH != pTEMP->m_mapTSWITCH.end(); itSWITCH++)

$L270144:
  00690	8b d8		 mov	 ebx, eax
  00692	8b 03		 mov	 eax, DWORD PTR [ebx]
  00694	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00697	84 c9		 test	 cl, cl
  00699	74 f5		 je	 SHORT $L270144
  0069b	eb 1d		 jmp	 SHORT $L270123
$L273990:
  0069d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  006a0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  006a3	84 c9		 test	 cl, cl
  006a5	75 11		 jne	 SHORT $L270126
$L270125:
  006a7	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  006aa	75 0c		 jne	 SHORT $L270126
  006ac	8b d8		 mov	 ebx, eax
  006ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  006b1	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  006b4	84 c9		 test	 cl, cl
  006b6	74 ef		 je	 SHORT $L270125
$L270126:
  006b8	8b d8		 mov	 ebx, eax
$L270123:
  006ba	3b 5d 2c	 cmp	 ebx, DWORD PTR [ebp+44]
  006bd	0f 85 cd fe ff
	ff		 jne	 $L270113
$L274037:

; 124  : 	}
; 125  : 
; 126  : 	for( itSWITCH = pTEMP->m_mapTSWITCH.begin(); itSWITCH != pTEMP->m_mapTSWITCH.end(); itSWITCH++)

  006c3	8b 54 24 58	 mov	 edx, DWORD PTR _pTEMP$[esp+80]
  006c7	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  006ca	8b 18		 mov	 ebx, DWORD PTR [eax]
  006cc	33 ed		 xor	 ebp, ebp
  006ce	3b d8		 cmp	 ebx, eax
  006d0	0f 84 ca 03 00
	00		 je	 $L175976
$L270670:

; 127  : 	{
; 128  : 		LPTSWITCH pTSWITCH = FindSwitch((*itSWITCH).first);

  006d6	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  006d9	8d 4c 24 28	 lea	 ecx, DWORD PTR $T270811[esp+84]
  006dd	51		 push	 ecx
  006de	8d 54 24 30	 lea	 edx, DWORD PTR _finder$270809[esp+88]
  006e2	52		 push	 edx
  006e3	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  006e6	89 44 24 30	 mov	 DWORD PTR $T270811[esp+92], eax
  006ea	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
  006ef	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  006f2	8b 4c 24 2c	 mov	 ecx, DWORD PTR _finder$270809[esp+84]
  006f6	3b c8		 cmp	 ecx, eax
  006f8	0f 84 4b 03 00
	00		 je	 $L175975
  006fe	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]

; 129  : 
; 130  : 		if(pTSWITCH)

  00701	3b cd		 cmp	 ecx, ebp
  00703	89 4c 24 34	 mov	 DWORD PTR _pTSWITCH$175977[esp+84], ecx
  00707	0f 84 3c 03 00
	00		 je	 $L175975

; 131  : 			for( DWORD i=0; i<DWORD((*itSWITCH).second->m_vGate.size()); i++)

  0070d	33 d2		 xor	 edx, edx
  0070f	89 54 24 24	 mov	 DWORD PTR _i$175979[esp+84], edx
$L175980:
  00713	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00716	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00719	3b cd		 cmp	 ecx, ebp
  0071b	0f 84 28 03 00
	00		 je	 $L175975
  00721	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00724	2b c1		 sub	 eax, ecx
  00726	c1 f8 02	 sar	 eax, 2
  00729	3b d0		 cmp	 edx, eax
  0072b	0f 83 18 03 00
	00		 jae	 $L175975

; 132  : 			{
; 133  : 				MAPTGATE::iterator itGATE = m_mapTGATE.find((*itSWITCH).second->m_vGate[i]->m_dwGateID);

  00731	8b c1		 mov	 eax, ecx
  00733	c1 e2 02	 shl	 edx, 2
  00736	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  00739	50		 push	 eax
  0073a	8d 4c 24 34	 lea	 ecx, DWORD PTR _itGATE$176060[esp+88]
  0073e	51		 push	 ecx
  0073f	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00742	89 54 24 28	 mov	 DWORD PTR tv3541[esp+92], edx
  00746	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagGATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagGATE *> >,0> >::find

; 134  : 
; 135  : 				if( itGATE == m_mapTGATE.end() || (*itSWITCH).second->m_vGate[i]->m_bType != GT_SELECTSWITCH )

  0074b	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  0074e	8b 6c 24 30	 mov	 ebp, DWORD PTR _itGATE$176060[esp+84]
  00752	3b e8		 cmp	 ebp, eax
  00754	8b 54 24 20	 mov	 edx, DWORD PTR tv3541[esp+84]
  00758	74 10		 je	 SHORT $L176064
  0075a	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  0075d	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  00760	80 78 10 01	 cmp	 BYTE PTR [eax+16], 1
  00764	0f 84 cd 02 00
	00		 je	 $L175981
$L176064:

; 136  : 				{
; 137  : 					LPTSWITCH pSwitch = pTSWITCH;

  0076a	8b 4c 24 34	 mov	 ecx, DWORD PTR _pTSWITCH$175977[esp+84]

; 138  : 
; 139  : 					if( (*itSWITCH).second->m_vGate[i]->m_bType == GT_SELECTSWITCH &&
; 140  : 						!(*itSWITCH).second->m_vGate[i]->m_vSwitch.empty())

  0076e	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00771	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  00774	89 4c 24 1c	 mov	 DWORD PTR _pSwitch$176065[esp+84], ecx
  00778	80 78 10 01	 cmp	 BYTE PTR [eax+16], 1
  0077c	0f 85 a5 00 00
	00		 jne	 $L176066
  00782	8b 7f 24	 mov	 edi, DWORD PTR [edi+36]
  00785	8b 04 17	 mov	 eax, DWORD PTR [edi+edx]
  00788	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0078b	83 c0 14	 add	 eax, 20			; 00000014H
  0078e	85 c9		 test	 ecx, ecx
  00790	0f 84 91 00 00
	00		 je	 $L176066
  00796	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00799	2b c1		 sub	 eax, ecx
  0079b	c1 f8 02	 sar	 eax, 2
  0079e	85 c0		 test	 eax, eax
  007a0	0f 84 81 00 00
	00		 je	 $L176066

; 141  : 					{
; 142  : 						BYTE bSELECT = BYTE(rand() % BYTE((*itSWITCH).second->m_vGate[i]->m_vSwitch.size()));

  007a6	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  007a9	83 c0 20	 add	 eax, 32			; 00000020H
  007ac	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  007af	8b 04 10	 mov	 eax, DWORD PTR [eax+edx]
  007b2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  007b5	83 c0 14	 add	 eax, 20			; 00000014H
  007b8	85 c9		 test	 ecx, ecx
  007ba	75 06		 jne	 SHORT $L271231
  007bc	89 4c 24 28	 mov	 DWORD PTR tv1991[esp+84], ecx
  007c0	eb 0c		 jmp	 SHORT $L271232
$L271231:
  007c2	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  007c5	2b c1		 sub	 eax, ecx
  007c7	c1 f8 02	 sar	 eax, 2
  007ca	89 44 24 28	 mov	 DWORD PTR tv1991[esp+84], eax
$L271232:
  007ce	e8 00 00 00 00	 call	 _rand
  007d3	0f b6 4c 24 28	 movzx	 ecx, BYTE PTR tv1991[esp+84]
  007d8	99		 cdq
  007d9	f7 f9		 idiv	 ecx

; 143  : 						pSwitch = FindSwitch((*itSWITCH).second->m_vGate[i]->m_vSwitch[bSELECT]->m_dwSwitchID);

  007db	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  007de	8b 4c 24 20	 mov	 ecx, DWORD PTR tv3541[esp+84]
  007e2	83 c0 20	 add	 eax, 32			; 00000020H
  007e5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  007e8	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  007eb	83 c0 14	 add	 eax, 20			; 00000014H
  007ee	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  007f1	0f b6 d2	 movzx	 edx, dl
  007f4	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  007f7	8b 00		 mov	 eax, DWORD PTR [eax]
  007f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  007fb	8d 54 24 28	 lea	 edx, DWORD PTR $T271423[esp+84]
  007ff	52		 push	 edx
  00800	8d 44 24 40	 lea	 eax, DWORD PTR _finder$271421[esp+88]
  00804	89 4c 24 2c	 mov	 DWORD PTR $T271423[esp+88], ecx
  00808	50		 push	 eax
  00809	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  0080c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagSWITCH *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagSWITCH *> >,0> >::find
  00811	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00814	8b 4c 24 3c	 mov	 ecx, DWORD PTR _finder$271421[esp+84]
  00818	3b c8		 cmp	 ecx, eax
  0081a	74 05		 je	 SHORT $L271422
  0081c	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0081f	eb 02		 jmp	 SHORT $L271420
$L271422:
  00821	33 c9		 xor	 ecx, ecx
$L271420:
  00823	89 4c 24 1c	 mov	 DWORD PTR _pSwitch$176065[esp+84], ecx
$L176066:

; 144  : 					}
; 145  : 
; 146  : 					if( itGATE == m_mapTGATE.end() )

  00827	3b 6e 38	 cmp	 ebp, DWORD PTR [esi+56]
  0082a	0f 85 64 01 00
	00		 jne	 $L176069

; 147  : 					{
; 148  : 						LPTGATE pTGATE = new TGATE();

  00830	6a 28		 push	 40			; 00000028H
  00832	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00837	83 c4 04	 add	 esp, 4
  0083a	33 ed		 xor	 ebp, ebp
  0083c	3b c5		 cmp	 eax, ebp
  0083e	74 0d		 je	 SHORT $L266512
  00840	89 68 18	 mov	 DWORD PTR [eax+24], ebp
  00843	89 68 1c	 mov	 DWORD PTR [eax+28], ebp
  00846	89 68 20	 mov	 DWORD PTR [eax+32], ebp
  00849	8b f8		 mov	 edi, eax
  0084b	eb 02		 jmp	 SHORT $L266513
$L266512:
  0084d	33 ff		 xor	 edi, edi
$L266513:

; 149  : 
; 150  : 						pTGATE->m_dwSwitchID = (*itSWITCH).second->m_vGate[i]->m_dwSwitchID;

  0084f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00852	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00855	8b 44 24 20	 mov	 eax, DWORD PTR tv3541[esp+84]
  00859	8b 0c 02	 mov	 ecx, DWORD PTR [edx+eax]
  0085c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0085f	89 57 04	 mov	 DWORD PTR [edi+4], edx

; 151  : 						pTGATE->m_dwGateID = (*itSWITCH).second->m_vGate[i]->m_dwGateID;

  00862	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00865	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00868	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  0086b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0086d	89 17		 mov	 DWORD PTR [edi], edx

; 152  : 						pTGATE->m_bOpened = (*itSWITCH).second->m_vGate[i]->m_bOpened;

  0086f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00872	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00875	8b 0c 02	 mov	 ecx, DWORD PTR [edx+eax]
  00878	8a 51 24	 mov	 dl, BYTE PTR [ecx+36]
  0087b	88 57 24	 mov	 BYTE PTR [edi+36], dl

; 153  : 						pTGATE->m_wPosX = (*itSWITCH).second->m_vGate[i]->m_wPosX;

  0087e	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00881	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00884	8b 0c 02	 mov	 ecx, DWORD PTR [edx+eax]
  00887	66 8b 51 0a	 mov	 dx, WORD PTR [ecx+10]
  0088b	66 89 57 0a	 mov	 WORD PTR [edi+10], dx

; 154  : 						pTGATE->m_wPosY = (*itSWITCH).second->m_vGate[i]->m_wPosY;

  0088f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00892	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00895	8b 0c 02	 mov	 ecx, DWORD PTR [edx+eax]
  00898	66 8b 51 0c	 mov	 dx, WORD PTR [ecx+12]
  0089c	66 89 57 0c	 mov	 WORD PTR [edi+12], dx

; 155  : 						pTGATE->m_wPosZ = (*itSWITCH).second->m_vGate[i]->m_wPosZ;

  008a0	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  008a3	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  008a6	8b 0c 02	 mov	 ecx, DWORD PTR [edx+eax]
  008a9	66 8b 51 0e	 mov	 dx, WORD PTR [ecx+14]
  008ad	66 89 57 0e	 mov	 WORD PTR [edi+14], dx

; 156  : 						pTGATE->m_bType = (*itSWITCH).second->m_vGate[i]->m_bType;

  008b1	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  008b4	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  008b7	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  008ba	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  008bd	88 4f 10	 mov	 BYTE PTR [edi+16], cl

; 157  : 						pTGATE->m_wMapID = m_wMapID;

  008c0	66 8b 96 8a 00
	00 00		 mov	 dx, WORD PTR [esi+138]

; 158  : 
; 159  : 						pTGATE->m_vSwitch.push_back(pSwitch);

  008c7	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  008ca	66 89 57 08	 mov	 WORD PTR [edi+8], dx
  008ce	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  008d1	3b c5		 cmp	 eax, ebp
  008d3	c6 44 24 50 0a	 mov	 BYTE PTR __$EHRec$[esp+92], 10 ; 0000000aH
  008d8	89 7c 24 28	 mov	 DWORD PTR _pTGATE$176070[esp+84], edi
  008dc	75 04		 jne	 SHORT $L272246
  008de	33 ed		 xor	 ebp, ebp
  008e0	eb 08		 jmp	 SHORT $L272247
$L272246:
  008e2	8b 69 08	 mov	 ebp, DWORD PTR [ecx+8]
  008e5	2b e8		 sub	 ebp, eax
  008e7	c1 fd 02	 sar	 ebp, 2
$L272247:
  008ea	85 c0		 test	 eax, eax
  008ec	74 1d		 je	 SHORT $L272239
  008ee	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  008f1	2b d0		 sub	 edx, eax
  008f3	c1 fa 02	 sar	 edx, 2
  008f6	3b ea		 cmp	 ebp, edx
  008f8	73 11		 jae	 SHORT $L272239
  008fa	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  008fd	8b 54 24 1c	 mov	 edx, DWORD PTR _pSwitch$176065[esp+84]
  00901	89 10		 mov	 DWORD PTR [eax], edx
  00903	83 c0 04	 add	 eax, 4
  00906	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00909	eb 10		 jmp	 SHORT $L272301
$L272239:
  0090b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0090e	8d 54 24 1c	 lea	 edx, DWORD PTR _pSwitch$176065[esp+84]
  00912	52		 push	 edx
  00913	6a 01		 push	 1
  00915	50		 push	 eax
  00916	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n
$L272301:

; 160  : 						pSwitch->m_vGate.push_back(pTGATE);

  0091b	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pSwitch$176065[esp+84]
  0091f	8b 69 24	 mov	 ebp, DWORD PTR [ecx+36]
  00922	83 c1 20	 add	 ecx, 32			; 00000020H
  00925	85 ed		 test	 ebp, ebp
  00927	75 04		 jne	 SHORT $L272536
  00929	33 d2		 xor	 edx, edx
  0092b	eb 08		 jmp	 SHORT $L272537
$L272536:
  0092d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00930	2b d5		 sub	 edx, ebp
  00932	c1 fa 02	 sar	 edx, 2
$L272537:
  00935	85 ed		 test	 ebp, ebp
  00937	74 31		 je	 SHORT $L274038
  00939	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0093c	2b c5		 sub	 eax, ebp
  0093e	c1 f8 02	 sar	 eax, 2
  00941	3b d0		 cmp	 edx, eax
  00943	73 25		 jae	 SHORT $L274038
  00945	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00948	89 38		 mov	 DWORD PTR [eax], edi
  0094a	83 c0 04	 add	 eax, 4
  0094d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 161  : 
; 162  : 						EnterMAP(pTGATE);

  00950	57		 push	 edi
  00951	8b ce		 mov	 ecx, esi
  00953	e8 00 00 00 00	 call	 ?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z ; CTMap::EnterMAP
  00958	8b 44 24 24	 mov	 eax, DWORD PTR _i$175979[esp+84]
  0095c	40		 inc	 eax
  0095d	89 44 24 24	 mov	 DWORD PTR _i$175979[esp+84], eax
  00961	33 ed		 xor	 ebp, ebp
  00963	8b d0		 mov	 edx, eax
  00965	e9 a9 fd ff ff	 jmp	 $L175980
$L274038:

; 160  : 						pSwitch->m_vGate.push_back(pTGATE);

  0096a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0096d	8d 54 24 28	 lea	 edx, DWORD PTR _pTGATE$176070[esp+84]
  00971	52		 push	 edx
  00972	6a 01		 push	 1
  00974	50		 push	 eax
  00975	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n

; 161  : 
; 162  : 						EnterMAP(pTGATE);

  0097a	57		 push	 edi
  0097b	8b ce		 mov	 ecx, esi
  0097d	e8 00 00 00 00	 call	 ?EnterMAP@CTMap@@QAEEPAUtagGATE@@@Z ; CTMap::EnterMAP
  00982	8b 44 24 24	 mov	 eax, DWORD PTR _i$175979[esp+84]
  00986	40		 inc	 eax
  00987	89 44 24 24	 mov	 DWORD PTR _i$175979[esp+84], eax
  0098b	33 ed		 xor	 ebp, ebp
  0098d	8b d0		 mov	 edx, eax
  0098f	e9 7f fd ff ff	 jmp	 $L175980
$L176069:

; 163  : 					}
; 164  : 					else
; 165  : 					{
; 166  : 						(*itGATE).second->m_vSwitch.push_back(pSwitch);

  00994	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00997	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0099a	83 c5 10	 add	 ebp, 16			; 00000010H
  0099d	83 c1 14	 add	 ecx, 20			; 00000014H
  009a0	85 d2		 test	 edx, edx
  009a2	75 04		 jne	 SHORT $L272759
  009a4	33 ff		 xor	 edi, edi
  009a6	eb 08		 jmp	 SHORT $L272760
$L272759:
  009a8	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  009ab	2b fa		 sub	 edi, edx
  009ad	c1 ff 02	 sar	 edi, 2
$L272760:
  009b0	85 d2		 test	 edx, edx
  009b2	74 1d		 je	 SHORT $L272821
  009b4	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  009b7	2b c2		 sub	 eax, edx
  009b9	c1 f8 02	 sar	 eax, 2
  009bc	3b f8		 cmp	 edi, eax
  009be	73 11		 jae	 SHORT $L272821
  009c0	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  009c3	8b 54 24 1c	 mov	 edx, DWORD PTR _pSwitch$176065[esp+84]
  009c7	89 10		 mov	 DWORD PTR [eax], edx
  009c9	83 c0 04	 add	 eax, 4
  009cc	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  009cf	eb 10		 jmp	 SHORT $L272813
$L272821:
  009d1	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  009d4	8d 54 24 1c	 lea	 edx, DWORD PTR _pSwitch$176065[esp+84]
  009d8	52		 push	 edx
  009d9	6a 01		 push	 1
  009db	50		 push	 eax
  009dc	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagSWITCH@@V?$allocator@PAUtagSWITCH@@@std@@@std@@IAEXViterator@12@IABQAUtagSWITCH@@@Z ; std::vector<tagSWITCH *,std::allocator<tagSWITCH *> >::_Insert_n
$L272813:

; 167  : 						pSwitch->m_vGate.push_back((*itGATE).second);

  009e1	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pSwitch$176065[esp+84]
  009e5	8b 79 24	 mov	 edi, DWORD PTR [ecx+36]
  009e8	83 c1 20	 add	 ecx, 32			; 00000020H
  009eb	85 ff		 test	 edi, edi
  009ed	75 04		 jne	 SHORT $L273025
  009ef	33 d2		 xor	 edx, edx
  009f1	eb 08		 jmp	 SHORT $L273026
$L273025:
  009f3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  009f6	2b d7		 sub	 edx, edi
  009f8	c1 fa 02	 sar	 edx, 2
$L273026:
  009fb	85 ff		 test	 edi, edi
  009fd	74 2c		 je	 SHORT $L273087
  009ff	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00a02	2b c7		 sub	 eax, edi
  00a04	c1 f8 02	 sar	 eax, 2
  00a07	3b d0		 cmp	 edx, eax
  00a09	73 20		 jae	 SHORT $L273087
  00a0b	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  00a0e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00a11	89 10		 mov	 DWORD PTR [eax], edx
  00a13	83 c0 04	 add	 eax, 4
  00a16	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00a19	8b 44 24 24	 mov	 eax, DWORD PTR _i$175979[esp+84]
  00a1d	40		 inc	 eax
  00a1e	89 44 24 24	 mov	 DWORD PTR _i$175979[esp+84], eax
  00a22	33 ed		 xor	 ebp, ebp
  00a24	8b d0		 mov	 edx, eax
  00a26	e9 e8 fc ff ff	 jmp	 $L175980
$L273087:
  00a2b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00a2e	55		 push	 ebp
  00a2f	6a 01		 push	 1
  00a31	50		 push	 eax
  00a32	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagGATE@@V?$allocator@PAUtagGATE@@@std@@@std@@IAEXViterator@12@IABQAUtagGATE@@@Z ; std::vector<tagGATE *,std::allocator<tagGATE *> >::_Insert_n
$L175981:
  00a37	8b 44 24 24	 mov	 eax, DWORD PTR _i$175979[esp+84]
  00a3b	40		 inc	 eax
  00a3c	89 44 24 24	 mov	 DWORD PTR _i$175979[esp+84], eax
  00a40	33 ed		 xor	 ebp, ebp
  00a42	8b d0		 mov	 edx, eax
  00a44	e9 ca fc ff ff	 jmp	 $L175980
$L175975:

; 124  : 	}
; 125  : 
; 126  : 	for( itSWITCH = pTEMP->m_mapTSWITCH.begin(); itSWITCH != pTEMP->m_mapTSWITCH.end(); itSWITCH++)

  00a49	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00a4c	84 c0		 test	 al, al
  00a4e	75 43		 jne	 SHORT $L270704
  00a50	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00a53	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a56	84 c9		 test	 cl, cl
  00a58	75 18		 jne	 SHORT $L273998
  00a5a	8b d8		 mov	 ebx, eax
  00a5c	8b 03		 mov	 eax, DWORD PTR [ebx]
  00a5e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a61	84 c9		 test	 cl, cl
  00a63	75 2e		 jne	 SHORT $L270704
$L270692:
  00a65	8b d8		 mov	 ebx, eax
  00a67	8b 03		 mov	 eax, DWORD PTR [ebx]
  00a69	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a6c	84 c9		 test	 cl, cl
  00a6e	74 f5		 je	 SHORT $L270692
  00a70	eb 21		 jmp	 SHORT $L270704
$L273998:
  00a72	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00a75	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a78	84 c9		 test	 cl, cl
  00a7a	75 15		 jne	 SHORT $L270707
  00a7c	8d 64 24 00	 npad	 4
$L270706:
  00a80	3b 58 08	 cmp	 ebx, DWORD PTR [eax+8]
  00a83	75 0c		 jne	 SHORT $L270707
  00a85	8b d8		 mov	 ebx, eax
  00a87	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00a8a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00a8d	84 c9		 test	 cl, cl
  00a8f	74 ef		 je	 SHORT $L270706
$L270707:
  00a91	8b d8		 mov	 ebx, eax
$L270704:
  00a93	8b 44 24 58	 mov	 eax, DWORD PTR _pTEMP$[esp+80]
  00a97	3b 58 2c	 cmp	 ebx, DWORD PTR [eax+44]
  00a9a	0f 85 36 fc ff
	ff		 jne	 $L270670
$L175976:

; 168  : 					}
; 169  : 				}
; 170  : 			}
; 171  : 	}
; 172  : 
; 173  : 	for(itGT = pTEMP->m_mapTGODTOWER.begin(); itGT != pTEMP->m_mapTGODTOWER.end(); itGT++)

  00aa0	8b 4c 24 58	 mov	 ecx, DWORD PTR _pTEMP$[esp+80]
  00aa4	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  00aa7	8b 38		 mov	 edi, DWORD PTR [eax]
  00aa9	3b f8		 cmp	 edi, eax
  00aab	0f 84 bf 00 00
	00		 je	 $L176099
$L273271:

; 174  : 	{
; 175  : 		LPTGODTOWER pGodTower = new TGODTOWER();

  00ab1	6a 28		 push	 40			; 00000028H
  00ab3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ab8	83 c4 04	 add	 esp, 4
  00abb	3b c5		 cmp	 eax, ebp
  00abd	74 0b		 je	 SHORT $L266519
  00abf	89 68 1c	 mov	 DWORD PTR [eax+28], ebp
  00ac2	89 68 20	 mov	 DWORD PTR [eax+32], ebp
  00ac5	89 68 24	 mov	 DWORD PTR [eax+36], ebp
  00ac8	eb 02		 jmp	 SHORT $L266520
$L266519:
  00aca	33 c0		 xor	 eax, eax
$L266520:

; 176  : 		pGodTower->m_wID = (*itGT).second->m_wID;

  00acc	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00acf	66 8b 0a	 mov	 cx, WORD PTR [edx]
  00ad2	66 89 08	 mov	 WORD PTR [eax], cx

; 177  : 		pGodTower->m_pGodBall = NULL;

  00ad5	89 68 04	 mov	 DWORD PTR [eax+4], ebp

; 178  : 		pGodTower->m_fPosX = (*itGT).second->m_fPosX;

  00ad8	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00adb	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00ade	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 179  : 		pGodTower->m_fPosY = (*itGT).second->m_fPosY;

  00ae1	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00ae4	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00ae7	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 180  : 		pGodTower->m_fPosZ = (*itGT).second->m_fPosZ;

  00aea	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  00aed	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]

; 181  : 
; 182  : 		EnterMAP(pGodTower);

  00af0	66 8b 10	 mov	 dx, WORD PTR [eax]
  00af3	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00af6	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00af9	89 44 24 40	 mov	 DWORD PTR $T273518[esp+88], eax
  00afd	8d 44 24 3c	 lea	 eax, DWORD PTR $T273518[esp+84]
  00b01	50		 push	 eax
  00b02	8d 4c 24 38	 lea	 ecx, DWORD PTR $T273519[esp+88]
  00b06	51		 push	 ecx
  00b07	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00b0a	c6 44 24 58 0a	 mov	 BYTE PTR __$EHRec$[esp+100], 10 ; 0000000aH
  00b0f	66 89 54 24 44	 mov	 WORD PTR $T273518[esp+92], dx
  00b14	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODTOWER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODTOWER *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODTOWER *> >,0> >::insert
  00b19	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00b1c	84 c0		 test	 al, al
  00b1e	75 43		 jne	 SHORT $L273281
  00b20	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00b23	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b26	84 c9		 test	 cl, cl
  00b28	75 18		 jne	 SHORT $L274001
  00b2a	8b f8		 mov	 edi, eax
  00b2c	8b 07		 mov	 eax, DWORD PTR [edi]
  00b2e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b31	84 c9		 test	 cl, cl
  00b33	75 2e		 jne	 SHORT $L273281

; 168  : 					}
; 169  : 				}
; 170  : 			}
; 171  : 	}
; 172  : 
; 173  : 	for(itGT = pTEMP->m_mapTGODTOWER.begin(); itGT != pTEMP->m_mapTGODTOWER.end(); itGT++)

$L273295:
  00b35	8b f8		 mov	 edi, eax
  00b37	8b 07		 mov	 eax, DWORD PTR [edi]
  00b39	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b3c	84 c9		 test	 cl, cl
  00b3e	74 f5		 je	 SHORT $L273295
  00b40	eb 21		 jmp	 SHORT $L273281
$L274001:
  00b42	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00b45	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b48	84 c9		 test	 cl, cl
  00b4a	75 15		 jne	 SHORT $L273284
  00b4c	8d 64 24 00	 npad	 4
$L273283:
  00b50	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00b53	75 0c		 jne	 SHORT $L273284
  00b55	8b f8		 mov	 edi, eax
  00b57	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00b5a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00b5d	84 c9		 test	 cl, cl
  00b5f	74 ef		 je	 SHORT $L273283
$L273284:
  00b61	8b f8		 mov	 edi, eax
$L273281:
  00b63	8b 54 24 58	 mov	 edx, DWORD PTR _pTEMP$[esp+80]
  00b67	3b 7a 68	 cmp	 edi, DWORD PTR [edx+104]
  00b6a	0f 85 41 ff ff
	ff		 jne	 $L273271
$L176099:

; 183  : 	}
; 184  : 
; 185  : 	for( itGB = pTEMP->m_mapTTEMPGODBALL.begin(); itGB != pTEMP->m_mapTTEMPGODBALL.end(); itGB++)

  00b70	8b 44 24 58	 mov	 eax, DWORD PTR _pTEMP$[esp+80]
  00b74	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]
  00b77	8b 38		 mov	 edi, DWORD PTR [eax]
  00b79	3b f8		 cmp	 edi, eax
  00b7b	0f 84 d7 00 00
	00		 je	 $L176128
$L273704:

; 186  : 	{
; 187  : 		LPTGODBALL pGodBall = new TGODBALL();

  00b81	6a 38		 push	 56			; 00000038H
  00b83	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b88	8b d8		 mov	 ebx, eax
  00b8a	83 c4 04	 add	 esp, 4
  00b8d	3b dd		 cmp	 ebx, ebp
  00b8f	74 18		 je	 SHORT $L266525
  00b91	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00b97	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00b9c	ff 52 0c	 call	 DWORD PTR [edx+12]
  00b9f	83 c0 10	 add	 eax, 16			; 00000010H
  00ba2	89 43 20	 mov	 DWORD PTR [ebx+32], eax
  00ba5	8b c3		 mov	 eax, ebx
  00ba7	eb 02		 jmp	 SHORT $L266526
$L266525:
  00ba9	33 c0		 xor	 eax, eax
$L266526:

; 188  : 		pGodBall->m_wID = (*itGB).second->m_wID;

  00bab	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00bae	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00bb2	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 189  : 		pGodBall->m_bCamp = (*itGB).second->m_bCamp;

  00bb6	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00bb9	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  00bbc	88 50 08	 mov	 BYTE PTR [eax+8], dl

; 190  : 		pGodBall->m_fPosX = (*itGB).second->m_fPosX;

  00bbf	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00bc2	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00bc5	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 191  : 		pGodBall->m_fPosY = (*itGB).second->m_fPosY;

  00bc8	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00bcb	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00bce	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 192  : 		pGodBall->m_fPosZ = (*itGB).second->m_fPosZ;

  00bd1	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00bd4	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00bd7	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 193  : 		pGodBall->m_pMAP = this;

  00bda	89 70 10	 mov	 DWORD PTR [eax+16], esi

; 194  : 		pGodBall->m_bMove = TRUE;

  00bdd	c6 40 30 01	 mov	 BYTE PTR [eax+48], 1

; 195  : 		pGodBall->m_dwGuildID = 0;

  00be1	89 68 0c	 mov	 DWORD PTR [eax+12], ebp

; 196  : 		pGodBall->m_dwKEY = 0;

  00be4	89 28		 mov	 DWORD PTR [eax], ebp

; 197  : 		m_mapTTEMPGODBALL.insert(MAPTGODBALL::value_type(pGodBall->m_wID, pGodBall));

  00be6	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  00bea	8d 54 24 3c	 lea	 edx, DWORD PTR $T266527[esp+84]
  00bee	89 44 24 40	 mov	 DWORD PTR $T266527[esp+88], eax
  00bf2	52		 push	 edx
  00bf3	8d 44 24 38	 lea	 eax, DWORD PTR $T266528[esp+88]
  00bf7	66 89 4c 24 40	 mov	 WORD PTR $T266527[esp+88], cx
  00bfc	50		 push	 eax
  00bfd	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00c00	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGPAUtagGODBALL@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagGODBALL *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagGODBALL *> >,0> >::insert
  00c05	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00c08	84 c0		 test	 al, al
  00c0a	75 3f		 jne	 SHORT $L273738
  00c0c	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00c0f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c12	84 c9		 test	 cl, cl
  00c14	75 18		 jne	 SHORT $L274004
  00c16	8b f8		 mov	 edi, eax
  00c18	8b 07		 mov	 eax, DWORD PTR [edi]
  00c1a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c1d	84 c9		 test	 cl, cl
  00c1f	75 2a		 jne	 SHORT $L273738

; 183  : 	}
; 184  : 
; 185  : 	for( itGB = pTEMP->m_mapTTEMPGODBALL.begin(); itGB != pTEMP->m_mapTTEMPGODBALL.end(); itGB++)

$L273719:
  00c21	8b f8		 mov	 edi, eax
  00c23	8b 07		 mov	 eax, DWORD PTR [edi]
  00c25	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c28	84 c9		 test	 cl, cl
  00c2a	74 f5		 je	 SHORT $L273719
  00c2c	eb 1d		 jmp	 SHORT $L273738
$L274004:
  00c2e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00c31	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c34	84 c9		 test	 cl, cl
  00c36	75 11		 jne	 SHORT $L273741
$L273740:
  00c38	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  00c3b	75 0c		 jne	 SHORT $L273741
  00c3d	8b f8		 mov	 edi, eax
  00c3f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00c42	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00c45	84 c9		 test	 cl, cl
  00c47	74 ef		 je	 SHORT $L273740
$L273741:
  00c49	8b f8		 mov	 edi, eax
$L273738:
  00c4b	8b 4c 24 58	 mov	 ecx, DWORD PTR _pTEMP$[esp+80]
  00c4f	3b 79 5c	 cmp	 edi, DWORD PTR [ecx+92]
  00c52	0f 85 29 ff ff
	ff		 jne	 $L273704
$L176128:

; 198  : 	}
; 199  : 
; 200  : 	for( itSPAWN = pTEMP->m_mapTMONSPAWN.begin(); itSPAWN != pTEMP->m_mapTMONSPAWN.end(); itSPAWN++)

  00c58	8b 54 24 58	 mov	 edx, DWORD PTR _pTEMP$[esp+80]
  00c5c	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00c5f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00c61	3b c1		 cmp	 eax, ecx
  00c63	89 44 24 28	 mov	 DWORD PTR _itSPAWN$[esp+84], eax
  00c67	74 35		 je	 SHORT $L274033
  00c69	8b 7c 24 5c	 mov	 edi, DWORD PTR _bCountryID$[esp+80]
  00c6d	8d 49 00	 npad	 3
$L273931:

; 201  : 		AddMonSpawn( (*itSPAWN).second->m_pSPAWN, m_bChannel, bCountryID);

  00c70	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00c73	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00c76	33 c9		 xor	 ecx, ecx
  00c78	8a 8e 8d 00 00
	00		 mov	 cl, BYTE PTR [esi+141]
  00c7e	57		 push	 edi
  00c7f	51		 push	 ecx
  00c80	50		 push	 eax
  00c81	8b ce		 mov	 ecx, esi
  00c83	e8 00 00 00 00	 call	 ?AddMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@EE@Z ; CTMap::AddMonSpawn
  00c88	8d 4c 24 28	 lea	 ecx, DWORD PTR _itSPAWN$[esp+84]
  00c8c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::const_iterator::_Inc
  00c91	8b 4c 24 58	 mov	 ecx, DWORD PTR _pTEMP$[esp+80]
  00c95	8b 44 24 28	 mov	 eax, DWORD PTR _itSPAWN$[esp+84]
  00c99	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00c9c	75 d2		 jne	 SHORT $L273931
$L274033:

; 202  : }

  00c9e	8b 4c 24 48	 mov	 ecx, DWORD PTR __$EHRec$[esp+84]
  00ca2	5f		 pop	 edi
  00ca3	8b c6		 mov	 eax, esi
  00ca5	5e		 pop	 esi
  00ca6	5d		 pop	 ebp
  00ca7	5b		 pop	 ebx
  00ca8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00caf	83 c4 44	 add	 esp, 68			; 00000044H
  00cb2	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L266532:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$map@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@@std@@QAE@XZ
$L266533:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 10	 add	 ecx, 16			; 00000010H
  00011	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagTSPAWNPOS@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTSPAWNPOS@@@std@@@3@@std@@QAE@XZ
$L266534:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@@std@@QAE@XZ
$L266535:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 28	 add	 ecx, 40			; 00000028H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagSWITCH@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagSWITCH@@@std@@@3@@std@@QAE@XZ
$L266536:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 34	 add	 ecx, 52			; 00000034H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagGATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagGATE@@@std@@@3@@std@@QAE@XZ
$L266537:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 40	 add	 ecx, 64			; 00000040H
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAVCTCell@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTCell@@@std@@@3@@std@@QAE@XZ
$L266538:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00048	e9 00 00 00 00	 jmp	 ??1?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@QAE@XZ
$L266539:
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 58	 add	 ecx, 88			; 00000058H
  00053	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L266540:
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 64	 add	 ecx, 100		; 00000064H
  0005e	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODTOWER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODTOWER@@@std@@@3@@std@@QAE@XZ
$L266541:
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 70	 add	 ecx, 112		; 00000070H
  00069	e9 00 00 00 00	 jmp	 ??1?$map@GPAUtagGODBALL@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagGODBALL@@@std@@@3@@std@@QAE@XZ
$L266542:
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	83 c1 7c	 add	 ecx, 124		; 0000007cH
  00074	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTOURNAMENTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTOURNAMENTPLAYER@@@std@@@3@@std@@QAE@XZ
$L266543:
  00079	8b 45 e8	 mov	 eax, DWORD PTR $T266493[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
  00083	c3		 ret	 0
$L266544:
  00084	8b 45 c4	 mov	 eax, DWORD PTR $T266502[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	59		 pop	 ecx
  0008e	c3		 ret	 0
$L266545:
  0008f	8b 45 c0	 mov	 eax, DWORD PTR $T266511[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L266546:
  0009a	8b 45 bc	 mov	 eax, DWORD PTR $T266518[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a3	59		 pop	 ecx
  000a4	c3		 ret	 0
__ehhandler$??0CTMap@@QAE@PAV0@E@Z:
  000a5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T273978
  000aa	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTMap@@QAE@PAV0@E@Z ENDP				; CTMap::CTMap
PUBLIC	?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z ; CTMap::DelAllMonAtSpawn
; Function compile flags: /Ogty
;	COMDAT ?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT
$T274052 = -4						; size = 4
_itMON$176713 = 8					; size = 4
_finder$ = 8						; size = 4
_pSPAWN$ = 8						; size = 4
?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z PROC NEAR ; CTMap::DelAllMonAtSpawn, COMDAT
; _this$ = ecx

; 423  : {

  00000	51		 push	 ecx

; 424  : 	MAPTMONSPAWN::iterator finder = m_mapTMONSPAWN.find(pSPAWN->m_wID);

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _pSPAWN$[esp]
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 c0 34	 add	 eax, 52			; 00000034H
  0000c	50		 push	 eax
  0000d	8d 4c 24 14	 lea	 ecx, DWORD PTR _finder$[esp+12]
  00011	51		 push	 ecx
  00012	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00015	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 425  : 	if( finder == m_mapTMONSPAWN.end() )

  0001a	8b 6c 24 10	 mov	 ebp, DWORD PTR _finder$[esp+8]
  0001e	3b 6e 08	 cmp	 ebp, DWORD PTR [esi+8]
  00021	0f 84 93 00 00
	00		 je	 $L274252
  00027	53		 push	 ebx
  00028	57		 push	 edi
  00029	8d a4 24 00 00
	00 00		 npad	 7
$L176633:

; 426  : 		return;
; 427  : 
; 428  : 	while(!(*finder).second->m_vTMON.empty())

  00030	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	85 d2		 test	 edx, edx
  00038	74 7e		 je	 SHORT $L274253
  0003a	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0003d	2b c2		 sub	 eax, edx
  0003f	c1 f8 02	 sar	 eax, 2
  00042	85 c0		 test	 eax, eax
  00044	74 72		 je	 SHORT $L274253

; 429  : 	{
; 430  : 		CTMonster *pMON = (*finder).second->m_vTMON.back();

  00046	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00049	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]

; 431  : 		pMON->m_pMAP->LeaveMAP( pMON, TRUE);

  0004c	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  0004f	83 e8 04	 sub	 eax, 4
  00052	6a 01		 push	 1
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 ?LeaveMAP@CTMap@@QAEXPAVCTMonster@@E@Z ; CTMap::LeaveMAP

; 432  : 
; 433  : 		MAPTMONSTER::iterator itMON = pMON->m_pMAP->m_mapTMONSTER.find(pMON->m_dwID);

  0005a	8b 7e 40	 mov	 edi, DWORD PTR [esi+64]
  0005d	8d 56 44	 lea	 edx, DWORD PTR [esi+68]
  00060	52		 push	 edx
  00061	8d 44 24 1c	 lea	 eax, DWORD PTR _itMON$176713[esp+20]
  00065	8d 5f 1c	 lea	 ebx, DWORD PTR [edi+28]
  00068	50		 push	 eax
  00069	8b cb		 mov	 ecx, ebx
  0006b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::find

; 434  : 		if( itMON != pMON->m_pMAP->m_mapTMONSTER.end() )

  00070	8b 44 24 18	 mov	 eax, DWORD PTR _itMON$176713[esp+16]
  00074	3b 47 20	 cmp	 eax, DWORD PTR [edi+32]
  00077	74 0d		 je	 SHORT $L176716

; 435  : 			pMON->m_pMAP->m_mapTMONSTER.erase(itMON);

  00079	50		 push	 eax
  0007a	8d 4c 24 14	 lea	 ecx, DWORD PTR $T274052[esp+24]
  0007e	51		 push	 ecx
  0007f	8b cb		 mov	 ecx, ebx
  00081	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAVCTMonster@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCTMonster@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CTMonster *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CTMonster *> >,0> >::erase
$L176716:

; 436  : 
; 437  : 		(*finder).second->m_vTMON.pop_back();

  00086	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  00089	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0008c	83 c0 08	 add	 eax, 8
  0008f	85 d2		 test	 edx, edx
  00091	74 14		 je	 SHORT $L274249
  00093	8b 78 08	 mov	 edi, DWORD PTR [eax+8]
  00096	8b cf		 mov	 ecx, edi
  00098	2b ca		 sub	 ecx, edx
  0009a	c1 f9 02	 sar	 ecx, 2
  0009d	85 c9		 test	 ecx, ecx
  0009f	74 06		 je	 SHORT $L274249
  000a1	83 c7 fc	 add	 edi, -4			; fffffffcH
  000a4	89 78 08	 mov	 DWORD PTR [eax+8], edi
$L274249:

; 438  : 		delete pMON;

  000a7	8b 16		 mov	 edx, DWORD PTR [esi]
  000a9	6a 01		 push	 1
  000ab	8b ce		 mov	 ecx, esi
  000ad	ff 92 e8 00 00
	00		 call	 DWORD PTR [edx+232]

; 439  : 	}

  000b3	e9 78 ff ff ff	 jmp	 $L176633
$L274253:
  000b8	5f		 pop	 edi
  000b9	5b		 pop	 ebx
$L274252:
  000ba	5e		 pop	 esi
  000bb	5d		 pop	 ebp

; 440  : }

  000bc	59		 pop	 ecx
  000bd	c2 04 00	 ret	 4
?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z ENDP	; CTMap::DelAllMonAtSpawn
_TEXT	ENDS
PUBLIC	?DelMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z	; CTMap::DelMonSpawn
; Function compile flags: /Ogty
;	COMDAT ?DelMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z
_TEXT	SEGMENT
$T274263 = 8						; size = 4
_finder$ = 8						; size = 4
_pSPAWN$ = 8						; size = 4
?DelMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z PROC NEAR	; CTMap::DelMonSpawn, COMDAT
; _this$ = ecx

; 443  : {

  00000	53		 push	 ebx

; 444  : 	MAPTMONSPAWN::iterator finder = m_mapTMONSPAWN.find(pSPAWN->m_wID);

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _pSPAWN$[esp]
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f1		 mov	 esi, ecx
  0000a	8d 43 34	 lea	 eax, DWORD PTR [ebx+52]
  0000d	50		 push	 eax
  0000e	8d 4c 24 18	 lea	 ecx, DWORD PTR _finder$[esp+16]
  00012	8d 6e 04	 lea	 ebp, DWORD PTR [esi+4]
  00015	51		 push	 ecx
  00016	8b cd		 mov	 ecx, ebp
  00018	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::find

; 445  : 
; 446  : 	if( finder == m_mapTMONSPAWN.end() )

  0001d	8b 7c 24 14	 mov	 edi, DWORD PTR _finder$[esp+12]
  00021	3b 7e 08	 cmp	 edi, DWORD PTR [esi+8]
  00024	74 22		 je	 SHORT $L176723

; 447  : 		return;
; 448  : 
; 449  : 	DelAllMonAtSpawn(pSPAWN);

  00026	53		 push	 ebx
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?DelAllMonAtSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z ; CTMap::DelAllMonAtSpawn

; 450  : 	delete (*finder).second;

  0002e	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00031	85 c9		 test	 ecx, ecx
  00033	74 06		 je	 SHORT $L274261
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	6a 01		 push	 1
  00039	ff 12		 call	 DWORD PTR [edx]
$L274261:

; 451  : 
; 452  : 	m_mapTMONSPAWN.erase(finder);

  0003b	57		 push	 edi
  0003c	8d 44 24 18	 lea	 eax, DWORD PTR $T274263[esp+16]
  00040	50		 push	 eax
  00041	8b cd		 mov	 ecx, ebp
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@GPAVCTMonSpawn@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTMonSpawn@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,CTMonSpawn *,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,CTMonSpawn *> >,0> >::erase
$L176723:
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5d		 pop	 ebp
  0004b	5b		 pop	 ebx

; 453  : }

  0004c	c2 04 00	 ret	 4
?DelMonSpawn@CTMap@@QAEXPAUtagTMONSPAWN@@@Z ENDP	; CTMap::DelMonSpawn
_TEXT	ENDS
EXTRN	_atexit:NEAR
CRT$XCU	SEGMENT
_$S7	DD	FLAT:_$E5
; Function compile flags: /Ogty
CRT$XCU	ENDS
;	COMDAT _$E5
text$yc	SEGMENT
_$E5	PROC NEAR					; COMDAT

; 5    : VBYTE CTMap::m_vTCHANNEL;

  00000	68 00 00 00 00	 push	 OFFSET FLAT:_$E6
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
_$E5	ENDP
; Function compile flags: /Ogty
text$yc	ENDS
;	COMDAT _$E6
text$yd	SEGMENT
_$E6	PROC NEAR					; COMDAT
  00000	a1 04 00 00 00	 mov	 eax, DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $L274406
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$L274406:
  00012	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+4, 0
  0001c	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+8, 0
  00026	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A+12, 0
  00030	c3		 ret	 0
_$E6	ENDP
text$yd	ENDS
PUBLIC	?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A ; CTMap::m_vTCHANNEL
_BSS	SEGMENT
?m_vTCHANNEL@CTMap@@2V?$vector@EV?$allocator@E@std@@@std@@A DB 010H DUP (?) ; CTMap::m_vTCHANNEL
_BSS	ENDS
END
