; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TAICmdChgMode.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTAICmdChgMode@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTAICmdChgMode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTAICmdChgMode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTAICmdChgMode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdChgMode::GetDelay
PUBLIC	?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdChgMode::CanRun
PUBLIC	?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdChgMode::ExecAI
PUBLIC	??0CTAICmdChgMode@@QAE@XZ			; CTAICmdChgMode::CTAICmdChgMode
PUBLIC	??_7CTAICmdChgMode@@6B@				; CTAICmdChgMode::`vftable'
PUBLIC	??_GCTAICmdChgMode@@UAEPAXI@Z			; CTAICmdChgMode::`scalar deleting destructor'
EXTRN	?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CheckCondition
EXTRN	??0CTAICommand@@QAE@XZ:NEAR			; CTAICommand::CTAICommand
EXTRN	??_ECTAICmdChgMode@@UAEPAXI@Z:NEAR		; CTAICmdChgMode::`vector deleting destructor'
;	COMDAT ??_7CTAICmdChgMode@@6B@
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicmdchgmode.cpp
CONST	SEGMENT
??_7CTAICmdChgMode@@6B@ DD FLAT:?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdChgMode::`vftable'
	DD	FLAT:?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
	DD	FLAT:??_ECTAICmdChgMode@@UAEPAXI@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CTAICmdChgMode@@QAE@XZ
_TEXT	SEGMENT
??0CTAICmdChgMode@@QAE@XZ PROC NEAR			; CTAICmdChgMode::CTAICmdChgMode, COMDAT
; _this$ = ecx

; 5    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CTAICommand@@QAE@XZ	; CTAICommand::CTAICommand
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTAICmdChgMode@@6B@

; 6    : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CTAICmdChgMode@@QAE@XZ ENDP				; CTAICmdChgMode::CTAICmdChgMode
_TEXT	ENDS
PUBLIC	??1CTAICmdChgMode@@UAE@XZ			; CTAICmdChgMode::~CTAICmdChgMode
EXTRN	??1CTAICommand@@UAE@XZ:NEAR			; CTAICommand::~CTAICommand
; Function compile flags: /Ogty
;	COMDAT ??1CTAICmdChgMode@@UAE@XZ
_TEXT	SEGMENT
??1CTAICmdChgMode@@UAE@XZ PROC NEAR			; CTAICmdChgMode::~CTAICmdChgMode, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTAICmdChgMode@@6B@

; 10   : }

  00006	e9 00 00 00 00	 jmp	 ??1CTAICommand@@UAE@XZ	; CTAICommand::~CTAICommand
??1CTAICmdChgMode@@UAE@XZ ENDP				; CTAICmdChgMode::~CTAICmdChgMode
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgMode::GetDelay, COMDAT
; _this$ = ecx

; 14   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 15   : }

  00002	c2 10 00	 ret	 16			; 00000010H
?GetDelay@CTAICmdChgMode@@UAEKPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgMode::GetDelay
_TEXT	ENDS
EXTRN	?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CanRun
EXTRN	?CheckAttack@CTObjBase@@QAEEXZ:NEAR		; CTObjBase::CheckAttack
; Function compile flags: /Ogty
;	COMDAT ?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgMode::CanRun, COMDAT
; _this$ = ecx

; 18   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 19   : 	if( pMON->m_bStatus != OS_WAKEUP ||
; 20   : 		pMON->m_dwHostID != dwEventHost ||
; 21   : 		(pMON->m_bMode == MT_NORMAL && !pMON->CheckAttack()))

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR _pMON$[esp+4]
  00006	80 be cc 00 00
	00 01		 cmp	 BYTE PTR [esi+204], 1
  0000d	57		 push	 edi
  0000e	8b d9		 mov	 ebx, ecx
  00010	75 37		 jne	 SHORT $L152250
  00012	8b 7c 24 14	 mov	 edi, DWORD PTR _dwEventHost$[esp+8]
  00016	39 be f8 00 00
	00		 cmp	 DWORD PTR [esi+248], edi
  0001c	75 2b		 jne	 SHORT $L152250
  0001e	8a 46 76	 mov	 al, BYTE PTR [esi+118]
  00021	84 c0		 test	 al, al
  00023	75 0b		 jne	 SHORT $L152249
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?CheckAttack@CTObjBase@@QAEEXZ ; CTObjBase::CheckAttack
  0002c	84 c0		 test	 al, al
  0002e	74 19		 je	 SHORT $L152250
$L152249:

; 23   : 
; 24   : 	return CTAICommand::CanRun( pMON, dwEventHost, dwRHId, bRHType);

  00030	8b 44 24 1c	 mov	 eax, DWORD PTR _bRHType$[esp+8]
  00034	8b 4c 24 18	 mov	 ecx, DWORD PTR _dwRHId$[esp+8]
  00038	50		 push	 eax
  00039	51		 push	 ecx
  0003a	57		 push	 edi
  0003b	56		 push	 esi
  0003c	8b cb		 mov	 ecx, ebx
  0003e	e8 00 00 00 00	 call	 ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::CanRun
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 25   : }

  00046	c2 10 00	 ret	 16			; 00000010H
$L152250:
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi

; 22   : 		return FALSE;

  0004b	32 c0		 xor	 al, al
  0004d	5b		 pop	 ebx

; 25   : }

  0004e	c2 10 00	 ret	 16			; 00000010H
?CanRun@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgMode::CanRun
_TEXT	ENDS
EXTRN	?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::ExecAI
; Function compile flags: /Ogty
;	COMDAT ?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgMode::ExecAI, COMDAT
; _this$ = ecx

; 28   : {

  00000	56		 push	 esi

; 29   : 	switch(pMON->m_bMode)

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pMON$[esp]
  00005	0f b6 46 76	 movzx	 eax, BYTE PTR [esi+118]
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	33 c9		 xor	 ecx, ecx
  0000e	2b c1		 sub	 eax, ecx
  00010	74 29		 je	 SHORT $L152262
  00012	48		 dec	 eax
  00013	74 14		 je	 SHORT $L152263
  00015	48		 dec	 eax
  00016	75 27		 jne	 SHORT $L152259

; 39   : 	case MT_GOHOME	:
; 40   : 		pMON->m_bMode = MT_NORMAL;

  00018	88 4e 76	 mov	 BYTE PTR [esi+118], cl

; 41   : 		pMON->m_dwTargetID = 0;

  0001b	89 8e 38 01 00
	00		 mov	 DWORD PTR [esi+312], ecx

; 42   : 		pMON->m_bTargetType = 0;

  00021	88 8e 34 01 00
	00		 mov	 BYTE PTR [esi+308], cl

; 43   : 		break;

  00027	eb 16		 jmp	 SHORT $L152259
$L152263:

; 33   : 		break;
; 34   : 	case MT_BATTLE	:
; 35   : 		pMON->m_bMode = MT_GOHOME;

  00029	c6 46 76 02	 mov	 BYTE PTR [esi+118], 2

; 36   : 		pMON->m_dwTargetID = 0;

  0002d	89 8e 38 01 00
	00		 mov	 DWORD PTR [esi+312], ecx

; 37   : 		pMON->m_bTargetType = 0;

  00033	88 8e 34 01 00
	00		 mov	 BYTE PTR [esi+308], cl

; 38   : 		break;

  00039	eb 04		 jmp	 SHORT $L152259
$L152262:

; 30   : 	{
; 31   : 	case MT_NORMAL	:
; 32   : 		pMON->m_bMode = MT_BATTLE;

  0003b	c6 46 76 01	 mov	 BYTE PTR [esi+118], 1
$L152259:

; 44   : 	}
; 45   : 
; 46   : 	pMON->ChgMode(pMON->m_bMode);

  0003f	8b 06		 mov	 eax, DWORD PTR [esi]
  00041	33 c9		 xor	 ecx, ecx
  00043	8a 4e 76	 mov	 cl, BYTE PTR [esi+118]
  00046	51		 push	 ecx
  00047	8b ce		 mov	 ecx, esi
  00049	ff 50 30	 call	 DWORD PTR [eax+48]

; 47   : 	pMON->m_dwHostKEY++;

  0004c	8b 8e f4 00 00
	00		 mov	 ecx, DWORD PTR [esi+244]

; 48   : 
; 49   : 	return CTAICommand::ExecAI( pMON, dwEventHost, dwRHId, bRHType);

  00052	8b 54 24 18	 mov	 edx, DWORD PTR _bRHType$[esp+4]
  00056	8b 44 24 14	 mov	 eax, DWORD PTR _dwRHId$[esp+4]
  0005a	41		 inc	 ecx
  0005b	52		 push	 edx
  0005c	89 8e f4 00 00
	00		 mov	 DWORD PTR [esi+244], ecx
  00062	8b 4c 24 14	 mov	 ecx, DWORD PTR _dwEventHost$[esp+8]
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	56		 push	 esi
  00069	8b cf		 mov	 ecx, edi
  0006b	e8 00 00 00 00	 call	 ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::ExecAI
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi

; 50   : }

  00072	c2 10 00	 ret	 16			; 00000010H
?ExecAI@CTAICmdChgMode@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgMode::ExecAI
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCTAICmdChgMode@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTAICmdChgMode@@UAEPAXI@Z PROC NEAR			; CTAICmdChgMode::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTAICmdChgMode@@UAE@XZ ; CTAICmdChgMode::~CTAICmdChgMode
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L152710
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L152710:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTAICmdChgMode@@UAEPAXI@Z ENDP			; CTAICmdChgMode::`scalar deleting destructor'
_TEXT	ENDS
END
