; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\Quest.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CQuest@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCQuest@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CQuest@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAPAUtagQUESTTEMP@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@E@std@@QBE_NABE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEAAPAUtagQUESTTEMP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@ABE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEABQAUtagQUESTTEMP@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagQUESTTERM@@IPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAPAUtagQUESTTERM@@PAPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAPAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagQUESTTERM@@PAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEXPAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXPAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEPAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAUtagQUESTTERM@@@std@@YAPAPAUtagQUESTTERM@@IPAPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?max_size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUtagQUESTTERM@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE@V?$allocator@PAUtagQUESTTERM@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CQuest@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?size@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEIXZ ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L155364
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L155364:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::size
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L155374
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L155374:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::capacity
_TEXT	ENDS
PUBLIC	??R?$less@E@std@@QBE_NABE0@Z			; std::less<unsigned char>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@E@std@@QBE_NABE0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@E@std@@QBE_NABE0@Z PROC NEAR			; std::less<unsigned char>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	33 c0		 xor	 eax, eax
  0000c	3a 0a		 cmp	 cl, BYTE PTR [edx]
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 140  : 		}

  00012	c2 08 00	 ret	 8
??R?$less@E@std@@QBE_NABE0@Z ENDP			; std::less<unsigned char>::operator()
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTInven@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAVCTItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@@Z ; std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@SAABEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@@Z ENDP ; std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@@Z ; std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@SAABKABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEABQAUtagQUESTTEMP@@XZ ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEABQAUtagQUESTTEMP@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEABQAUtagQUESTTEMP@@XZ PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEABQAUtagQUESTTEMP@@XZ ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABV012@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154547
  0000d	8d 49 00	 npad	 3
$L154546:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154546
$L154547:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L154557
  0000d	8d 49 00	 npad	 3
$L154556:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L154556
$L154557:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z ; std::_Ptr_cat<tagQUESTTERM>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z PROC NEAR ; std::_Ptr_cat<tagQUESTTERM>, COMDAT

; 218  : 	{	// return pointer category from pointer to pointer arguments

  00000	51		 push	 ecx

; 219  : 	_Scalar_ptr_iterator_tag _Cat;
; 220  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 221  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z ENDP ; std::_Ptr_cat<tagQUESTTERM>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z ; std::fill<tagQUESTTERM * *,tagQUESTTERM *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z PROC NEAR ; std::fill<tagQUESTTERM * *,tagQUESTTERM *>, COMDAT

; 1135 : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR __Last$[esp-4]
  00008	3b c1		 cmp	 eax, ecx
  0000a	74 11		 je	 SHORT $L154931
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L154929:

; 1136 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	3b c1		 cmp	 eax, ecx
  0001a	75 f5		 jne	 SHORT $L154929
  0001c	5e		 pop	 esi
$L154931:

; 1137 : 	}

  0001d	c3		 ret	 0
??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z ENDP ; std::fill<tagQUESTTERM * *,tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagQUESTTERM * *,tagQUESTTERM * *>
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ??$_Copy_backward_opt@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<tagQUESTTERM * *,tagQUESTTERM * *>, COMDAT

; 1059 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2

; 1060 : 	return ((_OutIt)memmove(&*_Dest - _Off, &*_First,
; 1061 : 		_Off * sizeof (*_First)));

  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1062 : 	}

  00021	c3		 ret	 0
??$_Copy_backward_opt@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<tagQUESTTERM * *,tagQUESTTERM * *>
_TEXT	ENDS
PUBLIC	??$fill_n@PAPAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@@Z ; std::fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *>
; Function compile flags: /Ogty
;	COMDAT ??$fill_n@PAPAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill_n@PAPAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@@Z PROC NEAR ; std::fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *>, COMDAT

; 1160 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	76 14		 jbe	 SHORT $L155097
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00010	56		 push	 esi
$L155095:

; 1161 : 		*_First = _Val;

  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L155095
  0001b	5e		 pop	 esi
$L155097:

; 1162 : 	}

  0001c	c3		 ret	 0
??$fill_n@PAPAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@@Z ENDP ; std::fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUtagQUESTTERM@@PAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagQUESTTERM *,tagQUESTTERM *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@PAUtagQUESTTERM@@PAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAUtagQUESTTERM@@PAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<tagQUESTTERM *,tagQUESTTERM *>, COMDAT

; 106  : 	size_t _Count = (size_t)(_Last - _First);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2

; 107  : 	return ((_Ty2 *)memmove(&*_Dest, &*_First,
; 108  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 109  : 	}

  00027	c3		 ret	 0
??$_Uninit_copy@PAUtagQUESTTERM@@PAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<tagQUESTTERM *,tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L155551:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L155551
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L155565
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L155565:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L155573
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L155573:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::size
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@XZ	; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@XZ PROC NEAR	; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@XZ ENDP	; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L155581
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L155581:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@ABV01@@Z ; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>
; Function compile flags: /Ogty
;	COMDAT ??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAUtagQUESTTERM@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<tagQUESTTERM *>::allocator<tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEXPAPAUtagQUESTTERM@@I@Z ; std::allocator<tagQUESTTERM *>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEXPAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEXPAPAUtagQUESTTERM@@I@Z PROC NEAR ; std::allocator<tagQUESTTERM *>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEXPAPAUtagQUESTTERM@@I@Z ENDP ; std::allocator<tagQUESTTERM *>::deallocate
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEABQAUtagQUESTTERM@@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L155603
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L155604
$L155603:
  00011	8b d0		 mov	 edx, eax
$L155604:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L150517
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L155611
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L155611:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L150517
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L150517:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAUtagQUESTTERM@@@std@@QBEIXZ ; std::allocator<tagQUESTTERM *>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@PAUtagQUESTTERM@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAUtagQUESTTERM@@@std@@QBEIXZ PROC NEAR ; std::allocator<tagQUESTTERM *>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAUtagQUESTTERM@@@std@@QBEIXZ ENDP ; std::allocator<tagQUESTTERM *>::max_size
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@@Z PROC NEAR ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ENDP ; std::_Destroy_range<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUtagQUESTTERM@@@std@@YAPAPAUtagQUESTTERM@@IPAPAU1@@Z ; std::_Allocate<tagQUESTTERM *>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@PAUtagQUESTTERM@@@std@@YAPAPAUtagQUESTTERM@@IPAPAU1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUtagQUESTTERM@@@std@@YAPAPAUtagQUESTTERM@@IPAPAU1@@Z PROC NEAR ; std::_Allocate<tagQUESTTERM *>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@PAUtagQUESTTERM@@@std@@YAPAPAUtagQUESTTERM@@IPAPAU1@@Z ENDP ; std::_Allocate<tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@KAABEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTInven@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEAAPAUtagQUESTTEMP@@XZ ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEAAPAUtagQUESTTEMP@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEAAPAUtagQUESTTEMP@@XZ PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBEAAPAUtagQUESTTEMP@@XZ ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 02	 sar	 eax, 2

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE@PAPAUtagQUESTTEMP@@@Z ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L154521

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L155854

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L155842
  0001d	8d 49 00	 npad	 3
$L155841:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L155841
$L155842:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L155854:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L154525
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L154524:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L154525

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L154524
$L154525:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L154521:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L154531

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L155904

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L155892
  0001d	8d 49 00	 npad	 3
$L155891:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L155891
$L155892:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L155904:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L154535
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L154534:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L154535

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L154534
$L154535:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L154531:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z ; std::copy_backward<tagQUESTTERM * *,tagQUESTTERM * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z PROC NEAR ; std::copy_backward<tagQUESTTERM * *,tagQUESTTERM * *>, COMDAT

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	c1 f8 02	 sar	 eax, 2
  0000d	c1 e0 02	 shl	 eax, 2
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	8b 4c 24 14	 mov	 ecx, DWORD PTR __Dest$[esp+4]
  00016	2b c8		 sub	 ecx, eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 _memmove
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1070 : 	}

  00021	c3		 ret	 0
??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z ENDP ; std::copy_backward<tagQUESTTERM * *,tagQUESTTERM * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagQUESTTERM *,unsigned int,tagQUESTTERM *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_fill_n@PAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<tagQUESTTERM *,unsigned int,tagQUESTTERM *>, COMDAT

; 237  : 	fill_n(_First, _Count, _Val);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L155928
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L155926:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L155926
  0001b	5e		 pop	 esi
$L155928:

; 238  : 	}

  0001c	c3		 ret	 0
??$_Uninit_fill_n@PAUtagQUESTTERM@@IPAU1@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<tagQUESTTERM *,unsigned int,tagQUESTTERM *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAUtagQUESTTERM@@PAPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ; std::_Uninitialized_copy<tagQUESTTERM * *,tagQUESTTERM * *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
;	COMDAT ??$_Uninitialized_copy@PAPAUtagQUESTTERM@@PAPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAUtagQUESTTERM@@PAPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<tagQUESTTERM * *,tagQUESTTERM * *,std::allocator<tagQUESTTERM *> >, COMDAT

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 129  : 	}

  00027	c3		 ret	 0
??$_Uninitialized_copy@PAPAUtagQUESTTERM@@PAPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ENDP ; std::_Uninitialized_copy<tagQUESTTERM * *,tagQUESTTERM * *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE_NXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?empty@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L155952
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L155952:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE_NXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::empty
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXPAPAUtagQUESTTERM@@0@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXPAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXPAPAUtagQUESTTERM@@0@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXPAPAUtagQUESTTERM@@0@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L155969

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L155969:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE@V?$allocator@PAUtagQUESTTERM@@@1@@Z ; std::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE@V?$allocator@PAUtagQUESTTERM@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE@V?$allocator@PAUtagQUESTTERM@@@1@@Z PROC NEAR ; std::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE@V?$allocator@PAUtagQUESTTERM@@@1@@Z ENDP ; std::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Vector_val<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEAAPAUtagQUESTTERM@@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L155994
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L155994:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEPAPAUtagQUESTTERM@@I@Z ; std::allocator<tagQUESTTERM *>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEPAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEPAPAUtagQUESTTERM@@I@Z PROC NEAR ; std::allocator<tagQUESTTERM *>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@PAUtagQUESTTERM@@@std@@QAEPAPAUtagQUESTTERM@@I@Z ENDP ; std::allocator<tagQUESTTERM *>::allocate
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@PAPAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	f7 d9		 neg	 ecx
  0000a	c1 e1 02	 shl	 ecx, 2
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  00011	c2 04 00	 ret	 4
??Ziterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTInven@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAVCTItem@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::begin
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Lbound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@ABE@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L154449
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8a 12		 mov	 dl, BYTE PTR [edx]
  00013	53		 push	 ebx
$L154448:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	38 51 0c	 cmp	 BYTE PTR [ecx+12], dl
  00017	73 05		 jae	 SHORT $L154450

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L154451
$L154450:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L154451:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L154448
  00029	5b		 pop	 ebx
$L154449:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@2@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L154478
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L154477:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L154479

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L154480
$L154479:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L154480:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L154477
  00029	5b		 pop	 ebx
$L154478:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAPAUtagQUESTTERM@@IPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ; std::_Uninitialized_fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAPAUtagQUESTTERM@@IPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAPAUtagQUESTTERM@@IPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	85 c9		 test	 ecx, ecx
  00006	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  0000a	76 10		 jbe	 SHORT $L156309
  0000c	8b 54 24 0c	 mov	 edx, DWORD PTR __Val$[esp-4]
  00010	56		 push	 esi
$L156307:
  00011	8b 32		 mov	 esi, DWORD PTR [edx]
  00013	89 30		 mov	 DWORD PTR [eax], esi
  00015	83 c0 04	 add	 eax, 4
  00018	49		 dec	 ecx
  00019	75 f6		 jne	 SHORT $L156307
  0001b	5e		 pop	 esi
$L156309:

; 258  : 	}

  0001c	c3		 ret	 0
??$_Uninitialized_fill_n@PAPAUtagQUESTTERM@@IPAU1@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@IABQAU1@AAV?$allocator@PAUtagQUESTTERM@@@0@@Z ENDP ; std::_Uninitialized_fill_n<tagQUESTTERM * *,unsigned int,tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ucopy<tagQUESTTERM * *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ucopy<tagQUESTTERM * *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 08	 mov	 eax, DWORD PTR __Last$[esp-4]
  00008	2b c1		 sub	 eax, ecx
  0000a	56		 push	 esi
  0000b	c1 f8 02	 sar	 eax, 2
  0000e	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Ptr$[esp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 805  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ucopy<tagQUESTTERM * *>
_TEXT	ENDS
PUBLIC	??1?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::~vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::~vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L156345
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L156345:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::~vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::pop_back
; Function compile flags: /Ogty
;	COMDAT ?pop_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::pop_back, COMDAT
; _this$ = ecx

; 587  : 		{	// erase element at end

  00000	56		 push	 esi

; 588  : 		if (!empty())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	74 14		 je	 SHORT $L148163
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	8b c2		 mov	 eax, edx
  0000d	2b c6		 sub	 eax, esi
  0000f	c1 f8 02	 sar	 eax, 2
  00012	85 c0		 test	 eax, eax
  00014	74 06		 je	 SHORT $L148163

; 589  : 			{	// erase last element
; 590  : 			_Destroy(_Mylast - 1, _Mylast);
; 591  : 			--_Mylast;

  00016	83 c2 fc	 add	 edx, -4			; fffffffcH
  00019	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$L148163:
  0001c	5e		 pop	 esi

; 592  : 			}
; 593  : 		}

  0001d	c3		 ret	 0
?pop_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::pop_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::clear, COMDAT
; _this$ = ecx

; 743  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 744  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L156376
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L156376:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 745  : 		}

  00029	c3		 ret	 0
?clear@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::clear
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L156387

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L156387

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L156384
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L156384:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L156387:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?end@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::end
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?end@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::end
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000d	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00011	2b ca		 sub	 ecx, edx
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00015	c2 08 00	 ret	 8
??Giterator@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L149765

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L149765:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L149766

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L149766:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L156476

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L156442
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L156443
$L156442:
  00036	8b d3		 mov	 edx, ebx
$L156443:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L156449
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L156450
$L156449:
  00041	8b cb		 mov	 ecx, ebx
$L156450:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L156473

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L156473:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L156476:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T156684 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T156686 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L156484
$T156687 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L156482
$T156685 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T156686
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T156687
$T156678 DD	019930520H
	DD	04H
	DD	FLAT:$T156684
	DD	02H
	DD	FLAT:$T156685
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L150507

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L150509
$L150507:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L150509
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L150509

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L150509:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L150511
$L156482:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L156679
  00092	c3		 ret	 0
$L156679:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L150511:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L156601

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L156598
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L156599
$L156598:
  000ae	83 c6 04	 add	 esi, 4
$L156599:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L156601:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L156643
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L156643:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L156672
  000f2	8b c2		 mov	 eax, edx
$L156672:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L156484:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L156582
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L156582:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156689:
$L156683:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156678
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@I@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAPAUtagQUESTTEMP@@I@Z ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAPAUtagQUESTTEMP@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAPAUtagQUESTTEMP@@I@Z PROC NEAR ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@QAEAAPAUtagQUESTTEMP@@I@Z ENDP ; std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> >::operator[]
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ufill, COMDAT
; _this$ = ecx

; 877  : 		{	// copy initializing _Count * _Val, using allocator

  00000	56		 push	 esi

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00005	85 f6		 test	 esi, esi
  00007	57		 push	 edi
  00008	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000c	8b c7		 mov	 eax, edi
  0000e	76 12		 jbe	 SHORT $L156807
  00010	8b 54 24 14	 mov	 edx, DWORD PTR __Val$[esp+4]
  00014	8b ce		 mov	 ecx, esi
  00016	53		 push	 ebx
$L156800:
  00017	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00019	89 18		 mov	 DWORD PTR [eax], ebx
  0001b	83 c0 04	 add	 eax, 4
  0001e	49		 dec	 ecx
  0001f	75 f6		 jne	 SHORT $L156800
  00021	5b		 pop	 ebx
$L156807:

; 879  : 		return (_Ptr + _Count);

  00022	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 880  : 		}

  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ufill
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L156880
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8a 12		 mov	 dl, BYTE PTR [edx]
  00013	53		 push	 ebx
$L156867:
  00014	38 50 0c	 cmp	 BYTE PTR [eax+12], dl
  00017	73 05		 jae	 SHORT $L156869
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L156870
$L156869:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L156870:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L156867
  00029	5b		 pop	 ebx
$L156880:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L156953
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L156940:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L156942
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L156943
$L156942:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L156943:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L156940
  00029	5b		 pop	 ebx
$L156953:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L157002
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L157002:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@XZ
_TEXT	SEGMENT
?back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 04	 sub	 eax, 4

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEAAPAUtagQUESTTERM@@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::back
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L149774

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L149774:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L149775

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L149775:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L149777
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L149777
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L157068
  00047	8b de		 mov	 ebx, esi
$L157068:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L157122
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L157121
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L157121:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L157122:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L149777:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L157160

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L157157
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L157157:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L157160:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z ; CQuest::CheckComplete
PUBLIC	?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z ; CQuest::CheckComplete
PUBLIC	?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z ; CQuest::ExecQuest
PUBLIC	??1CQuest@@UAE@XZ				; CQuest::~CQuest
PUBLIC	??_7CQuest@@6B@					; CQuest::`vftable'
PUBLIC	??_GCQuest@@UAEPAXI@Z				; CQuest::`scalar deleting destructor'
EXTRN	??_ECQuest@@UAEPAXI@Z:NEAR			; CQuest::`vector deleting destructor'
;	COMDAT ??_7CQuest@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
CONST	SEGMENT
??_7CQuest@@6B@ DD FLAT:?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z ; CQuest::`vftable'
	DD	FLAT:?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z
	DD	FLAT:?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z
	DD	FLAT:??_ECQuest@@UAEPAXI@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\quest.cpp
CONST	ENDS
;	COMDAT ??1CQuest@@UAE@XZ
_TEXT	SEGMENT
??1CQuest@@UAE@XZ PROC NEAR				; CQuest::~CQuest, COMDAT
; _this$ = ecx

; 35   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CQuest@@6B@
  0000a	33 ff		 xor	 edi, edi
  0000c	8d 64 24 00	 npad	 4
$L152236:

; 36   : 	while(!m_vTERM.empty())

  00010	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00013	3b cf		 cmp	 ecx, edi
  00015	74 3a		 je	 SHORT $L157312
  00017	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0001a	2b c1		 sub	 eax, ecx
  0001c	c1 f8 02	 sar	 eax, 2
  0001f	3b c7		 cmp	 eax, edi
  00021	74 2e		 je	 SHORT $L157312

; 37   : 	{
; 38   : 		delete m_vTERM.back();

  00023	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00026	83 e8 04	 sub	 eax, 4
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 39   : 		m_vTERM.pop_back();

  00031	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00034	83 c4 04	 add	 esp, 4
  00037	3b cf		 cmp	 ecx, edi
  00039	74 d5		 je	 SHORT $L152236
  0003b	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0003e	8b c2		 mov	 eax, edx
  00040	2b c1		 sub	 eax, ecx
  00042	c1 f8 02	 sar	 eax, 2
  00045	3b c7		 cmp	 eax, edi
  00047	74 c7		 je	 SHORT $L152236
  00049	83 c2 fc	 add	 edx, -4			; fffffffcH
  0004c	89 56 10	 mov	 DWORD PTR [esi+16], edx

; 40   : 	}

  0004f	eb bf		 jmp	 SHORT $L152236
$L157312:

; 41   : 	m_vTERM.clear();

  00051	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00054	3b c7		 cmp	 eax, edi
  00056	74 09		 je	 SHORT $L157286
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005e	83 c4 04	 add	 esp, 4
$L157286:

; 42   : }

  00061	8b c7		 mov	 eax, edi
  00063	3b c7		 cmp	 eax, edi
  00065	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00068	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  0006b	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  0006e	74 09		 je	 SHORT $L157307
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00076	83 c4 04	 add	 esp, 4
$L157307:
  00079	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0007c	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  0007f	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	c3		 ret	 0
??1CQuest@@UAE@XZ ENDP					; CQuest::~CQuest
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z
_TEXT	SEGMENT
_pPlayer$ = 8						; size = 4
_dwTick$ = 12						; size = 4
?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z PROC NEAR ; CQuest::CheckComplete, COMDAT
; _this$ = ecx

; 112  : {

  00000	53		 push	 ebx

; 113  : 	for( int i=0; i<INT(m_pQUEST->m_vTerm.size()); i++)

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _dwTick$[esp]
  00005	55		 push	 ebp
  00006	8b 6c 24 0c	 mov	 ebp, DWORD PTR _pPlayer$[esp+4]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f1		 mov	 esi, ecx
  0000e	33 ff		 xor	 edi, edi
$L153768:
  00010	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00013	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00016	85 d2		 test	 edx, edx
  00018	75 04		 jne	 SHORT $L157320
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 08		 jmp	 SHORT $L157321
$L157320:
  0001e	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00021	2b c2		 sub	 eax, edx
  00023	c1 f8 02	 sar	 eax, 2
$L157321:
  00026	3b f8		 cmp	 edi, eax
  00028	7d 2a		 jge	 SHORT $L153770
  0002a	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]

; 114  : 		if( CheckComplete( pPlayer, dwTick, m_pQUEST->m_vTerm[i]) != QTS_SUCCESS )

  0002d	8b 16		 mov	 edx, DWORD PTR [esi]
  0002f	8d 04 b8	 lea	 eax, DWORD PTR [eax+edi*4]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	50		 push	 eax
  00035	53		 push	 ebx
  00036	55		 push	 ebp
  00037	8b ce		 mov	 ecx, esi
  00039	ff 12		 call	 DWORD PTR [edx]
  0003b	3c 01		 cmp	 al, 1
  0003d	75 03		 jne	 SHORT $L157437

; 113  : 	for( int i=0; i<INT(m_pQUEST->m_vTerm.size()); i++)

  0003f	47		 inc	 edi
  00040	eb ce		 jmp	 SHORT $L153768
$L157437:

; 115  : 			return m_pQUEST->m_vTerm[i];

  00042	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00045	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00048	8d 04 ba	 lea	 eax, DWORD PTR [edx+edi*4]
  0004b	8b 00		 mov	 eax, DWORD PTR [eax]
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5d		 pop	 ebp
  00050	5b		 pop	 ebx

; 118  : }

  00051	c2 08 00	 ret	 8
$L153770:
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5d		 pop	 ebp

; 116  : 
; 117  : 	return NULL;

  00057	33 c0		 xor	 eax, eax
  00059	5b		 pop	 ebx

; 118  : }

  0005a	c2 08 00	 ret	 8
?CheckComplete@CQuest@@UAEPAUtagQUESTTERM@@PAVCTPlayer@@K@Z ENDP ; CQuest::CheckComplete
_TEXT	ENDS
PUBLIC	?FindTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z	; CQuest::FindTerm
; Function compile flags: /Ogty
;	COMDAT ?FindTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z
_TEXT	SEGMENT
_dwTermID$ = 8						; size = 4
_bType$ = 12						; size = 1
?FindTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z PROC NEAR	; CQuest::FindTerm, COMDAT
; _this$ = ecx

; 230  : {

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	53		 push	 ebx

; 231  : 	for( int i=0; i<INT(m_pQUEST->m_vTerm.size()); i++)

  00004	8a 5c 24 0c	 mov	 bl, BYTE PTR _bType$[esp]
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR _dwTermID$[esp+12]
  00012	33 d2		 xor	 edx, edx
$L154035:
  00014	85 f6		 test	 esi, esi
  00016	75 04		 jne	 SHORT $L157445
  00018	33 c0		 xor	 eax, eax
  0001a	eb 08		 jmp	 SHORT $L157446
$L157445:
  0001c	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0001f	2b c6		 sub	 eax, esi
  00021	c1 f8 02	 sar	 eax, 2
$L157446:
  00024	3b d0		 cmp	 edx, eax
  00026	7d 27		 jge	 SHORT $L154037
  00028	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]

; 232  : 		if( m_pQUEST->m_vTerm[i]->m_dwTermID == dwTermID &&
; 233  : 			m_pQUEST->m_vTerm[i]->m_bTermType == bType )

  0002b	8b 2c 90	 mov	 ebp, DWORD PTR [eax+edx*4]
  0002e	39 7d 00	 cmp	 DWORD PTR [ebp], edi
  00031	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  00034	75 07		 jne	 SHORT $L154036
  00036	8b c5		 mov	 eax, ebp
  00038	38 58 04	 cmp	 BYTE PTR [eax+4], bl
  0003b	74 03		 je	 SHORT $L157618
$L154036:

; 231  : 	for( int i=0; i<INT(m_pQUEST->m_vTerm.size()); i++)

  0003d	42		 inc	 edx
  0003e	eb d4		 jmp	 SHORT $L154035
$L157618:

; 234  : 			return m_pQUEST->m_vTerm[i];

  00040	8b 49 24	 mov	 ecx, DWORD PTR [ecx+36]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00048	8b 00		 mov	 eax, DWORD PTR [eax]
  0004a	5d		 pop	 ebp
  0004b	5b		 pop	 ebx

; 237  : }

  0004c	c2 08 00	 ret	 8
$L154037:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5d		 pop	 ebp

; 235  : 
; 236  : 	return NULL;

  00052	33 c0		 xor	 eax, eax
  00054	5b		 pop	 ebx

; 237  : }

  00055	c2 08 00	 ret	 8
?FindTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z ENDP		; CQuest::FindTerm
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z
_TEXT	SEGMENT
$T157625 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	56		 push	 esi
  00003	8b f1		 mov	 esi, ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00005	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00008	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000b	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0000e	84 c9		 test	 cl, cl
  00010	57		 push	 edi
  00011	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00015	75 1e		 jne	 SHORT $L157702
  00017	8a 0f		 mov	 cl, BYTE PTR [edi]
  00019	8d a4 24 00 00
	00 00		 npad	 7
$L157701:
  00020	38 48 0c	 cmp	 BYTE PTR [eax+12], cl
  00023	73 05		 jae	 SHORT $L157703
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	eb 04		 jmp	 SHORT $L157704
$L157703:
  0002a	8b d0		 mov	 edx, eax
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
$L157704:
  0002e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00031	84 db		 test	 bl, bl
  00033	74 eb		 je	 SHORT $L157701
$L157702:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	3b d0		 cmp	 edx, eax
  0003a	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  0003e	74 1a		 je	 SHORT $L157624
  00040	8a 0f		 mov	 cl, BYTE PTR [edi]
  00042	3a 4a 0c	 cmp	 cl, BYTE PTR [edx+12]
  00045	72 13		 jb	 SHORT $L157624
  00047	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	89 10		 mov	 DWORD PTR [eax], edx
  00055	5b		 pop	 ebx

; 791  : 		}

  00056	59		 pop	 ecx
  00057	c2 08 00	 ret	 8
$L157624:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0005a	89 44 24 0c	 mov	 DWORD PTR $T157625[esp+16], eax
  0005e	8d 44 24 0c	 lea	 eax, DWORD PTR $T157625[esp+16]
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5b		 pop	 ebx

; 791  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::find
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T157789 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L157884
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L157883:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L157885
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L157886
$L157885:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L157886:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L157883
$L157884:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L157788
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L157788
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L157788:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T157789[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T157789[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L158029
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L158029:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L158063
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L158063:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158070
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158070:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L148837

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L148837:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L148839

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L148839:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L148840

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L148840:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L158179
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L158179:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L158180
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L158267:
  0006b	76 6d		 jbe	 SHORT $L158266

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L158232
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L158233

; 599  : 		else if (_Grow(_Num))

$L158180:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L158267
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L158223
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L158223:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L158232:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L158233:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L158239
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L158240
$L158239:
  000b7	8b f8		 mov	 edi, eax
$L158240:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L158263
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L158263:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L158266:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L158289
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L158290
$L158289:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L158290:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L149761
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L158293
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L158294
$L158293:
  00029	8b c8		 mov	 ecx, eax
$L158294:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L149761

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L158306
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L158306:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L149761:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L158404
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L158404:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L158405
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L158485:
  00077	76 68		 jbe	 SHORT $L158482

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L158457
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L158458

; 611  : 
; 612  : 		if (_Grow(_Num))

$L158405:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L158485
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L158448
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L158448:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L158457:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L158458:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L158480
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L158480:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L158482:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_GCQuest@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCQuest@@UAEPAXI@Z PROC NEAR				; CQuest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CQuest@@UAE@XZ	; CQuest::~CQuest
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158489
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158489:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCQuest@@UAEPAXI@Z ENDP				; CQuest::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L158562:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L158562
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L158637:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L158637
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158740 DD	0ffffffffH
	DD	FLAT:$L158641
$T158738 DD	019930520H
	DD	01H
	DD	FLAT:$T158740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158641:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158738
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158750
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158750:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L158838
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L158838:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Xlen
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
xdata$x	SEGMENT
$T158976 DD	0ffffffffH
	DD	FLAT:$L158862
$T158973 DD	019930520H
	DD	01H
	DD	FLAT:$T158976
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T158861 = -80						; size = 28
$T158860 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T158861[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T158861[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T158861[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T158861[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T158861[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158860[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158860[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T158860[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L158977:
$L158975:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158862:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T158861[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158973
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Xlen
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159082 DD	0ffffffffH
	DD	FLAT:$L158983
$T159080 DD	019930520H
	DD	01H
	DD	FLAT:$T159082
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158983:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159080
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n
; Function compile flags: /Ogty
;	COMDAT ?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Newvec$154355 = -4					; size = 4
tv393 = 8						; size = 4
__Where$ = 8						; size = 4
tv382 = 12						; size = 4
__Count$ = 12						; size = 4
__Tmp$ = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	51		 push	 ecx

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  00001	8b 44 24 10	 mov	 eax, DWORD PTR __Val$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 811  : 		size_type _Capacity = capacity();

  00008	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0000b	85 d2		 test	 edx, edx
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	57		 push	 edi
  00010	89 4c 24 18	 mov	 DWORD PTR __Tmp$[esp+8], ecx
  00014	75 04		 jne	 SHORT $L159102
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L159103
$L159102:
  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	2b c2		 sub	 eax, edx
  0001f	c1 f8 02	 sar	 eax, 2
$L159103:

; 812  : 
; 813  : 		if (_Count == 0)

  00022	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  00026	85 ff		 test	 edi, edi
  00028	0f 84 ac 01 00
	00		 je	 $L154375

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  0002e	85 d2		 test	 edx, edx
  00030	75 04		 jne	 SHORT $L159125
  00032	33 c9		 xor	 ecx, ecx
  00034	eb 08		 jmp	 SHORT $L159126
$L159125:
  00036	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00039	2b ca		 sub	 ecx, edx
  0003b	c1 f9 02	 sar	 ecx, 2
$L159126:
  0003e	53		 push	 ebx
  0003f	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00044	2b d9		 sub	 ebx, ecx
  00046	3b df		 cmp	 ebx, edi
  00048	73 07		 jae	 SHORT $L154351

; 816  : 			_Xlen();	// result too long

  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Xlen
$L159257:
$L154351:

; 817  : 		else if (_Capacity < size() + _Count)

  00051	85 d2		 test	 edx, edx
  00053	75 04		 jne	 SHORT $L159132
  00055	33 c9		 xor	 ecx, ecx
  00057	eb 08		 jmp	 SHORT $L159133
$L159132:
  00059	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0005c	2b ca		 sub	 ecx, edx
  0005e	c1 f9 02	 sar	 ecx, 2
$L159133:
  00061	03 cf		 add	 ecx, edi
  00063	3b c1		 cmp	 eax, ecx
  00065	55		 push	 ebp
  00066	0f 83 d6 00 00
	00		 jae	 $L154353

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c8		 mov	 ecx, eax
  0006e	d1 e9		 shr	 ecx, 1
  00070	bb ff ff ff 3f	 mov	 ebx, 1073741823		; 3fffffffH
  00075	2b d9		 sub	 ebx, ecx
  00077	3b d8		 cmp	 ebx, eax
  00079	73 04		 jae	 SHORT $L159092
  0007b	33 c0		 xor	 eax, eax
  0007d	eb 02		 jmp	 SHORT $L159093
$L159092:
  0007f	03 c1		 add	 eax, ecx
$L159093:

; 821  : 			if (_Capacity < size() + _Count)

  00081	85 d2		 test	 edx, edx
  00083	75 04		 jne	 SHORT $L159155
  00085	33 c9		 xor	 ecx, ecx
  00087	eb 08		 jmp	 SHORT $L159156
$L159155:
  00089	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008c	2b ca		 sub	 ecx, edx
  0008e	c1 f9 02	 sar	 ecx, 2
$L159156:
  00091	03 cf		 add	 ecx, edi
  00093	3b c1		 cmp	 eax, ecx
  00095	73 12		 jae	 SHORT $L154354

; 822  : 				_Capacity = size() + _Count;

  00097	85 d2		 test	 edx, edx
  00099	75 04		 jne	 SHORT $L159162
  0009b	33 c0		 xor	 eax, eax
  0009d	eb 08		 jmp	 SHORT $L159163
$L159162:
  0009f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a2	2b c2		 sub	 eax, edx
  000a4	c1 f8 02	 sar	 eax, 2
$L159163:
  000a7	03 c7		 add	 eax, edi
$L154354:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000a9	c1 e0 02	 shl	 eax, 2
  000ac	50		 push	 eax
  000ad	89 44 24 20	 mov	 DWORD PTR tv382[esp+20], eax
  000b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000b6	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000b9	8b 5c 24 1c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  000bd	8b d0		 mov	 edx, eax
  000bf	8b c3		 mov	 eax, ebx
  000c1	2b c1		 sub	 eax, ecx
  000c3	c1 f8 02	 sar	 eax, 2
  000c6	8d 2c 85 00 00
	00 00		 lea	 ebp, DWORD PTR [eax*4]
  000cd	55		 push	 ebp
  000ce	51		 push	 ecx
  000cf	52		 push	 edx
  000d0	89 54 24 20	 mov	 DWORD PTR __Newvec$154355[esp+36], edx
  000d4	e8 00 00 00 00	 call	 _memmove
  000d9	83 c4 10	 add	 esp, 16			; 00000010H

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  000dc	8d 54 24 20	 lea	 edx, DWORD PTR __Tmp$[esp+16]
  000e0	52		 push	 edx
  000e1	03 c5		 add	 eax, ebp
  000e3	57		 push	 edi
  000e4	50		 push	 eax
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ufill

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  000ec	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000ef	2b cb		 sub	 ecx, ebx
  000f1	c1 f9 02	 sar	 ecx, 2
  000f4	c1 e1 02	 shl	 ecx, 2
  000f7	51		 push	 ecx
  000f8	53		 push	 ebx
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 _memmove

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);
; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 834  : 			_RERAISE;
; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  000ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	85 c0		 test	 eax, eax
  00107	75 04		 jne	 SHORT $L159244
  00109	33 c9		 xor	 ecx, ecx
  0010b	eb 08		 jmp	 SHORT $L159245
$L159244:
  0010d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00110	2b c8		 sub	 ecx, eax
  00112	c1 f9 02	 sar	 ecx, 2
$L159245:
  00115	03 f9		 add	 edi, ecx

; 838  : 			if (_Myfirst != 0)

  00117	85 c0		 test	 eax, eax
  00119	74 09		 je	 SHORT $L159249

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);
; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00121	83 c4 04	 add	 esp, 4
$L159249:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  00124	8b 44 24 10	 mov	 eax, DWORD PTR __Newvec$154355[esp+20]
  00128	8b 54 24 1c	 mov	 edx, DWORD PTR tv382[esp+16]
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 844  : 			_Mylast = _Newvec + _Count;

  0012e	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00131	03 d0		 add	 edx, eax
  00133	5f		 pop	 edi
  00134	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00137	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 845  : 			_Myfirst = _Newvec;

  0013a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0013d	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  0013e	59		 pop	 ecx
  0013f	c2 0c 00	 ret	 12			; 0000000cH
$L154353:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00142	8b 6e 08	 mov	 ebp, DWORD PTR [esi+8]
  00145	8b 5c 24 18	 mov	 ebx, DWORD PTR __Where$[esp+16]
  00149	8b d5		 mov	 edx, ebp
  0014b	2b d3		 sub	 edx, ebx
  0014d	c1 fa 02	 sar	 edx, 2
  00150	3b d7		 cmp	 edx, edi

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  00152	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00159	8b ce		 mov	 ecx, esi
  0015b	89 44 24 18	 mov	 DWORD PTR tv393[esp+16], eax
  0015f	73 4b		 jae	 SHORT $L154366
  00161	03 c3		 add	 eax, ebx
  00163	50		 push	 eax
  00164	55		 push	 ebp
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ucopy<tagQUESTTERM * *>

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  0016b	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0016e	8b d0		 mov	 edx, eax
  00170	2b d3		 sub	 edx, ebx
  00172	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00176	51		 push	 ecx
  00177	c1 fa 02	 sar	 edx, 2
  0017a	2b fa		 sub	 edi, edx
  0017c	57		 push	 edi
  0017d	50		 push	 eax
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU3@IABQAU3@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ufill

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 857  : 			_RERAISE;
; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00185	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00188	8b 44 24 18	 mov	 eax, DWORD PTR tv393[esp+16]
  0018c	03 c8		 add	 ecx, eax
  0018e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00191	8b f1		 mov	 esi, ecx

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00193	8d 4c 24 20	 lea	 ecx, DWORD PTR __Tmp$[esp+16]
  00197	51		 push	 ecx
  00198	2b f0		 sub	 esi, eax
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z ; std::fill<tagQUESTTERM * *,tagQUESTTERM *>
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a4	5d		 pop	 ebp
  001a5	5b		 pop	 ebx
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001a8	59		 pop	 ecx
  001a9	c2 0c 00	 ret	 12			; 0000000cH
$L154366:

; 863  : 			}
; 864  : 		else
; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  001ac	55		 push	 ebp
  001ad	8b fd		 mov	 edi, ebp
  001af	2b f8		 sub	 edi, eax
  001b1	55		 push	 ebp
  001b2	57		 push	 edi
  001b3	e8 00 00 00 00	 call	 ??$_Ucopy@PAPAUtagQUESTTERM@@@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEPAPAUtagQUESTTERM@@PAPAU2@00@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Ucopy<tagQUESTTERM * *>

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  001b8	55		 push	 ebp
  001b9	57		 push	 edi
  001ba	53		 push	 ebx
  001bb	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001be	e8 00 00 00 00	 call	 ??$copy_backward@PAPAUtagQUESTTERM@@PAPAU1@@std@@YAPAPAUtagQUESTTERM@@PAPAU1@00@Z ; std::copy_backward<tagQUESTTERM * *,tagQUESTTERM * *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  001c3	8b 44 24 24	 mov	 eax, DWORD PTR tv393[esp+28]
  001c7	8d 54 24 2c	 lea	 edx, DWORD PTR __Tmp$[esp+28]
  001cb	52		 push	 edx
  001cc	03 c3		 add	 eax, ebx
  001ce	50		 push	 eax
  001cf	53		 push	 ebx
  001d0	e8 00 00 00 00	 call	 ??$fill@PAPAUtagQUESTTERM@@PAU1@@std@@YAXPAPAUtagQUESTTERM@@0ABQAU1@@Z ; std::fill<tagQUESTTERM * *,tagQUESTTERM *>
  001d5	83 c4 18	 add	 esp, 24			; 00000018H
  001d8	5d		 pop	 ebp
  001d9	5b		 pop	 ebx
$L154375:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 873  : 			}
; 874  : 		}

  001dc	59		 pop	 ecx
  001dd	c2 0c 00	 ret	 12			; 0000000cH
$L159256:
?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE_NI@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L149424

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L149424:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L149426

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IBEXXZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Xlen
$L159286:
$L149426:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L159285:
?_Buy@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Buy
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L159352
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L159291
$L159352:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L159292
$L159291:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 02	 sar	 esi, 2
$L159292:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003c	8d 14 b1	 lea	 edx, DWORD PTR [ecx+esi*4]
  0003f	5f		 pop	 edi
  00040	89 10		 mov	 DWORD PTR [eax], edx
  00042	5e		 pop	 esi

; 624  : 		}

  00043	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE?AViterator@12@V312@ABQAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::insert
_TEXT	ENDS
PUBLIC	??0?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >
_TEXT	ENDS
PUBLIC	??0CQuest@@QAE@XZ				; CQuest::CQuest
EXTRN	__fltused:NEAR
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\quest.cpp
;	COMDAT ??0CQuest@@QAE@XZ
_TEXT	SEGMENT
??0CQuest@@QAE@XZ PROC NEAR				; CQuest::CQuest, COMDAT
; _this$ = ecx

; 13   : {

  00000	53		 push	 ebx
  00001	33 db		 xor	 ebx, ebx
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CQuest@@6B@
  0000c	89 5e 0c	 mov	 DWORD PTR [esi+12], ebx
  0000f	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00012	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 14   : 	m_pQUEST = NULL;

  00015	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 15   : 	m_pMap = NULL;

  00018	89 5e 24	 mov	 DWORD PTR [esi+36], ebx

; 16   : 	m_vTERM.clear();

  0001b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001e	3b c3		 cmp	 eax, ebx
  00020	74 09		 je	 SHORT $L159516
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	83 c4 04	 add	 esp, 4
$L159516:
  0002b	89 5e 0c	 mov	 DWORD PTR [esi+12], ebx
  0002e	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00031	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 17   : 
; 18   : 	m_bCompleteCount = 0;

  00034	88 5e 20	 mov	 BYTE PTR [esi+32], bl

; 19   : 	m_bTriggerCount = 0;

  00037	88 5e 21	 mov	 BYTE PTR [esi+33], bl

; 20   : 
; 21   : 	m_dwBeginTick = 0;

  0003a	89 5e 18	 mov	 DWORD PTR [esi+24], ebx

; 22   : 	m_dwTick = 0;

  0003d	89 5e 1c	 mov	 DWORD PTR [esi+28], ebx

; 23   : 
; 24   : 	m_bRewardType = 0;

  00040	88 5e 30	 mov	 BYTE PTR [esi+48], bl

; 25   : 	m_dwRewardID = 0;

  00043	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx

; 26   : 
; 27   : 	m_dwMonID = 0;

  00046	89 5e 34	 mov	 DWORD PTR [esi+52], ebx

; 28   : 	m_fPosX = 0;

  00049	89 5e 38	 mov	 DWORD PTR [esi+56], ebx

; 29   : 	m_fPosY = 0;

  0004c	89 5e 3c	 mov	 DWORD PTR [esi+60], ebx

; 30   : 	m_fPosZ = 0;

  0004f	89 5e 40	 mov	 DWORD PTR [esi+64], ebx

; 31   : 	m_bSave = FALSE;  

  00052	88 5e 28	 mov	 BYTE PTR [esi+40], bl

; 32   : }

  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	c3		 ret	 0
??0CQuest@@QAE@XZ ENDP					; CQuest::CQuest
_TEXT	ENDS
PUBLIC	?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z	; CQuest::CreateQuest
EXTRN	??0CQuestComplete@@QAE@XZ:NEAR			; CQuestComplete::CQuestComplete
EXTRN	??0CQuestDefaultTalk@@QAE@XZ:NEAR		; CQuestDefaultTalk::CQuestDefaultTalk
EXTRN	??0CQuestDropItem@@QAE@XZ:NEAR			; CQuestDropItem::CQuestDropItem
EXTRN	??0CQuestGiveItem@@QAE@XZ:NEAR			; CQuestGiveItem::CQuestGiveItem
EXTRN	??0CQuestGiveSkill@@QAE@XZ:NEAR			; CQuestGiveSkill::CQuestGiveSkill
EXTRN	??0CQuestMission@@QAE@XZ:NEAR			; CQuestMission::CQuestMission
EXTRN	??0CQuestSpawnMon@@QAE@XZ:NEAR			; CQuestSpawnMon::CQuestSpawnMon
EXTRN	??0CQuestTeleport@@QAE@XZ:NEAR			; CQuestTeleport::CQuestTeleport
EXTRN	??0CQuestRouting@@QAE@XZ:NEAR			; CQuestRouting::CQuestRouting
EXTRN	??0CQuestTalk@@QAE@XZ:NEAR			; CQuestTalk::CQuestTalk
EXTRN	??0CQuestDrop@@QAE@XZ:NEAR			; CQuestDrop::CQuestDrop
EXTRN	??0CQuestChapterMsg@@QAE@XZ:NEAR		; CQuestChapterMsg::CQuestChapterMsg
EXTRN	??0CQuestSwitch@@QAE@XZ:NEAR			; CQuestSwitch::CQuestSwitch
EXTRN	??0CQuestDieMon@@QAE@XZ:NEAR			; CQuestDieMon::CQuestDieMon
EXTRN	??0CQuestDefendSkill@@QAE@XZ:NEAR		; CQuestDefendSkill::CQuestDefendSkill
EXTRN	??0CQuestDeleteItem@@QAE@XZ:NEAR		; CQuestDeleteItem::CQuestDeleteItem
EXTRN	??0CQuestSendPost@@QAE@XZ:NEAR			; CQuestSendPost::CQuestSendPost
EXTRN	??0CQuestCraft@@QAE@XZ:NEAR			; CQuestCraft::CQuestCraft
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159625 DD	0ffffffffH
	DD	FLAT:$L159601
	DD	0ffffffffH
	DD	FLAT:$L159602
	DD	0ffffffffH
	DD	FLAT:$L159603
	DD	0ffffffffH
	DD	FLAT:$L159604
	DD	0ffffffffH
	DD	FLAT:$L159605
	DD	0ffffffffH
	DD	FLAT:$L159606
	DD	0ffffffffH
	DD	FLAT:$L159607
	DD	0ffffffffH
	DD	FLAT:$L159608
	DD	0ffffffffH
	DD	FLAT:$L159609
	DD	0ffffffffH
	DD	FLAT:$L159610
	DD	0ffffffffH
	DD	FLAT:$L159611
	DD	0ffffffffH
	DD	FLAT:$L159612
	DD	0ffffffffH
	DD	FLAT:$L159613
	DD	0ffffffffH
	DD	FLAT:$L159614
	DD	0ffffffffH
	DD	FLAT:$L159615
	DD	0ffffffffH
	DD	FLAT:$L159616
	DD	0ffffffffH
	DD	FLAT:$L159617
	DD	0ffffffffH
	DD	FLAT:$L159618
	DD	0ffffffffH
	DD	FLAT:$L159619
$T159621 DD	019930520H
	DD	013H
	DD	FLAT:$T159625
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T159598 = 8						; size = 4
$T159594 = 8						; size = 4
$T159590 = 8						; size = 4
$T159586 = 8						; size = 4
$T159582 = 8						; size = 4
$T159578 = 8						; size = 4
$T159574 = 8						; size = 4
$T159570 = 8						; size = 4
$T159566 = 8						; size = 4
$T159562 = 8						; size = 4
$T159558 = 8						; size = 4
$T159554 = 8						; size = 4
$T159550 = 8						; size = 4
$T159546 = 8						; size = 4
$T159542 = 8						; size = 4
$T159538 = 8						; size = 4
$T159534 = 8						; size = 4
$T159530 = 8						; size = 4
$T159526 = 8						; size = 4
_pQUEST$ = 8						; size = 4
?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z PROC NEAR ; CQuest::CreateQuest, COMDAT

; 45   : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	56		 push	 esi

; 46   : 	CQuest *pResult = NULL;
; 47   : 
; 48   : 	switch(pQUEST->m_bType)

  00016	8b 74 24 14	 mov	 esi, DWORD PTR _pQUEST$[esp+12]
  0001a	0f b6 46 4b	 movzx	 eax, BYTE PTR [esi+75]
  0001e	48		 dec	 eax
  0001f	83 f8 11	 cmp	 eax, 17			; 00000011H
  00022	0f 87 f3 03 00
	00		 ja	 $L152337
  00028	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L159624[eax*4]
$L152247:

; 49   : 	{
; 50   : 	case QT_DEFTALK		: pResult = new CQuestDefaultTalk(); break;

  0002f	6a 44		 push	 68			; 00000044H
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00036	83 c4 04	 add	 esp, 4
  00039	89 44 24 14	 mov	 DWORD PTR $T159526[esp+12], eax
  0003d	85 c0		 test	 eax, eax
  0003f	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 0
  00047	0f 84 02 04 00
	00		 je	 $L159599
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ??0CQuestDefaultTalk@@QAE@XZ ; CQuestDefaultTalk::CQuestDefaultTalk

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00054	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  00057	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00062	5e		 pop	 esi
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	c3		 ret	 0
$L152252:

; 51   : 	case QT_GIVESKILL	: pResult = new CQuestGiveSkill(); break;

  00067	6a 44		 push	 68			; 00000044H
  00069	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0006e	83 c4 04	 add	 esp, 4
  00071	89 44 24 14	 mov	 DWORD PTR $T159530[esp+12], eax
  00075	85 c0		 test	 eax, eax
  00077	c7 44 24 0c 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 1
  0007f	0f 84 ca 03 00
	00		 je	 $L159599
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??0CQuestGiveSkill@@QAE@XZ ; CQuestGiveSkill::CQuestGiveSkill

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0008c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0008f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009a	5e		 pop	 esi
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	c3		 ret	 0
$L152257:

; 52   : 	case QT_GIVEITEM	: pResult = new CQuestGiveItem(); break;

  0009f	6a 44		 push	 68			; 00000044H
  000a1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a6	83 c4 04	 add	 esp, 4
  000a9	89 44 24 14	 mov	 DWORD PTR $T159534[esp+12], eax
  000ad	85 c0		 test	 eax, eax
  000af	c7 44 24 0c 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 2
  000b7	0f 84 92 03 00
	00		 je	 $L159599
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??0CQuestGiveItem@@QAE@XZ ; CQuestGiveItem::CQuestGiveItem

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  000c4	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  000c7	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d2	5e		 pop	 esi
  000d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d6	c3		 ret	 0
$L152262:

; 53   : 	case QT_DROPITEM	: pResult = new CQuestDropItem(); break;

  000d7	6a 44		 push	 68			; 00000044H
  000d9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000de	83 c4 04	 add	 esp, 4
  000e1	89 44 24 14	 mov	 DWORD PTR $T159538[esp+12], eax
  000e5	85 c0		 test	 eax, eax
  000e7	c7 44 24 0c 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 3
  000ef	0f 84 5a 03 00
	00		 je	 $L159599
  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ??0CQuestDropItem@@QAE@XZ ; CQuestDropItem::CQuestDropItem

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  000fc	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  000ff	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00103	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010a	5e		 pop	 esi
  0010b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010e	c3		 ret	 0
$L152267:

; 54   : 	case QT_SPAWNMON	: pResult = new CQuestSpawnMon(); break;

  0010f	6a 44		 push	 68			; 00000044H
  00111	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00116	83 c4 04	 add	 esp, 4
  00119	89 44 24 14	 mov	 DWORD PTR $T159542[esp+12], eax
  0011d	85 c0		 test	 eax, eax
  0011f	c7 44 24 0c 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 4
  00127	0f 84 22 03 00
	00		 je	 $L159599
  0012d	8b c8		 mov	 ecx, eax
  0012f	e8 00 00 00 00	 call	 ??0CQuestSpawnMon@@QAE@XZ ; CQuestSpawnMon::CQuestSpawnMon

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00134	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  00137	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0013b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00142	5e		 pop	 esi
  00143	83 c4 0c	 add	 esp, 12			; 0000000cH
  00146	c3		 ret	 0
$L152272:

; 55   : 	case QT_TELEPORT	: pResult = new CQuestTeleport(); break;

  00147	6a 44		 push	 68			; 00000044H
  00149	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0014e	83 c4 04	 add	 esp, 4
  00151	89 44 24 14	 mov	 DWORD PTR $T159546[esp+12], eax
  00155	85 c0		 test	 eax, eax
  00157	c7 44 24 0c 05
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 5
  0015f	0f 84 ea 02 00
	00		 je	 $L159599
  00165	8b c8		 mov	 ecx, eax
  00167	e8 00 00 00 00	 call	 ??0CQuestTeleport@@QAE@XZ ; CQuestTeleport::CQuestTeleport

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0016c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0016f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00173	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0017a	5e		 pop	 esi
  0017b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017e	c3		 ret	 0
$L152277:

; 56   : 	case QT_COMPLETE	: pResult = new CQuestComplete(); break;

  0017f	6a 44		 push	 68			; 00000044H
  00181	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00186	83 c4 04	 add	 esp, 4
  00189	89 44 24 14	 mov	 DWORD PTR $T159550[esp+12], eax
  0018d	85 c0		 test	 eax, eax
  0018f	c7 44 24 0c 06
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 6
  00197	0f 84 b2 02 00
	00		 je	 $L159599
  0019d	8b c8		 mov	 ecx, eax
  0019f	e8 00 00 00 00	 call	 ??0CQuestComplete@@QAE@XZ ; CQuestComplete::CQuestComplete

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  001a4	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  001a7	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  001ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001b2	5e		 pop	 esi
  001b3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b6	c3		 ret	 0
$L152282:

; 57   : 	case QT_MISSION		: pResult = new CQuestMission(); break;

  001b7	6a 44		 push	 68			; 00000044H
  001b9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001be	83 c4 04	 add	 esp, 4
  001c1	89 44 24 14	 mov	 DWORD PTR $T159554[esp+12], eax
  001c5	85 c0		 test	 eax, eax
  001c7	c7 44 24 0c 07
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 7
  001cf	0f 84 7a 02 00
	00		 je	 $L159599
  001d5	8b c8		 mov	 ecx, eax
  001d7	e8 00 00 00 00	 call	 ??0CQuestMission@@QAE@XZ ; CQuestMission::CQuestMission

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  001dc	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  001df	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  001e3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001ea	5e		 pop	 esi
  001eb	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ee	c3		 ret	 0
$L152287:

; 58   : 	case QT_ROUTING		: pResult = new CQuestRouting(); break;

  001ef	6a 44		 push	 68			; 00000044H
  001f1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001f6	83 c4 04	 add	 esp, 4
  001f9	89 44 24 14	 mov	 DWORD PTR $T159558[esp+12], eax
  001fd	85 c0		 test	 eax, eax
  001ff	c7 44 24 0c 08
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 8
  00207	0f 84 42 02 00
	00		 je	 $L159599
  0020d	8b c8		 mov	 ecx, eax
  0020f	e8 00 00 00 00	 call	 ??0CQuestRouting@@QAE@XZ ; CQuestRouting::CQuestRouting

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00214	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  00217	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0021b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00222	5e		 pop	 esi
  00223	83 c4 0c	 add	 esp, 12			; 0000000cH
  00226	c3		 ret	 0
$L152292:

; 59   : 	case QT_NPCTALK		: pResult = new CQuestTalk(); break;

  00227	6a 44		 push	 68			; 00000044H
  00229	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0022e	83 c4 04	 add	 esp, 4
  00231	89 44 24 14	 mov	 DWORD PTR $T159562[esp+12], eax
  00235	85 c0		 test	 eax, eax
  00237	c7 44 24 0c 09
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 9
  0023f	0f 84 0a 02 00
	00		 je	 $L159599
  00245	8b c8		 mov	 ecx, eax
  00247	e8 00 00 00 00	 call	 ??0CQuestTalk@@QAE@XZ	; CQuestTalk::CQuestTalk

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0024c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0024f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00253	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0025a	5e		 pop	 esi
  0025b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025e	c3		 ret	 0
$L152297:

; 60   : 	case QT_DROPQUEST	: pResult = new CQuestDrop(); break;

  0025f	6a 44		 push	 68			; 00000044H
  00261	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00266	83 c4 04	 add	 esp, 4
  00269	89 44 24 14	 mov	 DWORD PTR $T159566[esp+12], eax
  0026d	85 c0		 test	 eax, eax
  0026f	c7 44 24 0c 0a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 10 ; 0000000aH
  00277	0f 84 d2 01 00
	00		 je	 $L159599
  0027d	8b c8		 mov	 ecx, eax
  0027f	e8 00 00 00 00	 call	 ??0CQuestDrop@@QAE@XZ	; CQuestDrop::CQuestDrop

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00284	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  00287	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0028b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00292	5e		 pop	 esi
  00293	83 c4 0c	 add	 esp, 12			; 0000000cH
  00296	c3		 ret	 0
$L152302:

; 61   : 	case QT_CHAPTERMSG	: pResult = new CQuestChapterMsg(); break;

  00297	6a 44		 push	 68			; 00000044H
  00299	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0029e	83 c4 04	 add	 esp, 4
  002a1	89 44 24 14	 mov	 DWORD PTR $T159570[esp+12], eax
  002a5	85 c0		 test	 eax, eax
  002a7	c7 44 24 0c 0b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 11 ; 0000000bH
  002af	0f 84 9a 01 00
	00		 je	 $L159599
  002b5	8b c8		 mov	 ecx, eax
  002b7	e8 00 00 00 00	 call	 ??0CQuestChapterMsg@@QAE@XZ ; CQuestChapterMsg::CQuestChapterMsg

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  002bc	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  002bf	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  002c3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002ca	5e		 pop	 esi
  002cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  002ce	c3		 ret	 0
$L152307:

; 62   : 	case QT_SWITCH		: pResult = new CQuestSwitch(); break;

  002cf	6a 44		 push	 68			; 00000044H
  002d1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002d6	83 c4 04	 add	 esp, 4
  002d9	89 44 24 14	 mov	 DWORD PTR $T159574[esp+12], eax
  002dd	85 c0		 test	 eax, eax
  002df	c7 44 24 0c 0c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 12 ; 0000000cH
  002e7	0f 84 62 01 00
	00		 je	 $L159599
  002ed	8b c8		 mov	 ecx, eax
  002ef	e8 00 00 00 00	 call	 ??0CQuestSwitch@@QAE@XZ	; CQuestSwitch::CQuestSwitch

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  002f4	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  002f7	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  002fb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00302	5e		 pop	 esi
  00303	83 c4 0c	 add	 esp, 12			; 0000000cH
  00306	c3		 ret	 0
$L152312:

; 63   : 	case QT_DIEMON		: pResult = new CQuestDieMon(); break;

  00307	6a 44		 push	 68			; 00000044H
  00309	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0030e	83 c4 04	 add	 esp, 4
  00311	89 44 24 14	 mov	 DWORD PTR $T159578[esp+12], eax
  00315	85 c0		 test	 eax, eax
  00317	c7 44 24 0c 0d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 13 ; 0000000dH
  0031f	0f 84 2a 01 00
	00		 je	 $L159599
  00325	8b c8		 mov	 ecx, eax
  00327	e8 00 00 00 00	 call	 ??0CQuestDieMon@@QAE@XZ	; CQuestDieMon::CQuestDieMon

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0032c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0032f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00333	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0033a	5e		 pop	 esi
  0033b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0033e	c3		 ret	 0
$L152317:

; 64   : 	case QT_DEFENDSKILL	: pResult = new CQuestDefendSkill(); break;

  0033f	6a 44		 push	 68			; 00000044H
  00341	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00346	83 c4 04	 add	 esp, 4
  00349	89 44 24 14	 mov	 DWORD PTR $T159582[esp+12], eax
  0034d	85 c0		 test	 eax, eax
  0034f	c7 44 24 0c 0e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 14 ; 0000000eH
  00357	0f 84 f2 00 00
	00		 je	 $L159599
  0035d	8b c8		 mov	 ecx, eax
  0035f	e8 00 00 00 00	 call	 ??0CQuestDefendSkill@@QAE@XZ ; CQuestDefendSkill::CQuestDefendSkill

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00364	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  00367	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0036b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00372	5e		 pop	 esi
  00373	83 c4 0c	 add	 esp, 12			; 0000000cH
  00376	c3		 ret	 0
$L152322:

; 65   : 	case QT_DELETEITEM  : pResult = new CQuestDeleteItem(); break;

  00377	6a 44		 push	 68			; 00000044H
  00379	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0037e	83 c4 04	 add	 esp, 4
  00381	89 44 24 14	 mov	 DWORD PTR $T159586[esp+12], eax
  00385	85 c0		 test	 eax, eax
  00387	c7 44 24 0c 0f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 15 ; 0000000fH
  0038f	0f 84 ba 00 00
	00		 je	 $L159599
  00395	8b c8		 mov	 ecx, eax
  00397	e8 00 00 00 00	 call	 ??0CQuestDeleteItem@@QAE@XZ ; CQuestDeleteItem::CQuestDeleteItem

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0039c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0039f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  003a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003aa	5e		 pop	 esi
  003ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  003ae	c3		 ret	 0
$L152327:

; 66   : 	case QT_SENDPOST	: pResult = new CQuestSendPost();	break;

  003af	6a 44		 push	 68			; 00000044H
  003b1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003b6	83 c4 04	 add	 esp, 4
  003b9	89 44 24 14	 mov	 DWORD PTR $T159590[esp+12], eax
  003bd	85 c0		 test	 eax, eax
  003bf	c7 44 24 0c 10
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 16 ; 00000010H
  003c7	0f 84 82 00 00
	00		 je	 $L159599
  003cd	8b c8		 mov	 ecx, eax
  003cf	e8 00 00 00 00	 call	 ??0CQuestSendPost@@QAE@XZ ; CQuestSendPost::CQuestSendPost

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  003d4	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  003d7	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  003db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003e2	5e		 pop	 esi
  003e3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003e6	c3		 ret	 0
$L152332:

; 67   : 	case QT_CRAFT		: pResult = new CQuestCraft(); break;  

  003e7	6a 44		 push	 68			; 00000044H
  003e9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003ee	83 c4 04	 add	 esp, 4
  003f1	89 44 24 14	 mov	 DWORD PTR $T159594[esp+12], eax
  003f5	85 c0		 test	 eax, eax
  003f7	c7 44 24 0c 11
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 17 ; 00000011H
  003ff	74 4e		 je	 SHORT $L159599
  00401	8b c8		 mov	 ecx, eax
  00403	e8 00 00 00 00	 call	 ??0CQuestCraft@@QAE@XZ	; CQuestCraft::CQuestCraft

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  00408	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0040b	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0040f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00416	5e		 pop	 esi
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041a	c3		 ret	 0
$L152337:

; 68   : 	default				: pResult = new CQuest(); break;

  0041b	6a 44		 push	 68			; 00000044H
  0041d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00422	83 c4 04	 add	 esp, 4
  00425	89 44 24 14	 mov	 DWORD PTR $T159598[esp+12], eax
  00429	85 c0		 test	 eax, eax
  0042b	c7 44 24 0c 12
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 18 ; 00000012H
  00433	74 1a		 je	 SHORT $L159599
  00435	8b c8		 mov	 ecx, eax
  00437	e8 00 00 00 00	 call	 ??0CQuest@@QAE@XZ	; CQuest::CQuest

; 69   : 	}
; 70   : 	pResult->m_pQUEST = pQUEST;

  0043c	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 71   : 
; 72   : 	return pResult;
; 73   : }

  0043f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00443	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0044a	5e		 pop	 esi
  0044b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0044e	c3		 ret	 0
$L159599:
  0044f	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00453	33 c0		 xor	 eax, eax
  00455	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00458	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0045f	5e		 pop	 esi
  00460	83 c4 0c	 add	 esp, 12			; 0000000cH
  00463	c3		 ret	 0
$L159624:
  00464	00 00 00 00	 DD	 $L152247
  00468	00 00 00 00	 DD	 $L152252
  0046c	00 00 00 00	 DD	 $L152257
  00470	00 00 00 00	 DD	 $L152262
  00474	00 00 00 00	 DD	 $L152267
  00478	00 00 00 00	 DD	 $L152272
  0047c	00 00 00 00	 DD	 $L152277
  00480	00 00 00 00	 DD	 $L152282
  00484	00 00 00 00	 DD	 $L152287
  00488	00 00 00 00	 DD	 $L152292
  0048c	00 00 00 00	 DD	 $L152297
  00490	00 00 00 00	 DD	 $L152302
  00494	00 00 00 00	 DD	 $L152307
  00498	00 00 00 00	 DD	 $L152312
  0049c	00 00 00 00	 DD	 $L152317
  004a0	00 00 00 00	 DD	 $L152322
  004a4	00 00 00 00	 DD	 $L152327
  004a8	00 00 00 00	 DD	 $L152332
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159601:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T159526[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L159602:
  0000b	8b 45 04	 mov	 eax, DWORD PTR $T159530[ebp-4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L159603:
  00016	8b 45 04	 mov	 eax, DWORD PTR $T159534[ebp-4]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L159604:
  00021	8b 45 04	 mov	 eax, DWORD PTR $T159538[ebp-4]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
$L159605:
  0002c	8b 45 04	 mov	 eax, DWORD PTR $T159542[ebp-4]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00035	59		 pop	 ecx
  00036	c3		 ret	 0
$L159606:
  00037	8b 45 04	 mov	 eax, DWORD PTR $T159546[ebp-4]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	59		 pop	 ecx
  00041	c3		 ret	 0
$L159607:
  00042	8b 45 04	 mov	 eax, DWORD PTR $T159550[ebp-4]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004b	59		 pop	 ecx
  0004c	c3		 ret	 0
$L159608:
  0004d	8b 45 04	 mov	 eax, DWORD PTR $T159554[ebp-4]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00056	59		 pop	 ecx
  00057	c3		 ret	 0
$L159609:
  00058	8b 45 04	 mov	 eax, DWORD PTR $T159558[ebp-4]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00061	59		 pop	 ecx
  00062	c3		 ret	 0
$L159610:
  00063	8b 45 04	 mov	 eax, DWORD PTR $T159562[ebp-4]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
  0006d	c3		 ret	 0
$L159611:
  0006e	8b 45 04	 mov	 eax, DWORD PTR $T159566[ebp-4]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	59		 pop	 ecx
  00078	c3		 ret	 0
$L159612:
  00079	8b 45 04	 mov	 eax, DWORD PTR $T159570[ebp-4]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
  00083	c3		 ret	 0
$L159613:
  00084	8b 45 04	 mov	 eax, DWORD PTR $T159574[ebp-4]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	59		 pop	 ecx
  0008e	c3		 ret	 0
$L159614:
  0008f	8b 45 04	 mov	 eax, DWORD PTR $T159578[ebp-4]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L159615:
  0009a	8b 45 04	 mov	 eax, DWORD PTR $T159582[ebp-4]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a3	59		 pop	 ecx
  000a4	c3		 ret	 0
$L159616:
  000a5	8b 45 04	 mov	 eax, DWORD PTR $T159586[ebp-4]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx
  000af	c3		 ret	 0
$L159617:
  000b0	8b 45 04	 mov	 eax, DWORD PTR $T159590[ebp-4]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b9	59		 pop	 ecx
  000ba	c3		 ret	 0
$L159618:
  000bb	8b 45 04	 mov	 eax, DWORD PTR $T159594[ebp-4]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c4	59		 pop	 ecx
  000c5	c3		 ret	 0
$L159619:
  000c6	8b 45 04	 mov	 eax, DWORD PTR $T159598[ebp-4]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000cf	59		 pop	 ecx
  000d0	c3		 ret	 0
__ehhandler$?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z:
  000d1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159621
  000d6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z ENDP	; CQuest::CreateQuest
EXTRN	?CanRunQuest@CTPlayer@@QAEEPAUtagQUESTTEMP@@KAAE@Z:NEAR ; CTPlayer::CanRunQuest
; Function compile flags: /Ogty
;	COMDAT ?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z
_TEXT	SEGMENT
$T159631 = -5						; size = 1
_i$153495 = -4						; size = 4
_itVQUEST$153472 = -4					; size = 4
_itTRIGGER$ = -4					; size = 4
_pPlayer$ = 8						; size = 4
_bLevel$153492 = 12					; size = 1
_dwTick$ = 12						; size = 4
_pTRIGGER$ = 16						; size = 4
_pQUESTTEMP$ = 20					; size = 4
_pITEMTEMP$ = 24					; size = 4
_pSKILLTEMP$ = 28					; size = 4
_pMONTEMP$ = 32						; size = 4
_pCLASS$ = 36						; size = 4
?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z PROC NEAR ; CQuest::ExecQuest, COMDAT
; _this$ = ecx

; 83   : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi

; 84   : 	MAPMAPVQUESTTEMP::iterator itTRIGGER = pTRIGGER->find(TT_EXECQUEST);

  00004	8b 74 24 18	 mov	 esi, DWORD PTR _pTRIGGER$[esp+8]
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	8d 44 24 0b	 lea	 eax, DWORD PTR $T159631[esp+16]
  0000f	50		 push	 eax
  00010	8d 4c 24 10	 lea	 ecx, DWORD PTR _itTRIGGER$[esp+20]
  00014	51		 push	 ecx
  00015	8b ce		 mov	 ecx, esi
  00017	c6 44 24 13 01	 mov	 BYTE PTR $T159631[esp+24], 1
  0001c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABE@Z ; std::_Tree<std::_Tmap_traits<unsigned char,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,std::map<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> > > *> >,0> >::find

; 85   : 
; 86   : 	if( itTRIGGER != pTRIGGER->end() )

  00021	8b 44 24 0c	 mov	 eax, DWORD PTR _itTRIGGER$[esp+16]
  00025	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00028	0f 84 c2 00 00
	00		 je	 $L153757

; 87   : 	{
; 88   : 		MAPVQUESTTEMP::iterator itVQUEST = (*itTRIGGER).second->find(m_pQUEST->m_dwQuestID);

  0002e	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00031	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  00034	55		 push	 ebp
  00035	83 c2 44	 add	 edx, 68			; 00000044H
  00038	52		 push	 edx
  00039	8d 44 24 14	 lea	 eax, DWORD PTR _itVQUEST$153472[esp+24]
  0003d	50		 push	 eax
  0003e	8b ce		 mov	 ecx, esi
  00040	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagQUESTTEMP *,std::allocator<tagQUESTTEMP *> > *> >,0> >::find

; 89   : 		BYTE bLevel;
; 90   : 		if( itVQUEST != (*itTRIGGER).second->end() )

  00045	8b 6c 24 10	 mov	 ebp, DWORD PTR _itVQUEST$153472[esp+20]
  00049	3b 6e 04	 cmp	 ebp, DWORD PTR [esi+4]
  0004c	0f 84 9d 00 00
	00		 je	 $L159883

; 91   : 			for( int i=0; i<INT((*itVQUEST).second->size()); i++)

  00052	8b 7c 24 1c	 mov	 edi, DWORD PTR _dwTick$[esp+16]
  00056	33 f6		 xor	 esi, esi
  00058	53		 push	 ebx
  00059	8b 5c 24 1c	 mov	 ebx, DWORD PTR _pPlayer$[esp+20]
  0005d	89 74 24 14	 mov	 DWORD PTR _i$153495[esp+24], esi
$L153755:
  00061	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00064	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00067	85 d2		 test	 edx, edx
  00069	75 04		 jne	 SHORT $L159737
  0006b	33 c0		 xor	 eax, eax
  0006d	eb 08		 jmp	 SHORT $L159738
$L159737:
  0006f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00072	2b c2		 sub	 eax, edx
  00074	c1 f8 02	 sar	 eax, 2
$L159738:
  00077	3b f0		 cmp	 esi, eax
  00079	7d 73		 jge	 SHORT $L159884
  0007b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 92   : 				if(!pPlayer->CanRunQuest( (*(*itVQUEST).second)[i], dwTick, bLevel))

  0007e	8d 4c 24 20	 lea	 ecx, DWORD PTR _bLevel$153492[esp+20]
  00082	51		 push	 ecx
  00083	c1 e6 02	 shl	 esi, 2
  00086	8b 14 30	 mov	 edx, DWORD PTR [eax+esi]
  00089	03 c6		 add	 eax, esi
  0008b	57		 push	 edi
  0008c	52		 push	 edx
  0008d	8b cb		 mov	 ecx, ebx
  0008f	e8 00 00 00 00	 call	 ?CanRunQuest@CTPlayer@@QAEEPAUtagQUESTTEMP@@KAAE@Z ; CTPlayer::CanRunQuest
  00094	84 c0		 test	 al, al
  00096	75 46		 jne	 SHORT $L153756
  00098	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  0009b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 93   : 				{
; 94   : 					CQuest *pQuest = CreateQuest((*(*itVQUEST).second)[i]);

  0009e	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
  000a1	03 c6		 add	 eax, esi
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 ?CreateQuest@CQuest@@SAPAV1@PAUtagQUESTTEMP@@@Z ; CQuest::CreateQuest

; 95   : 
; 96   : 					pQuest->ExecQuest(
; 97   : 						pPlayer,
; 98   : 						dwTick,
; 99   : 						pTRIGGER,
; 100  : 						pQUESTTEMP,
; 101  : 						pITEMTEMP,
; 102  : 						pSKILLTEMP,
; 103  : 						pMONTEMP,
; 104  : 						pCLASS);

  000a9	8b 4c 24 38	 mov	 ecx, DWORD PTR _pMONTEMP$[esp+24]
  000ad	83 c4 04	 add	 esp, 4
  000b0	8b f0		 mov	 esi, eax
  000b2	8b 44 24 38	 mov	 eax, DWORD PTR _pCLASS$[esp+20]
  000b6	8b 16		 mov	 edx, DWORD PTR [esi]
  000b8	50		 push	 eax
  000b9	8b 44 24 34	 mov	 eax, DWORD PTR _pSKILLTEMP$[esp+24]
  000bd	51		 push	 ecx
  000be	8b 4c 24 34	 mov	 ecx, DWORD PTR _pITEMTEMP$[esp+28]
  000c2	50		 push	 eax
  000c3	8b 44 24 34	 mov	 eax, DWORD PTR _pQUESTTEMP$[esp+32]
  000c7	51		 push	 ecx
  000c8	8b 4c 24 34	 mov	 ecx, DWORD PTR _pTRIGGER$[esp+36]
  000cc	50		 push	 eax
  000cd	51		 push	 ecx
  000ce	57		 push	 edi
  000cf	53		 push	 ebx
  000d0	8b ce		 mov	 ecx, esi
  000d2	ff 52 08	 call	 DWORD PTR [edx+8]

; 105  : 
; 106  : 					delete pQuest;

  000d5	8b 16		 mov	 edx, DWORD PTR [esi]
  000d7	6a 01		 push	 1
  000d9	8b ce		 mov	 ecx, esi
  000db	ff 52 0c	 call	 DWORD PTR [edx+12]
$L153756:
  000de	8b 44 24 14	 mov	 eax, DWORD PTR _i$153495[esp+24]
  000e2	40		 inc	 eax
  000e3	89 44 24 14	 mov	 DWORD PTR _i$153495[esp+24], eax
  000e7	8b f0		 mov	 esi, eax
  000e9	e9 73 ff ff ff	 jmp	 $L153755
$L159884:
  000ee	5b		 pop	 ebx
$L159883:
  000ef	5d		 pop	 ebp
$L153757:
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi

; 107  : 				}
; 108  : 	}
; 109  : }

  000f2	83 c4 08	 add	 esp, 8
  000f5	c2 20 00	 ret	 32			; 00000020H
?ExecQuest@CQuest@@UAEXPAVCTPlayer@@KPAV?$map@EPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@U?$less@E@2@V?$allocator@U?$pair@$$CBEPAV?$map@KPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKPAV?$vector@PAUtagQUESTTEMP@@V?$allocator@PAUtagQUESTTEMP@@@std@@@std@@@std@@@2@@std@@@std@@@2@@std@@PAV?$map@KPAUtagQUESTTEMP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagQUESTTEMP@@@std@@@3@@4@PAV?$map@GPAUtagTITEM@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTITEM@@@std@@@3@@4@PAV?$map@GPAVCTSkillTemp@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAVCTSkillTemp@@@std@@@3@@4@PAV?$map@GPAUtagTMONSTER@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGPAUtagTMONSTER@@@std@@@3@@4@PAV?$map@EPAUtagTSTAT@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTSTAT@@@std@@@3@@4@@Z ENDP ; CQuest::ExecQuest
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::push_back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?push_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXABQAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXABQAUtagQUESTTERM@@@Z PROC NEAR ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::push_back, COMDAT
; _this$ = ecx

; 579  : 		{	// insert element at end

  00000	56		 push	 esi

; 580  : 		if (size() < capacity())

  00001	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00004	85 f6		 test	 esi, esi
  00006	75 04		 jne	 SHORT $L159894
  00008	33 d2		 xor	 edx, edx
  0000a	eb 08		 jmp	 SHORT $L159895
$L159894:
  0000c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000f	2b d6		 sub	 edx, esi
  00011	c1 fa 02	 sar	 edx, 2
$L159895:
  00014	85 f6		 test	 esi, esi
  00016	74 21		 je	 SHORT $L154045
  00018	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001b	2b c6		 sub	 eax, esi
  0001d	c1 f8 02	 sar	 eax, 2
  00020	3b d0		 cmp	 edx, eax
  00022	73 15		 jae	 SHORT $L154045

; 581  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  00024	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00027	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0002b	8b 12		 mov	 edx, DWORD PTR [edx]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	83 c0 04	 add	 eax, 4
  00032	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00035	5e		 pop	 esi

; 584  : 		}

  00036	c2 04 00	 ret	 4
$L154045:

; 582  : 		else
; 583  : 			insert(end(), _Val);

  00039	8b 54 24 08	 mov	 edx, DWORD PTR __Val$[esp]
  0003d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00040	52		 push	 edx
  00041	6a 01		 push	 1
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n
  00049	5e		 pop	 esi

; 584  : 		}

  0004a	c2 04 00	 ret	 4
?push_back@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@QAEXABQAUtagQUESTTERM@@@Z ENDP ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::push_back
_TEXT	ENDS
PUBLIC	?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z ; CQuest::FindRunningTerm
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\quest.cpp
;	COMDAT ?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z
_TEXT	SEGMENT
_dwTermID$ = 8						; size = 4
_pTERM$ = 12						; size = 4
_bType$ = 12						; size = 1
?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z PROC NEAR ; CQuest::FindRunningTerm, COMDAT
; _this$ = ecx

; 202  : {

  00000	53		 push	 ebx

; 203  : 	for( int i=0; i<INT(m_vTERM.size()); i++)

  00001	8a 5c 24 0c	 mov	 bl, BYTE PTR _bType$[esp]
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b 6e 0c	 mov	 ebp, DWORD PTR [esi+12]
  0000c	57		 push	 edi
  0000d	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00010	33 d2		 xor	 edx, edx
$L154016:
  00012	85 ed		 test	 ebp, ebp
  00014	75 04		 jne	 SHORT $L160082
  00016	33 c0		 xor	 eax, eax
  00018	eb 08		 jmp	 SHORT $L160083
$L160082:
  0001a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0001d	2b c5		 sub	 eax, ebp
  0001f	c1 f8 02	 sar	 eax, 2
$L160083:
  00022	3b d0		 cmp	 edx, eax
  00024	7d 23		 jge	 SHORT $L154018

; 204  : 		if( m_vTERM[i]->m_dwTermID == dwTermID &&
; 205  : 			m_vTERM[i]->m_bTermType == bType )

  00026	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00029	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  0002c	8b 4c 24 14	 mov	 ecx, DWORD PTR _dwTermID$[esp+12]
  00030	39 08		 cmp	 DWORD PTR [eax], ecx
  00032	75 05		 jne	 SHORT $L154017
  00034	38 58 04	 cmp	 BYTE PTR [eax+4], bl
  00037	74 03		 je	 SHORT $L160504
$L154017:

; 203  : 	for( int i=0; i<INT(m_vTERM.size()); i++)

  00039	42		 inc	 edx
  0003a	eb d6		 jmp	 SHORT $L154016
$L160504:

; 206  : 			return m_vTERM[i];

  0003c	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003f	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5d		 pop	 ebp
  00045	5b		 pop	 ebx

; 227  : }

  00046	c2 08 00	 ret	 8
$L154018:

; 207  : 
; 208  : 	LPQUESTTERM pTERM = NULL;

  00049	33 f6		 xor	 esi, esi

; 209  : 	switch(bType)

  0004b	80 fb 03	 cmp	 bl, 3
  0004e	74 0a		 je	 SHORT $L154025
  00050	80 fb 0d	 cmp	 bl, 13			; 0000000dH
  00053	74 05		 je	 SHORT $L154025
  00055	80 fb 11	 cmp	 bl, 17			; 00000011H
  00058	75 77		 jne	 SHORT $L160497
$L154025:

; 210  : 	{
; 211  : 	case QTT_HUNT	:
; 212  : 	case QTT_TALK	:
; 213  : 	case QTT_USEITEM:
; 214  : 		{
; 215  : 			pTERM = new QUESTTERM();

  0005a	6a 08		 push	 8
  0005c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00061	83 c4 04	 add	 esp, 4
  00064	85 c0		 test	 eax, eax
  00066	74 0d		 je	 SHORT $L160076
  00068	33 c9		 xor	 ecx, ecx
  0006a	8b d0		 mov	 edx, eax
  0006c	89 0a		 mov	 DWORD PTR [edx], ecx
  0006e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00071	8b f0		 mov	 esi, eax
  00073	eb 02		 jmp	 SHORT $L160506
$L160076:
  00075	33 f6		 xor	 esi, esi
$L160506:

; 216  : 
; 217  : 			pTERM->m_dwTermID = dwTermID;

  00077	8b 44 24 14	 mov	 eax, DWORD PTR _dwTermID$[esp+12]
  0007b	89 06		 mov	 DWORD PTR [esi], eax

; 218  : 			pTERM->m_bTermType = bType;

  0007d	88 5e 04	 mov	 BYTE PTR [esi+4], bl

; 219  : 			pTERM->m_bCount = 0;

  00080	c6 46 05 00	 mov	 BYTE PTR [esi+5], 0

; 220  : 
; 221  : 			m_vTERM.push_back(pTERM);

  00084	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00087	85 c9		 test	 ecx, ecx
  00089	89 74 24 18	 mov	 DWORD PTR _pTERM$[esp+12], esi
  0008d	75 04		 jne	 SHORT $L160440
  0008f	33 d2		 xor	 edx, edx
  00091	eb 08		 jmp	 SHORT $L160441
$L160440:
  00093	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00096	2b d1		 sub	 edx, ecx
  00098	c1 fa 02	 sar	 edx, 2
$L160441:
  0009b	85 c9		 test	 ecx, ecx
  0009d	74 20		 je	 SHORT $L160434
  0009f	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000a2	2b c1		 sub	 eax, ecx
  000a4	c1 f8 02	 sar	 eax, 2
  000a7	3b d0		 cmp	 edx, eax
  000a9	73 14		 jae	 SHORT $L160434
  000ab	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000ae	89 30		 mov	 DWORD PTR [eax], esi
  000b0	83 c0 04	 add	 eax, 4
  000b3	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000b6	5f		 pop	 edi

; 222  : 		}
; 223  : 		break;
; 224  : 	}
; 225  : 
; 226  : 	return pTERM;

  000b7	8b c6		 mov	 eax, esi
  000b9	5e		 pop	 esi
  000ba	5d		 pop	 ebp
  000bb	5b		 pop	 ebx

; 227  : }

  000bc	c2 08 00	 ret	 8

; 220  : 
; 221  : 			m_vTERM.push_back(pTERM);

$L160434:
  000bf	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000c2	8d 4c 24 18	 lea	 ecx, DWORD PTR _pTERM$[esp+12]
  000c6	51		 push	 ecx
  000c7	6a 01		 push	 1
  000c9	50		 push	 eax
  000ca	8b cf		 mov	 ecx, edi
  000cc	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@IAEXViterator@12@IABQAUtagQUESTTERM@@@Z ; std::vector<tagQUESTTERM *,std::allocator<tagQUESTTERM *> >::_Insert_n
$L160497:
  000d1	5f		 pop	 edi

; 222  : 		}
; 223  : 		break;
; 224  : 	}
; 225  : 
; 226  : 	return pTERM;

  000d2	8b c6		 mov	 eax, esi
  000d4	5e		 pop	 esi
  000d5	5d		 pop	 ebp
  000d6	5b		 pop	 ebx

; 227  : }

  000d7	c2 08 00	 ret	 8
?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z ENDP	; CQuest::FindRunningTerm
_TEXT	ENDS
PUBLIC	__real@4f800000
EXTRN	?FindQuest@CTPlayer@@QAEPAVCQuest@@K@Z:NEAR	; CTPlayer::FindQuest
;	COMDAT __real@4f800000
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\quest.cpp
CONST	ENDS
;	COMDAT ?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z
_TEXT	SEGMENT
_itItem$153938 = 8					; size = 4
_pPlayer$ = 8						; size = 4
tv296 = 12						; size = 4
_dwTick$ = 12						; size = 4
tv386 = 16						; size = 4
tv379 = 16						; size = 4
tv372 = 16						; size = 4
tv365 = 16						; size = 4
_itInven$153860 = 16					; size = 4
_pTERM$ = 16						; size = 4
?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z PROC NEAR ; CQuest::CheckComplete, COMDAT
; _this$ = ecx

; 123  : {

  00000	53		 push	 ebx

; 124  : 	switch(pTERM->m_bTermType)

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR _pTERM$[esp]
  00005	8a 43 04	 mov	 al, BYTE PTR [ebx+4]
  00008	0f b6 d0	 movzx	 edx, al
  0000b	83 c2 fe	 add	 edx, -2			; fffffffeH
  0000e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00011	0f 87 7f 01 00
	00		 ja	 $L154009
  00017	0f b6 92 00 00
	00 00		 movzx	 edx, BYTE PTR $L160738[edx]
  0001e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L160745[edx*4]
$L153782:

; 125  : 	{
; 126  : 	case QTT_GETITEM	:
; 127  : 		{
; 128  : 			MAPTINVEN::iterator itInven;
; 129  : 			MAPTITEM::iterator itItem;
; 130  : 			WORD wCount = 0;
; 131  : 
; 132  : 			for( itInven = pPlayer->m_mapTINVEN.begin(); itInven != pPlayer->m_mapTINVEN.end(); itInven++)

  00025	8b 44 24 08	 mov	 eax, DWORD PTR _pPlayer$[esp]
  00029	8b 88 0c 01 01
	00		 mov	 ecx, DWORD PTR [eax+65804]
  0002f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00031	55		 push	 ebp
  00032	33 ed		 xor	 ebp, ebp
  00034	3b c1		 cmp	 eax, ecx
  00036	89 4c 24 10	 mov	 DWORD PTR tv296[esp+4], ecx
  0003a	89 44 24 14	 mov	 DWORD PTR _itInven$153860[esp+4], eax
  0003e	74 4c		 je	 SHORT $L153945
  00040	56		 push	 esi
  00041	57		 push	 edi
$L160570:

; 133  : 			{
; 134  : 				for(itItem=(*itInven).second->m_mapTITEM.begin(); itItem!=(*itInven).second->m_mapTITEM.end(); itItem++)

  00042	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00045	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
  00048	8b 06		 mov	 eax, DWORD PTR [esi]
  0004a	3b c6		 cmp	 eax, esi
  0004c	89 44 24 14	 mov	 DWORD PTR _itItem$153938[esp+12], eax
  00050	74 25		 je	 SHORT $L153944
  00052	8b 3b		 mov	 edi, DWORD PTR [ebx]
$L160655:

; 135  : 				{
; 136  : 					if((*itItem).second->m_wItemID == pTERM->m_dwTermID)

  00054	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00057	0f b7 50 30	 movzx	 edx, WORD PTR [eax+48]
  0005b	3b d7		 cmp	 edx, edi
  0005d	75 07		 jne	 SHORT $L153968

; 137  : 						wCount += (*itItem).second->m_bCount;

  0005f	66 0f b6 40 32	 movzx	 ax, BYTE PTR [eax+50]
  00064	03 e8		 add	 ebp, eax
$L153968:
  00066	8d 4c 24 14	 lea	 ecx, DWORD PTR _itItem$153938[esp+12]
  0006a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTItem@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTItem@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTItem *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTItem *> >,0> >::const_iterator::_Inc
  0006f	8b 44 24 14	 mov	 eax, DWORD PTR _itItem$153938[esp+12]
  00073	3b c6		 cmp	 eax, esi
  00075	75 dd		 jne	 SHORT $L160655
$L153944:

; 125  : 	{
; 126  : 	case QTT_GETITEM	:
; 127  : 		{
; 128  : 			MAPTINVEN::iterator itInven;
; 129  : 			MAPTITEM::iterator itItem;
; 130  : 			WORD wCount = 0;
; 131  : 
; 132  : 			for( itInven = pPlayer->m_mapTINVEN.begin(); itInven != pPlayer->m_mapTINVEN.end(); itInven++)

  00077	8d 4c 24 1c	 lea	 ecx, DWORD PTR _itInven$153860[esp+12]
  0007b	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAVCTInven@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAVCTInven@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,CTInven *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,CTInven *> >,0> >::const_iterator::_Inc
  00080	8b 44 24 1c	 mov	 eax, DWORD PTR _itInven$153860[esp+12]
  00084	3b 44 24 18	 cmp	 eax, DWORD PTR tv296[esp+12]
  00088	75 b8		 jne	 SHORT $L160570
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
$L153945:

; 138  : 				}
; 139  : 			}
; 140  : 
; 141  : 			if( wCount < pTERM->m_bCount || !pTERM->m_bCount)

  0008c	8a 43 05	 mov	 al, BYTE PTR [ebx+5]
  0008f	66 0f b6 c8	 movzx	 cx, al
  00093	66 3b e9	 cmp	 bp, cx
  00096	5d		 pop	 ebp
  00097	72 08		 jb	 SHORT $L153990
  00099	84 c0		 test	 al, al
  0009b	0f 85 f5 00 00
	00		 jne	 $L154009
$L153990:

; 142  : 				return QTS_RUN;

  000a1	32 c0		 xor	 al, al
  000a3	5b		 pop	 ebx

; 199  : }

  000a4	c2 0c 00	 ret	 12			; 0000000cH
$L153991:

; 143  : 		}
; 144  : 
; 145  : 		break;
; 146  : 
; 147  : 	case QTT_TALK		:
; 148  : 	case QTT_HUNT		:
; 149  : 	case QTT_USEITEM	:
; 150  : 		{
; 151  : 			LPQUESTTERM pTerm = FindRunningTerm(
; 152  : 				pTERM->m_dwTermID,
; 153  : 				pTERM->m_bTermType);

  000a7	8b 13		 mov	 edx, DWORD PTR [ebx]
  000a9	50		 push	 eax
  000aa	52		 push	 edx
  000ab	e8 00 00 00 00	 call	 ?FindRunningTerm@CQuest@@QAEPAUtagQUESTTERM@@KE@Z ; CQuest::FindRunningTerm

; 154  : 
; 155  : 			if( !pTerm || pTerm->m_bCount < pTERM->m_bCount )

  000b0	85 c0		 test	 eax, eax
  000b2	74 0c		 je	 SHORT $L153994
  000b4	8a 40 05	 mov	 al, BYTE PTR [eax+5]
  000b7	3a 43 05	 cmp	 al, BYTE PTR [ebx+5]
  000ba	0f 83 d6 00 00
	00		 jae	 $L154009
$L153994:

; 156  : 				return QTS_RUN;

  000c0	32 c0		 xor	 al, al
  000c2	5b		 pop	 ebx

; 199  : }

  000c3	c2 0c 00	 ret	 12			; 0000000cH
$L153995:

; 157  : 		}
; 158  : 
; 159  : 		break;
; 160  : 
; 161  : 	case QTT_TIMER		:
; 162  : 		if( m_dwBeginTick && dwTick - m_dwBeginTick > m_dwTick )

  000c6	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000c9	85 c0		 test	 eax, eax
  000cb	0f 84 c5 00 00
	00		 je	 $L154009
  000d1	8b 54 24 0c	 mov	 edx, DWORD PTR _dwTick$[esp]
  000d5	2b d0		 sub	 edx, eax
  000d7	3b 51 1c	 cmp	 edx, DWORD PTR [ecx+28]
  000da	0f 86 b6 00 00
	00		 jbe	 $L154009

; 163  : 			return QTS_FAILED;

  000e0	b0 02		 mov	 al, 2
  000e2	5b		 pop	 ebx

; 199  : }

  000e3	c2 0c 00	 ret	 12			; 0000000cH
$L153997:

; 164  : 
; 165  : 		break;
; 166  : 	case QTT_LEFT:
; 167  : 		if(pPlayer->m_fPosX < pTERM->m_dwTermID)

  000e6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000e8	db 03		 fild	 DWORD PTR [ebx]
  000ea	85 c0		 test	 eax, eax
  000ec	7d 06		 jge	 SHORT $L160739
  000ee	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L160739:
  000f4	8b 4c 24 08	 mov	 ecx, DWORD PTR _pPlayer$[esp]
  000f8	d8 99 7c 01 01
	00		 fcomp	 DWORD PTR [ecx+65916]
  000fe	df e0		 fnstsw	 ax
  00100	f6 c4 41	 test	 ah, 65			; 00000041H
  00103	0f 85 8d 00 00
	00		 jne	 $L154009

; 168  : 			return QTS_RUN;

  00109	32 c0		 xor	 al, al
  0010b	5b		 pop	 ebx

; 199  : }

  0010c	c2 0c 00	 ret	 12			; 0000000cH
$L153999:

; 169  : 
; 170  : 		break;
; 171  : 	case QTT_TOP:
; 172  : 		if(pPlayer->m_fPosZ > pTERM->m_dwTermID)

  0010f	8b 13		 mov	 edx, DWORD PTR [ebx]
  00111	db 03		 fild	 DWORD PTR [ebx]
  00113	85 d2		 test	 edx, edx
  00115	7d 06		 jge	 SHORT $L160742
  00117	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L160742:
  0011d	8b 44 24 08	 mov	 eax, DWORD PTR _pPlayer$[esp]
  00121	d8 98 84 01 01
	00		 fcomp	 DWORD PTR [eax+65924]
  00127	df e0		 fnstsw	 ax
  00129	f6 c4 05	 test	 ah, 5
  0012c	7a 68		 jp	 SHORT $L154009

; 173  : 			return QTS_RUN;

  0012e	32 c0		 xor	 al, al
  00130	5b		 pop	 ebx

; 199  : }

  00131	c2 0c 00	 ret	 12			; 0000000cH
$L154001:

; 174  : 
; 175  : 		break;
; 176  : 	case QTT_RIGHT:
; 177  : 		if(pPlayer->m_fPosX > pTERM->m_dwTermID)

  00134	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00136	db 03		 fild	 DWORD PTR [ebx]
  00138	85 c9		 test	 ecx, ecx
  0013a	7d 06		 jge	 SHORT $L160743
  0013c	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L160743:
  00142	8b 54 24 08	 mov	 edx, DWORD PTR _pPlayer$[esp]
  00146	d8 9a 7c 01 01
	00		 fcomp	 DWORD PTR [edx+65916]
  0014c	df e0		 fnstsw	 ax
  0014e	f6 c4 05	 test	 ah, 5
  00151	7a 43		 jp	 SHORT $L154009

; 178  : 			return QTS_RUN;

  00153	32 c0		 xor	 al, al
  00155	5b		 pop	 ebx

; 199  : }

  00156	c2 0c 00	 ret	 12			; 0000000cH
$L154003:

; 179  : 
; 180  : 		break;
; 181  : 	case QTT_BOTTOM:
; 182  : 		if(pPlayer->m_fPosZ < pTERM->m_dwTermID)

  00159	8b 03		 mov	 eax, DWORD PTR [ebx]
  0015b	db 03		 fild	 DWORD PTR [ebx]
  0015d	85 c0		 test	 eax, eax
  0015f	7d 06		 jge	 SHORT $L160744
  00161	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$L160744:
  00167	8b 4c 24 08	 mov	 ecx, DWORD PTR _pPlayer$[esp]
  0016b	d8 99 84 01 01
	00		 fcomp	 DWORD PTR [ecx+65924]
  00171	df e0		 fnstsw	 ax
  00173	f6 c4 41	 test	 ah, 65			; 00000041H
  00176	75 1e		 jne	 SHORT $L154009
$L154008:

; 183  : 			return QTS_RUN;

  00178	32 c0		 xor	 al, al
  0017a	5b		 pop	 ebx

; 199  : }

  0017b	c2 0c 00	 ret	 12			; 0000000cH
$L154005:

; 184  : 
; 185  : 		break;
; 186  : 
; 187  : 	case QTT_QUESTCOMPLETED:
; 188  : 		{
; 189  : 			CQuest * pCompQ = pPlayer->FindQuest(pTERM->m_dwTermID);

  0017e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00180	8b 4c 24 08	 mov	 ecx, DWORD PTR _pPlayer$[esp]
  00184	52		 push	 edx
  00185	e8 00 00 00 00	 call	 ?FindQuest@CTPlayer@@QAEPAVCQuest@@K@Z ; CTPlayer::FindQuest

; 190  : 			if(!pCompQ || pCompQ->m_bCompleteCount < pTERM->m_bCount)

  0018a	85 c0		 test	 eax, eax
  0018c	74 ea		 je	 SHORT $L154008
  0018e	8a 40 20	 mov	 al, BYTE PTR [eax+32]
  00191	3a 43 05	 cmp	 al, BYTE PTR [ebx+5]

; 191  : 				return QTS_RUN;

  00194	72 e2		 jb	 SHORT $L154008
$L154009:

; 192  : 		}
; 193  : 		break;
; 194  : 	default:
; 195  : 		break;
; 196  : 	}
; 197  : 
; 198  : 	return QTS_SUCCESS;

  00196	b0 01		 mov	 al, 1
  00198	5b		 pop	 ebx

; 199  : }

  00199	c2 0c 00	 ret	 12			; 0000000cH
$L160745:
  0019c	00 00 00 00	 DD	 $L153782
  001a0	00 00 00 00	 DD	 $L153991
  001a4	00 00 00 00	 DD	 $L153995
  001a8	00 00 00 00	 DD	 $L153997
  001ac	00 00 00 00	 DD	 $L153999
  001b0	00 00 00 00	 DD	 $L154001
  001b4	00 00 00 00	 DD	 $L154003
  001b8	00 00 00 00	 DD	 $L154005
  001bc	00 00 00 00	 DD	 $L154009
$L160738:
  001c0	00		 DB	 0
  001c1	01		 DB	 1
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	02		 DB	 2
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	03		 DB	 3
  001c8	04		 DB	 4
  001c9	05		 DB	 5
  001ca	06		 DB	 6
  001cb	01		 DB	 1
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	08		 DB	 8
  001cf	01		 DB	 1
  001d0	07		 DB	 7
?CheckComplete@CQuest@@UAEEPAVCTPlayer@@KPAUtagQUESTTERM@@@Z ENDP ; CQuest::CheckComplete
_TEXT	ENDS
END
